<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="text-dtype_files/filelist.xml">
<link rel=Edit-Time-Data href="text-dtype_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]--><o:SmartTagType
 namespaceuri="urn:schemas-microsoft-com:office:smarttags" name="City"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="date"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>slu</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>slu</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>1121</o:TotalTime>
  <o:LastPrinted>2004-08-24T22:07:00Z</o:LastPrinted>
  <o:Created>2005-12-13T20:48:00Z</o:Created>
  <o:LastSaved>2005-12-13T20:48:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>2986</o:Words>
  <o:Characters>17021</o:Characters>
  <o:Company>NCSA</o:Company>
  <o:Lines>141</o:Lines>
  <o:Paragraphs>39</o:Paragraphs>
  <o:CharactersWithSpaces>19968</o:CharactersWithSpaces>
  <o:Version>10.6735</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:\5B8B\4F53;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
@font-face
	{font-family:"\@SimSun";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:SimSun;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 3.0in right 6.0in;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:SimSun;}
p.MsoDate, li.MsoDate, div.MsoDate
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:SimSun;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
p
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:SimSun;}
code
	{font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:SimSun;
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:SimSun;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-even-footer:url("text-dtype_files/header.htm") ef1;
	mso-footer:url("text-dtype_files/header.htm") f1;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:240533194;
	mso-list-type:hybrid;
	mso-list-template-ids:719730778 1284547292 67698689 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-number-format:roman-upper;
	mso-level-tab-stop:.75in;
	mso-level-number-position:left;
	margin-left:.75in;
	text-indent:-.5in;}
@list l0:level2
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l0:level3
	{mso-level-number-format:roman-lower;
	mso-level-tab-stop:1.5in;
	mso-level-number-position:right;
	text-indent:-9.0pt;}
@list l0:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1
	{mso-list-id:1030759538;
	mso-list-type:hybrid;
	mso-list-template-ids:2142534656 67698703 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l1:level1
	{mso-level-start-at:2;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2
	{mso-list-id:1085297296;
	mso-list-type:hybrid;
	mso-list-template-ids:-244408772 2064827866 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l2:level1
	{mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:"Times New Roman";
	mso-fareast-font-family:SimSun;}
@list l3
	{mso-list-id:1332835389;
	mso-list-type:hybrid;
	mso-list-template-ids:322709424 67698703 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l3:level1
	{mso-level-start-at:2;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l4
	{mso-list-id:1883905506;
	mso-list-type:hybrid;
	mso-list-template-ids:1905574486 67698703 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l4:level1
	{mso-level-start-at:3;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l5
	{mso-list-id:1995985973;
	mso-list-type:hybrid;
	mso-list-template-ids:1306291936 67698703 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l5:level1
	{mso-level-start-at:2;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
table.MsoTableGrid
	{mso-style-name:"Table Grid";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	border:solid windowtext 1.0pt;
	mso-border-alt:solid windowtext .5pt;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-border-insideh:.5pt solid windowtext;
	mso-border-insidev:.5pt solid windowtext;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="2050"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
  <o:rules v:ext="edit">
   <o:r id="V:Rule10" type="callout" idref="#_x0000_s1173"/>
   <o:r id="V:Rule11" type="callout" idref="#_x0000_s1174"/>
   <o:r id="V:Rule12" type="callout" idref="#_x0000_s1175"/>
   <o:r id="V:Rule14" type="connector" idref="#_x0000_s1183">
    <o:proxy start="" idref="#_x0000_s1176" connectloc="2"/>
   </o:r>
   <o:r id="V:Rule20" type="connector" idref="#_x0000_s1188">
    <o:proxy start="" idref="#_x0000_s1171" connectloc="2"/>
   </o:r>
  </o:rules>
  <o:regrouptable v:ext="edit">
   <o:entry new="1" old="0"/>
  </o:regrouptable>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US link=blue vlink=purple style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal><span style='mso-tab-count:2'>                        </span><b
style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt'>Conversion <span
class=GramE>Between</span> Text and <span class=SpellE>Datatype</span><o:p></o:p></span></b></p>

<p class=MsoNormal><span style='mso-tab-count:3'>                                    </span><span
class=SpellE><b style='mso-bidi-font-weight:normal'>Quincey</b></span><b
style='mso-bidi-font-weight:normal'> <span class=SpellE>Koziol</span> &amp;
Raymond Lu<o:p></o:p></b></p>

<p class=MsoNormal><span style='mso-tab-count:2'>                        </span><span
style='mso-spacerun:yes'>      </span><a href="mailto:koziol@ncsa.uiuc.edu">koziol@ncsa.uiuc.edu</a>,
slu@ncsa.uiuc.edu</p>

<p class=MsoNormal><span style='mso-tab-count:3'>                                    </span><span
style='mso-spacerun:yes'>  </span><span style='mso-tab-count:1'>          </span><st1:date
Year="2004" Day="11" Month="8">Aug 11, 2004</st1:date></p>

<p class=MsoNormal><span style='mso-tab-count:3'>                                    </span><span
style='mso-spacerun:yes'>    </span>Revised on Sep 21, 2004</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.5in;mso-list:l0 level1 lfo1;
tab-stops:list .75in'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>I.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></b><![endif]><b style='mso-bidi-font-weight:normal'>Documents
Audience<o:p></o:p></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span class=GramE>Current HDF5 library designers and
knowledgeable external developers.</span></p>

<p class=MsoNormal style='margin-left:.25in'><b style='mso-bidi-font-weight:
normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.5in;mso-list:l0 level1 lfo1;
tab-stops:list .75in'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>II.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></b><![endif]><b style='mso-bidi-font-weight:normal'>Requirements
and Use Cases<o:p></o:p></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal>1.<span style='mso-spacerun:yes'>  </span>There have been some
user requests to create HDF5 data type in a single step.<span
style='mso-spacerun:yes'>  </span>Although it does not save much for atomic
data type, it can reduce multiple steps of data type creation into one step for
some more complex data types, like compound and array types.<span
style='mso-spacerun:yes'>  </span>The ASCI people have been trying to use a
macro to encapsulate a data type text description in order to define a data
type during run time in a single place.<span style='mso-spacerun:yes'>  </span><o:p></o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal>2.<span style='mso-spacerun:yes'>  </span>On the other side,
some user requests the text description of a HDF5 data type for debugging
purpose.<span style='mso-spacerun:yes'>  </span>This description can be in
different language format.<span style='mso-spacerun:yes'>  </span>This is quite
similar to what the <span style='font-size:10.0pt;font-family:"Courier New"'>h5dump</span>
does. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>3.<span style='mso-spacerun:yes'>  </span>Another request is
to make a HDF5 private function <span style='font-size:10.0pt;font-family:"Courier New"'>H5T_cmp</span>
public.<span style='mso-spacerun:yes'>  </span>What it does is to compare data
types in the librarys predefined way.<span style='mso-spacerun:yes'> 
</span>This is useful to sort a table of data types. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.5in;mso-list:l0 level1 lfo1;
tab-stops:list .75in'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>III.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></b><![endif]><b style='mso-bidi-font-weight:normal'>Functionality<o:p></o:p></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal>There are two new major functions we are going to add to the
library to satisfy the requirements, one is <span style='font-size:10.0pt;
font-family:"Courier New"'>H5Ttext_to_type</span>, <span class=GramE>another</span>
is <span style='font-size:10.0pt;font-family:"Courier New"'>H5Ttype_to_text</span>.<span
style='mso-spacerun:yes'>  </span>Depending on the format of text description
for a data type, <span style='font-size:10.0pt;font-family:"Courier New"'>H5Ttext_to_type</span>
converts a text description into an HDF5 <span class=SpellE>datatype</span>
object and return its ID handle.<span style='mso-spacerun:yes'>  </span>For <span
style='font-size:10.0pt;font-family:"Courier New"'>H5Ttype_to_text</span>, it
returns a text description of an HDF5 <span class=SpellE>datatype</span> given
by its ID.<span style='mso-spacerun:yes'>  </span>The format of the text should
comply with the grammar of the language we have predefined.<span
style='mso-spacerun:yes'>  </span>More details of these two functions can be
found in <i style='mso-bidi-font-style:normal'>Section VIII</i> of this
document. <span style='mso-spacerun:yes'> </span><o:p></o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal>There will be another function called <span
style='font-size:10.0pt;font-family:"Courier New"'>H5Tcmp</span>.<span
style='mso-spacerun:yes'>  </span>It compares two data types in the arbitrary
way of the librarys predefinition.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.5in;mso-list:l0 level1 lfo1;
tab-stops:list .75in'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>IV.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></b><![endif]><b style='mso-bidi-font-weight:normal'>Library
Design<o:p></o:p></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal>1.<span style='mso-spacerun:yes'>  </span>Conversion from
text to data type.<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>For the internal library design, there are several steps
involved to convert from text description of a data type to an HDF5 data type
object.<span style='mso-spacerun:yes'>  </span>These steps can be illustrated
in the following diagram,</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><!--[if gte vml 1]><v:shapetype id="_x0000_t185"
 coordsize="21600,21600" o:spt="185" adj="3600" path="m@0,nfqx0@0l0@2qy@0,21600em@1,nfqx21600@0l21600@2qy@1,21600em@0,nsqx0@0l0@2qy@0,21600l@1,21600qx21600@2l21600@0qy@1,xe"
 filled="f">
 <v:formulas>
  <v:f eqn="val #0"/>
  <v:f eqn="sum width 0 #0"/>
  <v:f eqn="sum height 0 #0"/>
  <v:f eqn="prod @0 2929 10000"/>
  <v:f eqn="sum width 0 @3"/>
  <v:f eqn="sum height 0 @3"/>
  <v:f eqn="val width"/>
  <v:f eqn="val height"/>
  <v:f eqn="prod width 1 2"/>
  <v:f eqn="prod height 1 2"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" limo="10800,10800"
  o:connecttype="custom" o:connectlocs="@8,0;0,@9;@8,@7;@6,@9" textboxrect="@3,@3,@4,@5"/>
 <v:handles>
  <v:h position="#0,topLeft" switch="" xrange="0,10800"/>
 </v:handles>
</v:shapetype><v:shape id="_x0000_s1187" type="#_x0000_t185" style='position:absolute;
 margin-left:333pt;margin-top:207.45pt;width:63pt;height:17.55pt;z-index:2'>
 <v:textbox>
  <![if !mso]>
  <table cellpadding=0 cellspacing=0 width="100%">
   <tr>
    <td><![endif]>
    <div>
    <p class=MsoNormal><span style='font-size:8.0pt;font-family:"Courier New"'>H5Tcreate<o:p></o:p></span></p>
    </div>
    <![if !mso]></td>
   </tr>
  </table>
  <![endif]></v:textbox>
</v:shape><![endif]--><![if !vml]><span style='mso-ignore:vglayout;position:
absolute;z-index:2;margin-left:443px;margin-top:276px;width:90px;height:29px'><img
width=90 height=29 src="text-dtype_files/image001.gif"
alt="Double Bracket: H5Tcreate" v:shapes="_x0000_s1187"></span><![endif]><!--[if mso & !supportInlineShapes & supportFields]><span
style='mso-element:field-begin;mso-field-lock:yes'></span><span
style='mso-spacerun:yes'> </span>SHAPE<span style='mso-spacerun:yes'> 
</span>\* MERGEFORMAT <span style='mso-element:field-separator'></span><![endif]--><!--[if gte vml 1]><v:group
 id="_x0000_s1166" editas="canvas" style='width:6in;height:255pt;
 mso-position-horizontal-relative:char;mso-position-vertical-relative:line'
 coordorigin="2520,7702" coordsize="7200,4372">
 <o:lock v:ext="edit" aspectratio="t"/>
 <v:shapetype id="_x0000_t75" coordsize="21600,21600" o:spt="75"
  o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f">
  <v:stroke joinstyle="miter"/>
  <v:formulas>
   <v:f eqn="if lineDrawn pixelLineWidth 0"/>
   <v:f eqn="sum @0 1 0"/>
   <v:f eqn="sum 0 0 @1"/>
   <v:f eqn="prod @2 1 2"/>
   <v:f eqn="prod @3 21600 pixelWidth"/>
   <v:f eqn="prod @3 21600 pixelHeight"/>
   <v:f eqn="sum @0 0 1"/>
   <v:f eqn="prod @6 1 2"/>
   <v:f eqn="prod @7 21600 pixelWidth"/>
   <v:f eqn="sum @8 21600 0"/>
   <v:f eqn="prod @7 21600 pixelHeight"/>
   <v:f eqn="sum @10 21600 0"/>
  </v:formulas>
  <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
  <o:lock v:ext="edit" aspectratio="t"/>
 </v:shapetype><v:shape id="_x0000_s1167" type="#_x0000_t75" style='position:absolute;
  left:2520;top:7702;width:7200;height:4372' o:preferrelative="f">
  <v:fill o:detectmouseclick="t"/>
  <v:path o:extrusionok="t" o:connecttype="none"/>
  <o:lock v:ext="edit" text="t"/>
 </v:shape><v:shapetype id="_x0000_t78" coordsize="21600,21600" o:spt="78"
  adj="14400,5400,18000,8100" path="m,l,21600@0,21600@0@5@2@5@2@4,21600,10800@2@1@2@3@0@3@0,xe">
  <v:stroke joinstyle="miter"/>
  <v:formulas>
   <v:f eqn="val #0"/>
   <v:f eqn="val #1"/>
   <v:f eqn="val #2"/>
   <v:f eqn="val #3"/>
   <v:f eqn="sum 21600 0 #1"/>
   <v:f eqn="sum 21600 0 #3"/>
   <v:f eqn="prod #0 1 2"/>
  </v:formulas>
  <v:path o:connecttype="custom" o:connectlocs="@6,0;0,10800;@6,21600;21600,10800"
   o:connectangles="270,180,90,0" textboxrect="0,0,@0,21600"/>
  <v:handles>
   <v:h position="#0,topLeft" xrange="0,@2"/>
   <v:h position="bottomRight,#1" yrange="0,@3"/>
   <v:h position="#2,#3" xrange="@0,21600" yrange="@1,10800"/>
  </v:handles>
 </v:shapetype><v:shape id="_x0000_s1168" type="#_x0000_t78" style='position:absolute;
  left:2670;top:8936;width:1650;height:1851' adj="15927,2401,17345,6863">
  <v:textbox style='mso-next-textbox:#_x0000_s1168'>
   <![if !mso]>
   <table cellpadding=0 cellspacing=0 width="100%">
    <tr>
     <td><![endif]>
     <div>
     <p class=MsoNormal>C Text</p>
     <p class=MsoNormal><o:p>&nbsp;</o:p></p>
     <p class=MsoNormal>DDL Text</p>
     <p class=MsoNormal><o:p>&nbsp;</o:p></p>
     <p class=MsoNormal><span class=GramE>Fortran</span> Text</p>
     <p class=MsoNormal><o:p>&nbsp;</o:p></p>
     <p class=MsoNormal>Others</p>
     </div>
     <![if !mso]></td>
    </tr>
   </table>
   <![endif]></v:textbox>
 </v:shape><v:shape id="_x0000_s1169" type="#_x0000_t78" style='position:absolute;
  left:5070;top:8936;width:1650;height:1851' adj="17018">
  <v:textbox style='mso-next-textbox:#_x0000_s1169'>
   <![if !mso]>
   <table cellpadding=0 cellspacing=0 width="100%">
    <tr>
     <td><![endif]>
     <div>
     <p class=MsoNormal>C Rules</p>
     <p class=MsoNormal><o:p>&nbsp;</o:p></p>
     <p class=MsoNormal>DDL Rules</p>
     <p class=MsoNormal><o:p>&nbsp;</o:p></p>
     <p class=MsoNormal><span class=GramE>Fortran</span> Rules</p>
     <p class=MsoNormal><o:p>&nbsp;</o:p></p>
     <p class=MsoNormal>Others</p>
     </div>
     <![if !mso]></td>
    </tr>
   </table>
   <![endif]></v:textbox>
 </v:shape><v:shapetype id="_x0000_t176" coordsize="21600,21600" o:spt="176"
  adj="2700" path="m@0,qx0@0l0@2qy@0,21600l@1,21600qx21600@2l21600@0qy@1,xe">
  <v:stroke joinstyle="miter"/>
  <v:formulas>
   <v:f eqn="val #0"/>
   <v:f eqn="sum width 0 #0"/>
   <v:f eqn="sum height 0 #0"/>
   <v:f eqn="prod @0 2929 10000"/>
   <v:f eqn="sum width 0 @3"/>
   <v:f eqn="sum height 0 @3"/>
   <v:f eqn="val width"/>
   <v:f eqn="val height"/>
   <v:f eqn="prod width 1 2"/>
   <v:f eqn="prod height 1 2"/>
  </v:formulas>
  <v:path gradientshapeok="t" limo="10800,10800" o:connecttype="custom"
   o:connectlocs="@8,0;0,@9;@8,@7;@6,@9" textboxrect="@3,@3,@4,@5"/>
 </v:shapetype><v:shape id="_x0000_s1170" type="#_x0000_t176" style='position:absolute;
  left:6720;top:8319;width:3000;height:2777'>
  <v:textbox style='mso-next-textbox:#_x0000_s1170'>
   <![if !mso]>
   <table cellpadding=0 cellspacing=0 width="100%">
    <tr>
     <td><![endif]>
     <div>
     <p class=MsoNormal>Grammar<span style='mso-tab-count:2'>                      </span>Action</p>
     </div>
     <![if !mso]></td>
    </tr>
   </table>
   <![endif]></v:textbox>
 </v:shape><v:shapetype id="_x0000_t59" coordsize="21600,21600" o:spt="59"
  adj="2700" path="m21600,10800l@5@10,20777,6667@7@12,18436,3163@8@11,14932,822@6@9,10800,0@10@9,6667,822@12@11,3163,3163@11@12,822,6667@9@10,,10800@9@6,822,14932@11@8,3163,18436@12@7,6667,20777@10@5,10800,21600@6@5,14932,20777@8@7,18436,18436@7@8,20777,14932@5@6xe">
  <v:stroke joinstyle="miter"/>
  <v:formulas>
   <v:f eqn="sum 10800 0 #0"/>
   <v:f eqn="prod @0 32138 32768"/>
   <v:f eqn="prod @0 6393 32768"/>
   <v:f eqn="prod @0 27246 32768"/>
   <v:f eqn="prod @0 18205 32768"/>
   <v:f eqn="sum @1 10800 0"/>
   <v:f eqn="sum @2 10800 0"/>
   <v:f eqn="sum @3 10800 0"/>
   <v:f eqn="sum @4 10800 0"/>
   <v:f eqn="sum 10800 0 @1"/>
   <v:f eqn="sum 10800 0 @2"/>
   <v:f eqn="sum 10800 0 @3"/>
   <v:f eqn="sum 10800 0 @4"/>
   <v:f eqn="prod @0 23170 32768"/>
   <v:f eqn="sum @13 10800 0"/>
   <v:f eqn="sum 10800 0 @13"/>
  </v:formulas>
  <v:path gradientshapeok="t" o:connecttype="rect" textboxrect="@15,@15,@14,@14"/>
  <v:handles>
   <v:h position="#0,center" xrange="0,10800"/>
  </v:handles>
 </v:shapetype><v:shape id="_x0000_s1171" type="#_x0000_t59" style='position:absolute;
  left:8520;top:9399;width:1200;height:772' adj="2640">
  <v:textbox style='mso-next-textbox:#_x0000_s1171'>
   <![if !mso]>
   <table cellpadding=0 cellspacing=0 width="100%">
    <tr>
     <td><![endif]>
     <div>
     <p class=MsoNormal>HDF5</p>
     </div>
     <![if !mso]></td>
    </tr>
   </table>
   <![endif]></v:textbox>
 </v:shape><v:shapetype id="_x0000_t109" coordsize="21600,21600" o:spt="109"
  path="m,l,21600r21600,l21600,xe">
  <v:stroke joinstyle="miter"/>
  <v:path gradientshapeok="t" o:connecttype="rect"/>
 </v:shapetype><v:shape id="_x0000_s1172" type="#_x0000_t109" style='position:absolute;
  left:6720;top:8936;width:1800;height:1851'>
  <v:textbox style='mso-next-textbox:#_x0000_s1172'>
   <![if !mso]>
   <table cellpadding=0 cellspacing=0 width="100%">
    <tr>
     <td><![endif]>
     <div>
     <p class=MsoNormal>C Grammar</p>
     <p class=MsoNormal><o:p>&nbsp;</o:p></p>
     <p class=MsoNormal>DDL Grammar</p>
     <p class=MsoNormal><o:p>&nbsp;</o:p></p>
     <p class=MsoNormal><span class=GramE>Fortran</span> Grammar</p>
     <p class=MsoNormal><o:p>&nbsp;</o:p></p>
     <p class=MsoNormal>Others</p>
     </div>
     <![if !mso]></td>
    </tr>
   </table>
   <![endif]></v:textbox>
 </v:shape><v:shapetype id="_x0000_t63" coordsize="21600,21600" o:spt="63"
  adj="1350,25920" path="wr,,21600,21600@15@16@17@18l@21@22xe">
  <v:stroke joinstyle="miter"/>
  <v:formulas>
   <v:f eqn="val #0"/>
   <v:f eqn="val #1"/>
   <v:f eqn="sum 10800 0 #0"/>
   <v:f eqn="sum 10800 0 #1"/>
   <v:f eqn="atan2 @2 @3"/>
   <v:f eqn="sumangle @4 11 0"/>
   <v:f eqn="sumangle @4 0 11"/>
   <v:f eqn="cos 10800 @4"/>
   <v:f eqn="sin 10800 @4"/>
   <v:f eqn="cos 10800 @5"/>
   <v:f eqn="sin 10800 @5"/>
   <v:f eqn="cos 10800 @6"/>
   <v:f eqn="sin 10800 @6"/>
   <v:f eqn="sum 10800 0 @7"/>
   <v:f eqn="sum 10800 0 @8"/>
   <v:f eqn="sum 10800 0 @9"/>
   <v:f eqn="sum 10800 0 @10"/>
   <v:f eqn="sum 10800 0 @11"/>
   <v:f eqn="sum 10800 0 @12"/>
   <v:f eqn="mod @2 @3 0"/>
   <v:f eqn="sum @19 0 10800"/>
   <v:f eqn="if @20 #0 @13"/>
   <v:f eqn="if @20 #1 @14"/>
  </v:formulas>
  <v:path o:connecttype="custom" o:connectlocs="10800,0;3163,3163;0,10800;3163,18437;10800,21600;18437,18437;21600,10800;18437,3163;@21,@22"
   textboxrect="3163,3163,18437,18437"/>
  <v:handles>
   <v:h position="#0,#1"/>
  </v:handles>
 </v:shapetype><v:shape id="_x0000_s1173" type="#_x0000_t63" style='position:absolute;
  left:2820;top:8319;width:1050;height:463' adj="4457,29640">
  <v:textbox style='mso-next-textbox:#_x0000_s1173'>
   <![if !mso]>
   <table cellpadding=0 cellspacing=0 width="100%">
    <tr>
     <td><![endif]>
     <div>
     <p class=MsoNormal>Input</p>
     </div>
     <![if !mso]></td>
    </tr>
   </table>
   <![endif]></v:textbox>
 </v:shape><v:shapetype id="_x0000_t62" coordsize="21600,21600" o:spt="62"
  adj="1350,25920" path="m3600,qx,3600l0@8@12@24,0@9,,18000qy3600,21600l@6,21600@15@27@7,21600,18000,21600qx21600,18000l21600@9@18@30,21600@8,21600,3600qy18000,l@7,0@21@33@6,xe">
  <v:stroke joinstyle="miter"/>
  <v:formulas>
   <v:f eqn="sum 10800 0 #0"/>
   <v:f eqn="sum 10800 0 #1"/>
   <v:f eqn="sum #0 0 #1"/>
   <v:f eqn="sum @0 @1 0"/>
   <v:f eqn="sum 21600 0 #0"/>
   <v:f eqn="sum 21600 0 #1"/>
   <v:f eqn="if @0 3600 12600"/>
   <v:f eqn="if @0 9000 18000"/>
   <v:f eqn="if @1 3600 12600"/>
   <v:f eqn="if @1 9000 18000"/>
   <v:f eqn="if @2 0 #0"/>
   <v:f eqn="if @3 @10 0"/>
   <v:f eqn="if #0 0 @11"/>
   <v:f eqn="if @2 @6 #0"/>
   <v:f eqn="if @3 @6 @13"/>
   <v:f eqn="if @5 @6 @14"/>
   <v:f eqn="if @2 #0 21600"/>
   <v:f eqn="if @3 21600 @16"/>
   <v:f eqn="if @4 21600 @17"/>
   <v:f eqn="if @2 #0 @6"/>
   <v:f eqn="if @3 @19 @6"/>
   <v:f eqn="if #1 @6 @20"/>
   <v:f eqn="if @2 @8 #1"/>
   <v:f eqn="if @3 @22 @8"/>
   <v:f eqn="if #0 @8 @23"/>
   <v:f eqn="if @2 21600 #1"/>
   <v:f eqn="if @3 21600 @25"/>
   <v:f eqn="if @5 21600 @26"/>
   <v:f eqn="if @2 #1 @8"/>
   <v:f eqn="if @3 @8 @28"/>
   <v:f eqn="if @4 @8 @29"/>
   <v:f eqn="if @2 #1 0"/>
   <v:f eqn="if @3 @31 0"/>
   <v:f eqn="if #1 0 @32"/>
   <v:f eqn="val #0"/>
   <v:f eqn="val #1"/>
  </v:formulas>
  <v:path o:connecttype="custom" o:connectlocs="10800,0;0,10800;10800,21600;21600,10800;@34,@35"
   textboxrect="791,791,20809,20809"/>
  <v:handles>
   <v:h position="#0,#1"/>
  </v:handles>
 </v:shapetype><v:shape id="_x0000_s1174" type="#_x0000_t62" style='position:absolute;
  left:4470;top:7702;width:1200;height:977' adj="17550,27133">
  <v:textbox style='mso-next-textbox:#_x0000_s1174'>
   <![if !mso]>
   <table cellpadding=0 cellspacing=0 width="100%">
    <tr>
     <td><![endif]>
     <div>
     <p class=MsoNormal>Text </p>
     <p class=MsoNormal>Analyzer</p>
     <p class=MsoNormal>(<span class=SpellE>Lex</span>)</p>
     </div>
     <![if !mso]></td>
    </tr>
   </table>
   <![endif]></v:textbox>
 </v:shape><v:shape id="_x0000_s1175" type="#_x0000_t62" style='position:absolute;
  left:7920;top:7702;width:1500;height:463' adj="-4200,28880">
  <v:textbox style='mso-next-textbox:#_x0000_s1175'>
   <![if !mso]>
   <table cellpadding=0 cellspacing=0 width="100%">
    <tr>
     <td><![endif]>
     <div>
     <p class=MsoNormal><span class=GramE>Parser(</span><span class=SpellE>Yacc</span>)</p>
     </div>
     <![if !mso]></td>
    </tr>
   </table>
   <![endif]></v:textbox>
 </v:shape><v:shape id="_x0000_s1176" type="#_x0000_t59" style='position:absolute;
  left:4170;top:9399;width:1200;height:771'>
  <v:textbox style='mso-next-textbox:#_x0000_s1176'>
   <![if !mso]>
   <table cellpadding=0 cellspacing=0 width="100%">
    <tr>
     <td><![endif]>
     <div>
     <p class=MsoNormal>HDF5</p>
     </div>
     <![if !mso]></td>
    </tr>
   </table>
   <![endif]></v:textbox>
 </v:shape><v:shapetype id="_x0000_t105" coordsize="21600,21600" o:spt="105"
  adj="12960,19440,14400" path="wr,0@3@23,0@22@4,0@15,0@1@23@7,0@13@2l@14@2@8@22@12@2at,0@3@23@11@2@17@26@15,0@1@23@17@26@15@22xewr,0@3@23@4,0@17@26nfe">
  <v:stroke joinstyle="miter"/>
  <v:formulas>
   <v:f eqn="val #0"/>
   <v:f eqn="val #1"/>
   <v:f eqn="val #2"/>
   <v:f eqn="sum #0 width #1"/>
   <v:f eqn="prod @3 1 2"/>
   <v:f eqn="sum #1 #1 width"/>
   <v:f eqn="sum @5 #1 #0"/>
   <v:f eqn="prod @6 1 2"/>
   <v:f eqn="mid width #0"/>
   <v:f eqn="sum height 0 #2"/>
   <v:f eqn="ellipse @9 height @4"/>
   <v:f eqn="sum @4 @10 0"/>
   <v:f eqn="sum @11 #1 width"/>
   <v:f eqn="sum @7 @10 0"/>
   <v:f eqn="sum @12 width #0"/>
   <v:f eqn="sum @5 0 #0"/>
   <v:f eqn="prod @15 1 2"/>
   <v:f eqn="mid @4 @7"/>
   <v:f eqn="sum #0 #1 width"/>
   <v:f eqn="prod @18 1 2"/>
   <v:f eqn="sum @17 0 @19"/>
   <v:f eqn="val width"/>
   <v:f eqn="val height"/>
   <v:f eqn="prod height 2 1"/>
   <v:f eqn="sum @17 0 @4"/>
   <v:f eqn="ellipse @24 @4 height"/>
   <v:f eqn="sum height 0 @25"/>
   <v:f eqn="sum @8 128 0"/>
   <v:f eqn="prod @5 1 2"/>
   <v:f eqn="sum @5 0 128"/>
   <v:f eqn="sum #0 @17 @12"/>
   <v:f eqn="ellipse @20 @4 height"/>
   <v:f eqn="sum width 0 #0"/>
   <v:f eqn="prod @32 1 2"/>
   <v:f eqn="prod height height 1"/>
   <v:f eqn="prod @9 @9 1"/>
   <v:f eqn="sum @34 0 @35"/>
   <v:f eqn="sqrt @36"/>
   <v:f eqn="sum @37 height 0"/>
   <v:f eqn="prod width height @38"/>
   <v:f eqn="sum @39 64 0"/>
   <v:f eqn="prod #0 1 2"/>
   <v:f eqn="ellipse @33 @41 height"/>
   <v:f eqn="sum height 0 @42"/>
   <v:f eqn="sum @43 64 0"/>
   <v:f eqn="prod @4 1 2"/>
   <v:f eqn="sum #1 0 @45"/>
   <v:f eqn="prod height 4390 32768"/>
   <v:f eqn="prod height 28378 32768"/>
  </v:formulas>
  <v:path o:extrusionok="f" o:connecttype="custom" o:connectlocs="@17,0;@16,@22;@12,@2;@8,@22;@14,@2"
   o:connectangles="270,90,90,90,0" textboxrect="@45,@47,@46,@48"/>
  <v:handles>
   <v:h position="#0,bottomRight" xrange="@40,@29"/>
   <v:h position="#1,bottomRight" xrange="@27,@21"/>
   <v:h position="bottomRight,#2" yrange="@44,@22"/>
  </v:handles>
  <o:complex v:ext="view"/>
 </v:shapetype><v:shape id="_x0000_s1177" type="#_x0000_t105" style='position:absolute;
  left:8220;top:9090;width:600;height:309'/>
 <v:shapetype id="_x0000_t38" coordsize="21600,21600" o:spt="38" o:oned="t"
  path="m,c@0,0@1,5400@1,10800@1,16200@2,21600,21600,21600e" filled="f">
  <v:formulas>
   <v:f eqn="mid #0 0"/>
   <v:f eqn="val #0"/>
   <v:f eqn="mid #0 21600"/>
  </v:formulas>
  <v:path arrowok="t" fillok="f" o:connecttype="none"/>
  <v:handles>
   <v:h position="#0,center"/>
  </v:handles>
  <o:lock v:ext="edit" shapetype="t"/>
 </v:shapetype><v:shape id="_x0000_s1183" type="#_x0000_t38" style='position:absolute;
  left:3779;top:10261;width:1081;height:900;rotation:90' o:connectortype="curved"
  adj="7348,-86560,-77082">
  <v:stroke endarrow="block"/>
 </v:shape><v:shape id="_x0000_s1184" type="#_x0000_t185" style='position:absolute;
  left:3570;top:11243;width:1500;height:471'>
  <v:textbox>
   <![if !mso]>
   <table cellpadding=0 cellspacing=0 width="100%">
    <tr>
     <td><![endif]>
     <div>
     <p class=MsoNormal><span style='font-size:8.0pt;font-family:"Courier New"'>H5Ttext_to_type<o:p></o:p></span></p>
     </div>
     <![if !mso]></td>
    </tr>
   </table>
   <![endif]></v:textbox>
 </v:shape><v:shape id="_x0000_s1188" type="#_x0000_t38" style='position:absolute;
  left:8280;top:10411;width:1080;height:600;rotation:90' o:connectortype="curved"
  adj="10800,-129870,-166629">
  <v:stroke endarrow="block"/>
 </v:shape><v:shape id="_x0000_s1189" style='position:absolute;left:2737;top:10103;
  width:5506;height:857' coordsize="6608" path="m4620,960hdc4603,967,4587,974,4570,980v-13,4,-30,20,-40,10c4522,982,4551,978,4560,970v11,-9,17,-24,30,-30c4621,924,4658,923,4690,910v32,-48,86,-56,140,-70c4863,818,4882,773,4920,760v22,-7,52,-16,70,-30c5012,712,5025,683,5050,670v61,-31,124,-41,190,-60c5266,595,5295,587,5320,570v46,-30,75,-62,130,-80c5601,440,5806,452,5950,380v76,-38,23,-21,90,-50c6102,303,6173,288,6230,250v12,-8,19,-22,30,-30c6300,190,6345,178,6390,160v30,-45,69,-51,110,-80c6564,34,6493,59,6570,40v10,-7,38,-28,30,-20c6540,80,6421,78,6340,90v-190,29,-378,34,-570,40c5713,127,5656,126,5600,120v-40,-4,-120,-20,-120,-20c5282,140,5414,119,5080,130v-97,-24,-118,-23,-250,-30c4618,107,4445,100,4240,80,4017,97,3766,21,3560,90v-197,-33,-600,10,-600,10c2870,94,2780,80,2690,80v-67,,-133,15,-200,20c2393,119,2484,108,2340,90,2257,80,2173,78,2090,70,2037,52,1986,49,1930,40,1879,32,1831,10,1780,v-60,3,-120,5,-180,10c1580,12,1555,7,1540,20v-13,11,-7,33,-10,50c1464,54,1397,53,1330,40v-50,3,-100,10,-150,10c1166,50,1154,40,1140,40v-42,,-144,42,-200,50c811,80,805,83,710,20,530,29,528,25,380,10v-53,18,-21,4,-90,50c273,71,250,67,230,70,137,39,211,60,,60hae"
  filled="f">
  <v:path arrowok="t"/>
 </v:shape><v:shapetype id="_x0000_t115" coordsize="21600,21600" o:spt="115"
  path="m,20465v810,317,1620,452,2397,725c3077,21325,3790,21417,4405,21597v1620,,2202,-180,2657,-272c7580,21280,8002,21010,8455,20917v422,-135,810,-405,1327,-542c10205,20150,10657,19967,11080,19742v517,-182,970,-407,1425,-590c13087,19017,13605,18745,14255,18610v615,-180,1262,-318,1942,-408c16975,18202,17785,18022,18595,18022r,-1670l19192,16252r808,l20000,14467r722,-75l21597,14392,21597,,2972,r,1815l1532,1815r,1860l,3675,,20465xem1532,3675nfl18595,3675r,12677em2972,1815nfl20000,1815r,12652e">
  <v:stroke joinstyle="miter"/>
  <v:path o:extrusionok="f" o:connecttype="custom" o:connectlocs="10800,0;0,10800;10800,19890;21600,10800"
   textboxrect="0,3675,18595,18022"/>
 </v:shapetype><v:shape id="_x0000_s1190" type="#_x0000_t115" style='position:absolute;
  left:5820;top:10942;width:900;height:773'>
  <v:textbox>
   <![if !mso]>
   <table cellpadding=0 cellspacing=0 width="100%">
    <tr>
     <td><![endif]>
     <div>
     <p class=MsoNormal><span class=GramE><span style='font-size:8.0pt'>Fortran</span></span><span
     style='font-size:8.0pt'> <o:p></o:p></span></p>
     <p class=MsoNormal><span style='font-size:8.0pt'>Module<o:p></o:p></span></p>
     </div>
     <![if !mso]></td>
    </tr>
   </table>
   <![endif]></v:textbox>
 </v:shape><v:shape id="_x0000_s1191" style='position:absolute;left:2763;top:9889;
  width:5555;height:343' coordsize="6667,400" path="m59,390hdc46,312,,124,99,80v19,-8,40,-7,60,-10c258,79,351,92,449,110v30,-6,59,-23,90,-20c560,92,578,106,599,110v33,6,67,7,100,10c791,97,866,107,959,120v70,23,75,31,160,40c1233,150,1225,144,1339,160v41,6,35,24,80,40c1451,212,1486,211,1519,220v63,18,125,39,190,50c1790,331,1868,307,1969,300v70,3,140,2,210,10c2202,313,2270,344,2299,350v83,41,157,43,250,50c2596,392,2643,382,2689,370v20,-6,60,-20,60,-20c2792,307,2841,285,2899,270v131,-87,-114,82,60,-70c2984,178,3041,176,3069,170v10,-2,19,-9,30,-10c3202,154,3306,153,3409,150v117,-8,225,-30,340,-40c4000,152,3661,108,3849,100v70,-3,140,7,210,10c4204,146,4361,113,4509,100v113,7,169,10,270,-10c4947,118,5119,103,5289,120,5538,97,5788,92,6039,80,6177,57,6309,13,6449,v81,16,34,5,140,40c6599,43,6619,50,6619,50v46,69,48,163,10,240hae"
  filled="f">
  <v:path arrowok="t"/>
 </v:shape><w:wrap type="none"/>
 <w:anchorlock/>
</v:group><![endif]--><![if !vml]><img width=580 height=343
src="text-dtype_files/image002.gif" v:shapes="_x0000_s1166 _x0000_s1167 _x0000_s1168 _x0000_s1169 _x0000_s1170 _x0000_s1171 _x0000_s1172 _x0000_s1173 _x0000_s1174 _x0000_s1175 _x0000_s1176 _x0000_s1177 _x0000_s1183 _x0000_s1184 _x0000_s1188 _x0000_s1189 _x0000_s1190 _x0000_s1191"><![endif]><!--[if mso & !supportInlineShapes & supportFields]><v:shape
 id="_x0000_i1025" type="#_x0000_t75" style='width:6in;height:255pt'>
 <v:imagedata croptop="-65520f" cropbottom="65520f"/>
</v:shape><span style='mso-element:field-end'></span><![endif]--><o:p></o:p></p>

<p class=MsoNormal><span style='mso-tab-count:3'>                                    </span><span
class=GramE>Figure 1.</span><span style='mso-spacerun:yes'>  </span><span
class=GramE>Conversion from text to data type.</span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>From the diagram, we can see there are three major steps, <i
style='mso-bidi-font-style:normal'>text input</i>, <i style='mso-bidi-font-style:
normal'>text analysis</i>, and <i style='mso-bidi-font-style:normal'>parsing</i>.<span
style='mso-spacerun:yes'>  </span>Input text has to match the format we defined
for different languages.<span style='mso-spacerun:yes'>  </span>We currently
support three languages, C, DDL, and <span class=GramE>Fortran</span>.<span
style='mso-spacerun:yes'>  </span>Full description of these three formats is in
<i style='mso-bidi-font-style:normal'>Section VI</i> of this document.<span
style='mso-spacerun:yes'>  </span>The input text is passed in through the new
function <span style='font-size:10.0pt;font-family:"Courier New"'>H5Ttext_to_type</span>.<span
style='mso-spacerun:yes'>  </span>A very simple example is like <i
style='mso-bidi-font-style:normal'>unsigned <span class=SpellE>int</span></i>.<span
style='mso-spacerun:yes'>  </span>We defined for C <span class=GramE>language,</span>
the text format should be like a C program.<span style='mso-spacerun:yes'> 
</span>Therefore the text <i style='mso-bidi-font-style:normal'>unsigned <span
class=SpellE>int</span></i> should be passed in to create a data type of
unsigned native <span class=GramE>integer<i style='mso-bidi-font-style:normal'>(</i></span><i
style='mso-bidi-font-style:normal'>H5T_NATIVE_UINT)</i> in HDF5 library.<span
style='mso-spacerun:yes'>   </span><span style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The text analyzers job is to recognize the expressions in
the input text according to the predefined rules for each language.<span
style='mso-spacerun:yes'>  </span>It then creates tokens and symbols
representing these expressions and passes them on to the parser.<span
style='mso-spacerun:yes'>  </span>For the same example above, the text <i
style='mso-bidi-font-style:normal'>unsigned <span class=SpellE>int</span></i>
is read by the text analyzer and match two expressions <i style='mso-bidi-font-style:
normal'>unsigned</i> and <i style='mso-bidi-font-style:normal'><span
class=SpellE>int</span></i>.<span style='mso-spacerun:yes'>  </span>Two tokens
are created for each word and passed to the parser.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The parser will take the tokens and symbols generated by the
text analyzer and check if they are valid based on the language grammar we have
predefined.<span style='mso-spacerun:yes'>  </span>Once the parser sees valid
expression, it will take actions.<span style='mso-spacerun:yes'>  </span>A
token for <i style='mso-bidi-font-style:normal'>unsigned</i> followed by the
token for <i style='mso-bidi-font-style:normal'><span class=SpellE>int</span></i>
is considered as good C language.<span style='mso-spacerun:yes'>  </span>An
action in <span class=GramE>HDF5<i style='mso-bidi-font-style:normal'>(</i></span><i
style='mso-bidi-font-style:normal'>H5Tcreate)</i> occurs then.<span
style='mso-spacerun:yes'>  </span>A data type object ID is created and
returned. <span style='mso-spacerun:yes'> </span>It will be illegal to have a
token for <i style='mso-bidi-font-style:normal'>float</i> follow the token
for <i style='mso-bidi-font-style:normal'>unsigned</i>.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>2. Conversion from HDF5 data type to text</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>This part is relatively simple.<span
style='mso-spacerun:yes'>  </span>Function <span style='font-size:10.0pt;
font-family:"Courier New"'>H5Ttype_to_text</span> prints out the text
description of an HDF5 data type according to the language format.<span
style='mso-spacerun:yes'>  </span>It is very similar to what the <span
style='font-size:10.0pt;font-family:"Courier New"'>h5dump</span> does.<span
style='mso-spacerun:yes'>  </span><span class=GramE><span style='font-size:
10.0pt;font-family:"Courier New"'>h5dump</span></span> only prints out the text
in DDL format.<span style='mso-spacerun:yes'>  </span><span style='font-size:
10.0pt;font-family:"Courier New"'>H5Ttype_to_text</span> supports C, DDL, and <span
class=GramE>Fortran</span>.</p>

<p class=MsoNormal><span style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><span style='mso-spacerun:yes'>                          
</span><span
style='mso-spacerun:yes'>                                                                                                                                                                                                                                          </span><span
style='mso-spacerun:yes'>                      </span><span
style='mso-spacerun:yes'>        </span><o:p></o:p></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.5in;mso-list:l0 level1 lfo1;
tab-stops:list .75in'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>V.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></b><![endif]><b style='mso-bidi-font-weight:normal'>Design
Issues to be Considered<o:p></o:p></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>1.<span style='mso-spacerun:yes'>  </span>Modules for
languages</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The library currently supports C, DLL, and <span
class=GramE>Fortran</span> formats.<span style='mso-spacerun:yes'>  </span>In
the future, we may want to support other languages, like C++.<span
style='mso-spacerun:yes'>  </span>The library design should be <span
class=SpellE>moduled</span> to make future addition simple.<span
style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>It is possible to provide a tool built with <span
class=SpellE>Lex</span> and <span class=SpellE>Yacc</span>.<span
style='mso-spacerun:yes'>  </span>Library designers and users can simply
provide a text file consisted of syntax and grammar for a certain
language.<span style='mso-spacerun:yes'>  </span>By running this tool, rules
for <span class=SpellE>Lex</span> and grammar for <span class=SpellE>Yacc</span>
can be generated automatically.<span style='mso-spacerun:yes'>  </span>Then
they can be easily plugged into the HDF5 library.<span
style='mso-spacerun:yes'>  </span>This could be the second stage of this
project if there are enough needs and requirements.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>2.<span style='mso-spacerun:yes'>  </span>Availability of <span
class=SpellE>Lex</span> library on systems</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>There is no need for the <span class=SpellE>Yacc</span>
library.<span style='mso-spacerun:yes'>  </span>The <span class=SpellE>Lex</span>
library is optional in order to compile this part of HDF5 library.<span
style='mso-spacerun:yes'>  </span>As long as we define minimally one function
to overwrite the default <span class=SpellE>Lex</span> function, we do not need
to link to any <span class=SpellE>Lex</span> library.<span
style='mso-spacerun:yes'>  </span>The way we use <span class=SpellE>Lex</span>
and <span class=SpellE>Yacc</span> tools is similar to the GNU <span
class=SpellE>Autoconf</span>.<span style='mso-spacerun:yes'>  </span>Once we
run <span class=SpellE>Lex</span> and <span class=SpellE>Yacc</span> to
generate the desired .c and .h files, the code is supposed be portable.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>3.<span style='mso-spacerun:yes'>  </span>Different kinds of
<span class=SpellE>Lex</span> and <span class=SpellE>Yacc</span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>For <span class=SpellE>Lex</span>, there are versions of <i
style='mso-bidi-font-style:normal'>AT&amp;T</i> <span class=SpellE>Lex</span>, <i
style='mso-bidi-font-style:normal'>GNU</i> Flex, <i style='mso-bidi-font-style:
normal'>POSIX </i><span class=SpellE>Lex</span>, etc.<span
style='mso-spacerun:yes'>  </span>For <span class=SpellE>Yacc</span>, there are
versions of <i style='mso-bidi-font-style:normal'>AT&amp;T</i> <span
class=SpellE>Yacc</span>, <st1:City><st1:place><i style='mso-bidi-font-style:
  normal'>Berkeley</i></st1:place></st1:City> <span class=SpellE>Yacc</span>, <i
style='mso-bidi-font-style:normal'>GNU</i> Bison, and so on.<span
style='mso-spacerun:yes'>  </span>Each one of them may be somehow different
from the others.<span style='mso-spacerun:yes'>  </span>We do not have to
address the differences of syntax based on what <span class=SpellE>Lex</span>
and <span class=SpellE>Yacc</span> we use.<span style='mso-spacerun:yes'> 
</span>We can simply use <i style='mso-bidi-font-style:normal'>GNU</i> Flex and
Bison. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>4.<span style='mso-spacerun:yes'>  </span>Error report</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>A good error report is needed if there are errors in the
input text.<span style='mso-spacerun:yes'>  </span>Both <span class=SpellE>Lex</span>
and <span class=SpellE>Yacc</span> have some mechanisms to report errors.<span
style='mso-spacerun:yes'>  </span>We need to combine them with the library
error report.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>5.<span style='mso-spacerun:yes'>  </span>Supported data
types</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>For C and DDL, we will support all atomic data types, compound,
enumerate, and array types, including their nested cases.<span
style='mso-spacerun:yes'>  </span>We do not support variable-length and opaque data
types because C language does not have equivalent data types for them.<span
style='mso-spacerun:yes'>  </span>It will be difficult for the text analyzer
and parser to distinguish them from other data types.<span
style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>For <span class=GramE>Fortran</span>, we will only support
four atomic types.<span style='mso-spacerun:yes'>  </span>But <span
class=GramE>Fortran</span> user can still use DDL description to create data
types.<span style='mso-spacerun:yes'>   </span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.5in;mso-list:l0 level1 lfo1;
tab-stops:list .75in'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>VI.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></b><![endif]><b style='mso-bidi-font-weight:normal'>Language
Formats<o:p></o:p></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal>1.<span style='mso-spacerun:yes'>  </span>C</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>For text description for C should be the same as C language
itself with some minor differences.<span style='mso-spacerun:yes'>  </span>A
text <i style='mso-bidi-font-style:normal'>unsigned long <span class=SpellE>long</span></i>
will create the data type of <i style='mso-bidi-font-style:normal'>H5T_NATIVE_ULLONG</i>.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>For A complete list of data type definition in C language,
please refer to the <i style='mso-bidi-font-style:normal'>Appendix B, Syntax of
the C language</i> in the book <i style='mso-bidi-font-style:normal'>C <span
class=GramE>- <span style='mso-spacerun:yes'> </span>A</span> Reference Manual</i>.<span
style='mso-spacerun:yes'>  </span>The differences we have here is array type.<span
style='mso-spacerun:yes'>  </span>We added array as a data type.<span
style='mso-spacerun:yes'>  </span><i style='mso-bidi-font-style:normal'><span
style='mso-spacerun:yes'>  </span></i><o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The data types we support are defined in BNF as follows,</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>type-<span class=SpellE>specifier</span></span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>enumeration-type-<span class=SpellE>specifier</span></span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>floating-type-<span class=SpellE>specifier</span></span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>integer-type-<span class=SpellE>specifier</span></span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>structure-type-<span class=SpellE>specifier</span></span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=SpellE><span class=GramE>typedef</span></span><span class=GramE>-name</span><o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The enumeration types are defined as the following,</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>enumeration-type-<span
class=SpellE>specifier</span></span></span><span style='font-size:10.0pt;
font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>enumeration-type-definition</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>enumeration-type-reference</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>enumeration-type-definition</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=SpellE><span class=GramE><b style='mso-bidi-font-weight:normal'>enum</b></span></span>
enumeration-<span class=SpellE>tag<span style='font-size:6.0pt'>opt</span></span>
<b style='mso-bidi-font-weight:normal'>{</b> enumeration-definition-list <b
style='mso-bidi-font-weight:normal'>}</b><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>enumeration-type-reference</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=SpellE><span class=GramE><b style='mso-bidi-font-weight:normal'>enum</b></span></span>
enumeration-tag<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>enumeration-tag</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>identifier</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>enumeration-definition-list</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>enumeration-constant-definition</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>enumeration-definition-<span class=SpellE>list<b style='mso-bidi-font-weight:
normal'>,</b></span></span><span class=SpellE>enumeration</span>-constant-definition<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>enumeration-constant-definition</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>enumeration-constant</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>enumeration-constant</span> <b style='mso-bidi-font-weight:normal'>=</b>
integer-constant<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>enumeration-constant</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>identifier</span><o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The floating-point data types are defined as,</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=GramE><span style='font-size:10.0pt;font-family:"Courier New"'>floating-type-<span
class=SpellE>specifier</span></span></span><span style='font-size:10.0pt;
font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:2'>            </span><span class=GramE><b
style='mso-bidi-font-weight:normal'>float</b></span><b style='mso-bidi-font-weight:
normal'><o:p></o:p></b></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style='mso-tab-count:
2'>            </span><span class=GramE>double</span><o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style='mso-tab-count:
2'>            </span><span class=GramE>long</span> double<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal>The integer data types are defined as,</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>integer-type-<span
class=SpellE>specifier</span></span></span><span style='font-size:10.0pt;
font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>signed-type-<span class=SpellE>specifier</span></span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>unsigned-type-<span class=SpellE>specifier</span></span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>character-type-<span class=SpellE>specifier</span></span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>signed-type-<span
class=SpellE>specifier</span></span></span><span style='font-size:10.0pt;
font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE><b style='mso-bidi-font-weight:normal'>short</b></span><b
style='mso-bidi-font-weight:normal'> </b>or<b style='mso-bidi-font-weight:normal'>
short <span class=SpellE>int</span> </b>or<b style='mso-bidi-font-weight:normal'>
signed short </b>or<b style='mso-bidi-font-weight:normal'> signed short <span
class=SpellE>int</span><o:p></o:p></b></span></p>

<p class=MsoNormal style='margin-left:.5in'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span><span class=SpellE><span class=GramE>int</span></span>
</span></b><span style='font-size:10.0pt;font-family:"Courier New"'>or<b
style='mso-bidi-font-weight:normal'> signed <span class=SpellE>int</span> </b>or<b
style='mso-bidi-font-weight:normal'> signed<o:p></o:p></b></span></p>

<p class=MsoNormal style='margin-left:.5in'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span><span class=GramE>long</span> </span></b><span
style='font-size:10.0pt;font-family:"Courier New"'>or<b style='mso-bidi-font-weight:
normal'> long <span class=SpellE>int</span> </b>or<b style='mso-bidi-font-weight:
normal'> signed long </b>or<b style='mso-bidi-font-weight:normal'> signed long <span
class=SpellE>int</span><o:p></o:p></b></span></p>

<p class=MsoNormal style='margin-left:1.0in'><span class=GramE><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt;font-family:
"Courier New"'>long</span></b></span><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt;font-family:"Courier New"'> <span class=SpellE>long</span>
</span></b><span style='font-size:10.0pt;font-family:"Courier New"'>or<b
style='mso-bidi-font-weight:normal'> long <span class=SpellE>long</span> <span
class=SpellE>int</span> </b>or<b style='mso-bidi-font-weight:normal'> signed long
<span class=SpellE>long</span> </b>or<b style='mso-bidi-font-weight:normal'>
signed long <span class=SpellE>long</span> <span class=SpellE>int</span><o:p></o:p></b></span></p>

<p class=MsoNormal style='margin-left:.5in'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt;font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>unsigned-type-<span
class=SpellE>specifier</span></span></span><span style='font-size:10.0pt;
font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE><b style='mso-bidi-font-weight:normal'>unsigned</b></span><b
style='mso-bidi-font-weight:normal'> short <span class=SpellE>int<span
style='font-size:6.0pt;font-weight:normal'>opt</span></span><o:p></o:p></b></span></p>

<p class=MsoNormal style='margin-left:.5in'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span><span class=GramE>unsigned</span> <span
class=SpellE>int<span style='font-size:6.0pt;font-weight:normal'>opt</span></span><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:.5in'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span><span class=GramE>unsigned</span> long <span
class=SpellE>int<span style='font-size:6.0pt;font-weight:normal'>opt</span></span><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:.5in'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span><span class=GramE>unsigned</span> long <span
class=SpellE>long</span> <span class=SpellE>int<span style='font-size:6.0pt;
font-weight:normal'>opt</span></span><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:.5in'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt;font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>character-type-<span
class=SpellE>specifier</span></span></span><span style='font-size:10.0pt;
font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE><b style='mso-bidi-font-weight:normal'>char</b></span><b
style='mso-bidi-font-weight:normal'><o:p></o:p></b></span></p>

<p class=MsoNormal style='margin-left:.5in'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span><span class=GramE>signed</span> char<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:.5in'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span><span class=GramE>unsigned</span> char</span></b><span
style='font-size:10.0pt;font-family:"Courier New"'><o:p></o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal>The structure data types are defined as,</p>

<p class=MsoNormal style='margin-left:.5in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>structure-type-<span
class=SpellE>specifier</span></span></span><span style='font-size:10.0pt;
font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>structure-type-definition</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>structure-type-reference</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>structure-type-definition</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=SpellE><span class=GramE><b style='mso-bidi-font-weight:normal'>struct</b></span></span>
structure-<span class=SpellE>tag<span style='font-size:6.0pt'>opt</span></span>
<b style='mso-bidi-font-weight:normal'>{</b> field-list <b style='mso-bidi-font-weight:
normal'>}</b><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>structure-type-reference</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=SpellE><span class=GramE><b style='mso-bidi-font-weight:normal'>struct</b></span></span>
structure-tag<span style='mso-tab-count:1'>    </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>structure-tag</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>identifier</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>field-list</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>component-declaration</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>field-list</span> component-declaration<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>component-declaration</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>type-<span class=SpellE>specifier</span></span>
component-declaration-list <b style='mso-bidi-font-weight:normal'>;</b><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>component-declaration-list</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>component-<span class=SpellE>declarator</span></span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span>component-declaration-<span
class=GramE>list <b style='mso-bidi-font-weight:normal'>,</b></span> component-<span
class=SpellE>declarator</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>component-<span
class=SpellE>declarator</span></span></span><span style='font-size:10.0pt;
font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>simple-component</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>bit-field</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>simple-component</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=SpellE><span class=GramE>declarator</span></span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>bit-field</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=SpellE><span class=GramE>declarator<span style='font-size:6.0pt'>opt</span></span></span><span
class=GramE> <b style='mso-bidi-font-weight:normal'>:</b></span> width<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>width</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>      </span><span
class=GramE>expression</span><o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The <span class=SpellE>typedef</span> is defined as,</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=SpellE><span class=GramE><span style='font-size:10.0pt;font-family:"Courier New"'>typedef</span></span></span><span
class=GramE><span style='font-size:10.0pt;font-family:"Courier New"'>-name</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:2'>            </span><span class=GramE>identifier</span><o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>We also support array as a data type in HDF5, which is
different from C.<span style='mso-spacerun:yes'>  </span>Below is the
definition of array,</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span><span
class=GramE><span style='font-size:10.0pt;font-family:"Courier New"'>array-<span
class=SpellE>declarator</span></span></span><span style='font-size:10.0pt;
font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:2'>            </span><span class=GramE>type-<span
class=SpellE>specifier</span></span> simple-<span class=SpellE>declarator<span
style='font-size:6.0pt'>opt</span></span> <b style='mso-bidi-font-weight:normal'>[</b>
constant-expression <b style='mso-bidi-font-weight:normal'>]<o:p></o:p></b></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt;font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style='mso-tab-count:
1'>      </span></span></b><span class=GramE><span style='font-size:10.0pt;
font-family:"Courier New"'>simple-<span class=SpellE>declarator</span></span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>:<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:2'>            </span><span class=GramE>identifier</span><o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Below is a list of examples of C data types,<span
style='mso-spacerun:yes'>  </span><o:p></o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal>Integer types<o:p></o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='mso-tab-count:1'>            </span></b><i style='mso-bidi-font-style:
normal'><span style='mso-spacerun:yes'> </span><span class=GramE>char</span><span
style='mso-tab-count:1'>           </span>unsigned char<o:p></o:p></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-tab-count:1'>            </span><span class=GramE>short</span><span
style='mso-tab-count:1'>           </span>unsigned short<o:p></o:p></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-tab-count:1'>            </span><span class=SpellE><span
class=GramE>int</span></span><span class=GramE> </span><span style='mso-tab-count:
2'>              </span>unsigned<o:p></o:p></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-tab-count:1'>            </span><span class=GramE>long</span>;<span
style='mso-tab-count:1'>           </span>unsigned long<o:p></o:p></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-tab-count:1'>            </span><span class=GramE>long</span> <span
class=SpellE>long</span> <span style='mso-tab-count:1'>    </span>unsigned
long <span class=SpellE>long</span></i><o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Floating-point types<o:p></o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-tab-count:1'>            </span><span class=GramE>float</span><span
style='mso-tab-count:2'>                        </span>double<span
style='mso-tab-count:2'>                     </span>long double<o:p></o:p></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><o:p>&nbsp;</o:p></i></p>

<p class=MsoNormal>Structures<o:p></o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-tab-count:1'>            </span><span class=SpellE><span
class=GramE>struct</span></span> s {<span class=SpellE>int</span> a; float
b;};<span style='mso-tab-count:1'>     </span><span class=SpellE>typedef</span>
<span class=SpellE>struct</span> s {<span class=SpellE>int</span> a; float b;} <span
class=SpellE>s_t</span>;<o:p></o:p></i></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><o:p>&nbsp;</o:p></i></p>

<p class=MsoNormal>Arrays<o:p></o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-tab-count:1'>            </span><span class=SpellE><span
class=GramE>int</span></span> [16];<span style='mso-tab-count:2'>                  </span><o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:.5in'><i style='mso-bidi-font-style:normal'><span
class=SpellE><span class=GramE>typedef</span></span> <span class=SpellE>struct</span>
s {<span class=SpellE>int</span> a; float b;} <span class=SpellE>s_t</span>; <span
class=SpellE>s_t</span> [16][32];<o:p></o:p></i></p>

<p class=MsoNormal style='text-indent:.5in'><i style='mso-bidi-font-style:normal'><o:p>&nbsp;</o:p></i></p>

<p class=MsoNormal>Enumerates<o:p></o:p></p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'><span
style='mso-tab-count:1'>            </span><span class=SpellE><span
class=GramE>enum</span></span> {Bob=0, Elena, <span class=SpellE>Quincey</span>,
Frank};<o:p></o:p></i></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal>2.<span style='mso-spacerun:yes'>  </span>DDL</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>This format is basically the DDL definition for HDF5.<span
style='mso-spacerun:yes'>  </span>Please look at the last chapter of the <i
style='mso-bidi-font-style:normal'>Users Guide for HDF5</i>, <i
style='mso-bidi-font-style:normal'>DDL for HDF5</i>.<span
style='mso-spacerun:yes'>  </span>The part of data type definition for this projects
concern is as follows, <span style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<pre>&lt;<span class=SpellE><span class=GramE>datatype</span></span>&gt; ::= &lt;<span
class=SpellE>atomic_type</span>&gt; | &lt;<span class=SpellE>compound_type</span>&gt; | &lt;<span
class=SpellE>array_type</span>&gt; |</pre><pre><span style='mso-tab-count:2'>               </span>&lt;<span
class=SpellE>variable_length_type</span>&gt;</pre><pre><o:p>&nbsp;</o:p></pre><pre>&lt;<span
class=SpellE>atomic_type</span><span class=GramE>&gt; :</span>:= &lt;integer&gt;<span style='mso-spacerun:yes'>  </span>| &lt;float&gt;<span style='mso-spacerun:yes'>  </span>| &lt;time&gt;<span style='mso-spacerun:yes'>      </span>| &lt;string&gt; |</pre><pre><span style='mso-spacerun:yes'>                  </span>&lt;<span
class=SpellE><span class=GramE>bitfield</span></span>&gt; | &lt;opaque&gt; | &lt;reference&gt; | &lt;<span
class=SpellE>enum</span>&gt;</pre><pre><o:p>&nbsp;</o:p></pre><pre>&lt;<span
class=GramE>integer</span>&gt; ::=<span style='mso-spacerun:yes'>  </span>H5T_STD_I8BE<span style='mso-spacerun:yes'>     </span>| H5T_STD_I8LE<span style='mso-spacerun:yes'>      </span>|</pre><pre><span style='mso-spacerun:yes'>               </span>H5T_STD_I16BE<span style='mso-spacerun:yes'>    </span>| H5T_STD_I16LE<span style='mso-spacerun:yes'>     </span>|</pre><pre><span style='mso-spacerun:yes'>               </span>H5T_STD_I32BE<span style='mso-spacerun:yes'>    </span>| H5T_STD_I32LE<span style='mso-spacerun:yes'>     </span>|</pre><pre><span style='mso-spacerun:yes'>               </span>H5T_STD_I64BE<span style='mso-spacerun:yes'>    </span>| H5T_STD_I64LE<span style='mso-spacerun:yes'>     </span>|</pre><pre><span style='mso-spacerun:yes'>               </span>H5T_STD_U8BE<span style='mso-spacerun:yes'>     </span>| H5T_STD_U8LE<span style='mso-spacerun:yes'>      </span>|</pre><pre><span style='mso-spacerun:yes'>               </span>H5T_STD_U16BE<span style='mso-spacerun:yes'>    </span>| H5T_STD_U16LE<span style='mso-spacerun:yes'>     </span>|</pre><pre><span style='mso-spacerun:yes'>               </span>H5T_STD_U32BE<span style='mso-spacerun:yes'>    </span>| H5T_STD_U32LE<span style='mso-spacerun:yes'>     </span>|</pre><pre><span style='mso-spacerun:yes'>               </span>H5T_STD_U64BE<span style='mso-spacerun:yes'>    </span>| H5T_STD_U64LE<span style='mso-spacerun:yes'>     </span>|</pre><pre><span style='mso-spacerun:yes'>               </span>H5T_NATIVE_<span
class=GramE>CHAR<span style='mso-spacerun:yes'>  </span>|</span> H5T_NATIVE_UCHAR<span style='mso-spacerun:yes'>  </span>|</pre><pre><span style='mso-spacerun:yes'>               </span>H5T_NATIVE_SHORT | H5T_NATIVE_USHORT |</pre><pre><span style='mso-spacerun:yes'>               </span>H5T_NATIVE_INT<span style='mso-spacerun:yes'>   </span>| H5T_NATIVE_UINT<span style='mso-spacerun:yes'>   </span>|</pre><pre><span style='mso-spacerun:yes'>               </span>H5T_NATIVE_<span
class=GramE>LONG<span style='mso-spacerun:yes'>  </span>|</span> H5T_NATIVE_ULONG<span style='mso-spacerun:yes'>  </span>|</pre><pre><span style='mso-spacerun:yes'>               </span>H5T_NATIVE_LLONG | H5T_NATIVE_ULLONG</pre><pre><o:p>&nbsp;</o:p></pre><pre>&lt;<span
class=GramE>float</span>&gt; ::= H5T_IEEE_F32BE<span style='mso-spacerun:yes'>   </span>| H5T_IEEE_F32LE<span style='mso-spacerun:yes'>     </span>|</pre><pre><span style='mso-spacerun:yes'>            </span>H5T_IEEE_F64BE<span style='mso-spacerun:yes'>   </span>| H5T_IEEE_F64LE<span style='mso-spacerun:yes'>     </span>|</pre><pre><span style='mso-spacerun:yes'>            </span>H5T_NATIVE_FLOAT | H5T_NATIVE_<span
class=GramE>DOUBLE<span style='mso-spacerun:yes'>  </span>|</span></pre><pre><span style='mso-spacerun:yes'>            </span>H5T_NATIVE_LDOUBLE</pre><pre><o:p>&nbsp;</o:p></pre><pre>&lt;<span
class=GramE>time</span>&gt; ::= TBD</pre><pre><o:p>&nbsp;</o:p></pre><pre>&lt;<span
class=GramE>string</span>&gt; ::= H5T_STRING { STRSIZE &lt;<span class=SpellE>strsize</span>&gt; ;</pre><pre><span style='mso-spacerun:yes'>               </span>STRPAD &lt;<span
class=SpellE>strpad</span><span class=GramE>&gt; ;</span></pre><pre><span style='mso-spacerun:yes'>               </span>CSET &lt;<span
class=SpellE>cset</span><span class=GramE>&gt; ;</span></pre><pre><span style='mso-spacerun:yes'>           </span><span style='mso-spacerun:yes'>    </span>CTYPE &lt;<span
class=SpellE>ctype</span><span class=GramE>&gt; ;</span> }<span style='mso-spacerun:yes'>  </span></pre><pre>&lt;<span
class=SpellE><span class=GramE>strsize</span></span>&gt; ::= &lt;<span
class=SpellE>int_value</span>&gt;</pre><pre>&lt;<span class=SpellE><span
class=GramE>strpad</span></span>&gt; ::= H5T_STR_NULLTERM | H5T_STR_NULLPAD | H5T_STR_SPACEPAD</pre><pre>&lt;<span
class=SpellE><span class=GramE>cset</span></span>&gt; ::= H5T_CSET_ASCII</pre><pre>&lt;<span
class=SpellE><span class=GramE>ctype</span></span>&gt; ::= H5T_C_S1 | H5T_FORTRAN_S1</pre><pre><o:p>&nbsp;</o:p></pre><pre>&lt;<span
class=SpellE><span class=GramE>bitfield</span></span>&gt; ::= TBD</pre><pre><o:p>&nbsp;</o:p></pre><pre>&lt;<span
class=GramE>opaque</span>&gt; ::= H5T_OPAQUE { &lt;identifier&gt; }</pre><pre><o:p>&nbsp;</o:p></pre><pre>&lt;<span
class=GramE>reference</span>&gt; ::= H5T_REFERENCE { &lt;<span class=SpellE>ref_type</span>&gt; }</pre><pre>&lt;<span
class=SpellE>ref_type</span><span class=GramE>&gt; :</span>:= H5T_STD_REF_OBJECT | H5T_STD_REF_DSETREG</pre><pre><o:p>&nbsp;</o:p></pre><pre>&lt;<span
class=SpellE>compound_type</span><span class=GramE>&gt; :</span>:= H5T_COMPOUND { &lt;<span
class=SpellE>member_type_def</span>&gt;+ }</pre><pre>&lt;<span class=SpellE>member_type_def</span><span
class=GramE>&gt; :</span>:= &lt;<span class=SpellE>datatype</span>&gt; &lt;<span
class=SpellE>field_name</span>&gt; &lt;offset&gt;<span style='font-size:6.0pt'>opt</span><span
style='font-size:8.0pt'> </span>;</pre><pre>&lt;<span class=SpellE>field_name</span><span
class=GramE>&gt; :</span>:= &lt;identifier&gt;</pre><pre>&lt;<span class=GramE>offset</span>&gt; ::= : &lt;<span
class=SpellE>int_value</span>&gt;</pre><pre><o:p>&nbsp;</o:p></pre><pre>&lt;<span
class=SpellE>variable_length_type</span><span class=GramE>&gt; :</span>:= H5T_VLEN { &lt;<span
class=SpellE>datatype</span>&gt; }</pre>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<pre>&lt;<span class=SpellE>array_type</span><span class=GramE>&gt; :</span>:= H5T_ARRAY { &lt;<span
class=SpellE>dim_sizes</span>&gt; &lt;<span class=SpellE>datatype</span>&gt; }</pre><pre>&lt;<span
class=SpellE>dim_sizes</span><span class=GramE>&gt; :</span>:= `['&lt;<span
class=SpellE>dimsize</span>&gt;`]' | `['&lt;<span class=SpellE>dimsize</span>&gt;`]'&lt;<span
class=SpellE>dim_sizes</span>&gt;</pre><pre>&lt;<span class=SpellE><span
class=GramE>dimsize</span></span>&gt; ::= &lt;<span class=SpellE>int_value</span>&gt;</pre>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<pre>&lt;<span class=SpellE><span class=GramE>enum</span></span>&gt; ::= H5T_ENUM { &lt;<span
class=SpellE>enum_base_type</span>&gt; &lt;<span class=SpellE>enum_def</span>&gt;+<span style='mso-spacerun:yes'>  </span>}</pre><pre>&lt;<span
class=SpellE>enum_base_type</span><span class=GramE>&gt; :</span>:= &lt;integer&gt;</pre><pre>// <span
class=GramE>Currently</span> <span class=SpellE>enums</span> can only hold integer type data, but they may be //expanded in the future to hold any <span
class=SpellE>datatype</span></pre><pre>&lt;<span class=SpellE>enum_def</span><span
class=GramE>&gt; :</span>:= &lt;<span class=SpellE>enum_symbol</span>&gt; &lt;<span
class=SpellE>enum_val</span>&gt;;</pre><pre>&lt;<span class=SpellE>enum_symbol</span><span
class=GramE>&gt; :</span>:= &lt;identifier&gt;</pre><pre>&lt;<span
class=SpellE>enum_val</span><span class=GramE>&gt; :</span>:= &lt;<span
class=SpellE>int_value</span>&gt;</pre>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>A few examples of <span class=SpellE>datatypes</span> in DDL
are as follows,</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>H5T_ENUM
<span class=GramE>{ H5T</span>_NATIVE_INT; <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'>Bob<span style='mso-spacerun:yes'>  </span><span
style='mso-tab-count:1'>     </span>0;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'>Elena<span style='mso-tab-count:1'>     </span>1;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span class=SpellE>Quincey</span><span
style='mso-tab-count:1'>   </span>2;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:.5in'><span style='font-size:10.0pt;
font-family:"Courier New"'>Frank<span style='mso-tab-count:1'>     </span>3;<span
style='mso-tab-count:1'>    </span>} <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>H5T_COMPOUND
{<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>H5T_ARRAY <span class=GramE>{ [</span>4]
H5T_STD_I32BE } <span class=SpellE>int_array</span>;<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>H5T_ARRAY <span class=GramE>{ [</span>5][6]
H5T_IEEE_F32BE } <span class=SpellE>float_array</span>; }<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>H5T_COMPOUND
{<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>H5T_STD_I16LE<span style='mso-tab-count:
1'>     </span>16_bit<span class=GramE><span style='mso-spacerun:yes'> 
</span>:</span><span style='mso-spacerun:yes'>  </span>0;<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>H5T_IEEE_U32BE<span style='mso-tab-count:
1'>    </span>32_bit<span class=GramE><span style='mso-spacerun:yes'> 
</span>:</span><span style='mso-spacerun:yes'>  </span>16; }<o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span class=GramE>3.<span style='mso-spacerun:yes'> 
</span>Fortran</span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span class=GramE>To be decided.</span> </p>

<p class=MsoNormal><span style='mso-spacerun:yes'> </span><o:p></o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.5in;mso-list:l0 level1 lfo1;
tab-stops:list .75in'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>VII.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></b><![endif]><b style='mso-bidi-font-weight:normal'>Examples<o:p></o:p></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal>A simple example below shows how to create an array <span
class=SpellE>datatype</span> of compound type in C format.<span
style='mso-spacerun:yes'>  </span>This compound data type has two fields, one
is integer, <span class=GramE>another</span> is float.<span
style='mso-spacerun:yes'>  </span>The program then converts the HDF5 data type
just created into a text description.<span style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.25in'><span class=SpellE><span
class=GramE><span style='font-size:10.0pt;font-family:"Courier New"'>hid_t</span></span></span><span
style='font-size:10.0pt;font-family:"Courier New"'><span style='mso-tab-count:
1'>    </span><span class=SpellE>dtype</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in'><span class=SpellE><span
class=GramE><span style='font-size:10.0pt;font-family:"Courier New"'>size_t</span></span></span><span
style='font-size:10.0pt;font-family:"Courier New"'><span style='mso-tab-count:
1'>   </span><span class=SpellE>tsize</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>unsigned</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'> char* <span class=SpellE>text_buf</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:2'>         </span>:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in'><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.25in'><span style='font-size:10.0pt;
font-family:"Courier New"'>/* <span class=GramE>Create</span> the data type by
C text */<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in'><span class=GramE><span
style='font-size:10.0pt;font-family:"Courier New"'>if(</span></span><span
style='font-size:10.0pt;font-family:"Courier New"'>(<span class=SpellE>dtype</span>
= H5Ttext_to_type(<span class=SpellE>typedef</span> <span class=SpellE>struct</span>
<span class=SpellE>foo</span>{<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:1'>   </span><span
style='mso-tab-count:5'>                              </span><span
class=SpellE><span class=GramE>int</span></span> a;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:6'>                                 </span><span
class=GramE>float</span> b;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:5'>                           </span>}
<span class=SpellE>foo_t</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style='mso-tab-count:4'>                     </span><span
style='mso-spacerun:yes'>    </span><span class=SpellE>foo_t</span> [12<span
class=GramE>];</span>))&lt;0)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:.5in'><span
class=SpellE><span class=GramE><span style='font-size:10.0pt;font-family:"Courier New"'>goto</span></span></span><span
style='font-size:10.0pt;font-family:"Courier New"'> error;<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-spacerun:yes'>   </span>/* Convert the data type back to text */<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-spacerun:yes'>   </span><span class=GramE>If(</span>H5Ttype_to_text(<span
class=SpellE>dtype</span>, NULL, H5T_C, &amp;<span class=SpellE>tsize</span>)&lt;0)<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:2'>            </span><span class=SpellE><span
class=GramE>goto</span></span> error;<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-spacerun:yes'>   </span><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-spacerun:yes'>   </span><span class=GramE>If(</span><span
class=SpellE>tsize</span>&gt;0)<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:2'>            </span><span class=SpellE>text_buf</span> =
(unsigned char*<span class=GramE>)<span class=SpellE>calloc</span></span>(1, <span
class=SpellE>tsize</span>);<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-spacerun:yes'>   </span><span class=GramE>If(</span>H5Ttype_to_text(<span
class=SpellE>dtype</span>, <span class=SpellE>text_buf</span>, H5T_C, &amp;<span
class=SpellE>tsize</span>)&lt;0)<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:2'>            </span><span class=SpellE><span
class=GramE>goto</span></span> error; <span style='mso-spacerun:yes'> </span><o:p></o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='mso-spacerun:yes'>       </span><span style='mso-tab-count:2'>                 </span><o:p></o:p></b></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.5in;mso-list:l0 level1 lfo1;
tab-stops:list .75in'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='mso-fareast-font-family:"Times New Roman"'><span style='mso-list:Ignore'>VIII.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></b><![endif]><b style='mso-bidi-font-weight:normal'>API
Functions<o:p></o:p></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><strong>Name:</strong> <a name=Dataset-GetType>H5</a>Ttext_to_type</p>

<p class=MsoNormal><strong>Signature:</strong> </p>

<p class=MsoNormal style='margin-left:.5in'><span class=SpellE><em>hid_<span
class=GramE>t</span></em></span><span class=GramE><em><span
style='mso-spacerun:yes'>  </span></em><code><span style='font-size:10.0pt'>H5Ttext</span></code></span><code><span
style='font-size:10.0pt'>_to_type</span></code>(<code><i style='mso-bidi-font-style:
normal'><span style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman"'>const char*</span></i></code><code><span
style='font-size:10.0pt'> <span class=SpellE>str</span></span></code>) </p>

<p class=MsoNormal><strong>Purpose:</strong> </p>

<p class=MsoNormal style='margin-left:.5in'>Create a HDF5 <span class=SpellE>datatype</span>
given a description of data type. </p>

<p class=MsoNormal><strong>Description:</strong> </p>

<p class=MsoNormal><strong><span style='mso-tab-count:1'>            </span></strong><strong><span
style='font-weight:normal;mso-bidi-font-weight:bold'>Given a text description
of data type, this function creates an HDF5 <span class=SpellE>datatype</span>.<span
style='mso-spacerun:yes'>  </span>The <o:p></o:p></span></strong></p>

<p class=MsoNormal><strong><span style='font-weight:normal;mso-bidi-font-weight:
bold'><span style='mso-tab-count:1'>            </span><span class=GramE>text</span>
description of the data type has to comply with certain language formats.<span
style='mso-spacerun:yes'>  </span>The <span style='mso-spacerun:yes'> </span><o:p></o:p></span></strong></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><strong><span
style='font-weight:normal;mso-bidi-font-weight:bold'>currently</span></strong></span><strong><span
style='font-weight:normal;mso-bidi-font-weight:bold'> supported languages are
C, DDL, and Fortran.<span style='mso-spacerun:yes'>  </span>An example of C
text description is like,<o:p></o:p></span></strong></p>

<p class=MsoNormal><strong><span style='font-weight:normal;mso-bidi-font-weight:
bold'><o:p>&nbsp;</o:p></span></strong></p>

<p class=MsoNormal><strong><span style='font-weight:normal;mso-bidi-font-weight:
bold'><span style='mso-tab-count:2'>                        </span><span
class=SpellE><span class=GramE>typedef</span></span> <span class=SpellE>struct</span>
<span class=SpellE>foo</span> {<o:p></o:p></span></strong></p>

<p class=MsoNormal><strong><span style='font-weight:normal;mso-bidi-font-weight:
bold'><span style='mso-tab-count:3'>                                    </span><span
class=SpellE><span class=GramE>int</span></span> a;<o:p></o:p></span></strong></p>

<p class=MsoNormal><strong><span style='font-weight:normal;mso-bidi-font-weight:
bold'><span style='mso-tab-count:3'>                                    </span><span
class=GramE>float</span> b;<o:p></o:p></span></strong></p>

<p class=MsoNormal><strong><span style='font-weight:normal;mso-bidi-font-weight:
bold'><span style='mso-tab-count:2'>                        </span><span
style='mso-spacerun:yes'> </span>} <span class=SpellE>foo_t</span>;<o:p></o:p></span></strong></p>

<p class=MsoNormal><strong><span style='font-weight:normal;mso-bidi-font-weight:
bold'><span style='mso-tab-count:2'>                        </span><span
style='mso-spacerun:yes'> </span><span class=SpellE>foo_t</span> [12];<o:p></o:p></span></strong></p>

<p class=MsoNormal><strong><span style='font-weight:normal;mso-bidi-font-weight:
bold'><o:p>&nbsp;</o:p></span></strong></p>

<p class=MsoNormal style='margin-left:.5in'><strong><span style='font-weight:
normal;mso-bidi-font-weight:bold'>When this C definition of data type is passed
in as the </span></strong><span class=SpellE><span class=GramE><strong><span
style='font-size:10.0pt;font-family:"Courier New";font-weight:normal;
mso-bidi-font-weight:bold'>str</span></strong></span></span><strong><span
style='font-weight:normal;mso-bidi-font-weight:bold'>, this function will
create an HDF5 <span class=SpellE>datatype</span> of 12-element array of a
compound <span class=SpellE>datatype</span>.<span style='mso-spacerun:yes'> 
</span>This compound <span class=SpellE>datatype</span> has a field of integer<o:p></o:p></span></strong></p>

<p class=MsoNormal><strong><span style='font-weight:normal;mso-bidi-font-weight:
bold'><span style='mso-tab-count:1'>            </span><span class=GramE>and</span>
a field of float.<o:p></o:p></span></strong></p>

<p class=MsoNormal><strong>Parameters:</strong> </p>

<p class=MsoNormal><span class=GramE><em>const</em></span><em> char*</em> <span
class=SpellE><code><span style='font-size:10.0pt'>str</span></code></span> </p>

<p class=MsoNormal style='margin-left:.5in'>IN: a character string describing
the data type to be created.</p>

<p class=MsoNormal><strong>Returns:</strong> </p>

<p class=MsoNormal style='margin-left:.5in'>Returns the <span class=SpellE>datatype</span>
<span class=GramE>ID(</span>non-negative) if successful; otherwise returns a
negative value.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><strong>Name:</strong> H5Ttype_to_text</p>

<p class=MsoNormal><strong>Signature:</strong> </p>

<p class=MsoNormal style='margin-left:.5in'><span class=SpellE><em>herr_<span
class=GramE>t</span></em></span><span class=GramE><em><span
style='mso-spacerun:yes'>  </span></em><code><span style='font-size:10.0pt'>H5Ttype</span></code></span><code><span
style='font-size:10.0pt'>_to_text</span></code>(<span class=SpellE><i
style='mso-bidi-font-style:normal'>hid_t</i></span> <span class=SpellE><span
style='font-size:10.0pt;font-family:"Courier New"'>datatype</span></span>, <code><i
style='mso-bidi-font-style:normal'><span style='mso-ansi-font-size:12.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman"'>char*</span></i></code><code><span
style='font-size:10.0pt'> <span class=SpellE>str</span>, </span></code><code><i
style='mso-bidi-font-style:normal'><span style='mso-ansi-font-size:12.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman"'>H5T_lang_t</span></i></code><code><span
style='font-size:10.0pt'> <span class=SpellE>lang_type</span>, </span></code><span
class=SpellE><code><i style='mso-bidi-font-style:normal'><span
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman"'>size_t</span></i></code></span><code><i
style='mso-bidi-font-style:normal'><span style='mso-ansi-font-size:12.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman"'>*</span></i></code><code><span
style='font-size:10.0pt'> <span class=SpellE>len</span></span></code>) </p>

<p class=MsoNormal><strong>Purpose:</strong> </p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE>Creates a text
description of a <span class=SpellE>datatype</span>.</span></p>

<p class=MsoNormal><strong>Description:</strong> </p>

<p class=MsoNormal style='margin-left:.5in'>Given a <span class=SpellE>datatype</span>
ID, this <span class=GramE>functions</span> creates a text description of this <span
class=SpellE>datatype</span> in different format according to the language
type.<span style='mso-spacerun:yes'>  </span>If the <span class=SpellE><span
style='font-size:10.0pt;font-family:"Courier New"'>lang_type</span></span> is <span
style='font-size:10.0pt;font-family:"Courier New"'>H5T_C</span>, the text
description will be in C format.<span style='mso-spacerun:yes'>  </span>If it
is <span style='font-size:10.0pt;font-family:"Courier New"'>H5T_DDL</span>, the
description will be in </p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE>HDF5 DDL format.</span><span
style='mso-spacerun:yes'>  </span>An example in C format will be like,</p>

<p class=MsoNormal><strong><span style='font-weight:normal;mso-bidi-font-weight:
bold'><span style='mso-tab-count:2'>                        </span><span
class=SpellE><span class=GramE>typedef</span></span> <span class=SpellE>struct</span>
<span class=SpellE>foo</span> {<o:p></o:p></span></strong></p>

<p class=MsoNormal><strong><span style='font-weight:normal;mso-bidi-font-weight:
bold'><span style='mso-tab-count:3'>                                    </span><span
class=SpellE><span class=GramE>int</span></span> a;<o:p></o:p></span></strong></p>

<p class=MsoNormal><strong><span style='font-weight:normal;mso-bidi-font-weight:
bold'><span style='mso-tab-count:1'>            </span><span style='mso-tab-count:
2'>                        </span><span class=GramE>float</span> b;<o:p></o:p></span></strong></p>

<p class=MsoNormal><strong><span style='font-weight:normal;mso-bidi-font-weight:
bold'><span style='mso-tab-count:2'>                        </span><span
style='mso-spacerun:yes'> </span>} <span class=SpellE>foo_t</span>;<o:p></o:p></span></strong></p>

<p class=MsoNormal><strong><span style='font-weight:normal;mso-bidi-font-weight:
bold'><span style='mso-tab-count:2'>                        </span><span
style='mso-spacerun:yes'> </span><span class=SpellE>foo_t</span> [12];<o:p></o:p></span></strong></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE>which</span> is a
<span class=SpellE>datatype</span> of 12-element array of a compound <span
class=SpellE>datatype</span>.<span style='mso-spacerun:yes'>  </span>This
compound <span class=SpellE>datatype</span> has a field of integer and a field
of float.</p>

<p class=MsoNormal style='margin-left:.5in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in'>A preliminary <code><span
style='font-size:10.0pt'>H5Ttype_to_text</span></code> call can be made to find
out the size of the buffer needed. This value is returned as <span
class=SpellE><span style='font-size:10.0pt;font-family:"Courier New"'>len</span></span>.<span
style='mso-spacerun:yes'>  </span>That value can then be assigned to <span
class=SpellE><code><span style='font-size:10.0pt'>len</span></code></span> for
a second <code><span style='font-size:10.0pt'>H5Ttype_to_text</span></code>
call, which will retrieve the actual text description for the data type.<span
style='mso-spacerun:yes'>   </span></p>

<p class=MsoNormal style='margin-left:.5in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in'>If the library finds out <span
class=SpellE><span style='font-size:10.0pt;font-family:"Courier New"'>len</span></span>
is not big enough for the description, it simply returns the size of the buffer
needed through <span class=SpellE><span style='font-size:10.0pt;font-family:
"Courier New"'>len</span></span> without encoding the provided buffer.</p>

<p class=MsoNormal><strong>Parameters:</strong> </p>

<p class=MsoNormal><span class=SpellE><span class=GramE><em>hid_t</em></span></span><em>
<span class=SpellE>datatype</span><o:p></o:p></em></p>

<p class=MsoNormal><em><span style='mso-tab-count:1'>            </span>IN: ID
of the <span class=SpellE>datatype</span> to be converted.<o:p></o:p></em></p>

<p class=MsoNormal><span class=GramE><em>char</em></span><em>*</em> <span
class=SpellE><code><span style='font-size:10.0pt'>str</span></code></span> </p>

<p class=MsoNormal style='margin-left:.5in'>OUT: Buffer for the text
description of the data type.</p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>H5T_lang_t</i> <span
class=SpellE><span style='font-size:10.0pt;font-family:"Courier New"'>lang_type</span></span></p>

<p class=MsoNormal style='margin-left:.5in'>IN: the language used to describe
the data type.<span style='mso-spacerun:yes'>  </span>Currently supported
languages are <span style='font-size:10.0pt;font-family:"Courier New"'>H5T_C,
H5T_DDL, <span class=GramE>H5T</span>_FORTRAN</span>.<span
style='mso-spacerun:yes'>  </span>Other languages might be added later.</p>

<p class=MsoNormal><span class=SpellE><i style='mso-bidi-font-style:normal'>size_t</i></span><i
style='mso-bidi-font-style:normal'>*</i> <span class=SpellE><span
style='font-size:10.0pt;font-family:"Courier New"'>len</span></span></p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span>OUT: the
size of buffer needed to store the text description.</p>

<p class=MsoNormal><strong>Returns:</strong> </p>

<p class=MsoNormal style='margin-left:.5in'>Returns non-negative if successful;
otherwise returns a negative value.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><strong>Name:</strong> H5Tcmp</p>

<p class=MsoNormal><strong>Signature:</strong> </p>

<p class=MsoNormal style='margin-left:.5in'><span class=SpellE><span
class=GramE><em>int</em></span></span><span class=GramE><em><span
style='mso-spacerun:yes'>  </span></em><code><span style='font-size:10.0pt'>H5Tcmp</span></code></span>(<span
class=SpellE><code><i style='mso-bidi-font-style:normal'><span
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman"'>hid_t</span></i></code></span><code><span
style='font-size:10.0pt'> dtype1, <span class=SpellE>hid_t</span> dtype2</span></code>)
</p>

<p class=MsoNormal><strong>Purpose:</strong> </p>

<p class=MsoNormal style='margin-left:.5in'>Compare two data types.</p>

<p class=MsoNormal><strong>Description:</strong> </p>

<p class=MsoNormal style='text-indent:.5in'>Given the data type IDs, this
function compares two data types.<span style='mso-spacerun:yes'>  </span>The
library</p>

<p class=MsoNormal style='text-indent:.5in'><span class=GramE>compares</span>
data types in the following way,</p>

<p class=MsoNormal style='text-indent:.5in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-indent:.5in'><span style='mso-tab-count:1'>            </span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='margin-left:.7in;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:480;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0'>
  <td width=96 valign=top style='width:1.0in;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center'><b
  style='mso-bidi-font-weight:normal'>Data types<o:p></o:p></b></p>
  </td>
  <td width=372 valign=top style='width:279.0pt;border:solid windowtext 1.0pt;
  border-left:none;mso-border-left-alt:solid windowtext .5pt;mso-border-alt:
  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center'><b
  style='mso-bidi-font-weight:normal'>Comparison<o:p></o:p></b></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1'>
  <td width=96 valign=top style='width:1.0in;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>Different types<o:p></o:p></span></p>
  </td>
  <td width=372 valign=top style='width:279.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>H5T_ARRAY &gt; H5T_VLEN
  &gt; H5T_ENUM &gt; H5T_REFERENCE &gt; H5T_COMPOUND &gt; H5T_OPAQUE &gt;
  H5T_BITFIELD &gt; H5T_STRING &gt; H5T_TIME &gt; H5T_FLOAT &gt; H5T_INTEGER<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2'>
  <td width=96 valign=top style='width:1.0in;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>Integers<o:p></o:p></span></p>
  </td>
  <td width=372 valign=top style='width:279.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>Big <span class=SpellE>endian</span>
  &gt; little <span class=SpellE>endian</span>, higher precision &gt; lower
  precision, greater offset &gt; lesser <span class=GramE>offset(</span>bit
  position of the least significant bit), greater least significant padding
  &gt; lesser least significant padding, greater most significant padding &gt;
  lesser most significant padding, unsigned &gt; signed.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3'>
  <td width=96 valign=top style='width:1.0in;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>Floats<o:p></o:p></span></p>
  </td>
  <td width=372 valign=top style='width:279.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>Big <span class=SpellE>endian</span>
  &gt; little <span class=SpellE>endian</span>, higher precision &gt; lower
  precision, greater offset &gt; lesser offset(bit position of the least
  significant bit), greater least significant padding &gt; lesser least
  significant padding, greater most significant padding &gt; lesser most
  significant padding, greater bit position of sign bit &gt; lesser bit
  position of sign bit, greater position of least significant bit of exponent
  &gt; lesser position of least significant bit of exponent, greater exponent
  size &gt; lesser exponent size, greater exponent bias &gt; less exponent bias,
  greater mantissa size &gt; lesser mantissa size, most significant bit of
  mantissa is 1 always &gt; most significant bit of mantissa is implied(normalization),
  padding set to background value &gt; padding set to 1 &gt; padding set to 0.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:4'>
  <td width=96 valign=top style='width:1.0in;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>Times<o:p></o:p></span></p>
  </td>
  <td width=372 valign=top style='width:279.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>Big <span class=SpellE>endian</span>
  &gt; little <span class=SpellE>endian</span>, higher precision &gt; lower
  precision, greater offset &gt; lesser <span class=GramE>offset(</span>bit
  position of the least significant bit), greater least significant padding
  &gt; lesser least significant padding, greater most significant padding &gt;
  lesser most significant padding.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:5'>
  <td width=96 valign=top style='width:1.0in;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>Strings<o:p></o:p></span></p>
  </td>
  <td width=372 valign=top style='width:279.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>Big <span class=SpellE>endian</span>
  &gt; little <span class=SpellE>endian</span>, higher precision &gt; lower
  precision, greater offset &gt; lesser <span class=GramE>offset(</span>bit
  position of the least significant bit), greater least significant padding
  &gt; lesser least significant padding, greater most significant padding &gt;
  lesser most significant padding, padding with space for extra bytes &gt;
  padding with nulls &gt; null-terminated.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:6'>
  <td width=96 valign=top style='width:1.0in;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>Bit fields<o:p></o:p></span></p>
  </td>
  <td width=372 valign=top style='width:279.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>Big <span class=SpellE>endian</span>
  &gt; little <span class=SpellE>endian</span>, higher precision &gt; lower
  precision, greater offset &gt; lesser <span class=GramE>offset(</span>bit position
  of the least significant bit), greater least significant padding &gt; lesser
  least significant padding, greater most significant padding &gt; lesser most
  significant padding.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:7'>
  <td width=96 valign=top style='width:1.0in;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>Compounds<o:p></o:p></span></p>
  </td>
  <td width=372 valign=top style='width:279.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>More members &gt; less
  members, greater member name &gt; lesser member <span class=GramE>name(</span>similar
  to string comparison), greater member offset &gt; lesser member offset,
  greater member size &gt; lesser member size.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:8'>
  <td width=96 valign=top style='width:1.0in;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>References<o:p></o:p></span></p>
  </td>
  <td width=372 valign=top style='width:279.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>Big <span class=SpellE>endian</span>
  &gt; little <span class=SpellE>endian</span>, higher precision &gt; lower
  precision, greater offset &gt; lesser offset(bit position of the least significant
  bit), greater least significant padding &gt; lesser least significant
  padding, greater most significant padding &gt; lesser most significant
  padding, internal reference &gt; dataset region reference &gt; object
  reference, data located on disk &gt; data located in memory(for object
  reference), <o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:9'>
  <td width=96 valign=top style='width:1.0in;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>Enumerates<o:p></o:p></span></p>
  </td>
  <td width=372 valign=top style='width:279.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>Greater parent &gt; lesser
  parent, more members &gt; less members, greater member name &gt; lesser
  member name.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:10'>
  <td width=96 valign=top style='width:1.0in;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>Variable-lengths<o:p></o:p></span></p>
  </td>
  <td width=372 valign=top style='width:279.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>String &gt; sequence, data
  located on disk &gt; data located in memory, greater file object address &gt;
  lesser file object <span class=GramE>address(</span>if they are in different
  files).<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:11'>
  <td width=96 valign=top style='width:1.0in;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span class=SpellE><span style='font-size:10.0pt'>Opaques</span></span><span
  style='font-size:10.0pt'><o:p></o:p></span></p>
  </td>
  <td width=372 valign=top style='width:279.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>H5T_ARRAY &gt; H5T_VLEN
  &gt; H5T_ENUM &gt; H5T_REFERENCE &gt; H5T_COMPOUND &gt; H5T_OPAQUE &gt;
  H5T_BITFIELD &gt; H5T_STRING &gt; H5T_TIME &gt; H5T_FLOAT &gt; H5T_INTEGER,
  greater tag &gt; lesser <span class=GramE>tag(</span>similar to string
  comparison).<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:12;mso-yfti-lastrow:yes'>
  <td width=96 valign=top style='width:1.0in;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>Arrays<o:p></o:p></span></p>
  </td>
  <td width=372 valign=top style='width:279.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt'>More dimensions &gt; less
  dimensions, bigger dimensions &gt; smaller dimensions, greater parent &gt;
  lesser parent.<o:p></o:p></span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='text-indent:.5in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in'>This function provides the
convenience of sorting data types although some of the comparisons are
arbitrary. <span style='mso-spacerun:yes'> </span><strong><span
style='font-weight:normal;mso-bidi-font-weight:bold'><o:p></o:p></span></strong></p>

<p class=MsoNormal><strong>Parameters:</strong> </p>

<p class=MsoNormal><span class=SpellE><em>hid_t</em></span><em> </em><em><span
style='font-size:10.0pt;font-family:"Courier New"'>dtype1</span><o:p></o:p></em></p>

<p class=MsoNormal><em><span style='mso-tab-count:1'>            </span></em><em><span
style='font-style:normal;mso-bidi-font-style:italic'>IN: ID of the <span
class=GramE>first<span style='mso-spacerun:yes'>  </span><span class=SpellE>datatype</span></span>
to be compared.<o:p></o:p></span></em></p>

<p class=MsoNormal><span class=SpellE><em>hid_t</em></span> <code><span
style='font-size:10.0pt'>dtype2</span></code></p>

<p class=MsoNormal style='margin-left:.5in'>IN: ID of the second data type to
be compared.</p>

<p class=MsoNormal><strong>Returns:</strong> </p>

<p class=MsoNormal style='margin-left:.5in'>Returns positive value if first
data type is greater; negative value if second data type is greater; 0(zero) if
they are equal. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in'><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
