<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="overflow_discuss_files/filelist.xml">
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="date"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>slu</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>slu</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>1120</o:TotalTime>
  <o:Created>2005-07-06T16:02:00Z</o:Created>
  <o:LastSaved>2005-07-06T16:02:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>400</o:Words>
  <o:Characters>2286</o:Characters>
  <o:Company>NCSA</o:Company>
  <o:Lines>19</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>2681</o:CharactersWithSpaces>
  <o:Version>10.6714</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:\5B8B\4F53;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
@font-face
	{font-family:"\@SimSun";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:SimSun;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 3.0in right 6.0in;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:SimSun;}
p.MsoDate, li.MsoDate, div.MsoDate
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:SimSun;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-even-footer:url("overflow_discuss_files/header.htm") ef1;
	mso-footer:url("overflow_discuss_files/header.htm") f1;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:955983536;
	mso-list-type:hybrid;
	mso-list-template-ids:1275468718 67698703 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1
	{mso-list-id:2135560384;
	mso-list-type:hybrid;
	mso-list-template-ids:1494769472 67698703 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l1:level1
	{mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal><span style='mso-tab-count:2'>                        </span><b
style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt'>A Discussion
of the HDF5 Library’s <span class=GramE>Handling</span> of <o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:.5in'><b
style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt'>Unsigned
Integer Overflow<o:p></o:p></span></b></p>

<p class=MsoNormal><span style='mso-tab-count:3'>                                    </span><span
class=SpellE>Quincey</span> <span class=SpellE>Koziol</span> and Raymond Lu</p>

<p class=MsoNormal><span style='mso-tab-count:4'>                                                </span><st1:date
Year="2005" Day="6" Month="7">July 6, 2005</st1:date></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The background information of this discussion can be found
in the <i style='mso-bidi-font-style:normal'>Data Conversion of Arithmetic Data
Types </i>document.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Introduction<o:p></o:p></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>During the development of the data conversion, the HDF5
library has adopted its own way to handle overflow and underflow when the
original values cannot be represented by the destination.<span
style='mso-spacerun:yes'>  </span>For some data conversions, the C standard
does not define the way to handle overflow or underflow.<span
style='mso-spacerun:yes'>  </span>But for some other conversions, it clearly
states what values should be assigned to the destination.<span
style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>In the data conversion routines of the HDF5 library, the
only significant difference from the C standard is converting an integer,
either signed or unsigned, to an unsigned integer.<span
style='mso-spacerun:yes'>  </span>In this case, the library assigns the maximal
value to the destination when overflow happens.<span style='mso-spacerun:yes'> 
</span>If the source is a negative value, the value 0 is assigned to the
destination.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>However, the C manual says, “<i style='mso-bidi-font-style:
normal'>If the result type is an unsigned type, then the result must be that
unique value of the result type that is equal (congruent) mod </i><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;font-family:
"Courier New"'>2<sup>n</sup></span> to the original value, where</i><i
style='mso-bidi-font-style:normal'><span style='font-size:10.0pt;font-family:
"Courier New"'> n</span> is equal to the number of bits used in the
representation of the result type.</i>”<span style='mso-spacerun:yes'> 
</span>“<i style='mso-bidi-font-style:normal'>If the destination type is longer
than the source type, then the only case in which the source value will not be <span
class=SpellE>representable</span> in the result type is when a negative signed
value is converted to a longer, unsigned type.<span style='mso-spacerun:yes'> 
</span>In that case, the conversion must necessarily behave as if the source
value were first converted to a longer signed type of the same size as the
destination type and then converted to the destination type.</i>”</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>So we will need a discussion to find out a good way to cover
this difference. <span style='mso-spacerun:yes'> </span><span
style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Solutions<o:p></o:p></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Three possible solutions are discussed below with no
implication of preference in the order.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<ol style='margin-top:0in' start=1 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo2;tab-stops:list .5in'>Leaving
     the library as it is:<span style='mso-spacerun:yes'>  </span>There will be
     no change to the library.<span style='mso-spacerun:yes'>  </span>We will
     simply document this arrangement.<span style='mso-spacerun:yes'> 
     </span>We have not received any complaint or question from our users.<span
     style='mso-spacerun:yes'>  </span>It may be acceptable to them.</li>
</ol>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<ol style='margin-top:0in' start=2 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo2;tab-stops:list .5in'>Changing
     the library to comply with the C standard:<span style='mso-spacerun:yes'> 
     </span>The library’s behavior will be different from before.<span
     style='mso-spacerun:yes'>  </span>It is a question whether some users can
     accept this change.</li>
</ol>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<ol style='margin-top:0in' start=3 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo2;tab-stops:list .5in'>Offering
     the option of C standard overflow:<span style='mso-spacerun:yes'> 
     </span>We can provide an exception handling function when this kind of
     overflow happens.<span style='mso-spacerun:yes'>  </span>In this exception
     handling function, the C standard value will be assigned to the
     destination.<span style='mso-spacerun:yes'>  </span>We will document this
     function to let our users know about it.</li>
</ol>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>None of the above solutions will cause a major change to the
library.<span style='mso-spacerun:yes'>  </span>None of them will take much
time to implement.</p>

</div>

</body>

</html>
