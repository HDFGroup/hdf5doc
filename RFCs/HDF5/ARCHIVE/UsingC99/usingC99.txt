HDF5 will use the C99 standard compiler whenever available but will attempt
to keep the library source C89 compatible.  C89 compatible means a standard
C89 compiler will compile the HDF5 source correctly though some non-C89
features (e.g., long long datatype) may not be available.  But as machines
and software evolve, we feel it will get harder to maintain the C89
compatibility and may have to drop its support in the future.  We
encourage all HDF users to migrate to the newer C99 compilers.

New features in C99 (e.g., newer datatypes) will not be all incorporated
into the HDF5 library at once.  They will be considered case by case
depending on needs and resources.


Reasons:
1) We are already using some C99 features (e.g., the long long type, llabs()
   call, ...) in order to support 64 bits file size calculations.
   Many compilers support the features but give lots of warning messages
   if C99 standard option is not specified.  Turning on the C99 standard
   option will reduce those messages, making it much easier to catch
   the other warnings.

2) Start using C99 standard compiler to prepare us to migrate to the newer
   standard eventually.

3) Some platforms support C99 compliance: gcc, AIX, Intel compilers, SGI, ...
   But some platforms are not yet: Windows, Tflops, OSF1, ...
   In view of C99 not totally universal yet, we should not go C99 totally yet.

---
Revised: AKC 2005/05/10
