<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./request_files/filelist.xml">
<title>Enhancement Request for H5Gmove() and H5Glink()</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>slu</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>slu</o:LastAuthor>
  <o:Revision>1</o:Revision>
  <o:TotalTime>1</o:TotalTime>
  <o:Created>2002-04-11T20:21:00Z</o:Created>
  <o:LastSaved>2002-04-11T20:22:00Z</o:LastSaved>
  <o:Pages>5</o:Pages>
  <o:Words>1099</o:Words>
  <o:Characters>6269</o:Characters>
  <o:Company>NCSA</o:Company>
  <o:Lines>52</o:Lines>
  <o:Paragraphs>12</o:Paragraphs>
  <o:CharactersWithSpaces>7698</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal>Enhancement Request for H5Gmove() and H5Glink()<o:p></o:p></p>

<p class=MsoNormal>===============================================<o:p></o:p></p>

<p class=MsoNormal style='margin-bottom:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>1. Introduction<o:p></o:p></p>

<p class=MsoNormal>---------------<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Objects in the hdf5 API are identified four ways:<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 1. by handle to the object (type `hid_t')<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 2. by &quot;loc&quot; (location) and name
(e.g., H5Dopen(), H5Gopen(), etc).<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 3. by a unique, permanent object header address
(H5Gget_objinfo())<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 4. by pointer from a dataset or attribute<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Method two takes an object name that is either absolute
(beginning<o:p></o:p></p>

<p class=MsoNormal>with a slash) or relative. All absolute names are looked up
beginning<o:p></o:p></p>

<p class=MsoNormal>at the root group of the file specified by the `loc'
argument; all<o:p></o:p></p>

<p class=MsoNormal>relative names are looked up beginning at the group
specified by the<o:p></o:p></p>

<p class=MsoNormal>`loc' argument (or the root group of the file if `loc' is a
file<o:p></o:p></p>

<p class=MsoNormal>handle).<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Some examples: If I have a file that contains a root group
called &quot;/&quot;<o:p></o:p></p>

<p class=MsoNormal>(all files have such a group) and a subgroup called
&quot;foo&quot;, and &quot;foo&quot;<o:p></o:p></p>

<p class=MsoNormal>contains a dataset called &quot;bar&quot;, then I can open
the dataset in a<o:p></o:p></p>

<p class=MsoNormal>variety of ways:<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>If<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; hid_t file = H5Fopen(...);<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; hid_t root = H5Gopen(file,
&quot;/&quot;);<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>then any of the following can open the group
&quot;foo&quot;:<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; hid_t foo = H5Gopen(file,
&quot;/foo&quot;);<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; hid_t foo = H5Gopen(file,
&quot;./foo&quot;);<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; hid_t foo = H5Gopen(file,
&quot;foo&quot;);<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; hid_t foo = H5Gopen(root,
&quot;/foo&quot;);<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; hid_t foo = H5Gopen(root,
&quot;./foo&quot;);<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; hid_t foo = H5Gopen(root,
&quot;foo&quot;);<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>then any of the following can open the dataset
&quot;bar&quot;:<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; hid_t bar = H5Dopen(file,
&quot;/foo/bar&quot;);<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; hid_t bar = H5Dopen(file, &quot;./foo/bar&quot;);<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; hid_t bar = H5Dopen(file,
&quot;foo/bar&quot;);<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; hid_t bar = H5Dopen(root,
&quot;/foo/bar&quot;);<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; hid_t bar = H5Dopen(root,
&quot;./foo/bar&quot;);<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; hid_t bar = H5Dopen(root,
&quot;foo/bar&quot;);<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; hid_t bar = H5Dopen(foo,
&quot;/foo/bar&quot;);<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; hid_t bar = H5Dopen(foo, &quot;bar&quot;);<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; hid_t bar = H5Dopen(foo,
&quot;./bar&quot;);<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>This flexibility is important because:<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 1. It takes time to look up each component of a
name. If a client<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; is about to look up many
names in a common group:<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>
/foo/bar/baz/apple<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>
/foo/bar/baz/banana<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>
/foo/bar/baz/cherry<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>
/foo/bar/baz/date<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB> ...<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>
/foo/bar/baz/zucchini<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; then it is faster to look up
and obtain a handle to the group<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; first and then look up the
members relative to that group than<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; to look up the absolute
names:<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hid_t baz =
H5Gopen(file, &quot;/foo/bar/baz&quot;);<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>
hid_t apple = H5Dopen(baz, &quot;apple&quot;);<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>
hid_t apple = H5Dopen(baz, &quot;banana&quot;);<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>
hid_t apple = H5Dopen(baz, &quot;cherry&quot;);<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>
hid_t apple = H5Dopen(baz, &quot;date&quot;);<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB> ...<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>
hid_t apple = H5Dopen(baz, &quot;zucchini&quot;);<o:p></o:p></p>

<p class=MsoNormal style='margin-bottom:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 2. It prevents a client from having to
construct absolute<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; names. E.g., if a client is
given a group name and list of<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; datasets in that group, then
it only needs to open the group and<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; then look up each dataset:<o:p></o:p></p>

<p class=MsoNormal style='margin-bottom:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hid_t
dataset[numDatasets];<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;
hid_t group = H5Gopen(file, groupName);<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for
(i=0; i&lt;numDatasets; i++) {<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
dataset[i] = H5Dopen(group, datasetName[i]);<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;
}<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;
H5Gclose(group);<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rather than<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;
<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;
hid_t dataset[numDatasets];<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for
(i=0; i&lt;numDatasets; i++) {<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
char *absoluteName = malloc(strlen(groupName)+strlen(datasetName[i])+2);<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
sprintf(absoluteName, &quot;%s/%s&quot;, groupName, datasetName);<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
dataset[i] = H5Dopen(file, absoluteName);<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
free(absoluteName);<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;
}<o:p></o:p></p>

<p class=MsoNormal style='margin-bottom:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 3. It allows allows a client to
&quot;forget&quot; about the location of an<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; object. If a client has a
group that contains named datatypes<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; then it can open that group
once by name and then use the group<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; handle throughout the life of
the program to access the named<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; datatypes in that
group.&nbsp; (This is essentially #2 with the bit<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; about opening the group
separated from the `for' loop.)<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 4. It allows the client to obtain a handle to a
group of related<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; objects and then rename or
remove that group (or one of the<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; parent groups) without
affecting accessibility of the objects<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; within the group. Consider a
program that makes the following<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; calls sometime during its
execution:<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hid_t
types = H5Gopen(file, &quot;/some/deep/directory/containing/types&quot;);<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;
...<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;
H5Gmove(file, &quot;/some/deep/directory&quot;, &quot;/some/deep/group&quot;);<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;
...<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;
hid_t timeval = H5Topen(types, &quot;timeval&quot;);&nbsp; /*still accessible*/<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;
/* but not accessible as /some/deep/directory/containing/types/timeval */<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;
...<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;
H5Gunlink(file, &quot;/some&quot;);<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;
...<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;
hid_t statbuf = H5Topen(types, &quot;statbuf&quot;); /*still accessible*/<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;
/* but not accessible by any absolute name */<o:p></o:p></p>

<p class=MsoNormal style='margin-bottom:12.0pt'><br>
<br style='mso-special-character:line-break'>
<![if !supportLineBreakNewLine]><br style='mso-special-character:line-break'>
<![endif]><o:p></o:p></p>

<p class=MsoNormal>2. Enhancment<o:p></o:p></p>

<p class=MsoNormal>-------------<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Two API functions in HDF5-1.4 are deficient:<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; H5Gmove(hid_t loc, const char *source,
const char *destination);<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; H5Glink(hid_t loc, H5G_link_t link_type,
const char source, const char *destination);<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>These two functions use `loc' for both the source and
destination<o:p></o:p></p>

<p class=MsoNormal>objects. This means that the benefits described above only apply
if<o:p></o:p></p>

<p class=MsoNormal>the source and destination names are in the same group.<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>I propose a change to the API by adding a second `loc'
argument for<o:p></o:p></p>

<p class=MsoNormal>the destination:<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; H5Gmove(hid_t srcloc, const char *source,<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
hid_t dstloc, const char *destination);<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp; H5Glink(hid_t srcloc, const char *source,<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
hid_t dstloc, const char *destination,<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>&nbsp;&nbsp;&nbsp;
H5G_link_t link_type);<o:p></o:p></p>

<p class=MsoNormal style='margin-bottom:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>3. Repercussions<o:p></o:p></p>

<p class=MsoNormal>----------------<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>This not a backward-compatible API change. Any C/C++
application that<o:p></o:p></p>

<p class=MsoNormal>attemps to recompile with this API change and which includes
HDF5<o:p></o:p></p>

<p class=MsoNormal>public header files (e.g., &quot;#include
&lt;hdf5.h&gt;&quot;) will get an error that<o:p></o:p></p>

<p class=MsoNormal>the number of actual arguments does not match the number of
formal<o:p></o:p></p>

<p class=MsoNormal>arguments.&nbsp; Any application that simply relinks with
the new hdf5<o:p></o:p></p>

<p class=MsoNormal>library will get an error about compile/link versions of the
library<o:p></o:p></p>

<p class=MsoNormal>not matching.<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>In order to ease the burden on hdf5 clients I also propose:<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 1. If the `dstloc' argument is zero then use
the `srcloc' value as<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for `dstloc'. (A zero-valued
hid_t is not otherwise possible).<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 2. Make a public `#define H5G_SAME_LOC 0' so
clients can document<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; the fact that the destination
location is the same as the source<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; location (if they don't want
to repeat the location argument).<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 3. Document in the release notes that
compile-time errors involving<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; H5Gmove() and H5Glink() can
be fixed by changing:<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
H5Gmove(L1,SRC,DST)&nbsp;&nbsp; --&gt; H5Gmove(L1,SRC,H5S_SAME_LOC,DST)<o:p></o:p></p>

<X-TAB>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</X-TAB>H5Glink(L1,T,SRC,DST)
--&gt; H5Glink(L1,SRC,H5S_SAME_LOC,DST,T)<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (or by repeating
the L1 argument in place of H5S_SAME_LOC)<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 4. If HDF5 is configured with backward
compatibility then the old<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; function prototypes are kept
and the source and destination<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; locations are presumed to be
the same.&nbsp; The new prototypes will<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; be available as the names
H5Gmove2() and H5Glink2(). This<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; capability will be removed in
the 1.7 development series.<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>4. Opinions<o:p></o:p></p>

<p class=MsoNormal>-----------<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>I prefer to fix H5Gmove() and H5Gunlink() rather than
creating two<o:p></o:p></p>

<p class=MsoNormal>additional functions because:<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 1. These functions are probably not used often
(limited impact)<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 2. The programmer will be notified of the
change by a compile<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; error (difficult to overlook)<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 3. The change is trivial to fix by adding
H5G_SAME_LOC to each call.<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 4. Any new name would be more obscure than the
current names.<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 5. It decreases the amount of code and
documentation to maintain.<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp; 6. The current implementation doesn't follow
the convention that<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; all objects are identified by
a location and name, and thus is<o:p></o:p></p>

<p class=MsoNormal>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;broken&quot; in my
opinion.<o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

</div>

</body>

</html>
