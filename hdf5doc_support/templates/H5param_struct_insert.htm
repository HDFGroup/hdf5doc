
<!--__ ** STRUCT PARAMETER TEMPLATE ******************************  -->
<!--__ ** (H5param_struct_insert.html) ***************************  -->
<!--__ Last modified:  4 August 2009                                -->
<!--__                                                              -->
<!--__ This file provides templates for a struct parameter          -->
<!--__ description, supplementing the PARAMETERS section of         -->
<!--__ H5function_entry.html.                                       -->


<!--__ ** GENERAL INSTRUCTIONS -- Inserting a struct parameter   ** -->
<!--__ ** description into a Reference Manual Entry.             ** -->
<!--__                                                              -->
<!--__ This template provides two sample table rows to describe     -->
<!--__ a struct parameter in the "Parameters:" section of a         -->
<!--__ reference manual entry:                                      -->
<!--__     One for a function that initializes the struct           -->
<!--__         and passes the values in (as in a 'set' function)    -->
<!--__     One for a function that uses the struct to               -->
<!--__         retrieve values (as in a 'get' function)             -->
<!--__ Use one.                                                     -->
<!--__                                                              -->
<!--__ Insert only the lines of HTML code from the <tr> tag, which  -->
<!--__ starts the row, to the next </tr> tag, which ends the row.   -->
<!--__ The lines of HTML before and after those tags set up the     -->
<!--__ table and are already in the function description.           -->
<!--__ Feel free to ask if you need assistance with the table.      -->


  <dt><strong>Parameters:</strong>
    <dd><table>
<!--__ *** STRUCT PARAMETER **************************************  -->
<!--__                                                              -->
<!--__ When the parameter type is an HDF5 struct, include a         -->
<!--__ high-level description of the struct, but provide a link     -->
<!--__ to the struct's HDF5 Reference Manual entry for the full     -->
<!--__ description.                                                 --> 
<!--__                                                              -->
<!--__ (Note to authors: We began documenting HDF5 structs in       -->
<!--__ separate entries in the fall of 2008.  They had previously   -->
<!--__ been documented within function descriptions; since structs  -->
<!--__ are often used in multiple functions, this practice  has     -->
<!--__ proven error prone.)                                         -->
<!--__                                                              -->
<!--__ If any of the struct's fields require special handling       -->
<!--__ (e.g., initialization) or have special meaning in the        -->
<!--__ context of this function, explain that here.                 -->
<!--__                                                              -->
<!--__ In a 'set' function, it is often necessary to specify valid  -->
<!--__ values for several or all fields.                            -->
<!--__                                                              -->
<!--__ In a 'get' function, it is usually sufficent to direct the   -->
<!--__ user to the struct's RM entry, stating that the struct       -->
<!--__ fields are interpreted as described there.                   -->
<!--__                                                              -->
<!--__ If the struct's fields do not all have the same direction    -->
<!--__ (IN/OUT), specify the direction of each field individually.  -->
<!--__ ***********************************************************  -->


<!--__ ***********************************************************  -->
<!--__ This description of the 'config_ptr' parameter from the      -->
<!--__ function H5Pset_jnl_config illustrates a field-by-field      -->
<!--__ description for a 'set' function.                            -->
<!--__ ***********************************************************  -->
      <tr>    
        <td valign="top"><em>H5AC_jnl_config_t&nbsp;*</em><code>config_ptr</code></td>
        <td>&nbsp;</td>
        <td valign="top">IN:  Pointer to the instance of
            <code><em>H5AC_jnl_config_t</em></code> containing the
            desired configuration.
            <p>     
            See <a href="../examples/H5AC_jnl_config_t.html">
            <em>H5AC_jnl_config_t</em></a>
            for the struct definition and a field-by-field description.
            <p>     
            Set struct fields as follows:
            <ul>    
            <li>Initialize <code>version</code> to the value of
                <code>H5AC2__CURR_JNL_CONFIG_VER</code> 
                (defined in <code>H5ACpublic.h</code>).
            <li>Set <code>enable_journaling</code> 
                to <code>TRUE</code> if journaling is to be turned on,
                to <code>FALSE</code> if journaling is being turned off.
            <li>Set <code>journal_file_path</code> to the full path  
                of the file used to store the metadata journal.
                This path is defined only if <code>enable_journaling</code>
                is set to <code>TRUE</code> and can be no longer 
                <code>H5AC2__MAX_JOURNAL_FILE_NAME_LEN</code> characters long.
            <li><code>journal_recovered</code> is a boolean flag
                that indicates, when set to <code>TRUE</code> that the 
                journaled file being opened was not closed correctly and 
                that the journal recovery tool was run on it successfuly.
                Otherwise, the field whould always be <code>FALSE</code>.
                <p>     
                Set this field to <code>TRUE</code> only if you are
                writing a new journal recovery tool; in all other situations,
                it should be set to <code>FALSE</code>.
            <li><code>jbrb_buf_size</code> specifies the size of each
                individual buffer in the journal buffer ring buffer.
                The specified value should be a multiple of the block size 
                used by the file system on which the journal file 
                will be written.
            <li><code>jbrb_num_bufs</code> specifies the number of
                buffers in the journal buffer ring buffer.   
                If synchronous I/O is used, one or two buffers will be
                sufficient.  
                If asynchronous I/O is used, the number of buffers should be
                large enough that a write to a buffer is likely to complete 
                before that buffer is needed again.
            <li>Set <code>jbrb_human_readable</code> to <code>TRUE</code>
                if the journal file should be human readable.
                Otherwise, use <code>FALSE</code> for the more efficient
                machine-readble file.
            </ul>       
        </td></tr>  


<!--__ ***********************************************************  -->
<!--__ This description of the 'config_ptr' parameter from the      -->
<!--__ function H5Pset_jnl_config illustrates the briefer           -->
<!--__ description used in a 'get' function.                        -->
<!--__ ***********************************************************  -->
      <tr>      
        <td valign="top"><em>H5AC_jnl_config_t&nbsp;*</em><code>config_ptr</code>
        </td> 
        <td>&nbsp;</td>
        <td valign="top">IN/OUT:  Pointer to the instance of
            <a href="H5AC_jnl_config_t.html">
            <code><em>H5AC_jnl_config_t</em></code></a>
            in which the journaling configuration is to be returned.
            <p>     
            Initialize the field <code>version</code> to the value of
            <code>H5AC2__CURR_JNL_CONFIG_VER</code>
            (defined in <code>H5ACpublic.h</code>).
            <p>     
            Values returned in other fields are interpreted as described in
            <a href="H5AC_jnl_config_t.html">
            <code><em>H5AC_jnl_config_t</em></code></a>.
        </td></tr>  


    </table>
  <p>


