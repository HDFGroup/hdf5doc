
<br />
<table align="center" width="600" cellpadding="5">
<tr >
<td style="background-color:#DDEEEE">
<hr color="green" size="3"/>
<h1 align="center">RM Function Template</h1>
<h1 align="center">with Comments</h1>
<p align="center"><b>A Template with Comments for 
<i>HDF5 Reference Manual</i> Function Entries</b></p>

<hr color="green" size="3"/></td></tr>
</table>
<br />
<br />
<br />



<table align="center" width="600" cellpadding="5" >
<tr >
<td style="background-color:#DDEEEE">
<hr color="green" size="3"/>

<p><b>Introduction</b></p>

<p>The purpose of this file is to describe the information that should 
be included in an <i>HDF5 Reference Manual</i> (RM) entry. If you 
have questions about writing an RM entry, you can use this file as a 
template. </p>

<p>Different types of functions might be described with this template. 
The types include API function, callback function, and operator function. </p>

<p>In this file, you will find an element such as Name or Signature and a 
short instruction. After each instruction, more information on the element 
will appear in a light blue comment block. Light green comment blocks 
such as this one have general comments that describe how to use this
file.</p>

<p>Start with the directions in the green comment block below.</p>

<hr color="green" size="3"/></td></tr>
</table>
<br />



<table align="center" width="600" cellpadding="5">
<tr >
<td style="background-color:#DDEEEE">
<hr color="green" size="3"/>
<p><b>Directions</b></p>

    <ul>
    <li>Copy this file, and rename the copied file as function_name.htm 
        where function_name is the name of the C function.</li>
    <li>Edit the new file. In each of the sections shown below, 
        replace the instruction sentence with the appropriate information.</li> 
    <li>When you are finished, remove the comment blocks, and then 
        send a copy to the Doc Team for final editing and publishing.</li>
    </ul>
<hr color="green" size="3"/></td></tr>
</table>
<br />



<table align="center" width="600" cellpadding="5" >
<tr >
<td style="background-color:#DDEEEE">
<hr color="green" size="3"/>

<p><b>Contents</b></p>

<p>The elements in the template are:</p>
<ul>
  <li><a href="#Copyright">Copyright</a></li>
  <li><a href="#PdfGeneratorStatements">PDF Generator Statements</a></li>
  <li><a href="#LastModifiedDate">Last Modified Date</a></li>
  <li><a href="#Name">Name</a></li>
  <li><a href="#Signature">Signature</a></li>
  <li><a href="#Purpose">Purpose</a></li>
  <li><a href="#DeprecatedFunction">Deprecated Function</a></li>
  <li><a href="#Motivation">Motivation</a></li>
  <li><a href="#Description">Description</a></li>
  <li><a href="#Parameters">Parameters</a></li>
  <li><a href="#Returns">Returns</a></li>
  <li><a href="#FailureModes">Failure Modes</a></li>
  <li><a href="#ExampleUsage">Example Usage</a></li>
  <li><a href="#FortranInterface">Fortran Interface</a></li>
  <li><a href="#SeeAlso">See Also</a></li>
  <li><a href="#History">History</a></li>
</ul>


<hr color="green" size="3"/></td></tr>
</table>
<br />



<table align="center" width="600" cellpadding="5" >
<tr >
<td style="background-color:#DDEEEE">
<hr color="green" size="3"/>

<p><b>Other Useful Files</b></p>

<p>In order for the links in this file to work, the following files 
should be checked out or downloaded to the same directory as this file. 
These files are associated with this template only. </p>
<ul>
  <li>
    <a href="H5Oset_comment_Example.htm">H5Oset_comment_Example.htm</a>
    </li>
<!--  <li>
    <a href="H5_enum_entry.htm">H5_enum_entry.htm</a>
    (This template is under construction)
    </li> -->
<!--  <li>
    <a href="H5_struct_entry.htm">H5_struct_entry.htm</a>
    (This template is under construction)
    </li> -->
  <li>
    <a href="h5fortran_f_insert.htm">h5fortran_f_insert.htm</a>
    </li>
  <li>
    <a href="H5param_enum_insert.htm">H5param_enum_insert.htm</a>
    </li>
<!--  <li>
    <a href="H5param_long_insert.htm">H5param_long_insert.htm</a>
    (This template is under construction)
    </li> -->
  <li>
    <a href="H5param_struct_insert.htm">H5param_struct_insert.htm</a>
    </li>
  <li>
    <a href="h5tool_entry.htm">h5tool_entry.htm</a>
    </li>
  <li>
    <a href="H5Dopen_Example.htm">H5Dopen_Example.htm</a>
    </li>
  <li>
    <a href="H5L_elink_traverse_t_Example.htm">H5L_elink_traverse_t_Example.htm</a>
    </li>
  <li>
    <a href="H5Literate_Example.htm">H5Literate_Example.htm</a>
    </li>
  <li>
    <a href="H5Pget_elink_cb_Example.htm">H5Pget_elink_cb_Example.htm</a>
    </li>
  <li>
    <a href="H5Pset_elink_cb_Example.htm">H5Pset_elink_cb_Example.htm</a>
    </li>
</ul>



<p>To see the function entry template elements without comments, 
go to the <a href="H5function_entry.htm"> H5function_entry.htm</a> file.</p>

<hr color="green" size="3"/></td></tr>
</table>
<br />



<table align="center" width="600" cellpadding="5" >
<tr >
<td style="background-color:#DDEEEE">
<hr color="green" size="3"/>

<p><b>Variables</b></p>

<p>In some of the descriptions, a variable has been used instead of a 
specific item. These variables are generic phrases and are enclosed with 
angle quotation marks. One of the variables is 
&laquo;specify_the_item&raquo;. Replace the variable with the appropriate 
item. For example, a generic description of a return value might be the 
following:</p>

<blockquote>
Returns a &laquo;specify_the_item&raquo; identifier if successful; 
otherwise returns a negative value.
</blockquote>

For a function that works with datasets, the following return description 
would work:

<blockquote>
Returns a dataset identifier if successful; otherwise returns a negative 
value.
</blockquote>

<hr color="green" size="3"/></td></tr>
</table>
<br />



<table align="center" width="600" cellpadding="5" >
<tr >
<td style="background-color:#DDEEEE">
<hr color="green" size="3"/>

<p><b>RM Files</b></p>

<p>Each RM entry is kept in a separate file. When the 
<i>HDF5 Reference Manual</i> is published, the files are combined. To 
help the combining process, we use a .htm extension on the file names, 
and we do not include the &#60;html&#62; and &#60;body&#62; tags at the 
beginning and end of each file.
</p>

<hr color="green" size="3"/></td></tr>
</table>
<br />



<table align="center" width="600" cellpadding="5" >
<tr >
<td style="background-color:#DDEEEE">
<hr color="green" size="3"/>

<p><b>Word vs. HTML</b></p>

<p>We would rather you used HTML. If you are not comfortable using 
HTML, use Word.</p>

<hr color="green" size="3"/></td></tr>
</table>
<br />



<table align="center" width="600" cellpadding="5" >
<tr >
<td style="background-color:#DDEEEE">
<hr color="green" size="3"/>

<p><b>Editing with HTML</b></p>

<p>This file can be edited with any HTML editor. Oxygen is a good one, 
and there is an HTML editor in Visual Studio. If you are familiar with 
HTML, you could use a plain text editor.</p>

<p>If possible, keep the length of each line to less than 80 characters.
</p>

<p>To add a comment to an HTML file, you could use the orange 
comment block shown below. Copy the block to a space near the text 
you want to comment about, replace the optional 
&laquo;HTML_comment_block_title&raquo; variable with your title, and 
replace the 
&laquo;Insert_comments_here&raquo; variable with your comments. The 
orange comment block is kept in a table. When you copy the block, 
include the beginning and ending table tags.</p>

<hr color="green" size="3"/></td></tr>
</table>
<br />



<table align="center" width="600" cellpadding="5" >
<tr >
<td style="background-color:#FFCC80">
<hr color="green" size="3"/>

<p><b>&laquo;HTML_comment_block_title&raquo;</b></p>

<p>&laquo;Insert_comments_here&raquo;</p>



<hr color="green" size="3"/></td></tr>
</table>
<br />







<table align="center" width="600" cellpadding="5">
<tr >
<td style="background-color:#DDEEEE">
<hr color="green" size="3"/>
<p><b>For More Information</b></p>

<p>If you have questions about the information you should include 
in each section in this template, talk with the Doc Team.</p>

<p>This template and related files can be found in SVN in the doc
repository at 
<a href="https://svn.hdfgroup.uiuc.edu/hdf5doc/trunk/hdf5doc_support/templates">
https://svn.hdfgroup.uiuc.edu/hdf5doc/trunk/hdf5doc_support/templates</a>.</p>

<p>In Confluence, more information for writing documentation can be 
found on the 
<a href="https://confluence.hdfgroup.uiuc.edu/display/TECHDOC/Dev+Doc+Start">
Dev Doc Start</a> page.</p>

<p>The latest version of the <i>HDF5 Reference Manual</i> is at 
<a href="http://www.hdfgroup.org/HDF5/doc/RM/RM_H5Front.html">
http://www.hdfgroup.org/HDF5/doc/RM/RM_H5Front.html</a>.</p>



<hr color="green" size="3"/></td></tr>
</table>
<br />
<br />
<br />





<table align="center" width="600" cellpadding="5" >
<tr >
<td style="background-color:#CADFFF">
<hr color="orange" size="3"/>
<p><b><a name="Copyright">Copyright</a></b></p>

<p>At the beginning of each file that holds an RM entry is a 
commented out copyright statement. To see the copyright statement in 
this file, view the file with an editor or view the page source 
from a browser. The statement included in this template is 
appropriate for HDF5 software. </p>


<hr color="orange" size="3"/></td></tr>
</table>
<br />



<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://www.hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have      *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->



<table align="center" width="600" cellpadding="5" >
<tr >
<td style="background-color:#CADFFF">
<hr color="orange" size="3"/>
<p><b><a name="PdfGeneratorStatements">PDF Generator Statements</a></b></p>

<p>After the copyright statement are a few more commented out sentences. 
These sentences are used by the program we use to generate PDF files. </p>
<ul>
    <li>The &ldquo;NEW PAGE&rdquo; line should be left as it is. </li>
    <li>Change the &ldquo;HEADER RIGHT&rdquo; line: replace the 
        &laquo;H5function_name&raquo; variable with the name of the 
        function being described in this entry.</li>
</ul>

<hr color="orange" size="3"/></td></tr>
</table>
<br />
<br />
<br />



<!--__ ***********************************************************  -->
<!--__ Do not alter the next line; it is used by the PDF generator. -->
<!--__ ***********************************************************  -->
<!-- NEW PAGE -->


<!--__ *** HEADER RIGHT ******************************************  -->
<!--__ Update H5function_name; leave remainder of line unchanged    -->
<!--__ as it is also used by the PDF generator.                     -->
<!--__ ***********************************************************  -->
<!-- HEADER RIGHT "H5function_name" -->

<hr>
<dl>

<dt><div align=right><font color=999999 size=-1><i>
      <a name="LastModifiedDate">
      Last modified: &laquo;day_month_year&raquo;
      </a></i></font></div></dt>
      <dd>Insert the date on which the latest changes were made.</dd>
      <br />

    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Last Modified Date</b></p>
    
    <p>The horizontal gray line above the Last Modified Date appears 
    at the top of each RM entry.</p>
    
    <p>At the top right of each entry under the gray line, we record the date 
    on which the entry was last changed.</p> 
    <p>Replace &laquo;day_month_year&raquo; with today&rsquo;s date. </p>
    <p>The following is an example.</p>
    <blockquote>12 October 2012</blockquote>
    
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    <br />
    <br />



<dt><strong><a name="Name">Name:</a></strong> 
    <a name="API-FunctionName">&laquo;H5function_name&raquo;</a></dt>
    <dd>Replace &laquo;H5function_name&raquo; with the name of the C 
    function.</dd>
    <br />

    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Name</b></p>
    
    <p>In the Name section, we specify the name of the function.</p> 
    <p>Replace &laquo;H5function_name&raquo; with the name of the 
    function.</p>
    <p>Two examples are 
    <a href="H5Dopen_Example.htm"><code>H5Dopen</code></a> and 
    <a href="H5Literate_Example.htm"><code>H5Literate</code></a>.</p>
    <p>The name of the function is also used as the name of the file 
    that holds the entry. For the <code>H5Literate</code> RM entry, 
    the file is named H5Literate.htm.</p>
    
    <p>The &laquo;H5function_name&raquo; variable is enclosed in an HTML 
    anchor tag. This tag will be the target of links from other HDF5 
    documents. Change the value of the name attribute to the name of the 
    C function. If the C function name is H5Fcreate for example, then 
    change the value of the name attribute from API-FunctionName to 
    API-H5Fcreate.</p>
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    <br />
    <br />



<dt><strong><a name="Signature">Signature:</a></strong></dt>
    <dd>Insert the C function signature here.</dd>
    <br />

    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Signature</b></p>
    
    <p>In the Signature section, we show the C function signature. </p>
    <p>The following is a generic function signature:</p>
    <blockquote>
    <em>return_type </em><code>H5function_name</code>(
            <em>first_param_type </em><code>first_parameter</code>,
            <em>second_param_type </em><code>second_parameter</code>,
            <em>last_param_type </em><code>last_param</code>
        )
    </blockquote>
    <p>See the &ldquo;Signature&rdquo; section in the 
    <a href="H5Oset_comment_Example.htm"><code>H5Oset_comment</code></a> 
    sample entry for an example.</p>
    
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    <br />
    <br />



  
  <dt><strong><a name="Purpose">Purpose:</a></strong></dt>
    <dd>Describe in this section what the function accomplishes in a 
    one-line statement that begins with a verb.</dd>
    <br />



    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Purpose</b></p>
    
    <p>In the Purpose section, we state what the function accomplishes
    when it is used. </p>
    
    <p>Like a dictionary definition, we are looking for a clear and 
    concise statement.</p>
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    
    
    
    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Writing a Purpose Statement</b></p>
    
    <p>The following are some qualities of a good purpose statement.</p>
    
    
    <ul>
    <li><p>Start with a verb. We write the purpose statement as a 
    sentence that starts with a verb. A more complete sentence might 
    start with a subject, but for purpose statements, the subject would 
    always be &ldquo;This function....&rdquo; Instead of 
    &ldquo;This function gets/retrieves/sets/writes ....&rdquo;, 
    we cut out the subject and are left with 
    &ldquo;Gets/Retrieves/Sets/Writes ....&rdquo;</p>
    
    <p>Preferred verbs include the following: 
    <ul>
        <li>Retrieves (the value is returned in a parameter)</li>
        <li>Returns (the value is the function&rsquo;s return value)</li>
        <li>Determines (the library does not just look up a value, 
        it has to figure it out)</li>
        <li>Creates</li>
        <li>Opens</li>
        <li>Closes</li>
        <li>Removes</li>
    </ul></p></li>
    
    <li><p>Add useful details while keeping the statement short. In 
    many cases, a bit of elaboration at the end of the sentence 
    will help. For example, the first line in each pair 
    below is more informative than the second. </p>
    <ol>
        <li>Creates an attribute attached to a specified object.</li>
        <li>Creates an attribute.</li>
    </ol>
    <br />
    <ol>
        <li>Creates a dataset at a specified location.</li>
        <li>Creates a dataset.</li>
    </ol>
    </li></ul>

    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    
    
    
    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Example Purpose Statements</b></p>
    
    <p>Some generic purpose statements are listed below. Feel free 
    to use one of these as a starting point for your function&rsquo;s
    purpose statement.</p>
    <ul>
        <li>&laquo;Opens_or_creates&raquo; a 
            &laquo;specify_the_object&raquo;.</li>
        <li>&laquo;Closes_or_deletes&raquo; the specified 
            &laquo;specify_the_object&raquo;.</li>
        <li>Sets the &laquo;specify_the_attribute&raquo; of a 
            &laquo;specify_the_object&raquo;.</li>
        <li>Sets the &laquo;specify_the_property&raquo; in a 
            &laquo;specify_the_property_list_class&raquo; property 
            list.</li>
        <li>Retrieves the &laquo;specify_the_property_type&raquo; 
            settings.</li>
        <li>Retrieves the &laquo;specify_the_property_list_or_type&raquo; 
            settings from the specified &laquo;specify_the_class&raquo; 
            property list.</li>
        <li>Returns the size of the specified 
            &laquo;specify_the_object&raquo;.</li>
        <li>&laquo;Opens_or_creates&raquo; a 
            &laquo;specify_the_type_of_object&raquo; and returns a 
            &laquo;specify_the_type_of_object&raquo; identifier for 
            further access.</li>
    </ul>
    
    <p>The table below shows some specific examples.</p>
    
    <table align="center" width="90%" border="1" cellpadding="5">
    <tr>
    <td valign="top"><b>Function</b>
    </td>
    <td valign="top"><b>Purpose Statement</b>
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Fget_name</code>
    </td>
    <td valign="top">Retrieves the name of the file to which the 
    specified object belongs.
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Fclear_elink_file_cache</code>
    </td>
    <td valign="top">Clears the external link open file cache. 
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Sget_select_hyper_blocklist</code>
    </td>
    <td valign="top">Gets the list of hyperslab blocks currently selected.
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Sclose</code>
    </td>
    <td valign="top">Releases and terminates access to a dataspace.
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Dfill</code>
    </td>
    <td valign="top">Fills dataspace elements with a fill value in a 
    memory buffer. 
    </td>
    </tr>
    </table>
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    <br />
    <br />



  
  <dt><strong><a name="DeprecatedFunction">Deprecated Function:</a></strong></dt>
    <dd>If this function has been deprecated, identify the replacement 
    function here.</dd>
    <br />

    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <b>Deprecated Function </b>
    
    <p>If a function has been deprecated, include this section; otherwise, 
    do not use this section. </p>
    
    <p>In most situations, the Doc Team will the ones to add 
    this section to an RM entry. Usually, a function is created and put 
    into production. After some period of time, we realize the function 
    needs some other capability. Sometimes, it is better to create a new 
    function rather than trying to upgrade an existing function. 
    The existing function will then be labeled as deprecated, and users will 
    be encouraged to use the replacement function instead. </p>
    
    <p>In some RM entries, the comments about deprecated functions 
    appear under the title &ldquo;Notice:&rdquo; rather than 
    &ldquo;Deprecated Function:.&rdquo; See <code>H5Dopen1</code> 
    or <code>H5Dcreate1</code>.</p>
    
    
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />



    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Writing a Deprecated Function Statement</b></p>
    
    <p>The only point this section needs to make is to identify the 
    function that was built to replace this function. The following sentence 
    will work well if you insert the name of the replacement function 
    into the sentence:</p>
    
    <blockquote>This function is deprecated in favor of the function 
    &laquo;<code>replacement_function</code>&raquo;.</blockquote>
        
    <p>The following is an example.</p>
    
    <blockquote>This function is deprecated in favor of the function 
    <code>H5Lmove</code></a>.  
    </blockquote>
    
    <p>The <code>H5Acreate1</code>, <code>H5Aopen_idx</code>, and 
    <code>H5Oset_comment_by_name</code> entries are other examples.</p>
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    <br />
    <br />




  <dt><strong><a name="Motivation">Motivation:</a></strong></dt>
    <dd>Tell the reader in this section why they might want to use this 
    function.</dd>
    
    <br />

    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Motivation</b></p>
    
    <p>A Motivation section can help a user understand better why the 
    function might be used, can help a user understand the types of 
    problems the function addresses, or can help a user choose to use 
    one function instead of another. This is the section where the use 
    cases can be described.</p>

    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    
    
    
    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Writing a Motivation Statement</b></p>
    
    <p>The following is a general way of writing a function&rsquo;s 
    motivation.</p>
    
    <blockquote>
    &laquo;<code>H5function_name</code>&raquo; is used in these 
    circumstances to achieve these things and/or to address these 
    problems. 
    </blockquote>
    
    <p>Keep the motivation statement concise and high-level, but use 
    multiple paragraphs if needed.</p>
    
    <p>See the examples below.</p>
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />



    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Example Motivations</b></p>
    
    <p>The table below shows some specific examples.</p>
    
    <table align="center" width="90%" border="1" cellpadding="5">
    <tr>
    <td valign="top"><b>Function</b>
    </td>
    <td valign="top"><b>Motivation Statement</b>
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5_VERSION_GE</code>
    </td>
    <td valign="top">The <code>H5_VERSION_GE</code> and 
    <code>H5_VERSION_LE</code> macros are used at compile time to 
    conditionally include or exclude code based on the version of 
    the HDF5 library against which an application will be linked.
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Fget_file_image</code>
    </td>
    <td valign="top"><code>H5Fget_file_image</code> and other elements 
    of HDF5 are used to load an image of an HDF5 file into system memory 
    and open that image as a regular HDF5 file. An application can then 
    use the file without the overhead of disk I/O. 
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Fset_mpi_atomicity</code>
    </td>
    <td valign="top"><code>H5Fset_mpi_atomicity</code> is applicable 
    only in parallel environments using MPI I/O. The function is one 
    of the tools used to ensure sequential consistency. This means that 
    a set of operations will behave as though they were performed in a 
    serial order consistent with the program order. 
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5L_elink_traverse_t</code>
    </td>
    <td valign="top"><code>H5L_elink_traverse_t</code> defines the 
    prototype for a user-defined callback function to be called when 
    traversing an external link. This callback will be executed by 
    the HDF5 Library immediately before opening the target file and 
    provides a mechanism to set specific access permissions, modify 
    the file access property list, modify the parent or target file, 
    or take any other user-defined action. This callback function is 
    used in situations where the HDF5 Library's default behavior is 
    not suitable. 
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Oexists_by_name</code>
    </td>
    <td valign="top"><code>H5Oexists_by_name</code> is used by an 
    application to check that an existing link resolves to an object. 
    Primarily, it is designed to check for dangling soft, external, or 
    user-defined links. 
    </td>
    </tr>
    </table>
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    
    
    
    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Comparing Purpose and Motivation</b></p>
    
    <p>The aim of a purpose statement is to describe what a function 
    will acomplish when it is used. The aim of a motivation statement 
    is to describe why a function might be used. A purpose statement 
    should be short. A motivation statement will usually be longer than 
    a purpose statement. To illustrate the differences, the purpose and 
    motivation statements for several functions are shown below.</p>
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    
    
    
    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>H5Pset_chunk_cache</b></p>
    
    <p>The purpose and motivation statements for the 
    <code>H5Pset_chunk_cache</code> function are shown below:</p>
    
    <blockquote>
    <p><b>Purpose:</b></p>
    <p>Sets the raw data chunk cache parameters.</p>
    
    <p><b>Motivation:</b></p>
    <p><code>H5Pset_chunk_cache</code> is used to adjust the chunk cache 
    parameters on a per-dataset basis, as opposed to a global setting 
    for the file. The optimum chunk cache parameters vary wildly with 
    different data layout and access patterns, so for optimal performance 
    they must be set individually for each dataset. It may also be 
    beneficial to reduce the size of the chunk cache for datasets whose 
    performance is not important in order to save memory space. </p>
    
    </blockquote>
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    
    
    
    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>H5Tcommit2</b></p>
    
    <p>The purpose and motivation statements for the 
    <code>H5Tcommit2</code> function are shown below:</p>
    
    <blockquote>
    <p><b>Purpose:</b></p>
    <p>Commits a transient datatype, linking it into the file and 
    creating a new committed datatype.</p>
    
    <p><b>Motivation:</b></p>
    <p>Committed datatypes can be used to save space in a file where 
    many datasets or attributes use the same datatype or to avoid 
    defining a complex compound datatype more than once. Committed 
    datatypes can also be used to ensure that multiple instances of 
    the same datatype are truly identical. </p>
    </blockquote>
    
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    
    
    
    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>H5Padd_merge_committed_dtype_path</b></p>
    
    <p>The purpose and motivation statements for the 
    <code>H5Padd_merge_committed_dtype_path</code> function are 
    shown below:</p>
    
    <blockquote>
    <p><b>Purpose:</b></p>
    <p>Adds a path to the list of paths that will be searched in the 
    destination file for a matching committed datatype.</p>
    
    <p><b>Motivation:</b></p>
    <p><code>H5Padd_merge_committed_dtype_path</code> provides a means 
    to override the default behavior of <code>H5Ocopy</code> when 
    <code>H5O_COPY_MERGE_COMMITTED_DTYPE_FLAG</code> is set in an object 
    copy property list.</p>
    
    <p><code>H5Padd_merge_committed_dtype_path</code> is the mechanism 
    for suggesting search paths where <code>H5Ocopy</code> will look for 
    a matching committed datatype. This can be substantially faster than 
    the default approach of searching the entire destination file for a 
    match.</p>
    </blockquote>
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    
    
    
    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>H5Pget_mpio_actual_chunk_opt_mode</b></p>
    
    <p>The purpose and motivation statements for the 
    <code>H5Pget_mpio_actual_chunk_opt_mode</code> function are 
    shown below:</p>
    
    <blockquote>
    <p><b>Purpose:</b></p>
    <p>Retrieves the type of chunk optimization that HDF5 actually performed 
    on the last parallel I/O call. This is not necessarily the type of 
    optimization requested.</p>
    
    <p><b>Motivation:</b></p>
    <p>A user can request collective I/O via a data transfer property 
    list (DXPL) that has been suitably modified with 
    <code>H5Pset_dxpl_mpio</code>. The operation can be optimized in 
    several different ways, some of which also can be requested by the 
    user. However, HDF5 may not be able to satisfy requests for specific 
    optimizations and may choose a different optimization scheme. This 
    property allows the user to track which optimization was actually 
    used. Used in conjunction with <code>H5Pget_mpio_actual_io_mode</code>, 
    this property allows the user to determine exactly what HDF5 did 
    when attempting collective chunked I/O.</p>
    </blockquote>
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    <br />
    <br />



  <dt><strong><a name="Description">Description:</a></strong></dt>
    <dd>In this section, provide a more detailed description of the 
    function and instructions for its use.
    </dd>
    <br />
    
    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Description</b></p>
    
    <p>In the Description section, we explain in more detail how the 
    function works and how to use the function. The function&rsquo;s 
    parameters can be briefly mentioned.</p>
    
    <p>In general, parameters should be discussed in the 
    &ldquo;Parameters:&rdquo; section below. &ldquo;Parameters:&rdquo; 
    will include their complete descriptions and possible values. 
    Important groupings of or relationships among parameters and 
    interactions among parameters can be discussed either here or in 
    &ldquo;Parameters:&rdquo;; the determining factor is ease of user 
    understanding.</p>
    
    <p>Things that may not be obvious but that are important for 
    correct use of the function should be discussed here. 
    These include observations, caveats, special instructions, and 
    warnings. The reader should never have to look at the 
    source code or tests to figure these things out.</p>
    
    
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />



    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Writing a Description</b></p>
    
    <p>Start the text in the Description section in the following 
    pattern:</p>
    
    <p>&laquo;function_name&raquo; &laquo;verb&raquo; &laquo;what is 
    retrieved, set, or specified&raquo;</p>
    
    <p>where
    
    <p>&laquo;function_name&raquo; is the name of the function, </p>
    
    <p>&laquo;verb&raquo; is the action the function does,</p>
    
    <blockquote>
    Commonly used verbs include retrieves, gets, sets, specifies, 
    searches, inserts, opens, removes, deletes, terminates, 
    returns, detaches, attaches, initializes, creates, checks, packs, 
    unpacks, determines, reads, moves, defines, writes, computes, and 
    calculates.
    </blockquote>
    
    <p>and &laquo;what is retrieved, set, or specified&raquo; is 
    the rest of the first sentence and describes what is retrieved, set, 
    or specified.</p> 
    
    <p>The other sentences and paragraphs in the section will expand 
    upon this first sentence.</p>
    
    <p>See the examples below.</p>

    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />



    
    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Description Examples</b></p>
    
    <p>Some sample descriptions are included below. The function 
    name is followed by its description.</p>
    
    <table align="center" width="90%" border="1" cellpadding="5">
    <tr>
    <td valign="top"><b>Function</b>
    </td>
    <td valign="top"><b>Description</b>
    </td>
    </tr>
    
<!--    <tr>
    <td valign="top"><code>H5Fget_obj_ids</code>
    </td>
    <td valign="top">
    <p>Given the file identifier <code>file_id</code> and the type of 
    objects to be identified, <code>types</code>, 
    <code>H5Fget_obj_ids</code> returns the list of identifiers for all 
    open HDF5 objects fitting the specified criteria. </p>
    
    <p>To retrieve identifiers for open objects in all HDF5 application 
    files that are currently open, pass the value 
    <code>H5F_OBJ_ALL</code> in <code>file_id</code>.</p>
    
    <p>The types of object identifiers to be retrieved are specified in 
    <code>types</code> using the codes listed for the same parameter 
    in <code>H5Fget_obj_count</code>.</p>
    
    <p>To retrieve identifiers for all open objects, pass a negative value 
    for <code>max_objs</code>.</p>
    
    <p>To retrieve a count of open objects, use the 
    <code>H5Fget_obj_count</code> function. This count can be used to 
    set the <code>max_objs</code> parameter.</p>
    </td>
    </tr>
-->    
    <tr>
    <td valign="top"><code>H5Fflush</code>
    </td>
    <td valign="top">
        <p><code>H5Fflush</code> causes all buffers associated with a
        file to be immediately flushed to disk without removing the
        data from the cache.</p>
        
        <p><code>object_id</code> can be any object associated with the file, 
        including the file itself, a dataset, a group, an attribute, or 
        a committed datatype.</p>
        
        <p><code>scope</code> specifies whether the scope of the flushing 
        action is global or local. Valid values are as follows:</p>
        <table border=0>
            <tr><td><code>&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
                <td align=left valign=top><code>H5F_SCOPE_GLOBAL</code></td>
                <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
                <td align=left valign=top>Flushes the entire virtual 
                file.</td></tr>
            <tr><td>&nbsp;</td>
                <td align=left valign=top><code>H5F_SCOPE_LOCAL</code></td>
                <td>&nbsp;</td>
                <td align=left valign=top>Flushes only the specified 
                file.</td></tr>
        </table>
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Lget_val</code>
    </td>
    <td valign="top">
        <p><code>H5Lget_val</code> returns the link value of the link 
        <code>link_name</code>. </p>
        <p>The parameter <code>link_loc_id</code> is a file or group 
        identifier.</p>
        
        <p><code>link_name</code> identifies a symbolic link and is 
        defined relative to <code>link_loc_id</code>. Symbolic links 
        include soft and external links and some user-defined links. 
        This function is not for use with hard links.</p>
        
        <p>The link value is returned in the buffer 
        <code>linkval_buff</code>. For soft links, this is the path to 
        which the link points, including the null terminator; for 
        external and user-defined links, it is the link buffer. </p>
        
        <p><code>size</code> is the size of <code>linkval_buff</code> 
        and should be the size of the link value being returned. 
        This size value can be determined through a call to 
        <code>H5Lget_info</code>; it is returned in the
        <code>val_size</code> field of the <code>H5L_info_t</code> 
        struct.</p>
        
        <p>If <code>size</code> is smaller than the size of the returned 
        value, then the string stored in <code>linkval_buff</code> 
        will be truncated to <code>size</code> bytes. For soft links, 
        this means that the value will not be null terminated. </p>
        
        <p> In the case of external links, the target file and object 
        names are extracted from <code>linkval_buff</code> by calling 
        <code>H5Lunpack_elink_val</code>.</p>
        
        <p>The link class of <code>link_name</code> can be determined 
        with a call to <code>H5Lget_info</code>.</p>
        
        <p><code>lapl_id</code> specifies the link access property list 
        associated with the link <code>link_name</code>. In the general 
        case, when default link access properties are acceptable, this 
        can be passed in as <code>H5P_DEFAULT</code>. An example of a 
        situation that requires a non-default link access property list 
        is when the link is an external link; an external link may 
        require that a link prefix be set in a link access property list
        (see <code>H5Pset_elink_prefix</code>).</p>
        
        <p>This function should be used only after 
        <code>H5Lget_info</code> has been called to verify that 
        <code>link_name</code> is a symbolic link. This can be deteremined 
        from the <code>link_type</code> field of the 
        <code>H5L_info_t</code> struct.
    </td>
    </tr>
    </table>
    
    
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    
    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Callback Function Descriptions</b></p>
    
    <p>If one of the function parameters is a callback or operator 
    function, include a statement similar to the following at the 
    appropriate spot in the description.</p>
    
    <blockquote>
    The callback function [or operator function] must conform 
    to the prototype specified in 
    <a href="H5L/H5L_elink_traverse_t.htm">
    <code>H5L_elink_traverse_t</code></a>.
    </blockquote>
    
    <p>Use the same link on the parameter type in the "Parameters:"
    section below.</p>
    
    <p>Similarly, add a link such as the following to point from the 
    callback or operator function description to all functions that use 
    this function as a parameter type. If the callback/operator function 
    might be called by multiple HDF5 functions, include a link to each 
    such function.</p>
    
    <blockquote>
    <p>This callback function [or operator function] is used as a parameter 
    type in the following HDF5 functions:</p>
    <ul>
        <li><a href="../RM_H5P.html#Property-SetELinkCb">
            <code>H5Pset_elink_cb</code></a>
        <li><a href="../RM_H5P.html#Property-GetELinkCb">
            <code>H5Pget_elink_cb</code></a>
    </ul>
    </blockquote>
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    
    
    
    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Notes and Warnings</b></p>
    
    <p>If there is a risk of data corruption, silent failure, or 
    unintended consequences that might go unnoticed, consider adding a 
    <b>Note:</b> or <b>Warning:</b> lead-in to a paragraph.  In general, 
    such notes should come at the end of the 
    &ldquo;Description:&rdquo; section.</p>
    
    <p>In the examples below, the function name is followed by its 
    warning.</p>
    
    <ul>
        <li><code>H5Oopen_by_addr</code>: This function is dangerous if 
        called on an invalid address. The risk can be safely overcome 
        by retrieving the object address with 
        <code>H5Gget_objinfo</code> or <code>H5Lget_linkinfo</code> 
        immediately before calling <code>H5Oopen_by_addr</code>. The 
        immediacy of the operation can be important; if time has elapsed 
        and the object has been deleted from the file, the address will 
        be invalid and file corruption can result. </li>
        <li><code>H5Ldelete</code>: Exercise caution in the use of 
        <code>H5Ldelete</code>; if the link being removed is on the only 
        path leading to an HDF5 object, that object may become 
        permanently inaccessible in the file. </li>
    </ul>
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    <br />
    <br />



  <dt><strong><a name="Parameters">Parameters:</a></strong></dt>
    <dd>List and define in this section the parameters used by the 
    function.</dd>
    <br />



    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Parameters</b></p>
    
    <p>In the Parameters section, we list and define the parameters. </p>
    
    <p>To adequately describe a parameter, include the following:</p>
    <ul>
        <li>a type</li>
        <li>a name</li> 
        <li>a direction</li>
        <li>a general description</li>
    </ul>
    
    <p>A parameter&rsquo;s &ldquo;direction&rdquo; might be IN, 
    OUT, or IN/OUT. IN indicates the parameter is input to the function. 
    OUT indicates the parameter is set by the function. IN/OUT indicates 
    the parameter is input to the function and is also set by the 
    function. </p>
    
    <p>Additional information is often provided regarding the specific 
    values a parameter may assume and the meanings of those values. </p>
    
    <p>If the parameter type is a struct or ENUM type or if the 
    description is more involved than usual, see the one of the 
    accompanying template files: </p>
    <ul>
        <li>For a struct, see 
        <a href="H5param_struct_insert.htm">H5param_struct_insert.htm</a> 
        </li>
        <li>For an ENUM, see 
        <a href="H5param_enum_insert.htm">H5param_enum_insert.htm</a></li>
        <li>For a long description, see 
        <a href="H5param_long_insert.htm">H5param_long_insert.htm</a></li>
    </ul>
    <p>In some cases, it will be appropriate to list valid values.</p>
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    
    
    
    
    
    
    
    
    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>General Format for a Parameter Listing</b></p>
    <p>The parameters below show the general format for listing and 
    defining the parameters.</p>
    
    <table>
      <tr valign="top">
        <td><em>first_param_type </em><code>first_param</code>
            </td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
        <td>IN: First parameter description
            </td></tr>
      <tr valign="top">
        <td><em>second_param_type&nbsp;*</em><code>second_param</code>
            </td><td>&nbsp;</td>
        <td>OUT: Second parameter description
            <br />
            Some parameters may require multiple paragraphs while others 
            can be described in a single line.
            </td></tr>
      <tr valign="top">
        <td><em>last_param_type *</em><code>last_param</code>
            </td><td>&nbsp;</td>
        <td>IN/OUT: Last parameter description
            <br />
            Use the following when it is appropriate to list a 
            parameter&rsquo;s values: 
            <br />
            Valid values include:
            <table>
                <tr valign=top align=left>
                    <td width=20>&nbsp;</td>
                    <td>
                        <code>VALUE_1</code>
                        </td>
                    <td width=10>&nbsp;</td>
                    <td>
                        Short description
                        <br>
                        <i>(Default)</i>  
                        </td></tr>
                <tr valign=top align=left>
                    <td>&nbsp;</td>
                    <td>
                        <code>VALUE_2</code>
                        </td>
                    <td>&nbsp;</td>
                    <td>
                        Short description
                        <br>
                        Requires <code>VALUE_x</code>.
                        </td></tr>
            </table>
            </td></tr>
    </table>
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    
    
    
    
    
    
    
    
    
    
    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Examples of Parameter Listings</b></p>
    
    
    <p>The parameters listed below can be found in the 
    <code>H5Fget_file_image</code> RM entry:</p>
    
    <table>
      <tr valign="top">
        <td width="20%"><em>hid_t </em><code>file_id</code>
            </td>
        <td width="5%">&nbsp;</td>
        <td width="75%">IN: Target file identifier
            </td></tr>
      <tr valign="top">
        <td><em>void&nbsp;*</em><code>buf_ptr</code>
            </td>
        <td>&nbsp;</td>
        <td>IN: Pointer to the buffer into which the image of the HDF5 file 
                is to be copied
                <p>
                If <code>buf_ptr</code> is <code>NULL</code>, 
                no data will be copied but the function&rsquo;s 
                return value will still indicate the buffer size required
                (or a negative value on error).
            </td></tr>
      <tr valign="top">
        <td><em>size_t *</em><code>buf_len</code>
            </td>
        <td>&nbsp;</td>
        <td>IN: Size of the supplied buffer
            </td></tr>
    </table>
    
    <br />
    
    <p>The parameter below can be found in the <code>H5Dget_type</code>
    RM entry:</p>
    
    <table>
      <tr valign="top">
        <td width="25%">
        <em>hid_t</em> <code>dataset_id</code>
        </td>
        <td width="5%">&nbsp;</td>
        <td width="70%">
        IN: Identifier of the dataset to query.
        </td></tr>
    </table>
    <br />
    
    
    <p>The parameters listed below can be found in the 
    <code>H5Gopen2</code> RM entry:</p>
    
    <table>
      <tr>
        <td valign="top"><em>hid_t </em><code>loc_id</code>
        </td>
        <td valign="top">IN: File or group identifier specifying the
            location of the group to be opened
        </td></tr>
      <tr>
        <td valign="top"><em>const&nbsp;char&nbsp;*</em><code>name&nbsp;&nbsp;&nbsp;&nbsp;</code>
        </td>
        <td valign="top">IN: Name of the group to open
        </td></tr>
      <tr>
        <td valign="top"><em>hid_t</em> <code>gapl_id</code>
        </td>
        <td valign="top">IN: Group access property list identifier
            <br>
            (No group access properties have been implemented at this time;
            use <code>H5P_DEFAULT</code>.)
        </td></tr>
    </table>    
    
    
    
    
    
    
    
    
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    <br />
    <br />



  <dt><strong><a name="Returns">Returns:</a></strong></dt>

    <dd>Specify in this section what the function returns.</dd>
    <br />



    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Returns</b></p>
    
    <p>In the Returns section, we describe what the function returns.
    </p>
    
    <p>A common description of what a function returns is: </p>
    
    <blockquote>
    <p>Returns a non-negative value if successful;
    otherwise returns a negative value.</p>
    </blockquote>
    
    <p>The following are some other examples:</p>
    
    <blockquote>
    <p>Returns a non-negative value corresponding to &laquo;XXX&raquo; 
    if successful; otherwise returns a negative value.</p>
            
    <p>Returns the size in bytes of the &laquo;specify_the_item&raquo; 
    if successful; otherwise returns a negative value.</p>
                 
    <p>Returns an identifier if successful; 
    otherwise returns a negative value.</p>

    <p>Returns <code>TRUE</code> if &laquo;specify_the_item&raquo; 
    is valid and <code>FALSE</code> if not; otherwise returns a negative 
    value.</p>
    </blockquote> 
    
    <p>See the <a href="H5Oset_comment_Example.htm">
    <code>H5Oset_comment</code></a> entry for a specific example.</p>

    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    <br />
    <br />



  <dt><strong><a name="FailureModes">Failure Modes:</a></strong></dt>
    <dd>Describe in this section how the function might fail.</dd>
    <br />



    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Failure Modes</b></p>
    
    <p>In the Failure Modes section, we describe ways the function 
    might fail. Include possible failure modes, causes, and 
    ramifications. Pay particular attention to non-intuitive failures, 
    unusual failure modes, and failures caused by the interaction 
    of two or more functions.</p> 
    
    <p>The table below shows some examples.</p>
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    
    
    
    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Examples of Failure Mode Statements</b></p>
    
    <table align="center" width="90%" border="1" cellpadding="5">
    <tr>
    <td valign="top"><b>Function</b>
    </td>
    <td valign="top"><b>Example Failure Mode Statements</b>
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Pset_file_space</code>
    </td>
    <td valign="top">This routine will fail when any of the following is true:
            <ul>
            <li><code>strategy</code> is not one of the valid values listed above.</li>
            <li>The library fails to retrieve the file creation property list 
              <code>fcpl_id</code>.</li>
            <li>The library fails to set the strategy and/or threshold in the 
              file creation property list <code>fcpl_id</code>. </li>
            </ul>
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Pset_file_image_callbacks</code>
    </td>
    <td valign="top">Due to interactions between this function and 
    <code>H5Pset_file_image</code> and <code>H5Pget_file_image</code>, 
    <code>H5Pset_file_image_callbacks</code> will fail if a file 
    image has already been set in the target file access property list, 
    <code>fapl_id</code>. 
    
    </td>
    </tr>
    
<!--    <tr>
    <td valign="top"><code>H5Pget_file_space</code>
    </td>
    <td valign="top">This routine will fail when either of the following is 
    true:
        <ul>
        <li>The library fails to retrieve the file creation property list 
        <code>fcpl_id</code>.</li>
        <li>The library fails to retrieve the strategy and/or threshold in 
        the file creation property list <code>fcpl_id</code>.</li>
        </ul>
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Fget_file_image</code>
    </td>
    <td valign="top"><code>H5Pget_file_image</code> will fail, returning a 
    negative value, if the file is too large for the supplied buffer. 
    </td>
    </tr>
-->    
    <tr>
    <td valign="top"><code>H5Oexists_by_name</code>
    </td>
    <td valign="top">If the link specified by the <code>loc_id</code> 
    and <code>name</code> does not exist, an error will be returned. 
    If the link exists but does not resolve to an object for any 
    reason, this routine will return <code>FALSE</code> rather than 
    <code>FAIL</code>. 
    </td>
    </tr>
<!--    
    <tr>
    <td valign="top"><code>H5Pset_mcdt_search_cb.htm</code>
    </td>
    <td valign="top"><code>H5Pset_mcdt_search_cb</code> will fail if 
    the object copy property list is invalid. 
    </td>
    </tr>
-->    
    <tr>
    <td valign="top"><code>H5Pset_elink_cb</code>
    </td>
    <td valign="top"><p><code>H5Pset_elink_cb</code> will fail if the 
    link access property list identifier, <code>lapl_id</code>, is 
    invalid or if the function pointer, <code>func</code>, is 
    <code>NULL</code>.</p>
    
    <p>An invalid function pointer, <code>func</code>, will cause a 
    segmentation fault or other failure when an attempt is subsequently 
    made to traverse an external link. </p>
    </td>
    </tr>
<!--    
    <tr>
    <td valign="top"><code>H5Lexists</code>
    </td>
    <td valign="top"><code>H5Lexists</code> checks the existence of only 
    the final element in a relative or absolute path; it does not check 
    any other path elements. The function will therefore fail when both 
    of the following conditions exist:
    <ul>
        <li><code>name</code> is not local to the group specified by 
        <code>loc_id</code> or, if <code>loc_id</code> is something other 
        than a group identifier, <code>name</code> is not local to the 
        root group.</li>
        <li>Any element of the relative path or absolute path in name, except 
        the target link, does not exist. </li>
    </ul>
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5L_elink_traverse_t</code>
    </td>
    <td valign="top"><code>H5L_elink_traverse_t</code> failure modes are 
    dependent on the implementation of the callback function. 
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Fget_free_sections</code>
    </td>
    <td valign="top">This routine will fail when the following is true:
        <ul>
        <li>The library fails to retrieve the file creation property list 
        <code>fcpl_id</code>.</li>
        <li>If the parameter <code>sect_info</code> is nonnull, but the 
        parameter <code>nsects</code> is equal to 0.</li>
        <li>The library fails to retrieve free-space section information 
        for the file associated with the file creation property list 
        <code>fcpl_id</code>.</li>
        </ul>
    </td>
    </tr>
-->    
    </table>
    
    
    
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    <br />
    <br />



  <dt><strong><a name="ExampleUsage">Example Usage:</a></strong></dt>
    <dd>Insert in this section an example or two that show how the 
    function is used.</dd>
    <br />



    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Example Usage</b></p>
    
    <p>In the Example Usage section, we include some examples of the 
    function being used. Include comments that describe what the 
    parameters mean where appropriate.</p>
    
    <p>The following is the Example Usage section for 
    <a href="H5L_elink_traverse_t_Example.htm">
    <code>H5L_elink_traverse_t</code>:</a></p>
    
    <blockquote>

    <p>This example defines a callback function that prints the name 
    of the target file every time an external link is followed.</p>
<pre>
herr_t elink_callback(const char *parent_file_name, const char
        *parent_group_name, const char *child_file_name, const char
        *child_object_name, unsigned *acc_flags, hid_t fapl_id, void *op_data) {
    puts(child_file_name);
    return 0;
}
</pre>
    
    </blockquote>
    
    
    
    <p>The following is the Example Usage section for 
    <code>H5Pset_elink_acc_flags</code>:</p>
    
    <blockquote>

    <p>The following code sets the link access property list 
    <code>lapl_id</code> to open external link target files with 
    read-only access:</p>
<pre>
status = H5Pset_elink_acc_flags(lapl_id, H5F_ACC_RDONLY);
</pre>
    
    </blockquote>
    
    
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    <br />
    <br />



  <dt><strong><a name="FortranInterface">Fortran Interface:</a></strong> 
  &laquo;h5function_name_f&raquo;</dt>
    <dd>If there is a Fortran subroutine for this function, include 
    it in this section. If there is no subroutine, write 
    &ldquo;None&rdquo; here. Replace &laquo;h5function_name_f&raquo; with the 
    Fortran function.</dd>
    <br />



    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>Fortran Interface</b></p>
    
    <p>In the Fortran Interface section, we include the Fortan 
    subroutine for this function. </p>
    
    <p>The <a href="h5fortran_f_insert.htm">h5fortran_f_insert.htm</a> 
    file holds an example.</p>
    
    <p>Other examples can be found in these RM entries: 
    <code>H5Lcreate_soft</code>, <code>H5Gopen</code>, and 
    <code>H5Dcreate</code>.</p>
    
    <p>The subroutine for <code>h5dcreate_f</code> is shown below.</p>
<pre>
SUBROUTINE h5dcreate_f(loc_id, name, type_id, space_id, dset_id, & 
     hdferr, dcpl_id, lcpl_id, dapl_id)

  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: loc_id              ! File or group identifier 
  CHARACTER(LEN=*), INTENT(IN) :: name              ! Name of the dataset 
  INTEGER(HID_T), INTENT(IN) :: type_id             ! Datatype identifier 
  INTEGER(HID_T), INTENT(IN) :: space_id            ! Dataspace identifier 
  INTEGER(HID_T), INTENT(OUT) :: dset_id            ! Dataset identifier 
  INTEGER, INTENT(OUT) :: hdferr                    ! Error code  
                                                    ! 0 on success and -1 on failure
  INTEGER(HID_T), OPTIONAL, INTENT(IN) :: dcpl_id   ! Dataset creation property list
  INTEGER(HID_T), OPTIONAL, INTENT(IN) :: lcpl_id   ! Link creation property list
  INTEGER(HID_T), OPTIONAL, INTENT(IN) :: dapl_id   ! Dataset access property list
END SUBROUTINE h5dcreate_f
</pre>
    
    
    <p>The entry for <code>H5Pset_elink_fapl</code> shows how None is used.</p>
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    <br />
    <br />



  <dt><strong><a name="SeeAlso">See Also:</a></strong></dt>
    <dd>Include in this section links or references to other relevant 
    information.
    </dd>
        <br />



    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>See Also</b></p>
    
    <p>In the See Also section, we list links or references to other 
    sources of information that might be useful to the reader.</p>
    <p>If there are several items, list them by type in the order
    shown below. In other words, list related functions first and 
    other related documents last.</p>
    
    <ul>
        <li>Functions</li>
        <li>Structs or ENUMs</li>
        <li>Callback or operator functions</li>
        <li>Tools</li>
        <li>Sections in the <i>HDF5 User&rsquo;s Guide</i></li>
        <li>Other related documents</li>
    </ul>    
    
    
    <p>The following is a sample list:</p>
    <ul>
        <li><a href="H5Dopen_Example.htm">
        <code>H5Dopen</code></a></li>
        <li><a href="H5Literate_Example.htm">
        <code>H5Literate</code></a></li>
        <li><a href="H5L_elink_traverse_t_Example.htm">
        <code>H5L_elink_traverse_t</code></a></li>
        <li><a href="h5tool_entry.htm"><code>h5tool</code></a></li>
        <li>&ldquo;Discovering Objects in a Group&rdquo; in the
        &ldquo;Groups&rdquo; 
        chapter of the
        <cite>HDF5 User&rsquo;s Guide</cite></li>
    </ul>
    
    
    <hr color="orange" size="3"/></td></tr>
    </table>
    <br />
    <br />
    <br />



  <dt><strong><a name="History">History:</a></strong></dt>
    <dd>List in this section major changes by library version number.
    </dd>

<br />



    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>History</b></p>
    
    <p>In the History section, we list major changes to the function 
    by library version number. Major changes include when the C function 
    was first introduced and when the Fortran subroutine was first 
    introduced. Other changes include behaviors that users will see such 
    as a change in a parameter or a change in capacity. Replace the 
    &laquo;*.**.**&raquo; variable in the Release column with the 
    appropriate release number. An example is 1.8.9. </p>
    <p>The list below shows the general format for this section.</p>
    
        <table width="90%">
        <tr>
          <td valign="top" align="left" width="20%">
            <strong>Release</strong></td>
          <td valign="top" align="left" width="80%">
            <strong>Change</strong></td>
        </tr>

        <tr>
          <td valign="top">&laquo;*.**.**&raquo;</td>
          <td valign="top">
            C function introduced in this release.</td>
        </tr>

        <tr>
          <td valign="top">&laquo;*.**.**&raquo;</td>
          <td valign="top">
            Fortran90 subroutine introduced in this release.</td>
        </tr>

        <tr>
          <td valign="top">&laquo;*.**.**&raquo;</td>
          <td valign="top">
            C function changed in-this-way.</td>
        </tr>

        <tr>
          <td valign="top">&laquo;*.**.**&raquo;</td>
          <td valign="top">
            Fortran90 subroutine changed in-this-way.</td>
        </tr>
        </table></dd>

    
    <hr color="orange" size="3"/></td></tr>
    </tr>
    </table>
    <br />    
    
    
    
    
    <table align="center" width="600" cellpadding="5" >
    <tr >
    <td style="background-color:#CADFFF">
    <hr color="orange" size="3"/>
    <p><b>History Examples</b></p>
    
    <p>The table below shows some examples of the kinds of major changes 
    that should be noted in the History section. </p>
    
    
    
    <table align="center" width="90%" border="1" cellpadding="5">
    <tr>
    <td valign="top"><b>Function</b>
    </td>
    <td valign="top"><b>History Statements</b>
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Pall_filters_avail</code>
    </td>
    <td valign="top">Function extended to work with group creation property lists.
    </td>
    </tr>
    
    <tr>
    <tr>
    <td valign="top"><code>H5Pcreate</code>
    </td>
    <td valign="top">
    The following property list classes were added at this release:</li>
        <ul>
        <li><code>H5P_DATASET_ACCESS</code></li>
        <li><code>H5P_GROUP_CREATE</code></li>
        <li><code>H5P_GROUP_ACCESS</code></li>
        <li><code>H5P_DATATYPE_CREATE</code></li>
        <li><code>H5P_DATATYPE_ACCESS</code></li>
        <li><code>H5P_ATTRIBUTE_CREATE</code></li>
        </ul>
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Pcreate_class</code>
    </td>
    <td valign="top">Fortran updated to Fortran2003.
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Pget_buffer</code>
    </td>
    <td valign="top">The return type changed from 
    <code>hsize_t</code> to <code>size_t</code>.
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Pget_external</code>
    </td>
    <td valign="top"><code>idx</code> parameter type 
    changed to unsigned.
    </td>
    </tr>
    
    <tr>
    <td valign="top"><code>H5Pget_fapl_mpiposix</code>
    </td>
    <td valign="top"><code>use_gpfs_hints</code> 
    parameter added.
    </td>
    </tr>
    

    </table>
    
    
    
    
    <hr color="orange" size="3"/></td></tr>
    </table>
</dl>
    <br /><br /><br />    
    <br />



