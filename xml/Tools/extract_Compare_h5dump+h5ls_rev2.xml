<?xml version="1.0"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<!-- Created with XMetaL (http://www.xmetal.com) -->
<topic id="topic_2F6B1E9BAD2D42F78D1BD56EEAA5E3EB"> 
  <title>Comparing h5dump and h5ls</title> 
  <shortdesc>Direct comparison between h5dump and h5ls 
  </shortdesc> 
  <body> 
    <section id="section_76714784906F4D5CBA83D37E866E3143"> 
      <title>Comparing h5dump and h5ls</title> 
      <p><codeph>h5dump</codeph> and 
        <codeph>h5ls</codeph> are the command-line utilities that provide a
        means of inspecting the structure and content of an HDF5 file. In most cases,
        you can use either utility to extract a given piece of information from a file;
        determining which tool is best is often a matter of knowing what you will be
        doing with the data. 
      </p> 
      <p>First, let's summarize some of the broad differences in emphasis: 
      <ul id="ul_EED7A119C3264C94A964FB0810EFD779"> 
        <li id="li_9C3C3950EA374E029C96E88C11DEA5CF"><codeph>h5dump</codeph>
          output is designed to be more intuitively human readable; 
          <codeph>h5ls</codeph> output is designed specifically to be machine
          readable. 
        </li> 
        <li id="li_2428535D8C49401F92391A7101C9BE21"><codeph>h5dump</codeph>
          provides access to all information about a file and all of its content; 
          <codeph>h5ls</codeph> provides access to the structure of a file, the
          content of its datasets, and much but not all of the metadata. 
        </li> 
        <li id="li_3A31CAE503034139B45EC2A7A295A678"><codeph>h5dump</codeph> is
          recursive by default; h5ls is non-recursive by default. 
        </li> 
      </ul> 
      </p> 
    </section> 
    <p> 
      <codeph>h5dump</codeph> and 
      <codeph>h5ls</codeph> 
    </p>
    <p><lines>
       --subhead-- 
       Human- versus machine-readable
       </lines>
       To illustrate, let's consider two examples.
       Both h5dump and h5ls display the structure of a file.
    </p>
    <p>h5dump lists the objects contained in a file in a cascading, indented 
       list that is very easy for the eye to follow;
       if one line names a group, all the groups, datasets, or named datatypes
       in that group will be listed one at a time on succeeding lines at a 
       constant indent from the parent group.
       This makes it very easy  (emphasis)for a person</emphasis) to 
       see the hierarchical structure of the file.
    </p>
    <p>h5ls identifies each object contained in the file 
       by printing the full pathname of the object at the left-hand margin.
       While this presentation makes it harder for a person to see the 
       structure of a file, it is very easy (emphasis)for software</emphasis)
       to use this information to identify and operate on an object.
    </p>
    <p>
       <lines>
       --Insert examples--
       </lines>
    </p>
    <p>Both utilities will also display raw data, the data contained 
       in a dataset.
    </p>
    <p>All HDF5 datasets are arrays. 
       h5dump displays a 2-dimensional array in rows, 
       corresponding to the rows and columns of the array. 
       A 3-dimensional array is displayed as a series of 2-dimensional planes.
       This approach makes it relatively straight-forward for a person
       to study the raw data in a dataset. 
       Higher-dimensional arrays build from this approach, though they admittedly
       become more difficult to study.
    </p>
    <p>h5ls displays the content of each dataset as a serialized,
       1-dimensional array.
       Software can work easily with this data, importing it into an array
       or otherwise processing it, as appropriate.
    </p>
    <p>
       <lines>
       --Insert examples--
       </lines>
    </p>
    <p>
    </p>
    <p><?xm-replace_text Paragraph?>
    </p> 
    <p><?xm-replace_text Paragraph?>
    </p> 
    <p><?xm-replace_text Paragraph?>
    </p> 
    <p><?xm-replace_text Paragraph?>
    </p> 
  </body>
</topic>
