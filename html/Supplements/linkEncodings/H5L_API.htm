<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="H5L_API_files/filelist.xml">
<title>H5L Interface Changes</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="date"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>jlaird</o:Author>
  <o:LastAuthor>jlaird</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>423</o:TotalTime>
  <o:Created>2005-11-09T20:21:00Z</o:Created>
  <o:LastSaved>2005-11-09T20:21:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>1190</o:Words>
  <o:Characters>6789</o:Characters>
  <o:Company>NCSA</o:Company>
  <o:Lines>56</o:Lines>
  <o:Paragraphs>15</o:Paragraphs>
  <o:CharactersWithSpaces>7964</o:CharactersWithSpaces>
  <o:Version>10.6714</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Lucida Grande";
	mso-font-alt:Courier;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:50331648 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
code
	{font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-size:18.0pt'>H5L Interface Changes<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'>James Laird and
Quincey Koziol <st1:date Year="2005" Day="9" Month="11">11/9/05</st1:date></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='font-size:16.0pt'>The H5L Interface<o:p></o:p></span></p>

<p class=MsoNormal>The H5L Interface itself will have the following APIs:</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><em><span style='font-size:10.0pt;font-family:"Courier New"'>herr_t</span></em><span
style='font-size:10.0pt;font-family:"Courier New"'> <span class=GramE><code>H5Lcreate</code>(</span><em><span
style='font-family:"Courier New"'>hid_t</span></em> new_<code>loc_id</code>, <em><span
style='font-family:"Courier New"'>const char *</span></em><code>new_name</code>,
<em><span style='font-family:"Courier New"'>hid_t</span></em><em><span
style='font-family:"Courier New";font-style:normal;mso-bidi-font-style:italic'>
object_id</span></em>, <i style='mso-bidi-font-style:normal'>hid_t</i> lcpl)<o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The new link creation call.<span style='mso-spacerun:yes'> 
</span>Takes the location ID, the ID of the object to be linked in, the name of
the new object, and a Link Creation Property List.<span
style='mso-spacerun:yes'>  </span>The LCPL controls the link type (hard or
soft) and the character encoding.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>H5Lcreate can only create hard links, since an object is being
specified by id.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Formerly, links were created with H5Glink and H5Glink2,
which took the link type as a parameter rather than as part of a link creation
property list.<span style='mso-spacerun:yes'>  </span>H5Glink2 also identifies
the object to be linked by name rather than by id; this functionality is
supported in H5Llink2 below.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><em>herr_t</em> <span class=GramE><code><span
style='font-size:10.0pt'>H5Llink</span></code>(</span> <em>hid_t</em> <code><span
style='font-size:10.0pt'>curr_loc_id</span></code>, <em>const char *</em><code><span
style='font-size:10.0pt'>current_name</span></code>, <em>hid_t</em> <code><span
style='font-size:10.0pt'>new_loc_id</span></code>, <em>const char *</em><code><span
style='font-size:10.0pt'>new_name, hid_t lcpl</span></code> )</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span class=GramE>Links to an object by name.</span><span
style='mso-spacerun:yes'>  </span>Very similar to the current H5Glink2, but
takes a link creation property list.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>An H5Llink function which uses only one location should be
created as a high-level API, since it does not add any functionality.<span
style='mso-spacerun:yes'>  </span>This function is H5Llink_simple and is
discussed below.<span style='mso-spacerun:yes'>  </span>It does not use </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>It might also be appropriate to create high-level functions
that would have exactly the same signatures as H5Glink and H5Glink2 so that
casual users would not have to construct link creation property lists.</p>

<p class=MsoNormal><em><o:p>&nbsp;</o:p></em></p>

<p class=MsoNormal><em><o:p>&nbsp;</o:p></em></p>

<p class=MsoNormal><em>herr_t</em> <span class=GramE><code><span
style='font-size:10.0pt'>H5Lmove</span></code>(</span> <em>hid_t</em> <code><span
style='font-size:10.0pt'>src_loc_id</span></code>, <em>const char</em> <code><span
style='font-size:10.0pt'>*src_name</span></code>, <em>hid_t</em> <code><span
style='font-size:10.0pt'>dst_loc_id</span></code>, <em>const char</em> <code><span
style='font-size:10.0pt'>*dst_name</span></code> )</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The new move function's signature is the same as the old
H5Gmove2.<span style='mso-spacerun:yes'>  </span>It will preserve creation time
and the creation property list of a link while renaming the link and possibly
moving it to a new group.</p>

<p class=MsoNormal>I propose that the simpler H5Gmove (which assumed that the
link's old location and new location were the same) be implemented as a
high-level function, rather than as a library function, since it is just a
special case of the call above.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><em>herr_t</em> <span class=GramE><code><span
style='font-size:10.0pt'>H5Lmove</span></code>(</span> <em>hid_t</em> <code><span
style='font-size:10.0pt'>src_loc_id</span></code>, <em>const char</em> <code><span
style='font-size:10.0pt'>*src_name</span></code>, <em>hid_t</em> <code><span
style='font-size:10.0pt'>dst_loc_id</span></code>, <em>const char</em> <code><span
style='font-size:10.0pt'>*dst_name, <i style='mso-bidi-font-style:normal'>hid_t</i>
lcpl</span></code> )</p>

<p class=MsoNormal><em><o:p>&nbsp;</o:p></em></p>

<p class=MsoNormal><em>herr_t</em> <span class=GramE><code><span
style='font-size:10.0pt'>H5Lrename</span></code>(</span> <em>hid_t</em> <code><span
style='font-size:10.0pt'>src_loc_id</span></code>, <em>const char</em> <code><span
style='font-size:10.0pt'>*src_name</span></code>, <em>hid_t</em> <code><span
style='font-size:10.0pt'>dst_loc_id</span></code>, <em>const char</em> <code><span
style='font-size:10.0pt'>*dst_name, <i style='mso-bidi-font-style:normal'>hid_t
</i>lcpl</span></code> )</p>

<p class=MsoNormal><em><o:p>&nbsp;</o:p></em></p>

<p class=MsoNormal><em><span style='font-style:normal;mso-bidi-font-style:italic'>To
emphasize that groups are &quot;bins&quot; for holding links, the functionality
of H5Gmove has been split into two functions, H5Lmove and H5Lrename.<span
style='mso-spacerun:yes'>  </span>H5Lmove will move links between groups
without altering the links, and H5Lrename will change links' names without
relocating the links.<span style='mso-spacerun:yes'>  </span>Another option
would be to combine these into a single more powerful function, or to try to
implement such a function as a high-level API.<o:p></o:p></span></em></p>

<p class=MsoNormal><em><span style='font-style:normal;mso-bidi-font-style:italic'><o:p>&nbsp;</o:p></span></em></p>

<p class=MsoNormal><em><span style='font-style:normal;mso-bidi-font-style:italic'>H5Lmove
needs the lcpl because of the &quot;create intermediate groups&quot;
option.<span style='mso-spacerun:yes'>  </span>H5Lrename needs it to set the
character encoding of the link's new name.<o:p></o:p></span></em></p>

<p class=MsoNormal><em><span style='font-style:normal;mso-bidi-font-style:italic'><o:p>&nbsp;</o:p></span></em></p>

<p class=MsoNormal><em><span style='font-style:normal;mso-bidi-font-style:italic'>High-level
functions might be implemented that used only one location and no property
lists.<o:p></o:p></span></em></p>

<p class=MsoNormal><em><span style='font-style:normal;mso-bidi-font-style:italic'><o:p>&nbsp;</o:p></span></em></p>

<p class=MsoNormal><em><span style='font-style:normal;mso-bidi-font-style:italic'><o:p>&nbsp;</o:p></span></em></p>

<p class=MsoNormal><em>herr_t </em><span class=GramE><code><span
style='font-size:10.0pt'>H5Lunlink</span></code>(</span><em>hid_t</em> <code><span
style='font-size:10.0pt'>loc_id</span></code>, <em>const char *</em><code><span
style='font-size:10.0pt'>name</span></code> )</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The new unlinking function would be identical to the old
function, H5Gunlink.<span style='mso-spacerun:yes'>  </span>Unlinking requires
no parameters, and links are still specified by location/name.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><em>hid_t </em><code><span style='font-size:10.0pt'>H5Lget_create_<span
class=GramE>plist<span style='font-size:12.0pt;font-family:"Times New Roman"'>(</span></span></span></code><em>hid_t
loc, char *name</em>)</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Links have LCPLs that store their character encoding and
whether they are hard or soft links.<span style='mso-spacerun:yes'> 
</span>This function allows the user to retrieve these lists.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>There is probably little demand for a 'touch' function to
update a link's creation time, and less for a function allowing users to
manually set a link's creation time.<span style='mso-spacerun:yes'> 
</span>These functions could be added later, but will not be part of the API
now.</p>

<p class=MsoNormal><span style='font-size:16.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-size:16.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-size:16.0pt'>Changes to H5P Interface<o:p></o:p></span></p>

<p class=MsoNormal>A new link creation property list class needs to be
created.<span style='mso-spacerun:yes'>  </span>Its properties are the link's
character encoding (ASCII or UTF-8) and the link's type (hard or soft
link).<span style='mso-spacerun:yes'>  </span>It also contains the &quot;create
intermediate groups&quot; property which is currently part of the object
creation property list.<span style='mso-spacerun:yes'>  </span>This property
will no longer be part of all creation lists, only the link creation list.</p>

<p class=MsoNormal><span style='font-size:16.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><em><span style='font-size:10.0pt;font-family:"Courier New"'>herr_t
</span></em><code><span style='font-size:10.0pt'>H5Pset_<span class=GramE>encoding(</span></span></code><em><span
style='font-size:10.0pt;font-family:"Courier New"'>hid_t</span></em><span
style='font-size:10.0pt;font-family:"Courier New"'> <code>plist_id</code>, <code><i
style='mso-bidi-font-style:normal'>H5T_cset_t</i></code> <code>encoding</code>)<o:p></o:p></span></p>

<p class=MsoNormal><em><span style='font-size:10.0pt;font-family:"Courier New"'>herr_t
</span></em><code><span style='font-size:10.0pt'>H5Pget_<span class=GramE>encoding(</span></span></code><em><span
style='font-size:10.0pt;font-family:"Courier New"'>hid_t</span></em><span
style='font-size:10.0pt;font-family:"Courier New"'> <code>plist_id</code>, <em><span
style='font-family:"Courier New"'>H5T_cset_t *</span></em><code>encoding</code>)<o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><em><span style='font-size:10.0pt;font-family:"Courier New"'>herr_t
</span></em><code><span style='font-size:10.0pt'>H5Pset_link_<span class=GramE>type(</span></span></code><em><span
style='font-size:10.0pt;font-family:"Courier New"'>hid_t</span></em><span
style='font-size:10.0pt;font-family:"Courier New"'> <code>plist_id</code>, <em><span
style='font-family:"Courier New"'>H5G_link_t</span></em><span
style='mso-spacerun:yes'>  </span><code>link_type</code>)<o:p></o:p></span></p>

<p class=MsoNormal><em><span style='font-size:10.0pt;font-family:"Courier New"'>herr_t
</span></em><code><span style='font-size:10.0pt'>H5Pget_link_<span class=GramE>type(</span></span></code><em><span
style='font-size:10.0pt;font-family:"Courier New"'>hid_t</span></em><span
style='font-size:10.0pt;font-family:"Courier New"'> <code>plist_id</code>, <em><span
style='font-family:"Courier New"'>H5G_link_t</span></em> <em><span
style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*</span></em><code>link_type</code>)<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><em><span style='font-size:10.0pt;font-family:"Courier New"'>herr_t
H5Pset_create_intermediate_<span class=GramE>group(</span>hid_t plist_id,
unsigned crt_intmd_group)<o:p></o:p></span></em></p>

<p class=MsoNormal><em><span style='font-size:10.0pt;font-family:"Courier New"'>herr_t
H5Pset_create_intermediate_<span class=GramE>group(</span>hid_t plist_id,
unsigned crt_intmd_group)</span></em><i><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p></o:p></span></i></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Attributes will be able to accept UTF-8 names as well.<span
style='mso-spacerun:yes'>  </span>The encoding of an attribute's name will be
specified in the same way as a link's, using the H5Pset_encoding and
H5Pget_encoding functions.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>After the H5L interface has been created, a second series of
changes will allow files to set a file-wide default character encoding.<span
style='mso-spacerun:yes'>  </span>This will be set through the file creation
property list, and can be overridden using the link creation property list.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='font-size:16.0pt'>Other Changes<o:p></o:p></span></p>

<p class=MsoNormal>H5Dcreate_extend, H5Gcreate_extend, and H5Tcommit_extend
(names being tentative) will not create a link to the created object, letting
the user do so manually.<span style='mso-spacerun:yes'>  </span>H5Dcreate,
H5Gcreate, and H5Tcommit will continue to create links with default settings.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>To support files eventually having default character
encodings, the file format will be changed to store the default character
encoding in the superblock.<span style='mso-spacerun:yes'>  </span>Until this
feature is supported, all files will default to the ASCII encoding.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='font-size:16.0pt'>Other Languages<o:p></o:p></span></p>

<p class=MsoNormal>These changes would need to be made in Fortran and C++, as
well.<span style='mso-spacerun:yes'>  </span>The Fortran changes would be the
same as in C.</p>

<p class=MsoNormal>The C++ interface has its own organization.<span
style='mso-spacerun:yes'>  </span>It would need to recognize and be able to set
properties in Link Creation Property Lists, but it would not necessarily need
to change to reflect the reorganization in the C interface.</p>

<p class=MsoNormal>I suggest we get the input of our C++ guru before
redesigning the C++ classes.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='font-size:16.0pt'>High-level Wrappers<o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>There are a number of link-related function calls that users
may want to use for convenience, but which are essentially simplifications or
combinations of other HDF5 API calls.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The current object creation calls are the best example of
this.<span style='mso-spacerun:yes'>  </span>The current H5Gmove is another,
essentially combining link creation and deletion into one step.<span
style='mso-spacerun:yes'>  </span>Users may also want to query properties of
objects (link character encoding, e.g.) without going to the trouble of
extracting the object's property list.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>I propose a high-level &quot;utility&quot; library that
would hold such commonly-used calls.<span style='mso-spacerun:yes'> 
</span>H5Dcreate, H5Gcreate, and H5Tcommit could be part of this high-level
library rather than duplicating the effects of other library functions.<span
style='mso-spacerun:yes'>  </span>The &quot;utility&quot; library functions
could be mentioned in the main HDF5 reference manual.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>For the 1.8 release, time permitting, we create the new
function H5Dcreate_extend.<span style='mso-spacerun:yes'>  </span>We continue
to support the H5Dcreate function, but consider it depreciated.<span
style='mso-spacerun:yes'>  </span>We also create a high-level library with
H5Dcreate_simple, which has the same (or less!) functionality as H5Dcreate, and
encourage users to migrate to either H5Dcreate_extend or H5Dcreate, depending
on whether or not they need the additional features of H5Dcreate_extend.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>The high-level API functions to be written for this change
include:</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>H5Dcreate_simple</p>

<p class=MsoNormal>H5Gcreate_simple</p>

<p class=MsoNormal>H5Tcommit_simple</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>These functions have the same functionality as the current
H5Dcreate, H5Gcreate, and H5Tcommit (which will be duplicated functionality
while those functions are present but depreciated).</p>

<p class=MsoNormal>If the H5L interface is something we want to shield users
from as much as possible, it might also be worthwhile to have a high-level
creation command like the library's H5Dcreate_extend, but that also created a
link as part of dataset creation.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>H5Llink_simple</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>H5Llink_simple creates a link like the current H5Glink
call.<span style='mso-spacerun:yes'>  </span>It creates a link with default
properties so that high-level users don't need to worry about property lists.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>H5Lmove_simple</p>

<p class=MsoNormal>H5Lrename_simple</p>

<p class=MsoNormal>H5Lmove_and_rename</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>These functions move and rename with default properties and
using only one location id.</p>

<p class=MsoNormal>H5Lmove_and_rename both moves and renames a link in a single
function call.<o:p></o:p></p>

</div>

</body>

</html>
