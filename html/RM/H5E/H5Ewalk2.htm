<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Ewalk2" -->
<hr>
<dl>
<dt><strong>Name:</strong> <a name="Error-Walk2">H5Ewalk2</a>
<dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Ewalk2</code>(
        <em>hid_t</em> <code>estack_id</code>,
        <em>H5E_direction_t</em> <code>direction</code>,
        <em>H5E_walk2_t</em> <code>func</code>,
        <em>void *</em> <code>client_data</code>
    )
<dt><strong>Purpose:</strong>
    <dd>Walks the specified error stack, calling the specified function.
<dt><strong>Description:</strong>
    <dd><code>H5Ewalk2</code> walks the error stack specified by
        <code>estack_id</code> for the current thread and calls the function 
        specified in <code>func</code> for each error along the way.
        <p>
        If the value of <code>estack_id</code> is <code>H5E_DEFAULT</code>, 
        then <code>H5Ewalk2</code> walks the current error stack. 
        <p>
        <code>direction</code> specifies whether the stack is walked 
        from the inside out or the outside in.  
        A value of <code>H5E_WALK_UPWARD</code> means to begin with the
        most specific error and end at the API; 
        a value of <code>H5E_WALK_DOWNWARD</code> means to start at the 
        API and end at the innermost function where the error was first 
        detected.
        <p>
        <code>func</code>, a function compliant with the 
        <code>H5E_walk2_t</code> prototype, will be called for each error 
        in the error stack. 
        Its arguments will include an index number <code>n</code>
        (beginning at zero regardless of stack traversal direction), 
        an error stack entry <code>err_desc</code>, 
        and the <code>client_data</code> pointer passed to 
        <code>H5E_print</code>.
        The <code>H5E_walk2_t</code> prototype is as follows:
        <dir>
        <p>
        <code>typedef</code> <em>herr_t</em> <code>(*H5E_walk2_t)(</code><em>unsigned</em> <code>n,</code> 
            <em>const H5E_error2_t *</em><code>err_desc,</code> 
            <em>void *</em><code>client_data)</code>
        <p>
        where the parameters have the following meanings:
            <dl>
            <dt><em>unsigned</em> <code>n</code>
                <dd>Indexed position of the error in the stack.
            <dt><em>const H5E_error2_t *</em><code>err_desc</code>
                <dd>Pointer to a data structure describing the error.
                    <i>(This structure is currently described only in the source
                    code file <code>hdf5/src/H5Epublic.h</code>.
                    That file also contains the definitive list of major 
                    and minor error codes; that information will 
                    eventually be presented as an appendix to this 
                    <cite>HDF5 Reference Manual</cite>.)</i>
            <dt><em>void *</em><code>client_data</code>
                <dd>Pointer to client data in the format expected by 
                    the user-defined function.
            </dl>
        </dir>
        <p>
<dt><strong>Parameters:</strong>
    <ul><table>
        <tr>
	    <td valign="top"><em>hid_t</em> <code>estack_id</code></td>
            <td valign="top">IN: Error stack identifier.</td></tr>
        <tr>
	    <td valign="top"><em>H5E_direction_t</em>&nbsp;<code>direction&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
            <td valign="top">IN: Direction in which the error stack is 
              to be walked.</td></tr>
        <tr>
	    <td valign="top"><em>H5E_walk2_t</em> <code>func</code></td>
            <td valign="top">IN: Function to be called for each error 
              encountered.</td></tr>
        <tr>
	    <td valign="top"><em>void *</em> <code>client_data</code></td>
            <td valign="top">IN: Data to be passed with <code>func</code>.
              </td></tr>
    </table></ul>
<dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.
<dt><strong>Fortran90 Interface:</strong>
    <dd>None.
	
<!--
	<pre>
SUBROUTINE
	</pre>
-->		
		
		<!--<dt><strong>Non-C API(s):</strong>
    	<dd>
        
        <img src="Graphics/Java.gif"> 
        <img src="Graphics/C++.gif">
        -->
<dt><strong>History:</strong>
    <dd><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>C</strong></td></tr>
        <tr>
          <td valign="top">1.8.0</td>
          <td valign="top">
            Function introduced in this release.</td></tr>
    </table>
</dl>

