

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Iobject_verify" -->
<hr>
<dl>
<dt><strong>Name:</strong> <a name="Identify-ObjectVerify">H5Iobject_verify</a>
<dt><strong>Signature:</strong>
    <dd><em>void *</em> <code>H5Iobject_verify</code>(
            <em>hid_t</em> <code>id</code>, 
	    <em>H5I_type_t</em> <code>id_type</code>
            )
<dt><strong>Purpose:</strong>
    <dd>Returns the object referenced by <code>id</code>.
<dt><strong>Description:</strong>
    <dd><code>H5Iobject_verify</code> returns a pointer to the 
        memory referenced by <code>id</code> after verifying that 
        <code>id</code> is of type <code>id_type</code>. 
        This function is analogous to dereferencing a pointer 
        in C with type checking.

        <p>
        <code>H5Iregister</code>(<em>H5I_type_t</em> <code>type</code>, 
        <em>void *</em><code>object</code>) takes an <em>H5I_type_t</em> 
        and a void pointer to an object, 
        returning an <em>hid_t</em> of that type. 
        This <em>hid_t</em> can then be passed to 
        <code>H5Iobject_verify</code> along with its type to retrieve 
        the object.

        <p>
        <code>H5Iobject_verify</code> does not change the ID it is 
        called on in any way 
        (as opposed to <code>H5Iremove_verify</code>, 
        which removes the ID from its type&rsquo;s hash table).
<dt><strong>Parameters:</strong>
    <ul><table>
	  <tr>
	    <td valign="top"><em>hid_t</em> <code>id</code></td>
            <td valign="top">IN: ID to be dereferenced</td>
	  </tr>
	  <tr>
	    <td valign="top"><em>H5I_type_t</em>&nbsp;<code>type&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
            <td valign="top">IN: ID type to which id should belong</td>
	  </tr>
    </table></ul>
<dt><strong>Returns:</strong>
        <dd>Pointer to the object referenced by id on success, <code>NULL</code> on failure.
<dt><strong>Fortran90 Interface:</strong>
        <dd>This function is not supported in FORTRAN 90.

        <!--<dt><strong>Non-C API(s):</strong>
        <dd>


        <img src="Graphics/Java.gif">
        <img src="Graphics/C++.gif">
        -->
</dl>

