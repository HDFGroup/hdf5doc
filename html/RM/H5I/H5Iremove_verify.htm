<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Iremove_verify" -->
<hr>
<dl>
<dt><strong>Name:</strong> <a name="Identify-RemoveVerify">H5Iremove_verify</a>
<dt><strong>Signature:</strong>
    <dd><em>void *</em><code>H5Iremove_verify</code>(
            <em>hid_t</em> <code>id</code>, 
            <em>H5I_type_t</em> <code>id_type</code>
            )
<dt><strong>Purpose:</strong>
    <dd>Removes an ID from internal storage.
<dt><strong>Description:</strong>
    <dd><code>H5Iremove_verify</code> first ensures that 
        <code>id</code> belongs to <code>id_type</code>.  
        If so, it removes <code>id</code> from internal storage 
        and returns the pointer to the memory it referred to.  
        This pointer is the same pointer that was placed 
        in storage by <code>H5Iregister</code>.  
        If <code>id</code> does not belong to <code>id_type</code>, 
        then <code>NULL</code> is returned.

        <p>
        The <code>id</code> parameter is the ID which is to be removed from 
        internal storage. 
        Note: this function does NOT deallocate the memory that 
        <code>id</code> refers to.  
        The pointer returned by <code>H5Iregister</code> 
        must be deallocated by the user to avoid memory leaks.

        <p>
        The <code>type</code> parameter is the identifier for the ID type 
        which <code>id</code> is supposed to belong to.  
        This identifier must have been created by a call to 
        <code>H5Iregister_type</code>.
<dt><strong>Parameters:</strong>
    <ul><table>
	<tr>
	  <td valign="top"><em>hid_t</em> <code>id</code></td>
	  <td valign="top">IN: The ID to be removed from internal storage</td>
	</tr>
	<tr>
	  <td valign="top"><em>H5I_type_t</em>&nbsp;<code>type&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
	  <td valign="top">IN: The identifier of the type whose reference count is to be retrieved</td>
	</tr>
    </table></ul>
<dt><strong>Returns:</strong>
        <dd>Returns a pointer to the memory referred to by <code>id</code> 
            on success, <code>NULL</code> on failure.
<dt><strong>Fortran90 Interface:</strong>
        <dd>This function is not supported in FORTRAN 90.

                <!--<dt><strong>Non-C API(s):</strong>
        <dd>


        <img src="Graphics/Java.gif">
        <img src="Graphics/C++.gif">
        -->
</dl>

