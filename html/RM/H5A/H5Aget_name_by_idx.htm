

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Aget_name_by_idx" -->
<hr>
<dl>
  <dt><strong>Name:</strong> <a name="Annot-GetNameByIdx">H5Aget_name_by_idx</a>
  <dt><strong>Signature:</strong>
    <dd><em>ssize_t</em> <code>H5Aget_name_by_idx</code>(
            <em>hid_t</em> <code>loc_id</code>, 
            <em>const char *</em><code>obj_name</code>, 
            <em>H5_index_t</em> <code>idx_type</code>, 
            <em>H5_iter_order_t</em> <code>order</code>, 
            <em>hsize_t</em> <code>n</code>, 
            <em>char *</em><code>name</code>, 
            <em>size_t</em> <code>size</code>, 
            <em>hid_t</em> <code>lapl_id</code>
    )
  <p>
  <dt><strong>Purpose:</strong>
    <dd>Gets an attribute name, by attribute index position
  <p>
  <dt><strong>Description:</strong>
    <dd><code>H5Aget_name_by_idx</code> retrieves 
      the name of an attribute that is attached to an object, 
      which is specified by its location and name, 
      <code>loc_id</code> and <code>obj_name</code>, respectively.
      The attribute is located by its index position,
      the size of the name is specified in <code>size</code>,
      and the attribute name is returned in <code>name</code>.
      <p>
      If <code>loc_id</code> fully specifies the object to which the
      attribute is attached, <code>obj_name</code> should be
      <code>'.'</code> (a dot).
      <p>
      The attribute is located by means of an index type, 
      an index traversal order, and a position in the index, 
      <code>idx_type</code>, <code>order</code> and <code>n</code>, 
      respectively.
      These parameters and their valid values are discussed in the 
      description of <a href="#Annot-Iterate2"><code>H5Aiterate2</code></a>.
      <p>
      If the attribute name&rsquo;s size is unknown, 
      the values <code>0</code> and <code>NULL</code> can be passed in 
      for the parameters <code>size</code> and <code>name</code>.  
      The function&rsquo;s return value will provide 
      the correct value for <code>size</code>.
      <p>
      <p>
      The link access property list, <code>lapl_id</code>,
      may provide information regarding the properties of links
      required to access the object, <code>obj_name</code>.
      See &ldquo;Link Access Properties&rdquo; in the 
      <a href ="RM_H5P.html">H5P</a> APIs.
  <p>
  <dt><strong>Parameters:</strong>
    <dd><table>
      <tr>
        <td valign="top"><em>hid_t</em> <code>loc_id</code>
        </td>
        <td valign="top">IN: Location of object to which attribute is attached 
        </td></tr>
      <tr>
        <td valign="top"><em>const char *</em><code>obj_name</code>
        </td>
        <td valign="top">IN: Name of object to which attribute is attached, 
            relative to location
        </td></tr>
      <tr>
        <td valign="top"><em>H5_index_t</em> <code>idx_type</code>
        </td>
        <td valign="top">IN: Type of index
        </td></tr>
      <tr>
        <td valign="top"><em>H5_iter_order_t</em>&nbsp;<code>order</code>&nbsp;&nbsp;&nbsp;&nbsp;
        </td>
        <td valign="top">IN: Index traversal order 
        </td></tr>
      <tr>
        <td valign="top"><em>hsize_t</em> <code>n</code>
        </td>
        <td valign="top">IN: Attribute&rsquo;s position in index
        </td></tr>
        </td></tr>
      <tr>
        <td valign="top"><em>char *</em><code>name</code>
        </td>
        <td valign="top">OUT: Attribute name
        </td></tr>
      <tr>
        <td valign="top"><em>size_t</em> <code>size</code>
        </td>
        <td valign="top">IN: Size, in bytes, of attribute name
        </td></tr>
      <tr>
        <td valign="top"><em>hid_t</em> <code>lapl_id</code>
        </td>
        <td valign="top">IN: Link access property list
        </td></tr>
    </table>
  <p>
  <dt><strong>Returns:</strong>
    <dd>Returns attribute name size, in bytes, if successful;
        otherwise returns a negative value.
  <p>
  <dt><strong>Fortran90 Interface:</strong> h5aget_name_by_idx_f
    <dd>
	<pre>
SUBROUTINE h5aget_name_by_idx_f(loc_id, obj_name, idx_type, order, &
       n, name, hdferr, size, lapl_id) 
  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: loc_id ! Identifer for object to which 
                                       ! attribute is attached
  CHARACTER(LEN=*), INTENT(IN) :: obj_name ! Name of object, relative to 
                                           ! location,from which attribute is to
                                           ! be removed
  INTEGER, INTENT(IN) :: idx_type
                               ! Type of index; Possible values are:
                               !  H5_INDEX_UNKNOWN_F   - Unknown index type
                               !  H5_INDEX_NAME_F      - Index on names
                               !  H5_INDEX_CRT_ORDER_F - Index on creation order
                               !  H5_INDEX_N_F         - Number indices defined

<!-- NEW PAGE -->
  INTEGER, INTENT(IN) :: order ! Order in which to iterate over index:
                               !  H5_ITER_UNKNOWN_F - Unknown order
                               !  H5_ITER_INC_F     - Increasing order
                               !  H5_ITER_DEC_F     - Decreasing order
                               !  H5_ITER_NATIVE_F  - No particular order, 
                               !                      whatever is fastest
                               !  H5_ITER_N_F 	    - Number of iteration orders

  INTEGER(HSIZE_T), INTENT(IN) :: n      
                               ! Attribute&rsquo;s position in index
  CHARACTER(LEN=*), INTENT(OUT) :: name  
                               ! Attribute name
  INTEGER, INTENT(OUT) :: hdferr        
                               ! Error code:
                               !  Returns attribute name size,
                               !  -1 if fail
  INTEGER(HID_T), OPTIONAL, INTENT(IN) :: lapl_id  
                               ! Link access property list
  INTEGER(SIZE_T), OPTIONAL, INTENT(OUT) :: size 
                               ! exact buffer size, in number of characters
END SUBROUTINE h5aget_name_by_idx_f
	</pre>
        <!--<dt><strong>Non-C API(s):</strong>
    	<dd>
        
        <img src="Graphics/Java.gif"> 
        <img src="Graphics/C++.gif">
        -->
  <p>
  <dt><strong>History:</strong>
    <dd><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>C</strong></td></tr>
        <tr>
          <td valign="top">1.8.0</td>
          <td valign="top">
            Function introduced in this release.</td></tr>
    </table>
</dl>


