

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Fget_mdc_config" -->
<hr>
<dl>
<dt><strong>Name:</strong> <a name="File-GetMdcConfig">H5Fget_mdc_config</a>
<dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Fget_mdc_config</code>(<em>hid_t</em> 
      <code>file_id</code>, <em>H5AC_cache_config_t *</em><code>config_ptr</code>)
<dt><strong>Purpose:</strong>
    <dd>Obtain current metadata cache configuration for target file.
<dt><strong>Description:</strong>
    <dd><code>H5Fget_mdc_config</code> loads the current metadata cache 
      configuration into the instance of <code>H5AC_cache_config_t</code> 
      pointed to by the <code>config_ptr</code> parameter.

    <p>Note that the version field of *<code>config_ptr</code> must 
      be initialized --this allows the library to support old versions 
      of the <code>H5AC_cache_config_t</code> structure.

    <p>See the overview of the metadata cache in the special topics section 
      of the user manual for details on metadata cache configuration. 
      If you haven't read and understood that documentation, the results 
      of this call will not make much sense.
<dt><strong>Parameters:</strong>
    <ul><table>
        <tr>
            <td valign="top"><em>hid_t</em>&nbsp;<code>file_id&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
            <td valign="top">IN: Identifier of the target file</td></tr>
        <tr>
            <td valign="top"><em>H5AC_cache_config_t&nbsp;*</em><code>config_ptr</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">IN/OUT: Pointer to the instance of H5AC_cache_config_t 
              in which the current metadata cache configuration is to be reported. 
              The fields of this structure are discussed below:</td></tr>
        <tr>
          <td colspan="2">&nbsp;</td>
        </tr>
        <tr>
          <td colspan="2"><strong>General configuration section:</strong></td>
        </tr>
        <tr>
            <td valign="top"><em>int</em> <code>version</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">IN: Integer field indicating the the version 
              of the H5AC_cache_config_t in use.  This field should be 
              set to H5AC__CURR_CACHE_CONFIG_VERSION 
              (defined in H5ACpublic.h).</td></tr>
        <tr>
            <td valign="top"><em>hbool_t</em> <code>rpt_fcn_enabled</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Boolean flag indicating whether the adaptive 
              cache resize report function is enabled.  This field should almost 
              always be set to FALSE. Since resize algorithm activity is reported 
              via stdout, it MUST be set to FALSE on Windows machines.
              <p>The report function is not supported code, and can be 
              expected to change between versions of the library.  
              Use it at your own risk.</td></tr>



        <tr>    
            <td valign="top"><em>hbool_t</em> <code>open_trace_file</code>
              &nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Boolean field indicating whether 
              the <code>trace_file_name</code> field should be 
              used to open a trace file for the 
              cache.  This field will always be 
              set to <code>FALSE</code> in this context.</td></tr>
        <tr>    
            <td valign="top"><em>hbool_t</em> <code>close_trace_file</code>
              &nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Boolean field indicating whether 
              the current trace file (if any) should 
              be closed.  This field will always 
              be set to <code>FALSE</code> in this context.</td></tr>

<!-- NEW PAGE -->

        <tr>    
            <td valign="top"><em>char *</em><code>trace_file_name</code>
              &nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT:  Full path name of the trace file
              to be opened if the <code>open_trace_file</code>
              field is <code>TRUE</code>.  This field will always
              be set to the empty string in this context.</td></tr>
        <tr>
            <td valign="top"><em>hbool_t</em> <code>evictions_enabled</code>
              &nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT:  Boolean flag indicating whether 
                metadata cache entry evictions are enabled.
                </td></tr>
        <tr>
            <td valign="top"><em>hbool_t</em> <code>set_initial_size</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Boolean flag indicating whether the cache 
              should be created with a user specified initial maximum size.
              <p>If the configuration is loaded from the cache, 
              this flag will always be FALSE.</td></tr>
        <tr>
            <td valign="top"><em>size_t</em> <code>initial_size</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Initial maximum size of the cache in bytes, 
              if applicable.
              <p>If the configuration is loaded from the cache, this 
              field will contain the cache maximum size as of the 
              time of the call.</td></tr>
		<tr>
            <td valign="top"><em>double</em> <code>min_clean_fraction</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Float value specifing the minimum fraction of the cache 
	      that must be kept either clean or empty when possible.</td></tr>
        <tr>
            <td valign="top"><em>size_t</em> <code>max_size</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Upper bound (in bytes) on the range of 
              values that the adaptive cache resize code can select as 
              the maximum cache size.</td></tr>
        <tr>
            <td valign="top"><em>size_t</em> <code>min_size</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Lower bound (in bytes) on the range 
              of values that the adaptive cache resize code can 
              select as the maximum cache size.</td></tr>
        <tr>
            <td valign="top"><em>long int</em> <code>epoch_length</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Number of cache accesses between runs 
              of the adaptive cache resize code.</td></tr>
        <tr>
          <td colspan="2">&nbsp;</td>
        </tr>
        <tr>
          <td colspan="2"><strong>Increment configuration section:</strong></td>
        </tr>
        <tr>
            <td valign="top"><em>enum&nbsp;H5C_cache_incr_mode</em>&nbsp;<code>incr_mode</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Enumerated value indicating the operational 
              mode of the automatic cache size increase code.  At present,
              only the following values are legal:
              <p>H5C_incr__off: Automatic cache size increase is disabled.
              <p>H5C_incr__threshold: Automatic cache size increase is 
              enabled using the hit rate threshold algorithm.</td></tr>
        <tr>
            <td valign="top"><em>double</em> <code>lower_hr_threshold</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Hit rate threshold used in the hit rate 
              threshold cache size increase algorithm.</td></tr>

<!-- NEW PAGE -->

        <tr>
            <td valign="top"><em>double</em> <code>increment</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: The factor by which the current maximum 
              cache size is multiplied to obtain an initial new maximum cache
              size if a size increase is triggered in the hit rate 
              threshold cache size increase algorithm.</td></tr>
        <tr>
            <td valign="top"><em>hbool_t</em> <code>apply_max_increment</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Boolean flag indicating whether an upper 
              limit will be applied to the size of cache size increases.</td></tr>
        <tr>
            <td valign="top"><em>size_t</em> <code>max_increment</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: The maximum number of bytes by which the 
              maximum cache size can be increased in a single step -- if
              applicable.</td></tr>
        <tr>
            <td valign="top"><em>enum&nbsp;H5C_cache_flash_incr_mode</em>&nbsp;<code>flash_incr_mode</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Enumerated value indicating the operational mode of
                          the flash cache size increase code.  At present, only the following
                          values are legal:
              <p>H5C_flash_incr__off:  Flash cache size increase is disabled.
              <p>H5C_flash_incr__add_space:  Flash cache size increase is enabled using
                          the add space algorithm.</td></tr>

        <tr>
                    <td valign="top"><em>double</em> <code>flash_threshold</code>
                          &nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: The factor by which the current maximum cache
                          size is multiplied to obtain the minimum size
                          entry / entry size increase which may trigger a
                          flash cache size increase.</td></tr>

        <tr>
                    <td valign="top"><em>double</em> <code>flash_multiple</code>
                          &nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: The factor by which the size of the triggering
                          entry / entry size increase is multiplied to obtain
                          the initial cache size increment.  This increment
                          may be reduced to reflect existing free space in
                          the cache and the <code>max_size</code> field
                          above.</td></tr>
          <td colspan="2">&nbsp;</td>
        </tr>
<!-- NEW PAGE -->
        <tr>
          <td colspan="2"><strong>Decrement configuration section:</strong></td>
        </tr>
        <tr>
            <td valign="top"><em>enum&nbsp;H5C_cache_decr_mode</em>&nbsp;<code>decr_mode</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Enumerated value indicating the operational 
              mode of the automatic cache size decrease code.  At present,
              the following values are legal:
              <p>H5C_decr__off:  Automatic cache size decrease is disabled, 
              and the remaining decrement fields are ignored.
              <p>H5C_decr__threshold:  Automatic cache size decrease is 
              enabled using the hit rate threshold algorithm.
              <p>H5C_decr__age_out:  Automatic cache size decrease is enabled 
              using the ageout algorithm.
              <p>H5C_decr__age_out_with_threshold: Automatic cache size 
              decrease is enabled using the ageout with hit rate 
              threshold algorithm</td></tr>
        <tr>
            <td valign="top"><em>double</em> <code>upper_hr_threshold</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Upper hit rate threshold. This value is only 
              used if the decr_mode is either H5C_decr__threshold or 
              H5C_decr__age_out_with_threshold.</td></tr>
        <tr>
            <td valign="top"><em>double</em> <code>decrement</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Factor by which the current max cache size 
              is multiplied to obtain an initial value for the new cache 
              size when cache size reduction is triggered in the hit rate 
              threshold cache size reduction algorithm.</td></tr>
        <tr>
            <td valign="top"><em>hbool_t</em> <code>apply_max_decrement</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Boolean flag indicating whether an upper 
              limit should be applied to the size of cache size 
              decreases.</td></tr>
        <tr>
            <td valign="top"><em>size_t</em> <code>max_decrement</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: The maximum number of bytes by which cache 
              size can be decreased if any single step, if applicable.</td></tr>
        <tr>
            <td valign="top"><em>int</em> <code>epochs_before_eviction</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: The minimum number of epochs that an entry 
              must reside unaccessed in cache before being evicted under 
              either of the ageout cache size reduction algorithms.</td></tr>
        <tr>
            <td valign="top"><em>hbool_t</em> <code>apply_empty_reserve</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Boolean flag indicating whether an empty 
              reserve should be maintained under either of the ageout 
              cache size reduction algorithms.</td></tr>
        <tr>
            <td valign="top"><em>double</em> <code>empty_reserve</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td valign="top">OUT: Empty reserve for use with the ageout 
              cache size reduction algorithms, if applicable.</td></tr>

<!-- NEW PAGE -->

        <tr>
          <td colspan="2"><strong>Parallel configuration section:</strong></td>
        </tr>
		<tr>
		    <td valign="top"><em>int</em> <code>dirty_bytes_threshold</code>
			  &nbsp;&nbsp;&nbsp;&nbsp;</td>
			<td valign="top">OUT: Threshold number of bytes of dirty metadata 
			  generation for triggering synchronizations of the metadata caches 
			  serving the target file in the parallel case.
              <p>Synchronization occurs whenever the number of bytes of dirty 
			  metadata created since the last synchronization exceeds this limit.</td>
		</tr>

    </table></ul>
<dt><strong>Returns:</strong>
  <dd>Returns a non-negative value if successful; otherwise returns a negative value.

</dl>

