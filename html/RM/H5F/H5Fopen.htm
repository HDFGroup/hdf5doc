

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Fopen" -->
<hr>
<dl>
<dt><div align=right><font color=999999 size=-1><i>
  Last modified: 9 October 2014</i></font></div></dt>

<dt><strong>Name:</strong> <a name="File-Open">H5Fopen</a></dt>
<br />
<dt><strong>Signature:</strong>
    <dd><em>hid_t </em><code>H5Fopen</code>(
            <em>const char *</em><code>name</code>,
            <em>unsigned</em> <code>flags</code>,
            <em>hid_t</em> <code>fapl_id</code>
        )

<p>
<dt><strong>Purpose:</strong>
        <dd>Opens an existing HDF5 file.

<p>
<dt><strong>Description:</strong>
        <dd><code>H5Fopen</code> is the primary function for accessing 
            existing HDF5 files.  
            This function opens the named file in the specified access mode
            and with the specified access property list.
            <p>
            Note that <code>H5Fopen</code> does not create a file 
            if it does not already exist;  
            see <a href="#File-Create"><code>H5Fcreate</code></a>.
            <p>
            The <code>name</code> parameter specifies the name of the file
            to be opened.
            <p>
            The <code>fapl_id</code> parameter specifies the file access 
            property list.  Use of <code>H5P_DEFAULT</code> specifies that
            default I/O access properties are to be used  
            <p>
            The <code>flags</code> parameter specifies whether the file
            will be opened in read-write or read-only mode,
            <code>H5F_ACC_RDWR</code> or <code>H5F_ACC_RDONLY</code>,
            respectively.
            More complex behaviors of file access are controlled 
            through the file-access property list.
            <p>
            The return value is a file identifier for the open file;
            this file identifier should be closed by calling 
            <code>H5Fclose</code> when it is no longer needed. 
            <p>

            <b>Special cases &mdash; Multiple opens:</b>
            <br>
            A file can often be opened with a new <code>H5Fopen</code> 
            call without closing an already-open identifier established 
            in a previous <code>H5Fopen</code> or <code>H5Fcreate</code> 
            call.  Each such <code>H5Fopen</code> call will return a 
            unique identifier and the file can be accessed through any 
            of these identifiers as long as the identifier remains valid.
            In such multiply-opened cases, 
            the open calls must use the same <code>flags</code> argument 
            and the file access property lists must use the same 
            file close degree property setting 
            (see the external link discussion below and 
            <a href="RM_H5P.html#Property-SetFcloseDegree">
            <code>H5Pset_fclose_degree</code></a>).
            <p>
            In some cases, such as files on a local Unix file system, 
            the HDF5 library can detect that a file is multiply opened and 
            will maintain coherent access among the file identifiers.
            <p>
            But in many other cases, such as parallel file systems or
            networked file systems, it is not always possible to detect 
            multiple opens of the same physical file.  
            In such cases, HDF5 will treat the file identifiers 
            as though they are accessing different files and
            will be unable to maintain coherent access.
            Errors are likely to result in these cases.
            While unlikely, the HDF5 library may not be able to detect,
            and thus report, such errors.
            <p>
            It is generally recommended that applications avoid 
            multiple opens of the same file.
            <p>
            <b>Special restriction on multiple opens of a file first 
            opened by means of an external link:</b>
            When an external link is followed, the external file is always 
            opened  with the weak file close degree property setting, 
            <code>H5F_CLOSE_WEAK</code>  (see 
            <a href="RM_H5L.html#Link-CreateExternal">
            <code>H5Lcreate_external</code></a> and
            <a href="RM_H5P.html#Property-SetFcloseDegree">
            <code>H5Pset_fclose_degree</code></a>).
            If the file is reopened with <code>H5Fopen</code> while 
            it remains held open from such an external link call, 
            the file access proeprty list used in the open call must include 
            the file close degree setting <code>H5F_CLOSE_WEAK</code> 
            or the open will fail.

<p>
<dt><strong>Parameters:</strong>
    <dd><table>
        <tr>
            <td valign="top"><em>const&nbsp;char&nbsp;*</em><code>name&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
            <td valign="top">IN: Name of the file to be opened.</td></tr>
        <tr>
            <td valign="top"><em>unsigned</em> <code>flags</code></td>
            <td valign="top">IN: File access flags.  Allowable values are:
                <ul><dl>
                    <dt><code>H5F_ACC_RDWR</code>
                        <dd>Allow read and write access to file.
                    <dt><code>H5F_ACC_RDONLY</code>
                        <dd>Allow read-only access to file.
                </dl></ul>
                <p>
                <code>H5F_ACC_RDWR</code> and <code>H5F_ACC_RDONLY</code> 
                are mutually exclusive; use exactly one.
<!-- NEW PAGE -->
                <p>
                An additional flag, <code>H5F_ACC_DEBUG</code>, prints 
                debug information.  This flag can be combined with one of the 
                above values using the bit-wise OR operator (`|'), 
                but it is used only by HDF5 Library developers; <i>it is neither 
                tested nor supported</i> for use in applications.</td></tr>
                </td></tr>
        <tr>
            <td valign="top"><em>hid_t</em> <code>fapl_id</code></td>
            <td valign="top">IN: Identifier for the file access properties list.
                If parallel file access is desired, this is a collective
                call according to the communicator stored in the
                <code>fapl_id</code>. 
                Use <code>H5P_DEFAULT</code> for default file access 
                properties.</td></tr>
    </table></dd>

<p>
<dt><strong>Returns:</strong>
    <dd>Returns a file identifier if successful;
        otherwise returns a negative value.

<p>
<dt><strong>Fortran90 Interface:</strong> h5fopen_f
    <dd>
    <pre>
SUBROUTINE h5fopen_f(name, access_flags, file_id, hdferr, &  
                     access_prp)
  IMPLICIT NONE 
  CHARACTER(LEN=*), INTENT(IN) :: name   ! Name of the file
  INTEGER, INTENT(IN) :: access_flag     ! File access flags  
                                         ! Possible values are:
                                         !     H5F_ACC_RDWR_F   
                                         !     H5F_ACC_RDONLY_F    
  INTEGER(HID_T), INTENT(OUT) :: file_id ! File identifier 
  INTEGER, INTENT(OUT) :: hdferr         ! Error code 
                                         ! 0 on success and -1 on failure
  INTEGER(HID_T), OPTIONAL, INTENT(IN) :: access_prp  
                                         ! File access property list 
                                         ! identifier  
END SUBROUTINE h5fopen_f
    </pre>

  <dt><strong>See Also:</a></strong></dt>
    <dd>
    <a href="http://www.hdfgroup.org/HDF5/doc/Advanced/UsingIdentifiers/index.html">
    &ldquo;Using Identifiers&rdquo;</a></dd>


</dl>

