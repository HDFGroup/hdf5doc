

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Tvlen_create" -->
<hr>
<dl>

<dt><div align=right><font color=999999 size=-1><i>
    Last modified: 24 August 2012
    </i></font></div>

<dt><strong>Name:</strong> <a name="Datatype-VLCreate">H5Tvlen_create</a>
<dt><strong>Signature:</strong>
    <dd><em>hid_t </em><code>H5Tvlen_create</code>(
        <em>hid_t </em><code>base_type_id</code>
    )

<p>
<dt><strong>Purpose:</strong>
    <dd>Creates a new variable-length array datatype.

<p>
<dt><strong>Description:</strong>
    <dd><code>H5Tvlen_create</code> creates a new one-dimensional array datatype
        of variable-length (VL) with the base datatype <code>base_type_id</code>. 
        <p>
        This one-dimensional array often represents a data sequence of
        the base datatype, such as characters for character sequences
        or vertex coordinates for polygon lists.
        The base type specified for the VL datatype can be any HDF5 datatype,
        including another VL datatype, a compound datatype, 
        or an atomic datatype.
        <p>
        When necessary, use <code>H5Tget_super</code> to determine the base type 
        of the VL datatype.
        <p>
        The datatype identifier returned from this function should be 
        released with <code>H5Tclose</code> or resource leaks will result.
        Under certain circumstances, 
        <a href="RM_H5D.html#Dataset-VLReclaim"><code>H5Dvlen_reclaim</code></a>
        must also be used.

<p>
<dt><strong>Note:</strong>
    <dd><code>H5Tvlen_create</code> cannot be used to create a 
        variable-length string datatype.  
        <code>H5Tvlen_create</code> called with a string or character
        base type creates a variable-length sequence of strings
        (a variable-length, 1-dimensional array), with each element 
        of the array being of the string or character base type.  
        <p>
        To create a variable-length string datatype, 
        see &ldquo;<a href="RM_H5T.html#CreateVLString">Creating 
        variable-length string datatypes</a>.&rdquo; 

<p>
<dt><strong>Parameters:</strong>
    <dd><table>
        <tr>
            <td valign="top"><em>hid_t</em>&nbsp;<code>base_type_id&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
            <td valign="top">IN: Base type of datatype to create.</td></tr>
    </table></dd>

<p>
<dt><strong>Returns:</strong>
    <dd>Returns datatype identifier if successful;
        otherwise returns a negative value.

<p>
<dt><strong>See Also:</strong>
    <dd><a href="RM_H5D.html#Dataset-VLGetBuf"><code>H5Dvlen_get_buf_size</code></a>
    <dd><a href="RM_H5D.html#Dataset-VLReclaim"><code>H5Dvlen_reclaim</code></a>
    <dd>&ldquo;<a href="RM_H5T.html#CreateVLString">Creating 
        variable-length string datatypes</a>&rdquo; 

<p>
<dt><strong>Fortran90 Interface:</strong> h5tvlen_create_f
    <dd>
    <pre>
SUBROUTINE h5tvlen_create_f(type_id, vltype_id, hdferr) 
  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: type_id    ! Datatype identifier of base type 
                                           ! Base type can only be atomic 
  INTEGER(HID_T), INTENT(OUT) :: vltype_id ! VL datatype identifier 
  INTEGER, INTENT(OUT) :: hdferr           ! Error code
END SUBROUTINE h5tvlen_create_f
    </pre>

<p>
<dt><strong>History:</strong>
    <dd><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>Change</strong></td></tr>
        <tr>
          <td valign="top">1.4.5</td>
          <td valign="top">
            Fortran subroutine introduced in this release.</td></tr>
    </table></dd>
</dl>

