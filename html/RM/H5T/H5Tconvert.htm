

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Tconvert" -->
<hr>
<dl>

<dt><div align=right><font color=999999 size=-1><i>
    Last modified: 1 February 2013
    </i></font></div>

<dt><strong>Name:</strong> <a name="Datatype-Convert">H5Tconvert</a>
<dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Tconvert</code>(
        <em>hid_t</em> <code>src_type_id</code>,
        <em>hid_t</em> <code>dest_type_id</code>,
        <em>size_t</em> <code>nelmts</code>,
        <em>void *</em><code>buf</code>,
        <em>void *</em><code>background</code>,
        <em>hid_t</em> <code>plist_id</code>
    )

<p>
<dt><strong>Purpose:</strong>
    <dd>Converts data from one specified datatype to another.

<p>
<dt><strong>Description:</strong>
    <dd><code>H5Tconvert</code> converts <code>nelmts</code> elements 
        from a source datatype, specified by <code>src_type_id</code>, 
        to a destination datatype, <code>dest_type_id</code>.  
        The source elements are packed in <code>buf</code> and on return 
        the destination elements will be packed in <code>buf</code>.  
        That is, the conversion is performed in place.  
        <p>
        The optional background buffer is for use with compound datatypes.
        It is an array of <code>nelmts</code> values for the 
        destination datatype which can then be merged with the converted 
        values to recreate the compound datatype.
        For instance, <code>background</code> 
        might be an array of structs with the <code>a</code> and 
        <code>b</code> fields already initialized and the conversion  
        of <code>buf</code> supplies the <code>c</code> and <code>d</code> 
        field values.
        <p>
        The parameter <code>plist_id</code> contains the dataset transfer 
        property list identifier which is passed to the conversion functions.  
        As of Release 1.2, this parameter is only used to pass along the 
        variable-length datatype custom allocation information.

  <p>
  <dt><strong>Programming Note for C++ Developers Using C Functions:</strong>
    <dd>
      <p>If a C routine that takes a function pointer as an argument is 
      called from within C++ code, the C routine should be returned from 
      normally. </p>

      <p>Examples of this kind of routine include callbacks such as 
      <code>H5Pset_elink_cb</code> and <code>H5Pset_type_conv_cb</code> 
      and functions such as <code>H5Tconvert</code> and 
      <code>H5Ewalk2</code>.</p>

      <p>Exiting the routine in its normal fashion allows the HDF5 C 
      Library to clean up its work properly. In other words, if the C++ 
      application jumps out of the routine back to the C++ 
      &ldquo;catch&rdquo; statement, the library is not given the 
      opportunity to close any temporary data structures that were set 
      up when the routine was called. The C++ application should save 
      some state as the routine is started so that any problem that 
      occurs might be diagnosed.</p>


<p>
<dt><strong>Parameters:</strong>
    <dd><table>
        <tr>
            <td valign="top"><em>hid_t</em> <code>src_type_id</code></td>
            <td valign="top">IN: Identifier for the source datatype.</td></tr>
        <tr>
            <td valign="top"><em>hid_t</em> <code>dest_type_id</code></td>
            <td valign="top">IN: Identifier for the destination datatype.</td></tr>
        <tr>
            <td valign="top"><em>size_t</em> <code>nelmts</code></td>
            <td valign="top">IN: Size of array <code>buf</code>.</td></tr>
        <tr>
            <td valign="top"><em>void *</em><code>buf</code></td>
            <td valign="top">IN/OUT: Array containing pre- and post-conversion 
                values.  
                <br>
                <code>H5Tconvert</code> will not resize this buffer; it must be
                large enough to hold the larger of the input and output data.
                </td></tr>
        <tr>
            <td valign="top"><em>void&nbsp;*</em><code>background&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
            <td valign="top">IN: Optional background buffer.</td></tr>
        <tr>
            <td valign="top"><em>hid_t</em> <code>plist_id</code></td>
            <td valign="top">IN: Dataset transfer property list identifier.</td></tr>
    </table></dd>

<p>
<dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.

<p>
<dt><strong>Fortran2003 Interface:</strong> h5tconvert_f
    <dd>

        <?php include("H5T/h5tconvert_f_F03.htm"); ?>

<p>
<dt><strong>History:</strong>
    <dd><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>Change</strong></td></tr>
        <tr>
          <td valign="top">1.8.8</td>
          <td valign="top">
            Fortran subroutine added.</td></tr>
        <tr>
          <td valign="top">1.6.3</td>
          <td valign="top">
            In C function, <code>nelmts</code> parameter type changed to 
            <em>size_t</em>.</td></tr>
        <tr>
          <td valign="top">1.4.0</td>
          <td valign="top">
            In C function, <code>nelmts</code> parameter type changed to 
            <em>hsize_t</em>.</td></tr>
    </table></dd>
</dl>

