

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Tset_size" -->
<hr>
<dl>

<dt><div align=right><font color=999999 size=-1><i>
    Last modified: 7 April 2014
    </i></font></div>

<dt><strong>Name:</strong> <a name="Datatype-SetSize">H5Tset_size</a>
<dt><strong>Signature:</strong>
    <dd><em>herr_t </em><code>H5Tset_size</code>(
        <em>hid_t </em><code>dtype_id</code>,
        <em>size_t</em><code>size</code>
    )

<p>
<dt><strong>Purpose:</strong>
    <dd>Sets the total size for a datatype.

<p>
<dt><strong>Description:</strong>
    <dd><code>H5Tset_size</code> sets the total size in bytes, 
        <code>size</code>, for a datatype.  
        <p>
        The parameter <code>size</code> must have a positive value,
        unless it is passed as <code>H5T_VARIABLE</code> and 
        the datatype is a string datatype.
        <p>
        <i>Numeric datatypes:</i>
        If the datatype is atomic and the size is decreased so that 
        significant bits of the datatype extend beyond the edge of the 
        new size, then the <code>offset</code> property of the datatype 
        is decreased toward zero.  
        If the <code>offset</code> becomes zero and the significant
        bits of the datatype still hang over the edge of the new size, then
        the number of significant bits is decreased.
        <p>
        <i>String or character datatypes:</i>
        The <code>size</code> set for a string datatype should include space 
        for the null-terminator character, otherwise it will not be stored on 
        (or retrieved from) disk.
        Adjusting the <code>size</code> of a string automatically sets the 
        precision to 8*<code>size</code>.  
        <p>
        <i>Variable-length string datatypes:</i>
        If <code>dtype_id</code> is a variable-length string, 
        <code>size</code> must normally be set to <code>H5T_VARIABLE</code>.
        See &ldquo;<a href="RM_H5T.html#CreateVLString">Creating 
        variable-length string datatypes</a>&rdquo;. 
        <p>
        <i>Compound datatypes:</i>
        This function may be used to increase or decrease the size of a
        compound datatype, but the function will fail if the new size 
        is too small to accommodate all member fields.
        <p>
        <i>Ineligible datatypes:</i>
        This function cannot be used with 
            enumerated datatypes (<code>H5T_ENUM</code>),
            array datatypes (<code>H5T_ARRAY</code>),
            variable-length array datatypes (<code>H5T_VLEN</code>),
            or reference datatypes (<code>H5T_REFERENCE</code>).

<p>
<dt><strong>Parameters:</strong>
    <dd><table>
        <tr>
            <td valign="top"><em>hid_t</em>&nbsp;<code>dtype_id&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
            <td valign="top">IN: Identifier of datatype for which the size is 
                being changed
                </td></tr>
        <tr>
            <td valign="top"><em>size_t</em> <code>size</code></td>
            <td valign="top">IN: New datatype size in bytes 
                or <code>H5T_VARIABLE</code>
                </td></tr>
    </table></dd>

<p>
<dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.

<p>
<dt><strong>See Also:</strong>
    <dd>&ldquo;<a href="RM_H5T.html#CreateVLString">Creating 
        variable-length string datatypes</a>&rdquo; 

<p>
<dt><strong>Fortran90 Interface:</strong> h5tset_size_f
    <dd>
    <pre>
SUBROUTINE h5tset_size_f(type_id, size, hdferr) 
  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: type_id  ! Datatype identifier 
  INTEGER(SIZE_T), INTENT(IN) :: size    ! Datatype size
  INTEGER, INTENT(OUT) :: hdferr         ! Error code
                                         ! 0 on success and -1 on failure
END SUBROUTINE h5tset_size_f
    </pre>

</dl>

