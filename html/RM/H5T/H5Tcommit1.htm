<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Tcommit1" -->
<hr>
<dl>

<dt><div align=right><font color=999999 size=-1><i>
    Last modified: 21 October 2010
    </i></font></div>

<dt><strong>Name:</strong> <a name="Datatype-Commit1">H5Tcommit1</a>
<dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Tcommit1</code>(
        <em>hid_t</em> <code>loc_id</code>,
        <em>const char *</em> <code>name</code>,
        <em>hid_t</em> <code>dtype_id</code>
    )
<dt><strong>Purpose:</strong>
    <dd>Commits a transient datatype to a file, creating a new named datatype.
<p>
<dt><strong>Notice:</strong>
    <dd><i>This function is deprecated in favor of the function 
        <a href="RM_H5T.html#Datatype-Commit2"><code>H5Tcommit2</code></a>.</i>
      <p>
<dt><strong>Description:</strong>
    <dd><code>H5Tcommit1</code> commits the transient datatype 
        (not immutable) to a file, turning it into a named datatype.  
        <p>
        The datatype <code>dtype_id</code> is committed as a named datatype 
        at the location <code>loc_id</code>, which is either a file or group 
        identifier, with the name <code>name</code>.
	<p>
	<code>name</code> can be a relative path based at <code>loc_id</code>
        or an absolute path from the root of the file.
        Use of this function requires that any intermediate groups 
        specified in the path already exist.
        <p>
        As is the case for any object in a group, 
        the length of the name of a named datatype is not limited.  
        <p>
        See <a href="#Datatype-CommitAnon"><code>H5Tcommit_anon</code></a> 
        for a discussion of the differences between <code>H5Tcommit</code> 
        and <code>H5Tcommit_anon</code>.
<p>
<dt><strong>Parameters:</strong>
    <ul><table>
        <tr>
          <td valign="top"><em>hid_t</em> <code>loc_id</code></td>
          <td valign="top">IN: File or group identifier</td></tr>
        <tr>
          <td valign="top"><em>const&nbsp;char&nbsp;*</em>&nbsp;<code>name&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
          <td valign="top">IN: Name given to committed datatype</td></tr>
        <tr>
          <td valign="top"><em>hid_t</em> <code>dtype_id</code></td>
          <td valign="top">IN: Identifier of datatype to be committed
            and, upon function&rsquo;s return, 
            identifier for the committed datatype
            </td></tr>
    </table></ul>
<p>
<dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.
<p>
<dt><strong>Fortran90 Interface:</strong> h5tcommit_f
    <dd>
	<pre>
SUBROUTINE h5tcommit_f(loc_id, name, type_id, hdferr) 
  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: loc_id  ! File or group identifier 
  CHARACTER(LEN=*), INTENT(IN) :: name  ! Datatype name within file or group
  INTEGER(HID_T), INTENT(IN) :: type_id ! Datatype identifier 
  INTEGER, INTENT(OUT) :: hdferr        ! Error code
                                        ! 0 on success and -1 on failure
END SUBROUTINE h5tcommit_f
	</pre>		
		
		<!--<dt><strong>Non-C API(s):</strong>
    	<dd>
        
        <img src="Graphics/Java.gif"> 
        <img src="Graphics/C++.gif">
        -->
<p>
<dt><strong>History:</strong>
    <dd><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>C</strong></td></tr>
        <tr>
          <td valign="top">1.8.0</td>
          <td valign="top">
            The function <code>H5Tcommit</code> renamed to 
            <code>H5Tcommit1</code> and deprecated in this release.</td></tr>
    </table>
</dl>


