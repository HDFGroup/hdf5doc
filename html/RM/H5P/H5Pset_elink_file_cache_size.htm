

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Pset_elink_file_cache_size" -->
<hr>
<dl>

  <dt><div align=right><font color=999999 size=-1><i>
      Last modified: 14 April 2011
      </i></font></div>

  <dt><strong>Name:</strong> <a name="Property-SetELinkFileCacheSize">H5Pset_elink_file_cache_size</a>

  <dt><strong>Signature:</strong>
    <dd><em>herr_t </em><code>H5Pset_elink_file_cache_size</code>(
            <em>hid_t </em><code>plist_id</code>,
            <em>unsigned </em><code>efc_size</code>
        )

  <p>
  <dt><strong>Purpose:</strong>
    <dd>Sets the size of the external link open file cache in a file access
        property list.

  <p>
  <dt><strong>Motivation:</strong>
    <dd><code>H5Pset_elink_file_cache_size</code>
      is used to adjust the size of the cache of open files reached through
      external links.  This will reduce the number of times such files are
      opened if external links are accessed repeatedly, improving performance if
      low-level file opens or closes are expensive.

  <p>
  <dt><strong>Description:</strong>
    <dd><code>H5Pset_elink_file_cache_size</code>
      specifies the size of the external link open file cache.  Files are placed
      in this cache when they are opened via an external link from the parent
      file (i.e. the file opened with <code>plist_id</code> as its FAPL).  Files
      in the cache are held open until they are evicted from the cache or the
      parent file is closed.  This can improve performance if external links are
      repeatedly accessed.  The default size of the external file cache is 0.
      <p>
      When the cache is full, files will be evicted using a LRU (least recently
      used) scheme: the file which has gone the longest time without being
      accessed through the parent file will be evicted and closed (if nothing
      else is holding that file open).  When child files contain external file
      caches of their own, they can form a graph of cached external files.
      Closing the last external reference to such a graph will recursively close
      all files in the graph, even if cycles are present.  Note that files
      opened through external links inherit the parent's file access property
      list by default, and therefore inheret the parent's external file cache
      settings.

  <p>
  <dt><strong>Parameters:</strong>
    <dd>
    <table>
      <tr valign="top">
        <td><em>hid_t </em><code>plist_id</code>
            </td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
        <td>IN: File access property list identifier
            </td></tr>
      <tr valign="top">
        <td><em>unsigned&nbsp;</em><code>efc_size</code>
            </td><td>&nbsp;</td>
        <td>IN: External link open file cache size.
            </td></tr>
    </table>

  <p>
  <dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.

  <p>
  <dt><strong>Example Usage:</strong>

    <dd>The following code sets the file access property list
        <code>fapl_id</code> to cache (hold open) up to 8 files reached through
        external links:
<dir><pre>
status = H5Pset_elink_file_cache_size(fapl_id, 8);
</pre></dir>
    <p>


<!--__ *** FORTRAN90 INTERFACE  **********************************  -->
<!--__ When the Fortran90 interface is complete, replace this       -->
<!--__ section with the Fortran90 subroutine description.           -->
<!--__                                                              -->
<!--__ See the file h5fortran_f_insert.htm for a template and       -->
<!--__ instructions.                                                -->
<!--__ ***********************************************************  -->
  <p>

  <p>
  <dt><strong>See Also:</strong>
    <dd><a href="RM_H5P.html#Property-GetELinkFileCacheSize">
        <code>H5Pget_elink_file_cache_size</code></a>,
        &nbsp;
        <a href="RM_H5F.html#Property-ClearELinkFileCache">
        <code>H5Fclear_elink_file_cache</code></a>,
        &nbsp;
        <a href="RM_H5P.html#Property-SetELinkFapl">
        <code>H5Pset_elink_fapl</code></a>,
        &nbsp;
        <a href="RM_H5L.html#Link-CreateExternal">
        <code>H5Lcreate_external</code></a>
        <p>

  <p>
  <dt><strong>History:</strong>
    <dd><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>Change</strong></td>
        </tr>

        <tr>
          <td valign="top">1.8.7</td>
          <td valign="top">
            C function introduced in this release.</td>
        </tr>

        </tr>
        </table>
</dl>


