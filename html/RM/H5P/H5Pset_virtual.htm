

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://www.hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have      *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!--__ ***********************************************************  -->
<!--__ Do not alter the next line; it is used by the PDF generator. -->
<!--__ ***********************************************************  -->
<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Pset_virtual" -->

<hr />
<dl>

<dt><div align="right"><font color="999999" size="-1"><i>
    Last modified: 22 April 2016
    </i></font></div></dt>
    <br />

<dt><strong>Name:</strong>
    <a name="Property-SetVirtual">H5Pset_virtual</a>
    </dt>
    <br />

<dt><strong>Signature:</strong>
    <dd><code><em>herr_t</em> H5Pset_virtual(
        <em>hid_t</em> dcpl_id,
        <em>hid_t</em> vspace_id,
        <em>const char *</em>src_file_name,
        <em>const char *</em>src_dset_name,
        <em>hid_t</em> src_space_id
        )</code>
    </dd></dt>
    <br />

<dt><strong>Purpose:</strong>
    <dd>Sets the mapping between virtual and source datasets.</dt>
    </dd>
    <br />

<dt><strong>Description:</strong>
    <dd><code>H5Pset_virtual</code> maps elements of the virtual dataset (VDS)
        described by the virtual dataspace identifier <code>vspace_id</code>
        to the elements of the source dataset described by the
        source dataset dataspace identifier <code>src_space_id</code>.
        The source dataset is identified by the name of the file where it is
        located, <code>src_file_name</code>, and the name of the dataset,
        <code>src_dset_name</code>.
    </dd></dt>
    <br />

<dt><strong>Parameters:</strong>
    <dd><table width="100%">
        <tr>
            <td valign="top"><code><em>hid_t</em> dcpl_id</code></td>
            <td width="5%"><code>&nbsp;</code></td>
            <td valign="top">IN: The identifier of the
                dataset creation property list that will be used when creating
                the virtual dataset.</td>
        </tr><tr>
            <td valign="top"><code><em>hid_t</em>
                vspace_id</code></td>
            <td><code>&nbsp;</code></td>
            <td valign="top">IN: The dataspace identifier
                with the selection within the virtual dataset applied,
                possibly an unlimited selection.</td>
        </tr><tr>
            <td valign="top"><code><em>const&nbsp;char&nbsp;*</em>src_file_name</code></td>
            <td><code>&nbsp;</code></td>
            <td valign="top">IN: The name of the HDF5 file
                where the source dataset is located.
                The file might not exist yet.
                The name can be specified using a C-style <code>printf</code>
                statement as described below.</td>
        </tr><tr>
            <td valign="top"><code><em>const char *</em>src_dset_name</code></td>
            <td><code>&nbsp;</code></td>
            <td valign="top">IN: The path to the HDF5 dataset
                in the file specified by <code>src_file_name</code>.
                The dataset might not exist yet. The dataset name can be
                specified using a C-style <code>printf</code> statement
                as described below.</td>
        </tr><tr>
            <td valign="top"><code><em>hid_t</em>
                src_space_id</code></td>
            <td><code>&nbsp;</code></td>
            <td valign="top">IN: The source dataset&rsquo;s
                dataspace identifier with a selection applied,
                possibly an unlimited selection</td>
        </tr>
    </table></dd>
    </dt>
    <br />

<dt><strong>C-style <code>printf</code> Formatting Statements:</strong>
    <dd>C-style printf formatting allows a pattern to be specified in the name
        of a source file or dataset.  Strings for the file and dataset names
        are treated as literals except for the following substitutions:

        <p>
        <dir>
        <table width="100%">
        <tr>
            <td valign="top"><code><em>"%%"</em></code></td>
            <td width="5%"><code>&nbsp;</code></td>
            <td valign="top">Replaced with a single <code>"%"</code>
                (percent) character.</td>
        </tr><tr>
            <td valign="top"><code><em>"%&lt;d&gt;b"</em></code></td>
            <td><code>&nbsp;</code></td>
            <td valign="top">Where <code><em>"&lt;d&gt;</em></code>
                is the virtual dataset dimension axis (0-based)
                and "<code><em>b</em></code>" indicates that the block count
                of the selection in that dimension should be used.
                The full expression (for example, "<code><em>%0b</em></code>")
                is replaced with a single numeric value when the mapping is
                evaluated at VDS access time. Example code for many source
                and virtual dataset mappings is available in the
                &ldquo;Examples of Source to Virtual Dataset Mapping&rdquo;
                chapter in &ldquo;RFC: HDF5 Virtual Dataset&rdquo;
                (see [1]).
                </td>
        </tr>
        </table>
        </dir>
        </p>

        <p>
        If the <code>printf</code> form is used for the source file
        or dataset names, the selection in the source dataset&rsquo;s dataspace
        must be fixed-size;
        for more information see [1].
        </p>

    </dd></dt>

<dt><strong>Source File Resolutions:</strong>
    <dd>When a source dataset residing in a different file is accessed,
      the library will search for the source file <code>src_file_name</code>
      as described below:
      <ul>
          <li>If <code>src_file_name</code> is a relative pathname, the
              following steps are performed:
          <ul>
              <li>The library will get the prefix(es) set in the
                  environment variable <code>HDF5_VDS_PREFIX</code> and
                  will try to prepend each prefix to
                  <code>src_file_name</code>
                  to form a new <code>src_file_name</code>.
                  </li>
              <li>If the new <code>src_file_name</code> does not exist
                  or if <code>HDF5_VDS_PREFIX</code> is not set,
                  the library will get the prefix set via
                  <a href="RM_H5P.html#Property-SetVirtualPrefix">
                  <code>H5Pset_virtual_prefix</code></a> and
                  prepend it to <code>src_file_name</code>
                  to form a new <code>src_file_name</code>.
                  </li>
              <li>If the new <code>src_file_name</code> does not exist
                  or no prefix is being set
                  by <a href="RM_H5P.html#Property-SetVirtualPrefix">
                  <code>H5Pset_virtual_prefix</code></a>,
                  then the path of the file containing the virtual dataset
                  is obtained.
                  This path can be the absolute path or the
                  current working directory plus the relative path
                  of that file when it is created/opened.
                  The library will
                  prepend this path to <code>src_file_name</code>
                  to form a new <code>src_file_name</code>.
                  </li>
              <li>If the new <code>src_file_name</code> does not exist,
                  then the library will look for
                  <code>src_file_name</code>
                  and will return failure/success accordingly.
                  </li>
          </ul>
          </li>
          <li>If <code>src_file_name</code> is an absolute pathname, the
              library will first try to find <code>src_file_name</code>.
              If <code>src_file_name</code> does not exist,
              <code>src_file_name</code> is stripped of directory paths
              to form a new <code>src_file_name</code>.
              The search for the new <code>src_file_name</code> then follows
              the same steps as described above for a relative pathname.
              See examples below illustrating how <code>src_file_name</code>
              is stripped to form a new <code>src_file_name</code>.
              </li>
      </ul>

      <p>
      Note that <code>src_file_name</code> is considered to be an absolute
      pathname when the following condition is true:
      <ul>
          <li>For Unix, the first character of <code>src_file_name</code>
              is a slash ( <code>/</code> ).
              <p>
              For example, consider a <code>src_file_name</code>
              of <code>/tmp/A.h5</code>.
              If that source file does not exist,
              the new <code>src_file_name</code> after stripping
              will be <code>A.h5</code>.
              </p>
          </li>
          <li>For Windows, there are 6 cases:
              <ol>
                  <li><code>src_file_name</code> is an absolute drive with
                      absolute pathname.
                      <p>
                      For example, consider a <code>src_file_name</code>
                      of <code>/tmp/A.h5</code>.
                      If that source file does not exist,
                      the new <code>src_file_name</code> after stripping
                      will be <code>A.h5</code>.
                      </p>
                      </li>
                  <li><code>src_file_name</code> is an absolute pathname
                      without specifying drive name.
                      <p>
                      For example, consider a <code>src_file_name</code>
                      of <code>/tmp/A.h5</code>.
                      If that source file does not exist,
                      the new <code>src_file_name</code> after stripping
                      will be <code>A.h5</code>.
                      </p>
                      </li>
                  <li><code>src_file_name</code> is an absolute drive with
                      relative pathname.
                      <p>
                      For example, consider a <code>src_file_name</code>
                      of <code>/tmp/A.h5</code>.
                      If that source file does not exist,
                      the new <code>src_file_name</code> after stripping
                      will be <code>tmp\A.h5</code>.
                      </li>
                  <li><code>src_file_name</code> is in UNC (Uniform Naming
                      Convention) format with server name, share name,
                      and pathname.
                      <p>
                      For example, consider a <code>src_file_name</code>
                      of <code>/tmp/A.h5</code>.
                      If that source file does not exist,
                      the new <code>src_file_name</code> after stripping
                      will be <code>A.h5</code>.</p>
                      </p>
                      </li>
                  <li><code>src_file_name</code> is in Long UNC
                      (Uniform Naming Convention) format with server name,
                      share name, and pathname.
                      <p>
                      For example, consider a <code>src_file_name</code>
                      of <code>/tmp/A.h5</code>.
                      If that source file does not exist,
                      the new <code>src_file_name</code> after stripping
                      will be <code>A.h5</code>
                      </p>
                      </li>
                  <li><code>src_file_name</code> is in Long UNC
                      (Uniform Naming Convention) format with an absolute drive
                      and an absolute pathname.
                      <p>
                      For example, consider a <code>src_file_name</code>
                      of <code>/tmp/A.h5</code>.
                      If that source file does not exist,
                      the new <code>src_file_name</code> after stripping
                      will be <code>A.h5</code>
                      </p>
                      </li>
              </ol>
          </li>
      </ul>
      </p>
    </dt>
    <br />

<dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.</dd>
    </dt>
    <br />

<dt><strong>Fortran Interface:</strong> h5pset_virtual_f
    <dd>

        <?php include("H5P/h5pset_virtual_f.htm"); ?>

        </dd>
    </dt>
    <br />

<dt><strong>See Also:</strong></dt>
    <dd>
    <table width="100%" border="0">
    <tr><td width="50%"align="left" valign="top">
          <li>&ldquo;<a href="/HDF5/docNewFeatures/NewFeaturesVirtualDatasetDocs.html">Virtual Dataset Overview</a>&rdquo;</li>
          <li>&ldquo;<a href="/HDF5/docNewFeatures/VDS/UsingVirtualDatasets/index.html">Using HDF5 Virtual Datasets</a>&rdquo;
              <br />&nbsp;</li>
<!--
          <li>&ldquo;<a href="../Advanced/UsingVirtualDatasets/index.html">Using HDF5 Virtual Datasets</a>&rdquo;</li>
-->
          &nbsp;<br />
          <b>Supporting functions:</b>
          <li><a href="#Property-SetLayout">H5Pset_layout</a></li>
          <li><a href="#Property-GetLayout">H5Pget_layout</a></li>
          <li><a href="RM_H5S.html#Dataspace-IsRegularHyperslab">H5Sis_regular_hyperslab</a></li>
          <li><a href="RM_H5S.html#Dataspace-GetRegularHyperslab">H5Sget_regular_hyperslab</a></li>
          <li><a href="RM_H5S.html#Dataspace-SelectHyperslab">H5Sselect_hyperslab</a></li>
    </td><td width="50%"align="left" valign="top">
          <b>VDS functions:</b>
<!--
          <li><a href="#Property-SetVirtual">H5Pset_virtual</a></li>
-->
          <li><a href="#Property-GetVirtualCount">H5Pget_virtual_count</a></li>
          <li><a href="#Property-GetVirtualVspace">H5Pget_virtual_vspace</a></li>
          <li><a href="#Property-GetVirtualSrcspace">H5Pget_virtual_srcspace</a></li>
          <li><a href="#Property-GetVirtualFilename">H5Pget_virtual_filename</a></li>
          <li><a href="#Property-GetVirtualDsetname">H5Pget_virtual_dsetname</a></li>
          <li><a href="#Property-SetVirtualPrintfGap">H5Pset_virtual_printf_gap</a></li>
          <li><a href="#Property-GetVirtualPrintfGap">H5Pget_virtual_printf_gap</a></li>
          <li><a href="#Property-SetVirtualView">H5Pset_virtual_view</a></li>
          <li><a href="#Property-GetVirtualView">H5Pget_virtual_view</a>
          <li><a href="#Property-SetVirtualPrefix">H5Pset_virtual_prefix</a></li>
          <li><a href="#Property-GetVirtualPrefix">H5Pget_virtual_prefix</a>
    </td></tr>
    </table>
    </dd>
    <br />

<dt><strong>History:</strong></dt>
    <dd>
    <table width="90%">
    <tr>
        <td valign="top" align="left" width="10%">
        <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
        <td valign="top" align="left">
        <strong>Change</strong></td>
    </tr><tr>
        <td valign="top">1.10.0</td>
        <td valign="top">
        C function introduced with this release.</td>
    </tr>
    </table>
    </dd>

</dl>
<br />
<br />
<br />



