

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Pget_cache" -->
<hr>
<dl>
  <dt><strong>Name:</strong> <a name="Property-GetCache">H5Pget_cache</a>
  <dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Pget_cache</code>(<em>hid_t</em> <code>plist_id</code>,
        <em>int</em> <code>*mdc_nelmts</code>,
        <em>size_t</em> <code>*rdcc_nelmts</code>,
        <em>size_t</em> <code>*rdcc_nbytes</code>,
        <em>double</em> <code>*rdcc_w0</code>
    )
  <dt><strong>Purpose:</strong>
    <dd>Queries the raw data chunk cache parameters.  
  <dt><strong>Description:</strong>
    <dd><code>H5Pget_cache</code> retrieves 
        the maximum possible number of elements in the raw data chunk cache, 
        the maximum possible number of bytes in the raw data chunk cache, 
        and the preemption policy value.
        <p>
        Any (or all) arguments may be null pointers, in which case the 
        corresponding datum is not returned.
        <p>
        Note that the <code>*mdc_nelmts</code> parameter is no longer used.
  <dt><strong>Parameters:</strong>
    <ul><table>
        <tr>
            <td valign="top"><em>hid_t</em> <code>plist_id</code></td>
            <td valign="top">IN: Identifier of the file access property list.</td></tr>
        <tr>
            <td valign="top"><em>int</em> <code>*mdc_nelmts</code></td>
            <td valign="top">IN/OUT: <i>No longer used.</i></td></tr>
        <tr>
            <td valign="top"><em>size_t</em> <code>*rdcc_nelmts</code></td>
            <td valign="top">IN/OUT: Number of elements (objects) in the raw data chunk cache.</td></tr>
        <tr>
            <td valign="top"><em>size_t</em>&nbsp;<code>*rdcc_nbytes&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
            <td valign="top">IN/OUT: Total size of the raw data chunk cache, in bytes.</td></tr>
        <tr>
            <td valign="top"><em>double</em> <code>*rdcc_w0</code></td>
            <td valign="top">IN/OUT: Preemption policy.</td></tr>
    </table></ul>
  <dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.
  <dt><strong>Fortran90 Interface:</strong> h5pget_cache_f
    <dd>
	<pre>
SUBROUTINE h5pget_cache_f(prp_id, mdc_nelmts, rdcc_nelmts, rdcc_nbytes,
                          rdcc_w0, hdferr)
  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: prp_id         ! Property list identifier
  INTEGER, INTENT(OUT) :: mdc_nelmts           ! Number of elements (objects)
                                               ! in the meta data cache
  INTEGER(SIZE_T), INTENT(OUT) :: rdcc_nelmts  ! Number of elements (objects)
                                               ! in the meta data cache
  INTEGER(SIZE_T), INTENT(OUT) :: rdcc_nbytes  ! Total size of the raw data
                                               ! chunk cache, in bytes
  REAL, INTENT(OUT) :: rdcc_w0                 ! Preemption policy
  INTEGER, INTENT(OUT) :: hdferr               ! Error code
                                               ! 0 on success and -1 on failure
END SUBROUTINE h5pget_cache_f
	</pre>		
		
		<!--<dt><strong>Non-C API(s):</strong>
    	<dd>
        
        <img src="Graphics/Java.gif"> 
        <img src="Graphics/C++.gif">
        -->
  <dt><strong>History:</strong>
    <ul><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>C</strong></td></tr>
        <tr>
          <td valign="top">1.8.0</td>
          <td valign="top">
            Use of the <code>mdc_nelmts</code> parameter discontinued.
            <br>
            Metadata cache configuration is managed with
            <a href="#Property-SetMdcConfig">H5Pset_mdc_config</a> and
            <a href="#Property-GetMdcConfig">H5Pget_mdc_config</a>.
            </td></tr>
        <tr>
          <td valign="top">1.6.0</td>
          <td valign="top">
            The <code>rdcc_nbytes</code> and <code>rdcc_nelmts</code>
            parameters changed from 
            type <em>int</em> to <em>size_t</em>.</td></tr>
    </table></ul>
</dl>


