<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Pset_fletcher32" -->
<hr>
<dl>

  <dt><div align=right><font color=999999 size=-1><i>
      Last modified: 20 May 2010
      </i></font></div>

  <dt><strong>Name:</strong> <a name="Property-SetFletcher32">H5Pset_fletcher32</a>
  <dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Pset_fletcher32</code>(
            <em>hid_t</em> <code>plist</code>
            )

  <p>
  <dt><strong>Purpose:</strong>
    <dd>Sets up use of the Fletcher32 checksum filter.

  <p>
  <dt><strong>Description:</strong>
    <dd><code>H5Pset_fletcher32</code> sets the Fletcher32 checksum filter
        in the dataset creation property list <code>plist</code>.

  <p>
  <dt><strong>Note:</strong>
    <dd>The initial error detection implementation supports 
        error detection for chunked datasets only.

  <p>
  <dt><strong>Note:</strong>
    <dd>The Fletcher32 EDC checksum filter was added in HDF5 Release 1.6.0. 
        In the original implementation, however, the checksum value was 
        calculated incorrectly on little-endian systems. 
        The error was fixed in HDF5 Release 1.6.3. 
        <p>
        As a result of this fix, an HDF5 Library of Release 1.6.0 through 
        Release 1.6.2 cannot read a dataset created or written with 
        Release 1.6.3 or later if the dataset was created with the checksum 
        filter and the filter is enabled in the reading library.
        (Libraries of Release 1.6.3 and later understand the earlier error 
        and comensate appropriately.)
        <p>
        <strong>Work-around:</strong> 
        An HDF5 Library of Release 1.6.2 or earlier will be able to read 
        a dataset created or written with the checksum filter by an 
        HDF5 Library of Release 1.6.3 or later if the checksum filter is 
        disabled for the read operation. This can be accomplished via a call to
        <a href="#Property-SetEdcCheck"><code>H5Pset_edc_check</code></a> 
        with the value <code>H5Z_DISABLE_EDC</code> in the second parameter. 
        This has the obvious drawback that the application will be unable 
        to verify the checksum, but the data does remain accessible. 

  <p>
  <dt><strong>Parameters:</strong>
    <dd><table>
        <tr>
            <td valign="top"><em>hid_t</em>&nbsp;<code>plist&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
            <td valign="top">IN: Dataset creation property list 
                identifier.</td></tr>
    </table></dd>

  <p>
  <dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.

  <p>
  <dt><strong>Fortran90 Interface:</strong> h5pset_fletcher32_f
    <dd>
<pre>
SUBROUTINE h5pset_fletcher32_f(prp_id, hdferr) 
  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: prp_id  ! Dataset creation property list 
                                        ! identifier 
  INTEGER, INTENT(OUT)       :: hdferr  ! Error code
                                        ! 0 on success and -1 on failure
END SUBROUTINE h5pset_fletcher32_f
</pre>

  <p>
  <dt><strong>History:</strong>
    <dd><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>Change</strong></td></tr>
        <tr>
          <td valign="top">1.6.0</td>
          <td valign="top">
            Function introduced in this release.</td></tr>
        <tr>
          <td valign="top">1.6.3</td>
          <td valign="top">
            Error in checksum calculation on little-endian systems corrected
            in this release.</td></tr>
    </table></dd>
</dl>

