

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Pget_attr_phase_change" -->
<hr>
<dl>
  <dt><strong>Name:</strong> <a name="Property-GetAttrPhaseChange">H5Pget_attr_phase_change</a>
  <dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Pget_attr_phase_change</code>(
            <em>hid_t</em> <code>ocpl_id</code>,
            <em>unsigned</em> *<code>max_compact</code>,
            <em>unsigned</em> *<code>min_dense</code>
    )
  <p>
  <dt><strong>Purpose:</strong>
    <dd>Retrieves attribute storage phase change thresholds.
  <p>
  <dt><strong>Description:</strong>
    <dd><code>H5Pget_attr_phase_change</code> retrieves threshold values
        for attribute storage on an object.
        These thresholds determine the point at which attribute storage 
        changes from compact storage (i.e., storage in the object header)
        to dense storage (i.e., storage in a heap and indexed with a B-tree).
        <p>
        In the general case, attributes are initially kept in compact storage.
        When the number of attributes exceeds <code>max_compact</code>,
        attribute storage switches to dense storage.
        If the number of attributes subsequently falls below 
        <code>min_dense</code>, the attributes are returned to compact storage.
        <p>
        If <code>max_compact</code> is set to <code>0</code> (zero),
        dense storage always used.
        <p>
        <code>ocpl_id</code> is a dataset or group creation property list 
        identifier.  The term <code>ocpl</code>, for object creation property 
        list, is used when different types of objects may be involved.
  <p>
  <dt><strong>Parameters:</strong>
    <dd><table>
      <tr>
        <td valign="top"><em>hid_t</em> <code>ocpl_id</code>
        </td>
        <td valign="top">IN: Object (dataset or group)  creation property list 
            identifier
        </td></tr>
      <tr>
        <td valign="top"><em>unsigned</em> *<code>max_compact&nbsp;&nbsp;</code>
        </td>
        <td valign="top">OUT: Maximum number of attributes to be stored 
            in compact storage
            <br>
            <i>(Default: 8)</i>
        </td></tr>
      <tr>
        <td valign="top"><em>unsigned</em>&nbsp;*<code>min_dense</code>&nbsp;&nbsp;&nbsp;&nbsp;
        </td>
        <td valign="top">OUT: Minimum number of attributes to be stored
            in dense storage
            <br>
            <i>(Default: 6)</i>
        </td></tr>
    </table>
  <p>
  <dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.
  <p>
  <dt><strong>Fortran90 Interface:</strong> h5pget_attr_phase_change_f
    <dd>
    <pre>
SUBROUTINE h5pget_attr_phase_change_f(ocpl_id, max_compact, min_dense, hdferr)
  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: ocpl_id 
                  ! Object (dataset or group) creation property list identifier
  INTEGER, INTENT(OUT) :: max_compact  
                  ! Maximum number of attributes to be stored in compact storage
                  ! (Default: 8)
  INTEGER, INTENT(OUT) :: min_dense  
                  ! Minimum number of attributes to be stored in dense storage
                  ! (Default: 6)
  INTEGER, INTENT(OUT) :: hdferr  
                  ! Error code:
                  ! 0 on success and -1 on failure
END SUBROUTINE h5pget_attr_phase_change_f
    </pre>
        <!--<dt><strong>Non-C API(s):</strong>
    	<dd>
        
        <img src="Graphics/Java.gif"> 
        <img src="Graphics/C++.gif">
        -->
  <p>
  <dt><strong>History:</strong>
    <dd><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>C</strong></td></tr>
        <tr>
          <td valign="top">1.8.0</td>
          <td valign="top">
            Function introduced in this release.</td></tr>
    </table>
</dl>


