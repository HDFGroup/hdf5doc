<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Pget_driver" -->
<hr>
<dl>
  <dt><strong>Name:</strong> <a name="Property-GetDriver">H5Pget_driver</a>
  <dt><strong>Signature:</strong>
    <dd><em>hid_t</em> <code>H5Pget_driver</code>(
                     <em>hid_t</em> <code>plist_id</code>
    )
  <dt><strong>Purpose:</strong>
    <dd>Returns low-lever driver identifier.
  <dt><strong>Description:</strong>
    <dd><code>H5Pget_driver</code> returns the identifier of the 
        low-level file driver associated with the file access property list 
        or data transfer property list <code>plist_id</code>.
        <p>
        Valid driver identifiers with the standard HDF5 library distribution
        include the following:
        <pre>
           H5FD_CORE
           H5FD_DIRECT
           H5FD_FAMILY
           H5FD_LOG
           H5FD_MPIO
           H5FD_MULTI
           H5FD_SEC2
           H5FD_STDIO   <!--
           H5FD_STREAM    -->
           H5FD_WINDOWS <font face=times,arial><i>(Windows only)</i></font></pre>
        If a user defines and registers custom drivers or 
        if additional drivers are defined in an HDF5 distribution, 
        this list will be longer.
        <p>
        The <a href="#Property-SetFaplWindows">Windows driver</a>, 
        <code>H5FD_WINDOWS</code>, is available only on Windows systems.
        <p>
        The returned driver identifier is only valid as long as the 
        file driver remains registered.
  <dt><strong>Parameters:</strong>
    <ul><table>
        <tr>
            <td valign="top"><em>hid_t</em>&nbsp;<code>plist_id&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
            <td valign="top">IN: File access or data transfer property list 
                identifier.</td></tr>
    </table></ul>
  <dt><strong>Returns:</strong>
    <dd>Returns a valid low-level driver identifier if successful.
        Otherwise returns a negative value.
  <dt><strong>Fortran90 Interface:</strong> h5pget_driver_f
    <dd>
	<pre>
SUBROUTINE h5pget_driver_f(prp_id, driver, hdferr)
  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: prp_id ! Property list identifier
  INTEGER, INTENT(OUT) :: driver       ! Low-level file driver identifier
  INTEGER, INTENT(OUT) :: hdferr       ! Error code
                                       ! 0 on success and -1 on failure
END SUBROUTINE h5pget_driver_f
	</pre>		
		
		<!--<dt><strong>Non-C API(s):</strong>
    	<dd>
        
        <img src="Graphics/Java.gif"> 
        <img src="Graphics/C++.gif">
        -->
  <dt><strong>History:</strong>
	<ul><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>C</strong></td></tr>
        <tr>
          <td valign="top">1.4.0</td>
          <td valign="top">
            Function introduced in this release.</td></tr>
    </table></ul>
</dl>


<!--        ********** See also TechNotes/VFLfunc.html **********        -->
<hr>
<dl>
  <dt><strong>Name:</strong> <a name="Property-GetDriverInfo">H5Pget_driver_info</a>
  <dt><strong>Signature:</strong>
    <dd><em>void *</em><code>H5Pget_driver_info</code>(
                     <em>hid_t</em> <code>plist_id</code>
    )
  <p>
  <dt><strong>Purpose:</strong>
    <dd>Returns a pointer to file driver information.
  <p>
  <dt><strong>Description:</strong>
    <dd><code>H5Pget_driver_info</code> returns a pointer to  
        file driver-specific information for the low-level driver 
        associated with the file access or data transfer property list
        <code>plist_id</code>.
        <p>
        The pointer returned by this function points to an 
        &ldquo;uncopied&rdquo; struct.
        Driver-specific versions of that struct are defined for each 
        low-level driver in the relevant source code file 
        <code>H5FD*.c</code>.
        For example, the struct used for the <code>MULTI</code> driver
        is <code>H5FD_multi_fapl_t</code> defined in <code>H5FDmulti.c</code>.
        <p>
        If no driver-specific properties have been registered, 
        <code>H5Pget_driver_info</code> returns <code>NULL</code>. 
  <p>
  <dt><strong>Note:</strong>
    <dd><code>H5Pget_driver_info</code> and <code>H5Pset_driver</code> 
        are used only when creating a virtual file driver (VFD) 
        in the virtual file layer (VFL).  For further information, see
        &ldquo;<a href="../TechNotes/VFL.html">Virtual File Layer</a>&rdquo;
        and &ldquo;<a href="../TechNotes/VFLfunc.html">List of VFL 
        Functions</a>&rdquo; in the 
        <a href="../TechNotes.html"><cite>HDF5 Technical Notes</cite></a>.
  <p>
  <dt><strong>Parameters:</strong>
    <dl>
        <dt><em>hid_t</em> <code>plist_id</code>
            <dd>IN: File access or data transfer property list identifier.
    </dl>
  <p>
  <dt><strong>Returns:</strong>
    <dd>Returns a pointer to a struct containing 
        low-level driver information. 
        Otherwise returns <code>NULL</code>.
        <p>
        <code>NULL</code> is also returned if no driver-specific properties
        have been registered.  
        No error is pushed on the stack in this case.
  <p>
  <dt><strong>Non-C API(s):</strong>
    <dd>None.
  <p>
  <dt><strong>History:</strong>
    <ul><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>C</strong></td></tr>
        <tr>
          <td valign="top">1.8.2</td>
          <td valign="top">
            Function publicized in this release;
            previous releases described this function only in the 
            virtual file driver documentation.</td></tr>
    </table></ul>
</dl>


