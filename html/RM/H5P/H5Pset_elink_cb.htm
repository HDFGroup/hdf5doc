

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Pset_elink_cb" -->
<hr>
<dl>

  <dt><div align=right><font color=999999 size=-1><i>
    Last modified: 18 June 2013
      </i></font></div>

  <dt><strong>Name:</strong> <a name="Property-SetELinkCb">H5Pset_elink_cb</a>

  <dt><strong>Signature:</strong>
    <dd><em>herr_t </em><code>H5Pset_elink_cb</code>(
            <em>hid_t </em><code>lapl_id</code>,
            <em>H5L_elink_traverse_t </em><code>func</code>,
            <em>void *</em><code>op_data</code>
        )

  <p>
  <dt><strong>Purpose:</strong>
    <dd>Sets the external link traversal callback function in a
        link access property list.

  <p>
  <dt><strong>Motivation:</strong>
    <dd><code>H5Pset_elink_cb</code>
      is used to specify a callback function that is executed by the 
      HDF5 Library when traversing an external link.  
      This provides a mechanism to 
          set specific access permissions, 
          modify the file access property list, 
          modify the parent or target file, or 
          take any other user-defined action.
      This callback function is used in situations where the HDF5 Library's 
      default behavior is not suitable.

  <p>
  <dt><strong>Description:</strong>
    <dd><code>H5Pset_elink_cb</code>
      sets a user-defined external link traversal callback function in the
      link access property list <code>lapl_id</code>.
      The callback function <code>func</code> must conform to the prototype 
      specified in <a href="H5L/H5L_elink_traverse_t.htm">
      <code>H5L_elink_traverse_t</code></a>.
      <p>
      The callback function may adjust the file access property list and file
      access flags to use when opening a file through an external link. The
      callback will be executed by the HDF5 Library immediately before 
      opening the target file.
      <p>
      The callback will be made after the file access property list set by
      <a href="RM_H5P.html#Property-SetELinkFapl">
      <code>H5Pset_elink_fapl</code></a>
      and the file access flag set by
      <a href="RM_H5P.html#Property-SetELinkAccFlags">
      <code>H5Pset_elink_acc_flags</code></a> are applied, 
      so changes made by this callback function will take precedence.
      
  <p>
  <dt><strong>Programming Note for C++ Developers Using C Functions:</strong>
    <dd>
      <p>If a C routine that takes a function pointer as an argument is 
      called from within C++ code, the C routine should be returned from 
      normally. </p>

      <p>Examples of this kind of routine include callbacks such as 
      <code>H5Pset_elink_cb</code> and <code>H5Pset_type_conv_cb</code> 
      and functions such as <code>H5Tconvert</code> and 
      <code>H5Ewalk2</code>.</p>

      <p>Exiting the routine in its normal fashion allows the HDF5 C 
      Library to clean up its work properly. In other words, if the C++ 
      application jumps out of the routine back to the C++ 
      &ldquo;catch&rdquo; statement, the library is not given the 
      opportunity to close any temporary data structures that were set 
      up when the routine was called. The C++ application should save 
      some state as the routine is started so that any problem that 
      occurs might be diagnosed.</p>


  <p>
  <dt><strong>Note:</strong>
    <dd>A file close degree property setting 
        (<a href="RM_H5P.html#Property-SetFcloseDegree"><code>H5Pset_fclose_degree</code></a>)
        in this callback function or an associated property list will be ignored.
        A file opened by means of traversing an external link 
        is always opened with the weak file close degree property setting,
        <code>H5F_CLOSE_WEAK</code>.

  <p>
  <dt><strong>Parameters:</strong>
    <dd>
    <table>
      <tr valign="top">
        <td><em>hid_t </em><code>lapl_id</code>
            </td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
        <td>IN: Link access property list identifier.
            </td></tr>
      <tr valign="top">
        <td><em><a href="H5L/H5L_elink_traverse_t.htm">H5L_elink_traverse_t</a>&nbsp;</em><code>func</code>
            </td><td>&nbsp;</td>
        <td>IN: User-defined external link traversal callback function.
            </td></tr>
      <tr valign="top">
        <td><em>void *</em><code>op_data</code>
            </td><td>&nbsp;</td>
        <td>IN: User-defined input data for the callback function.
            </td></tr>
    </table>

  <p>
  <dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.

  <p>
  <dt><strong>Failure Modes:</strong>
    <dd><code>H5Pset_elink_cb</code> will fail if the link access property
        list identifier, <code>lapl_id</code>, is invalid or
        if the function pointer, <code>func</code>, is <code>NULL</code>.
        <p>
        An invalid function pointer, <code>func</code>, will cause a
        segmentation fault or other failure when an attempt is subsequently 
        made to traverse an external link.

  <p>
  <dt><strong>Example Usage:</strong>
    <dd>This example defines a callback function that prints the name of the
        target file every time an external link is followed, and sets this
        callback function on <code>lapl_id</code>
<dir><pre>
herr_t elink_callback(const char *parent_file_name, const char
        *parent_group_name, const char *child_file_name, const char
        *child_object_name, unsigned *acc_flags, hid_t fapl_id, void *op_data) {
    puts(child_file_name);
    return 0;
}

int main(void) {
    hid_t lapl_id = H5Pcreate(H5P_LINK_ACCESS);
    H5Pset_elink_cb(lapl_id, elink_callback, NULL);
    ...
}
</pre></dir>
    <p>


<!--__ *** FORTRAN90 INTERFACE  **********************************  -->
<!--__ When the Fortran90 interface is complete, replace this       -->
<!--__ section with the Fortran90 subroutine description.           -->
<!--__                                                              -->
<!--__ See the file h5fortran_f_insert.htm for a template and       -->
<!--__ instructions.                                                -->
<!--__ ***********************************************************  -->
  <p>

  <p>
  <dt><strong>See Also:</strong>
    <dd><a href="RM_H5P.html#Property-GetELinkCb">
        <code>H5Pget_elink_cb</code></a>
        <p>

        <a href="RM_H5P.html#Property-SetELinkFapl">
        <code>H5Pset_elink_fapl</code></a>,
        &nbsp;
        <a href="RM_H5P.html#Property-SetELinkAccFlags">
        <code>H5Pset_elink_acc_flags</code></a>,
        &nbsp;
        <a href="RM_H5L.html#Link-CreateExternal">
        <code>H5Lcreate_external</code></a>
        <p>

        <a href="RM_H5F.html#File-Open">
        <code>H5Fopen</code></a> for discussion of 
        <code>H5F_ACC_RDWR</code> and <code>H5F_ACC_RDONLY</code>
        file access flags
        <p>

        <a href="H5L/H5L_elink_traverse_t.htm">
        <code>H5L_elink_traverse_t</code></a>

  <p>
  <dt><strong>History:</strong>
    <dd><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>Change</strong></td>
        </tr>

        <tr>
          <td valign="top">1.8.3</td>
          <td valign="top">
            C function introduced in this release.</td>
        </tr>
        </table>
</dl>


