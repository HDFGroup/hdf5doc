

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Pset_fapl_direct" -->
<hr>
<dl>
  <dt><strong>Name:</strong> <a name="Property-SetFaplDirect">H5Pset_fapl_direct</a>
  <dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Pset_fapl_direct</code>(
            <em>hid_t</em> <code>fapl_id</code>,
            <em>size_t</em> <code>alignment</code>,
            <em>size_t</em> <code>block_size</code>,
            <em>size_t</em> <code>cbuf_size</code>
    )
  <p>
  <dt><strong>Purpose:</strong>
    <dd>Sets up use of the direct I/O driver.
  <p>
  <dt><strong>Description:</strong>
    <dd><code>H5Pset_fapl_direct</code> sets the 
        file access property list, <code>fapl_id</code>, 
        to use the direct I/O driver, <code>H5FD_DIRECT</code>.  
        With this driver, data is written to or read from the file 
        synchronously without being cached by the system.  
        <p>
        File systems usually require the data address in memory, 
        the file address, and the size of the data to be aligned.  
        The HDF5 Library&rsquo;s direct I/O driver is able to handle 
        unaligned data, though that will consume some additional 
        memory resources and may slow performance.  
        To get better performance, use the system function 
        <code>posix_memalign</code> to align the data buffer in memory 
        and the HDF5 function <code>H5Pset_alignment</code> 
        to align the data in the file.  
        Be aware, however, that aligned data I/O may cause the 
        HDF5 file to be bigger than the actual data size would otherwise
        require because the alignment may leave some holes in the file.
        <p>
        <code>alignment</code> specifies the required alignment boundary 
        in memory.
        <p>
        <code>block_size</code> specifies the file system block size.
        A value of <code>0</code> (zero) means to use HDF5 Library&rsquo;s 
        default value of 4KB.
        <p>
        <code>cbuf_size</code> specifies the copy buffer size.
  <p>
  <dt><strong>Note:</strong>
    <dd>On an SGI Altix Linux 2.6 system, the memory alignment must be 
        a multiple of 512 bytes, and the file system block size is 4KB.  
        The maximum size for the copy buffer has to be a multiple of 
        the file system block size.  The HDF5 Library&rsquo;s 
        default maximum copy buffer size is 16MB.  This copy buffer 
        is used by the library&rsquo;s internal algorithm to copy data 
        in fragments between an application&rsquo;s unaligned buffer 
        and the file.  The buffer&rsquo;s size may affect I/O performance.  
  <p>
  <dt><strong>Parameters:</strong>
    <dd><table>
      <tr>
        <td valign="top"><em>hid_t</em> <code>fapl_id</code>
        </td>
        <td valign="top">IN: File access property list identifier
        </td></tr>
      <tr>
        <td valign="top"><em>size_t</em> <code>alignment</code>
        </td>
        <td valign="top">IN: Required memory alignment boundary
        </td></tr>
      <tr>
        <td valign="top"><em>size_t</em>&nbsp;<code>block_size</code>&nbsp;&nbsp;&nbsp;&nbsp;
        </td>
        <td valign="top">IN: File system block size
        </td></tr>
      <tr>
        <td valign="top"><em>size_t</em> <code>cbuf_size</code>
        </td>
        <td valign="top">IN: Copy buffer size
        </td></tr>
    </table>
  <p>
  <dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.
  <p>
  <dt><strong>Fortran90 Interface:</strong> h5pset_fapl_direct_f
    <dd><pre>
SUBROUTINE h5pset_fapl_direct_f(fapl_id, alignment, block_size, cbuf_size, &
                                hdferr)
  IMPLICIT NONE  
  INTEGER(HID_T), INTENT(IN) :: fapl_id ! File access property list identifier
  INTEGER(SIZE_T), INTENT(IN) :: alignment 	  
                                        ! Required memory alignment boundary
  INTEGER(SIZE_T), INTENT(IN) :: block_size     
                                        ! File system block size
</pre>
<!-- NEW PAGE -->
<pre>
  INTEGER(SIZE_T), INTENT(IN) :: cbuf_size 	  
                                        ! Copy buffer size
  INTEGER, INTENT(OUT) :: hdferr        ! Error code
                                        ! 0 on success and -1 on failure
END SUBROUTINE H5Pset_fapl_direct_f 
    </pre></dd>

  <p>
  <dt><strong>History:</strong>
    <dd><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>C</strong></td></tr>
        <tr>
          <td valign="top">1.8.0</td>
          <td valign="top">
            Function introduced in this release.</td></tr>
    </table>
</dl>


