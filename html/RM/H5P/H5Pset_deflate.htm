<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Pset_deflate" -->
<hr>
<dl>
  <dt><strong>Name:</strong> <a name="Property-SetDeflate">H5Pset_deflate</a>
  <dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Pset_deflate</code>(
        <em>hid_t</em> <code>plist</code>,
        <em>uint</em> <code>level</code>
    )
  <dt><strong>Purpose:</strong>
    <dd>Sets compression method and compression level. 
  <dt><strong>Description:</strong>
    <dd><code>H5Pset_deflate</code> sets the compression method for a 
        dataset creation property list to <code>H5D_COMPRESS_DEFLATE</code>
        and the compression level to <code>level</code>, which should 
        be a value from zero to nine, inclusive.  
        <p>
        Lower compression levels are faster but result in less compression.  
        <p>
        This is the same algorithm as used by the GNU gzip program.
  <dt><strong>Parameters:</strong>
    <ul><table>
        <tr>
            <td valign="top"><em>hid_t</em>&nbsp;<code>plist&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
            <td valign="top">IN: Identifier for the dataset creation 
                property list.</td></tr>
        <tr>
            <td valign="top"><em>uint</em> <code>level</code></td>
            <td valign="top">IN: Compression level.</td></tr>
    </table></ul>
  <dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.
  <dt><strong>Fortran90 Interface:</strong> h5pset_deflate_f
    <dd>
	<pre>
SUBROUTINE h5pset_deflate_f(prp_id, level, hdferr) 
  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: prp_id ! Property list identifier 
  INTEGER, INTENT(IN)        :: level  ! Compression level 
  INTEGER, INTENT(OUT)       :: hdferr ! Error code
                                       ! 0 on success and -1 on failure
END SUBROUTINE h5pset_deflate_f
	</pre>		
		
		<!--<dt><strong>Non-C API(s):</strong>
    	<dd>
        
        <img src="Graphics/Java.gif"> 
        <img src="Graphics/C++.gif">
        -->
</dl>


<!--        ********** See also TechNotes/VFLfunc.html **********        -->
<hr>
<dl>
  <dt><strong>Name:</strong> <a name="Property-SetDriver">H5Pset_driver</a>
  <dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Pset_driver</code>(
                     <em>hid_t</em> <code>plist_id</code>,
                     <em>hid_t</em> <code>new_driver_id</code>,
                     <em>const void *</em><code>new_driver_info</code>
    )
  <p>
  <dt><strong>Purpose:</strong>
    <dd>Sets a file driver.
  <p>
  <dt><strong>Description:</strong>
    <dd><code>H5Pset_driver</code> sets the file driver, 
        <code>new_driver_id</code>, for a file access or data transfer 
        property list, <code>plist_id</code>, and supplies an 
        optional struct containing the driver-specific properties, 
        <code>new_driver_info</code>.
        
                        <!--
                        What can be said regarding new_driver_info?
                        -->

        <p>
        The driver properties will be copied into the property list 
        and the reference count on the driver will be incremented, 
        allowing the caller to close the driver identifier but still use 
        the property list.
  <p>
  <dt><strong>Note:</strong>
    <dd><code>H5Pset_driver</code> and <code>H5Pget_driver_info</code> 
        are used only when creating a virtual file driver (VFD) 
        in the virtual file layer (VFL).  For further information, see
        &ldquo;<a href="../TechNotes/VFL.html">Virtual File Layer</a>&rdquo;
        and &ldquo;<a href="../TechNotes/VFLfunc.html">List of VFL 
        Functions</a>&rdquo; in the 
        <a href="../TechNotes.html"><cite>HDF5 Technical Notes</cite></a>.
  <p>
  <dt><strong>Parameters:</strong>
    <dl>
        <dt><em>hid_t</em> <code>plist_id</code>
            <dd>IN: File access or data transfer property list identifier.
        <dt><em>hid_t</em> <code>new_driver_id</code>
            <dd>IN: Driver identifier.
        <dt><em>const void *</em> <code>new_driver_info</code>
            <dd>IN: Optional struct containing driver properties.
    </dl>
  <p>
  <dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful.
        Otherwise returns a negative value.
  <p>
  <dt><strong>Fortran90 Interface:</strong>
    <dd>None.
  <p>
  <dt><strong>History:</strong>
    <ul><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>C</strong></td></tr>
        <tr>
          <td valign="top">1.8.2</td>
          <td valign="top">
            Function publicized in this release;
            previous releases described this function only in the 
            virtual file driver documentation.</td></tr>
    </table></ul>
</dl>


