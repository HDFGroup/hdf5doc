

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Pset_filter" -->
<hr>
<dl>

  <dt><div align=right><font color=999999 size=-1><i>
      Last modified: 30 April 2014
      </i></font></div>

  <dt><strong>Name:</strong> <a name="Property-SetFilter">H5Pset_filter</a>

  <dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Pset_filter</code>(<em>hid_t</em> <code>plist_id</code>,
        <em>H5Z_filter_t</em> <code>filter_id</code>,
        <em>unsigned int</em> <code>flags</code>,
        <em>size_t</em> <code>cd_nelmts</code>,
        <em>const unsigned int</em> <code>cd_values[]</code>
    )

  <p>
  <dt><strong>Purpose:</strong>
    <dd>Adds a filter to the filter pipeline.

  <p>
  <dt><strong>Description:</strong>
    <dd><code>H5Pset_filter</code> adds the specified 
        <code>filter_id</code> and corresponding properties to the 
        end of an output filter pipeline.
        <p>
        <em>plist_id</em> must be either a dataset creation property list 
        or group creation property list identifier.
        If <code>plist_id</code> is a dataset creation property list identifier, 
        the filter is added to the raw data filter pipeline.
        <p>
        If <code>plist_id</code> is a group creation property list identifier,
        the filter is added to the link filter pipeline, which filters the
        fractal heap used to store the most of link metadata 
        in certain types of groups.  The only predefined filters 
        that can be set in a group creation property list are the
        gzip filter (<code>H5Z_FILTER_DEFLATE</code>) and the
        Fletcher32 error detection filter (<code>H5Z_FILTER_FLETCHER32</code>).
        <p>
        The array <code>cd_values</code> contains
        <code>cd_nelmts</code> integers which are auxiliary data 
        for the filter.  The integer values will be stored in the 
        dataset object header as part of the filter information.
        <p>
        The <code>flags</code> argument is a  bit vector with 
        the following fields specifying certain general properties 
        of the filter:  
        <center>
        <table align=center width="90%">
          <tr valign=top>
            <td valign=top><code>H5Z_FLAG_OPTIONAL</code></td>
            <td valign=top>If this bit is set then the filter is 
              optional.  If the filter fails (see below) during an
              <code>H5Dwrite</code> operation then the filter is
              just excluded from the pipeline for the chunk for which
              it failed; the filter will not participate in the
              pipeline during an <code>H5Dread</code> of the chunk.
              This is commonly used for compression filters: if the
              filter result would be larger than the input, then
              the compression filter returns failure and the
              uncompressed data is stored in the file.  
              <p>
              This flag should not be set for the Fletcher32 checksum 
              filter as it will bypass the checksum filter without 
              reporting checksum errors to an application.
              </td>
          </tr>
          <tr valign=top>
            <td valign=top><code>H5Z_FLAG_MANDATORY&nbsp;&nbsp;&nbsp;</code></td>
            <td valign=top>If the filter is required, that is, set to 
              mandatory, and the filter fails, 
              the library&rsquo;s behavior depends on whether 
              the chunk cache is in use:  
              <ul><li>If the chunk cache is enabled, data chunks will be 
                      flushed to the file during <code>H5Dclose</code> and  
                      the library will return the failure in 
                      <code>H5Dclose</code>.  
                  <li>When the chunk cache is disabled or not big enough,
                      or the chunk is being evicted from the cache, 
                      the failure will happen during <code>H5Dwrite</code>.  
              </ul>
              In each case, the library will still write to the file 
              all data chunks that were processed by the filter 
              before the failure occured.
              <p>
              For example, assume that an application creates a dataset 
              of four chunks, the chunk cache is enabled and is big enough 
              to hold all four chunks, and the filter fails when it tries 
              to write the fourth chunk.  
              The actual flush of the chunks will happen during 
              <code>H5Dclose</code>, not <code>H5Dwrite</code>.  
              By the time <code>H5Dclose</code> fails, the first three 
              chunks will have been written to the file.  
              Even though <code>H5Dclose</code> fails, 
              all the resources will be released and 
              the file can be closed properly.    
              <p>
              If, however, the filter fails on the second chunk,
              only the first chunk will be written to the file
              as nothing further can be written once the filter fails.
            </td>
          </tr>
        </table>
        </center>

        <p>
        The <code>filter_id</code> parameter specifies the filter to be set.  
        Valid pre-defined filter identifiers are as follows:

        <center>
        <table width=90%>
        <tr valign=top align=left><td>
            <code>H5Z_FILTER_DEFLATE</code> 
            </td><td>
            Data compression filter, employing the gzip algorithm 
        </td></tr>
        <tr valign=top align=left><td>
            <code>H5Z_FILTER_SHUFFLE</code> 
            </td><td>
            Data shuffling filter 
        </td></tr>
        <tr valign=top align=left><td>
            <code>H5Z_FILTER_FLETCHER32&nbsp;&nbsp;</code> 
            </td><td>
            Error detection filter, employing the Fletcher32 checksum algorithm 
        </td></tr> 
        <tr valign=top align=left><td>
            <code>H5Z_FILTER_SZIP</code> 
            </td><td>
            Data compression filter, employing the SZIP algorithm 
        </td></tr>
        <tr valign=top align=left><td>
            <code>H5Z_FILTER_NBIT</code> 
            </td><td>
            Data compression filter, employing the N-Bit algorithm 
        </td></tr>
        <tr valign=top align=left><td>
            <code>H5Z_FILTER_SCALEOFFSET</code> 
            </td><td>
            Data compression filter, employing the scale-offset algorithm 
        </td></tr>
        </table>
        </center>
        <p>
        Also see 
        <a href="#Property-SetEdcCheck"><code>H5Pset_edc_check</code></a> and
        <a href="#Property-SetFilterCallback">
        <code>H5Pset_filter_callback</code></a>.
        
  <p>
  <dt><strong>Notes:</strong>
    <dd>When a non-empty filter pipeline is used with a group creation property
        list, the group will be created with the new group file format (see
        &ldquo;<a href="RM_H5G.html#Group-GroupStyles">Group Implementations
        in HDF5</a>&rdquo;). The filters will come into play only when dense
        storage is used (see <a href="#Property-SetLinkPhaseChange">
        <code>H5Pset_link_phase_change</code></a>)
        and will be applied to the group&rsquo;s fractal heap.
        The fractal heap will contain most of the the group&rsquo;s 
        link metadata, including link names.
        <p>
        When working with group creation property lists, if you are adding a 
        filter that is not in HDF5&rsquo;s set of predefined filters, 
        i.e., a user-defined or third-party filter, you must first determine 
        that the filter will work for a group.  See the discussion of the 
        <em>set local</em> and <em>can apply</em> callback functions in
        <a href="RM_H5Z.html#Compression-Register"><code>H5Zregister</code></a>.
        <p>
        If multiple filters are set for a property list, they will be applied to
        each chunk of raw data for datasets or 
        each block of the fractal heap for groups
        in the order in which they were set.

<!--  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  -->
<!--       Include special topic files                       -->
<!--  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  ---  -->

<?php include("../_topic/filter_behavior.htm"); ?>


  <p>
  <dt><strong>See Also:</strong>
    <dd>
        <!--
        For a discussion of optional versus required (mandatory) 
        filter behavior, see &ldquo;<a href="#Property-FilterBehavior">Filter 
        Behavior in HDF5</a>.&rdquo;
        <p>
        -->
        For a discussion of the chunk cache, see
        <a href="#Property-SetCache"><code>H5Pset_cache</code></a>.
        <p>
        For a discussion of the various types of HDF5 groups, see
        &ldquo;<a href="RM_H5G.html#Group-GroupStyles">Group Implementations
        in HDF5</a>.&rdquo; 
        <p>
        Related functions:
        <a href="#Property-SetLinkPhaseChange">
            <code>H5Pset_link_phase_change</code></a>,
        <a href="#Property-SetEdcCheck"><code>H5Pset_edc_check</code></a>,
        <a href="#Property-SetFilterCallback">
            <code>H5Pset_filter_callback</code></a>,
        <a href="#Property-SetDeflate"><code>H5Pset_deflate</code></a>,
        <a href="#Property-SetShuffle"><code>H5Pset_shuffle</code></a>,
        <a href="#Property-SetFletcher32"><code>H5Pset_fletcher32</code></a>,
        <a href="#Property-SetSzip"><code>H5Pset_szip</code></a>,
        <a href="#Property-SetNbit"><code>H5Pset_nbit</code></a>,
        <a href="#Property-SetScaleoffset"><code>H5Pset_scaleoffset</code></a>
        

  <p>
  <dt><strong>Parameters:</strong>
    <dd><table>
        <tr>
            <td valign="top"><em>hid_t</em> <code>plist_id</code></td>
            <td valign="top">IN: Dataset or group creation property list
                             identifier.</td></tr>
        <tr>
            <td valign="top"><em>H5Z_filter_t</em> <code>filter_id</code></td>
            <td valign="top">IN: Filter identifier for the filter  
                             to be added to the pipeline.</td></tr>
        <tr>
            <td valign="top"><em>unsigned int</em> <code>flags</code></td>
            <td valign="top">IN:  Bit vector specifying certain general properties
                of the filter.</td></tr>
        <tr>
            <td valign="top"><em>size_t</em> <code>cd_nelmts</code></td>
            <td valign="top">IN: Number of elements in <code>cd_values</code>.</td></tr>
        <tr>
            <td valign="top"><em>const&nbsp;unsigned&nbsp;int</em>&nbsp;<code>cd_values[]&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
            <td valign="top">IN: Auxiliary data for the filter.</td></tr>
    </table></dd>

  <p>
  <dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.

  <p>
  <dt><strong>Fortran90 Interface:</strong> h5pset_filter_f
    <dd>
        <pre>
SUBROUTINE h5pset_filter_f(prp_id, filter, flags, cd_nelmts, cd_values,  hdferr)
  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: prp_id  ! Gropu or dataset creation property 
                                        ! list identifier
  INTEGER, INTENT(IN) :: filter         ! Filter to be added to the pipeline
  INTEGER, INTENT(IN) :: flags          ! Bit vector specifying certain 
                                        ! general properties of the filter
  INTEGER(SIZE_T), INTENT(IN) :: cd_nelmts        
                                        ! Number of elements in cd_values
  INTEGER, DIMENSION(*), INTENT(IN) :: cd_values  
                                        ! Auxiliary data for the filter
  INTEGER, INTENT(OUT) :: hdferr        ! Error code
                                        ! 0 on success and -1 on failure
END SUBROUTINE h5pset_filter_f
        </pre>

  <p>
  <dt><strong>History:</strong>
    <ul><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>Change</strong></td></tr>
        <tr>
          <td valign="top">1.6.0</td>
          <td valign="top">
            Function introduced in this release.</td></tr>
        <tr>
          <td valign="top">1.8.5</td>
          <td valign="top">
            Function applied to group creation property lists.</td></tr>
    </table></ul>
</dl>

