

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Pset_scaleoffset" -->
<hr>
<dl>
  <dt><div align=right><font color=999999 size=-1><i>
      Last modified: 26 October 2011
      </i></font></div>

  <dt><strong>Name:</strong> <a name="Property-SetScaleoffset">H5Pset_scaleoffset</a>
  <dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Pset_scaleoffset</code>(
                  <em>hid_t</em> <code>plist_id</code>, 
                  <em>H5Z_SO_scale_type_t</em> <code>scale_type</code>,
                  <em>int</em> <code>scale_factor</code>
        )

  <p>
  <dt><strong>Purpose:</strong>
    <dd>Sets up the use of the scale-offset filter.

  <p>
  <dt><strong>Description:</strong>
    <dd><code>H5Pset_scaleoffset</code> sets the scale-offset filter, 
        <code>H5Z_FILTER_SCALEOFFSET</code>, for a dataset.
        <p>
        Generally speaking, scale-offset compression performs a scale 
        and/or offset operation on each data value and truncates the resulting 
        value to a minimum number of bits (MinBits) before storing it.
        The current scale-offset filter supports integer and 
        floating-point datatypes.
        <p>
        For an integer datatype, the parameter <code>scale_type</code> should 
        be set to <code>H5Z_SO_INT (2)</code>.  
        The parameter <code>scale_factor</code> denotes MinBits. 
        If the user sets it to <code>H5Z_SO_INT_MINBITS_DEFAULT (0)</code>,
        the filter will calculate MinBits. 
        If <code>scale_factor</code> is set to a positive integer, the filter 
        does not do any calculation and just uses the number as MinBits. 
        However, if the user gives 
        a MinBits that is less than what would be generated by the filter, the 
        compression will be lossy. Also, the MinBits supplied by the user cannot 
        exceed the number of bits to store one value of the dataset datatype.

        <p>
        For a floating-point datatype, the filter adopts the GRiB data packing 
        mechanism, which offers two alternate methods: E-scaling and D-scaling. 
        Both methods are lossy compression.
        If the parameter <code>scale_type</code> is set to 
        <code>H5Z_SO_FLOAT_DSCALE (0)</code>, the filter will use the D-scaling 
        method; if it is set to <code>H5Z_SO_FLOAT_ESCALE (1)</code>, the filter 
        will use the E-scaling method. 
        Since only the D-scaling method is implemented, <code>scale_type</code> 
        should be set to <code>H5Z_SO_FLOAT_DSCALE</code> or 0.

        <p>
        When the D-scaling method is used, the original data is "D" 
        scaled &mdash; multiplied by 10 to the
        power of <code>scale_factor</code>, and the "significant" part of
        the value is moved to the left of the decimal point.  Care should 
        be taken in setting the decimal <code>scale_factor</code> so that
        the integer part will have enough precision to contain the appropriate 
        informationof the data value. For example, if <code>scale_factor</code>
        is set to 2, the number 104.561 will be 10456.1 after "D" scaling.  
        The last digit 1 is not "significant" and is thrown off in the process 
        of rounding.
        The user should make sure that after "D" scaling and rounding, 
        the data values are within the range that can be represented by the 
        integer (same size as the floating-point type).

        <p>
        Valid values for <code>scale_type</code> are as follows:      
        <table width="80%" align="center">
          <tr valign="top">
            <td><code>H5Z_SO_FLOAT_DSCALE&nbsp;(0)</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td width="75%">Floating-point type, using variable MinBits method</td>
          </tr>
          <tr valign="top">
            <td><code>H5Z_SO_FLOAT_ESCALE&nbsp;(1)</code></td>
            <td>Floating-point type, using fixed MinBits method</td>
          </tr>
          <tr valign="top">
            <td><code>H5Z_SO_INT (2)</code></td>
            <td>Integer type</td>
          </tr>
        </table>

        <p>

<!-- NEW PAGE -->

        The meaning of <code>scale_factor</code> varies according to the value
        assigned to <code>scale_type</code>:
        <table width="80%" align="center">
          <tr valign="top">
            <td><em><code>scale_type</code> value</em></td>
            <td><em><code>scale_factor</code> description</em></td>
          </tr>
          <tr valign="top">
            <td><code>H5Z_SO_FLOAT_DSCALE</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td>Denotes the decimal scale factor for D-scaling and
                can be positive, negative or zero. 
                This is the current implementation of the library.</td>
          </tr>
          <tr valign="top">
            <td><code>H5Z_SO_FLOAT_ESCALE</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td>Denotes MinBits for E-scaling and must be a positive integer. 
              This is not currently implemented by the library.</td>
          </tr>
          <tr valign="top">
            <td><code>H5Z_SO_INT</code></td>
            <td>Denotes MinBits and it should be a positive integer or 
              <code>H5Z_SO_INT_MINBITS_DEFAULT (0).</code>
              If it is less than 0, the library will reset it to 0
              since it is not implemented.</td>
          </tr>
        </table>

        <p>
        Like other I/O filters supported by the HDF5 library, an application 
        using the scale-offset filter must store data with chunked storage.

  <p>
  <dt><strong>Parameters:</strong>
    <dd><table>
        <tr>
            <td valign="top"><em>hid_t</em> <code>plist_id</code></td>
            <td valign="top">IN: Dataset creation property list identifier.</td>
        </tr>
        <tr>
            <td valign="top"><em>H5Z_SO_scale_type_t</em>&nbsp;<code>scale_type&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
            <td valign="top">IN: Flag indicating compression method.</td>
        </tr>
        <tr>
            <td valign="top"><em>int</em> <code>scale_factor</code></td>
            <td valign="top">IN: Parameter related to scale.
                Must be non-negative.</td>
        </tr>
    </table></dd>

  <p>
  <dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful; 
        otherwise returns a negative value.

  <p>
  <dt><strong>Fortran90 Interface:</strong> h5pset_scaleoffset_f
    <dd>

        <?php include("H5P/h5pset_scaleoffset_f_F90.htm"); ?>

  <p>
  <dt><strong>History:</strong>
    <dd><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>Change</strong></td>
        </tr>
        <tr>
          <td valign="top">1.8.0</td>
          <td valign="top">
            C function introduced in this release.</td>
        </tr>
        <tr>
<!--
          <td valign="top">1.8.1</td>
          <td valign="top">1.8.7</td>
-->
          <td valign="top">1.8.8</td>
          <td valign="top">
            Fortran90 subroutine introduced in this release.</td>
        </tr>
        </table>

</dl>


