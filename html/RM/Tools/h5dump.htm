

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *

  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "h5dump" -->
<p>

<hr>
<dl>

<dt><div align=right><font color=999999 size=-1><i>
    Last modified: 23 August 2013
    </i></font></div>

<dt><strong>Tool Name:</strong> <a name="Tools-Dump">h5dump</a>
<dt><strong>Syntax:</strong>
    <dd><code>h5dump
        [</code><em>OPTIONS</em><code>]</code> <em>files</em>

<p>
<dt><strong>Purpose:</strong>
    <dd>Displays HDF5 file contents.

<p>
<dt><strong>Description:</strong>
    <dd><code>h5dump</code> enables the user to examine 
        the contents of an HDF5 file and dump those contents, in human
        readable form, to an ASCII file.
        <p>
        <code>h5dump</code> dumps HDF5 file content to standard output.
        It can display the contents of the entire HDF5 file or
        selected objects, which can be groups, datasets, a subset of a 
        dataset, links, attributes, or datatypes. 
        <p>
        The <code>--header</code> option displays object header
        information only.
        <p>
        Names are the absolute names of the objects. <code>h5dump</code>
        displays objects in the order same as the command order. If a
        name does not start with a slash, <code>h5dump</code> begins
        searching for the specified object starting at the root group.
        <p>
        If an object is hard linked with multiple names,
        <code>h5dump</code> displays the content of the object in the
        first occurrence. Only the link information is displayed in later
        occurrences.
        <p>
        <code>h5dump</code> assigns a name for any unnamed datatype in
        the form of
        <code>#</code><em>oid1</em><code>:</code><em>oid2</em>, where
        <em>oid1</em> and <em>oid2</em> are the object identifiers
        assigned by the library. The unnamed types are displayed within
        the root group.
        <p>
        Datatypes are displayed with standard type names. For example,
        if a dataset is created with <code>H5T_NATIVE_INT</code> type
        and the standard type name for integer on that machine is
        <code>H5T_STD_I32BE</code>, <code>h5dump</code> displays
        <code>H5T_STD_I32BE</code> as the type of the dataset.
        <p>
        <code>h5dump</code> can also dump a subset of a dataset.
        This feature operates in much the same way as hyperslabs in HDF5;
        the parameters specified on the command line are passed to the 
        function <a href="RM_H5S.html#Dataspace-SelectHyperslab">
        <code>H5Sselect_hyperslab</code></a> and the resulting selection 
        is displayed.
        <p>
        The <code>h5dump</code> output is described in detail in the 
        <a href="../ddl.html"><cite>DDL for HDF5</cite></a>, the 
        <cite>Data Description Language</cite> document. 
        <p>
        <em>Note</em>: It is not permissible to specify multiple
        attributes, datasets, datatypes, groups, or soft links with one
        flag. For example, one may not issue the command
          <br>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <font size=-1>WRONG:</font> &nbsp;
            <code>h5dump -a /attr1 /attr2 foo.h5</code>
          </br>
        to display both <code>/attr1</code> and <code>/attr2</code>.
        One must issue the following command:
          <br>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <font size=-1>CORRECT:</font> &nbsp;
            <code>h5dump -a /attr1 -a /attr2 foo.h5</code>
          </br>
        <p>
        One byte integer type data is displayed in decimal by default. When
        displayed in ASCII, a non-printable code is displayed in 3 octal
        digits preceeded by a back-slash unless there is a C language escape
        sequence for it.  For example, CR and LF are printed as \r and \n.
        Though the NUL code is represented as \0 in C, it is printed as
        \000 to avoid ambiguity as illustrated in the following 1 byte
        char data (since this is not a string, embedded NUL is possible).
        <pre>
        141 142 143 000 060 061 062 012
          a   b   c  \0   0   1   2  \n </pre>
        h5dump prints them as "abc\000012\n".  But if h5dump prints NUL as \0,
        the output is "abc\0012\n" which is ambiguous.
        </p>
        <p>
        <strong>Using file drivers:</strong>
        <br>
        It is possible to select the file driver with which to open an
        HDF5 file by using the <code>--filedriver</code> (or <code>-f</code>)
        command-line option.
        Valid values for the <code>--filedriver</code> option are 
        &nbsp;<code>sec2</code>, &nbsp;<code>family</code>, 
        &nbsp;<code>split</code>, &nbsp;and &nbsp;<code>multi</code>.
        <!--, and &nbsp;<code>stream</code>.-->
        If the file driver flag is not specified, 
        then the file will be opened with each driver in turn,
        and in the order specified above, 
        until one driver succeeds in opening the file.
        </p>
        <p>
        Special file naming restrictions apply when using <code>h5dump</code>
        with either the <code>split</code> or the <code>multi</code> driver.

        <p>
        <i>To dump a split file,</i> <code>h5dump</code> requires that 
        the metadata and raw data filenames end with 
        <code>-m.h5</code> and <code>-r.h5</code>, respectively,
        and that the entire virtual HDF5 file, 
        or the <i>logical HDF5 file</i>, be referred to 
        on the command line by the common portion of the filename preceding 
        the <code>-m</code> and <code>-r</code>.
        </p>
        <p>
        For example, assume that a split HDF5 file has its 
        metadata in a file named <code>splitfile-m.h5</code> and its
        raw data in a file named <code>splitfile-r.h5</code>.
        The following command would dump the contents of this 
        logical HDF5 file: 
        <br><code>&nbsp;&nbsp;&nbsp;&nbsp; 
            h5dump --filedriver="split" splitfile</code>
        </p>
        <p>
        Note that the above split filename restrictions are specific to 
        <code>h5dump</code>; 
        HDF5 applications do not necessarily have the same limitations.
        </p>

        <p>
        <i>To dump a multi file,</i> <code>h5dump</code> requires that 
        the metadata and raw data filenames end with a subset of the following:
        <br><code>&nbsp;&nbsp;&nbsp;&nbsp;</code>
            <code>-s.h5</code> &nbsp; for userblock, superblock, 
            and driver information block data
        <br><code>&nbsp;&nbsp;&nbsp;&nbsp;</code>
            <code>-b.h5</code> &nbsp; for B-tree node information
        <br><code>&nbsp;&nbsp;&nbsp;&nbsp;</code>
            <code>-r.h5</code> &nbsp; for dataset raw data
        <br><code>&nbsp;&nbsp;&nbsp;&nbsp;</code>
            <code>-g.h5</code> &nbsp; for global heap data
        <br><code>&nbsp;&nbsp;&nbsp;&nbsp;</code>
            <code>-l.h5</code> &nbsp; for local heap  data (object names)
        <br><code>&nbsp;&nbsp;&nbsp;&nbsp;</code>
            <code>-o.h5</code> &nbsp; for object headers
        <br>
        The entire virtual HDF5 file must also be referred to 
        on the command line by the common portion of the filename preceding 
        those special tags.
        </p>
        <p>
        For example, assume that a multi HDF5 file has its 
        userblock, superblock, and driver information block data 
        in a file named <code>multifile-s.h5</code>, its
        B-tree node information in a file named <code>multifile-b.h5</code>, 
        its raw data in a file named <code>multifile-r.h5</code>, its
        global heap data in a file named <code>multifile-g.h5</code>,
        et cetera.
        The following command would dump the contents of this 
        logical HDF5 file: 
        <br><code>&nbsp;&nbsp;&nbsp;&nbsp; 
            h5dump --filedriver="multi" multifile</code>
        </p>
        <p>
        Note that the above multi filename restrictions are specific to 
        <code>h5dump</code>; 
        HDF5 applications do not necessarily have the same limitations.
        </p>

        <p>
        <i>To dump a family file,</i> <code>h5dump</code> requires that
        the logical file&rsquo;s name on the command line include the
        <code>printf(3c)</code>-style integer format specifier that
        specifies the format of the family file member numbers.
        For example, if an HDF5 family of files consists of the files
        <code>family_000.h5</code>,
        <code>family_001.h5</code>,
        <code>family_002.h5</code>, and
        <code>family_003.h5</code>, 
        the logical HDF5 file would be specified on the command line as 
        <code>family_%3d.h5</code>.
        </p>
        <p>
        The following command would dump the contents of this 
        logical HDF5 file: 
        <br><code>&nbsp;&nbsp;&nbsp;&nbsp; 
            h5dump --filedriver="family" family_%3d.h5</code>
        </p>

<p>
<dt><strong>XML Output:</strong>
    <dd>With the <code>--xml</code> option, <code>h5dump</code> generates
        XML output.  This output contains a complete description of the file, 
        marked up in XML.  The XML conforms to the HDF5 Document Type 
        Definition (DTD) available at 
        &ldquo;<a href="http://www.hdfgroup.org/HDF5/XML/software.html">HDF5
        XML Software</a>.&rdquo;
        <p>
        The XML output is suitable for use with other tools, including the 
        <a href="http://www.hdfgroup.org/products/java/hdf-java-html/" 
        target="ToolsExt">HDF5 Java Products</a>.

<p>
<dt><strong>Options and Parameters:</strong>
    <dd>
      <table>
        <tr> 
          <td valign="top"><code>-h</code> &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--help</code></td>
          <td valign="top">Print a usage message and exit.</td>
        </tr>
        <tr> 
          <td valign="top"><code>-V</code> &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--version</code></td>
          <td valign="top">Print version number and exit.</td>
        </tr>
        <tr><td>&nbsp;</td><td>&nbsp;</td></tr>

        <tr>
          <td colspan="2" align="left">
              <strong>Formatting options:</strong></td>
        </tr>
        <tr>
          <td valign="top"><code>-e</code> &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--escape</code></td>
          <td valign="top">Escape non-printing characters.</td>
        </tr>
        <tr> 
          <td valign="top"><code>-r</code> &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--string</code></td>
          <td valign="top">Print 1-byte integer datasets as ASCII.</td>
        </tr>
        <tr>
          <td valign="top"><code>-y</code> &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--noindex</code></td>
          <td valign="top">Do not print array indices with data.</td>
        </tr>
        <tr> 
          <td valign="top"><code>-m <em>T</em></code> 
              &nbsp;&nbsp;or&nbsp;&nbsp;
              <code>--format=<em>T</em></code></td>
          <td valign="top">Set the floating point output format.
              <br>
              <em>T</em> is a string defining the floating point format,
              e.g., <code>'%.3f'</code>.
              </td>
        </tr>
        <tr> 
          <td valign="top"><code>-q <em>Q</em></code> 
              &nbsp;&nbsp;or&nbsp;&nbsp;
              <code>--sort_by=<em>Q</em></code></td>
          <td valign="top">Sort groups and attributes by the specified
              index type, <em>Q</em>.  
              Valid values of <em>Q</em> are as follows:
                <br>
                &nbsp;&nbsp;&nbsp;&nbsp;
                <code>name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>
                    Alpha-numeric index by name <em>(Default)</em>
                <br>
                &nbsp;&nbsp;&nbsp;&nbsp;
                <code>creation_order &nbsp;&nbsp;</code>
                    Index by creation order 
                <br>
              </td>
        </tr>
        <tr> 
          <td valign="top"><code>-z <em>Z</em></code> 
              &nbsp;&nbsp;or&nbsp;&nbsp;
              <code>--sort_order=<em>Z</em></code></td>
          <td valign="top">Sort groups and attributes in the specified
              order, <em>Z</em>.  
              Valid values of <em>Z</em> are as follows:
                <br>
                &nbsp;&nbsp;&nbsp;&nbsp;
                <code>ascending&nbsp;&nbsp;&nbsp;</code>
                    Sort in ascending order <em>(Default)</em>
                <br>
                &nbsp;&nbsp;&nbsp;&nbsp;
                <code>descending&nbsp;&nbsp;</code>
                    Sort in descending order 
            </td>
        </tr>
        <tr> 
          <td valign="top"><code>--enable-error-stack</code></td>
          <td valign="top">Prints messages from the HDF5 error stack 
              as they occur.
              <p>
              Injects error stack information, which is normally suppressed, 
              directly into the output stream.
              This will disrupt normal <code>h5dump</code> output but is a 
              useful diagnostic tool when data is not being correctly dumped.  
              Consider the case when an <code>h5dump</code> call produces this 
              message:
              <pre>&nbsp;&nbsp;&nbsp;&nbsp;dump error: unable to print data</pre>
              <code>h5dump</code> can be called again with 
              &lsquo;<code>--enable-error-stack</code>&rsquo; plus the original 
              options to reveal error stack messages.
              </td>
        </tr>
        <tr> 
          <td valign="top"><code>--no-compact-subset</code></td>
          <td valign="top">
              Enables recognition of the left square bracket 
              ( <code><font size="+1">[</font></code> )
              as a character in a dataset name.
              <p>
              This option must disable compact subsetting, 
              which is described at the end of this 
              &ldquo;Options and Parameters&rdquo; section.
              </td>
        </tr>
        <tr> 
          <td valign="top"><code>-w <em>N</em></code> &nbsp;&nbsp;or&nbsp;&nbsp;
              <code>--width=<em>N</em></code></td>
          <td valign="top">Set the number of columns of output. 
              <br>
              A value of 0 (zero) sets the number of columns 
              to the maximum (65535). 
              <br>
              Default width is 80 columns.</td>
        </tr>

        <tr>
          <td colspan="2" align="left">
              <strong>File options:</strong></td>
        </tr>
        <tr>
          <td valign="top"><code>-n</code> &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--contents</code></td>
          <td valign="top">Print a list of the file contents and exit.</td>
        </tr>
        <tr>
          <td valign="top"><code>-n 1</code> &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--contents=1</code></td>
          <td valign="top">The optional value <code>1</code> (one) 
              on the <code>-n, --contents</code> option adds attributes 
              to the output.</td>
        </tr>
        <tr> 
          <td valign="top"><code>-B</code> &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--superblock</code></td>
          <td valign="top">Print the content of the superblock.</td>
        </tr>
        <tr> 
          <td valign="top"><code>-H</code> &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--header</code></td>
          <td valign="top">Print the header only; no data is displayed.</td>
        </tr>
        <tr> 
          <td valign="top"><code>-f<em>&nbsp;D</em></code> 
              &nbsp;&nbsp;or&nbsp;&nbsp;
              <code>--filedriver=<em>D</em></code></td>
          <td valign="top">Specify which driver to open the file with.</td>
        </tr>
        <tr> 
          <td valign="top"><code>-o <em>F</em></code> 
              &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--output=<em>F</em></code></td>
          <td valign="top">Output raw data into file F.
              <p>
              The files specified for the <code>-o</code> and <code>-O</code> 
              options must be different files. 
              The output from these options must not be comingled.
              <p>
              To suppress the raw data display, use this option with no 
              filename, as in either of the following examples.  This has the 
              effect of sending the output to a <small>NULL</small> file:
              <br>
                  &nbsp;&nbsp;&nbsp;&nbsp;
                  <code>-o </code>
              <br>
                  &nbsp;&nbsp;&nbsp;&nbsp;
                  <code>--output= </code>
              </td>
        </tr>
        <tr> 
          <td valign="top"><code>-b <em>B</em></code> 
              &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--binary=<em>B</em></code></td>
          <td valign="top">Output dataset to a binary file 
                using the datatype specified by <code><em>B</em></code>.
              <br>
              <code><em>B</em></code> must have one of the following values:
                <br>
                &nbsp;&nbsp;&nbsp;&nbsp;
                <code>LE &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>
                    Little-endian 
                <br>
                &nbsp;&nbsp;&nbsp;&nbsp;
                <code>BE &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>
                    Big-endian 
                <br>
                &nbsp;&nbsp;&nbsp;&nbsp;
                <code>MEMORY &nbsp;&nbsp;</code>
                    Memory datatype 
                <br>
                &nbsp;&nbsp;&nbsp;&nbsp;
                <code>FILE &nbsp;&nbsp;&nbsp;&nbsp;</code>
                    File datatype 
              <br>
              Recommended usage is with the <code>-d</code> and <code>-o</code>
              options.
          </td>
        </tr>
        <tr> 
          <td valign="top"><code>-O <em>F</em></code> 
              &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--ddl=<em>F</em></code></td>
          <td valign="top">Output DDL text into file F.
              <p>
              The files specified for the <code>-o</code> and <code>-O</code> 
              options must be different files. 
              The output from these options must not be comingled.
              <p>
              <a href="#Tools-Import"><code>h5import</code></a>
              can use the files output by the <code>-o</code> and 
              <code>-O</code> when importing HDF5 data.
              See &ldquo;<a href="#Tools-Import-UsingDump">Using 
              <code>h5dump</code> to create input for 
              <code>h5import</code></a>.&rdquo;
              <p>
              To suppress the DDL display, use this option with no filename,
              as in either of the following examples.  This has the effect 
              of sending the output to a <small>NULL</small> file:
              <br>
                  &nbsp;&nbsp;&nbsp;&nbsp;
                  <code>-O </code>
              <br>
                  &nbsp;&nbsp;&nbsp;&nbsp;
                  <code>--ddl= </code>
              </td>
        </tr>

        <tr>
          <td colspan="2" align="left">
              <strong>Object options:</strong></td>
        </tr>
        <tr> 
          <td valign="top"><code>-a&nbsp;<em>P</em></code>&nbsp;&nbsp;or&nbsp;&nbsp;<code>--attribute=<em>P</em>&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
          <td valign="top">Print the specified attribute.</td>
        </tr>
        <tr> 
          <td valign="top"><code>-d <em>P</em></code> 
              &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--dataset=<em>P</em></code></td>
          <td valign="top">Print the specified dataset.</td>
        </tr>
        <tr> 
          <td valign="top"><code>-g <em>P</em></code> 
              &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--group=<em>P</em></code></td>
          <td valign="top">Print the specified group and all members.</td>
        </tr>

<!-- NEW PAGE -->

        <tr> 
          <td valign="top"><code>-l&nbsp;<em>P</em></code>
              &nbsp;&nbsp;or&nbsp;&nbsp;
              <code>--soft-link=<em>P</em></code></td>
          <td valign="top">Print the value(s) of the specified soft link.
              </td>
        </tr>
        <tr> 
          <td valign="top"><code>-t <em>P</em></code> 
              &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--datatype=<em>P</em></code></td>
          <td valign="top">Print the specified named datatype.</td>
        </tr>
        <tr> 
          <td valign="top"><code>-A</code> &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--onlyattr</code></td>
          <td valign="top">Print the header and value of attributes; 
              data of datasets is not displayed.</td>
        </tr>
        <tr> 
          <td valign="top"><code>-A 0</code> &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--onlyattr=0</code></td>
          <td valign="top">The optional value <code>0</code> (zero)
              on the <code>-A, --onlyattr</code> option prints everything 
              <i>except</i> attributes.</td>
        </tr>
        <tr> 
          <td valign="top"><code>-N <em>P</em></code> 
              &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--any-path=<em>P</em></code></td>
          <td valign="top">Print any attribute, dataset, datatype,
              group, or link whose path matches <em>P</em>.
              <br>
              <em>P</em> may match either the absolute path
              or any portion of the path.
              </td>
        </tr>

        <tr>
          <td colspan="2" align="left">
              <strong>Object property options:</strong></td>
        </tr>
        <tr> 
          <td valign="top"><code>-i</code> &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--object-ids</code></td>
          <td valign="top">Print the object ids.</td>
        </tr>
        <tr>
          <td valign="top"><code>-p</code> &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--properties</code>
              <br>
              <code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>
              </td>
          <td valign="top">Print information regarding dataset properties, 
              including filters, storage layout, fill value,
              and allocation time.
              <br>
              The filter output lists any filters used with a dataset, 
              including the type of filter, its name, and any filter parameters.
              <br>
              The storage layout output specifies the dataset layout 
              (chunked, compact, or contiguous), 
              the size in bytes of the dataset on disk, 
              and, if a compression filter is associated with the dataset, 
              the compression ratio.  The compression ratio is computed as 
              (uncompressed&nbsp;size)/(compressed&nbsp;size).
              <br>
              The fill value output includes the fill value datatype and value.
              <br>
              The allocation time output displays the allocation time as 
              specified with 
              <a href="RM_H5P.html#Property-SetAllocTime">
              <code>H5Pset_alloc_time</code></a>.
        </tr>
        <tr> 
          <td valign="top"><code>-M <em>L</em></code> 
              &nbsp;&nbsp;or&nbsp;&nbsp;
              <code>--packedbits=<em>L</em></code></td>
          <td valign="top">Print packed bits as unsigned integers, 
              using the mask format <em>L</em> for an integer dataset 
              specified with option <code>-d</code>.
              <br>
	      <em>L</em> is a list of <em>offset</em>,<em>length</em> values, 
              separated by commas. 
              <br>
              <em>offset</em> is the beginning bit in the data value.
              <br>
              <em>length</em> is the number of bits in the mask.
	  </td>
        </tr>
        <tr>
          <td valign="top"><code>-R <em></em></code> 
              &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--region</code></td>
          <td valign="top">Print dataset pointed by region references.</td>
        </tr>

        <tr>
          <td colspan="2" align="left">
              <strong>XML options:</strong></td>
        </tr>
        <tr> 
          <td valign="top"><code>-x <em></em></code> 
              &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--xml</code></td>
          <td valign="top">Output XML using XML schema (default) 
              instead of DDL.</td>
        </tr>
        <tr> 
          <td valign="top"><code>-u <em></em></code> 
              &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--use-dtd</code></td>
          <td valign="top">Output XML using XML DTD instead of DDL.</td>
        </tr>
        <tr> 
          <td valign="top"><code>-D <em>U</em></code> 
              &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--xml-dtd=<em>U</em></code></td>
          <td valign="top">In XML output, refer to the DTD or schema 
              at <em>U</em> 
              instead of the default schema/DTD.</td>
        </tr>
        <tr> 
          <td valign="top"><code>-X <em>S</em></code> 
              &nbsp;&nbsp;or&nbsp;&nbsp; 
              <code>--xml-ns=<em>S</em></code></td>
          <td valign="top">In XML output, (XML Schema) use qualified names in 
              the XML:<br> &nbsp;&nbsp; &nbsp;&nbsp; ":": no namespace, 
              default: "hdf5:"</td>
        </tr>

<!-- NEW PAGE -->


        <tr>
          <td colspan="2" align="left">
              <strong>Subsetting options and compact subsetting:</strong>
              </td>
        </tr>
        <tr> 
          <td>&nbsp;</td>
          <td valign="top" align="left">
               Subsetting is available by using the following options with 
               the dataset option, <code>-d</code> or <code>--dataset</code>. 
               Subsetting is accomplished by selecting a hyperslab from the 
               data, so the options mirror those for performing a hyperslab 
               selection.
               <p>
               At least one of the <code>START</code>, <code>COUNT</code>, 
               <code>STRIDE</code>, or <code>BLOCK</code> options is 
               mandatory if you do subsetting; the remainder are optional,
               with default values as follows:  
               <br>
               &bullet; <code>STRIDE</code>, <code>COUNT</code>, and 
               <code>BLOCK</code> default to <code>1</code> 
               in each dimension. 
               <br>
               &bullet; <code>START</code> defaults to <code>0</code> 
               in each dimension.
          </td>
        </tr>
        <tr> 
          <td valign="top"><code>-s <em>START</em></code> &nbsp;&nbsp;or
              <br>
              <code>&nbsp;&nbsp;--start=<em>START</em></code></td>
          <td valign="top">Offset of start of subsetting selection. <br>
              Default: 0 in all dimensions, 
              specifying the beginning of the dataset.
              <p>
              Each of <small><em>START</em>, <em>STRIDE</em>, 
              <em>COUNT</em>,</small> and <small><em>BLOCK</em></small> 
              must be a comma-separated list of integers 
              with one integer for each dimension of the dataset.
              </p>
              </td>
        </tr>
        <tr> 
          <td valign="top"><code>-S <em>STRIDE</em></code> &nbsp;&nbsp;or
              <br>
              <code>&nbsp;&nbsp;--stride=<em>STRIDE</em></code></td>
          <td valign="top">Hyperslab stride. <br>
              Default: 1 in all dimensions.</td>
        </tr>
        <tr> 
          <td valign="top"><code>-c <em>COUNT</em></code> &nbsp;&nbsp;or
              <br>
              <code>&nbsp;&nbsp;--count=<em>COUNT</em></code></td>
          <td valign="top">Number of blocks to include in the selection. <br>
              Default: 1 in all dimensions.</td>
        </tr>
        <tr> 
          <td valign="top"><code>-k <em>BLOCK</em></code> &nbsp;&nbsp;or
              <br>
              <code>&nbsp;&nbsp;--block=<em>BLOCK</em></code></td>
          <td valign="top">Size of block in hyperslab. <br>
              Default: 1 in all dimensions.
  
              <p>
              <b>Compact subsetting:</b>
              <br>
              Subsetting parameters can also be expressed in a convenient
              compact form, as follows:
                <br>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <code>--dataset="/foo/mydataset[START;STRIDE;COUNT;BLOCK]"</code>
              <p>
              It is not required to use all parameters, 
              but until the last parameter value used, 
              all of the semicolons (<code>;</code>) are required, 
              even when a parameter value is not specified. Example: 
              <br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
              <code>--dataset="/foo/mydataset[START;;COUNT]"</code>
              <br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
              <code>--dataset="/foo/mydataset[START]"</code>
              <p>
              Each of <small><em>START</em>, <em>STRIDE</em>, 
              <em>COUNT</em>,</small> and <small><em>BLOCK</em></small> 
              must be a comma-separated list of integers 
              with one integer for each dimension of the dataset.
              <p>
              When not specified, default parameter values are used:
              zeros ( <code>0</code> ) for <small><em>START</em></small>
              and ones ( <code>1</code> ) for <small><em>STRIDE</em>,
              <em>COUNT</em>,</small> and <small><em>BLOCK</em></small>.

          </td>
        </tr>

        <tr>
          <td colspan="2" align="left">
              <strong>Option Argument Conventions:</strong></td>
        </tr>
        <tr> 
          <td valign="top"><code>--</code></td>
          <td valign="top">Two dashes followed by whitespace. 
              <br>
              Indicates that the following argument is not an option. 
              <p>
              For example, this structure can be used to dump a file called 
              <code>-f</code>: 
              <pre>&nbsp;&nbsp;&nbsp;&nbsp;h5dump -- -f</pre>
              This option is necessary only when the name of the file to be 
              examined starts with a dash (<code>-</code>), which could confuse 
              the tool&rsquo;s command-line parser.</td>
        </tr>

        <tr>
          <td valign="top" colspan="2">
              Option parameters appearing above are defined as follows:
          </td>
        </tr>
        <tr>
          <td valign="top"><em>D</em></td>
          <td valign="top">File driver to use in opening the file
              <br>
              Valid values are 
              &nbsp;<code>sec2</code>, &nbsp;<code>family</code>, 
              &nbsp;<code>split</code>, and &nbsp;<code>multi</code>.
              <!--, and &nbsp;<code>stream</code>.-->
              <br>
              Without the file driver option, the
              file will be opened with each driver in turn,
              and in the order specified immediately above,
              until one driver succeeds in opening the file.</td></tr>
        <tr>
          <td valign="top"><em>P</em></td>
          <td valign="top">Path to the object
              <br>
              For most options, this must be the absolute path 
              from the root group to the object.
              <br>
              With the <code>-N</code>, <code>--any-path</code> option,
              this may be either the absolute path or a partial path.
              </td></tr>
        <tr>
          <td valign="top"><em>F</em></td>
          <td valign="top">A filename</td></tr>
        <tr>
          <td valign="top"><em>N</em></td>
          <td valign="top">An integer greater than 1</td></tr>
        <tr>
          <td valign="top" ><em>START</em>, &nbsp;<em>STRIDE</em>, 
              <br><code>&nbsp;&nbsp;&nbsp;&nbsp;</code>
              <em>COUNT</em>, and <em>BLOCK</em></td>
          <td valign="top">Comma-separated lists of integers  
              <br>
              Each of these option parameters must be a list of integers
              with one integer for each dimension of the dataspace being 
              queried.</td></tr>
        <tr>
          <td valign="top"><em>U</em></td>
          <td valign="top">A URI (as defined in 
              [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>], 
              updated by 
              [<a href="http://www.ietf.org/rfc/rfc2732.txt">IETF RFC 2732</a>]) 
              that refers to the DTD to be used to validate the XML</td></tr>
        <tr>
          <td valign="top"><em>B</em></td>
          <td valign="top">The form of binary output:<br>
              &nbsp;&nbsp;&nbsp;&nbsp;<code>MEMORY</code> &nbsp;&nbsp; 
                  for a memory type<br>
              &nbsp;&nbsp;&nbsp;&nbsp;<code>FILE&nbsp;&nbsp;</code> &nbsp;&nbsp; 
                  for the file type<br>
              &nbsp;&nbsp;&nbsp;&nbsp;<code>LE</code> or <code>BE</code> &nbsp; 
                  for pre-existing little- or big-endian types
            </td></tr>

        <tr>
          <td colspan="2" align="left">
              <strong><i>Files</i> parameter:</strong></td>
        </tr>
        <tr> 
          <td valign="top"><code><em>files</em></code></td>
          <td valign="top">File or files to be examined;
              one or more files may be listed.
              <p>
              The file name may include a <code>printf(3C)</code> 
              integer format such as <code>%05d</code> to open a file family.
              <p>
              On Unix, Linux, and Mac OS X systems,
              multiple files can be examined through the use of 
              Unix-style wildcards.
              For example, assume that we are working with the files 
              <code>FileA.h5</code>, <code>FileB.h5</code>, 
              <code>FileC.h5</code>, and <code>FileAB.h5</code>:
              <ul>
                <li><code>File[AB].h5</code> will pick up any file
                    that begins with <code>File</code>, 
                    followed by any one of the characters contained 
                    in the square brackets,
                    and ending with <code>.h5</code>.
                    <p>
                    In this case, <code>File[AB].h5</code> will pick up 
                    the files <code>FileA.h5</code> and <code>FileB.h5</code>.
                <li><code>File?.h5</code> will pick up all files 
                    whose names are <code>File</code>, 
                    followed by exactly 1 character (any character), 
                    followed by <code>.h5</code>.
                    <p>
                    In this case, <code>File?.h5</code> will pick up the files 
                    <code>FileA.h5</code> and <code>FileB.h5</code>, 
                    and <code>FileC.h5</code>.
                <li><code>File*.h5</code> will pick up all files 
                    whose names begin with <code>File</code> 
                    and end with <code>.h5</code>.
                    <p>
                    In this case, <code>File*.h5</code> will pick up 
                    all four files.
              </ul>
              <p>
              The wildcard capability is not currently available 
              on Windows systems.
              </td>
        </tr>
      </table>
    </dd>

<p>
<dt><strong>Exit Status:</strong></dt>
    <dd><table border=0>
        <tr valign=top align=left>
            <td>0</td>
            <td>Succeeded.</td>
        </tr>
        <tr valign=top align=left>
            <td>&gt;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;</td>
            <td>An error occurred.</td>
        </tr>
    </table>

<p>
<dt><strong>Examples:</strong>
    <dd> 
     <ol>
       <li>Dump the group <code>/GroupFoo/GroupBar</code> in the file
          <code>quux.h5</code>:<br>
             <code>&nbsp;&nbsp;&nbsp;&nbsp; 
                   h5dump -g /GroupFoo/GroupBar quux.h5</code>
             <br>
             <br>
       <li>Dump the dataset <code>Fnord</code>, which is in the group
          <code>/GroupFoo/GroupBar</code> in the file <code>quux.h5</code>:<br>
             <code>&nbsp;&nbsp;&nbsp;&nbsp; 
                   h5dump -d /GroupFoo/GroupBar/Fnord quux.h5</code>
             <br>
             <br>
       <li>Dump the attribute <code>metadata</code> of the dataset
          <code>Fnord</code>, which is in the group
          <code>/GroupFoo/GroupBar</code> in the file <code>quux.h5</code>:<br>
             <code>&nbsp;&nbsp;&nbsp;&nbsp; 
                   h5dump -a /GroupFoo/GroupBar/Fnord/metadata quux.h5</code>
             <br>
             <br>
       <li>Dump the attribute <code>metadata</code> which is an
          attribute of the root group in the file <code>quux.h5</code>:<br>
              <code>&nbsp;&nbsp;&nbsp;&nbsp; 
                    h5dump -a /metadata quux.h5</code>
              <br>
              <br>
       <li>Produce an XML listing of the file <code>bobo.h5</code>,
           saving the listing in the file <code>bobo.h5.xml</code>:<br>
              <code>&nbsp;&nbsp;&nbsp;&nbsp; 
                    h5dump --xml bobo.h5 > bobo.h5.xml</code>
              <br>
              <br>
       <li>Dump a subset of the dataset <code>/GroupFoo/databar/</code> 
           in the file <code>quux.h5</code>:<br>
              <code>&nbsp;&nbsp;&nbsp;&nbsp; 
                    h5dump -d /GroupFoo/databar --start="1,1" --stride="2,3" 
                    <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                           --count="3,19" --block="1,1" quux.h5</code>
              <br>
              <br>
       <li>The same example, using the short form to specify the 
           subsetting parameters:<br>
              <code>&nbsp;&nbsp;&nbsp;&nbsp; 
                    h5dump -d "/GroupFoo/databar[1,1;2,3;3,19;1,1]" quux.h5</code>
              <br>
              <br>
       <li>Dump a binary copy of the dataset <code>/GroupD/FreshData/</code> 
           in the file <code>quux.h5</code>, with data written in little-endian 
           form, to the output file <code>FreshDataD.bin</code>:<br>
              <code>&nbsp;&nbsp;&nbsp;&nbsp; 
                    h5dump -d "/GroupD/FreshData" -b LE 
                    <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                           -o "FreshDataD.bin" quux.h5</code>
              <br>
              <br>
       <li>Display two sets of packed bits (bits 0-1 and bits 4-6) in the 
           dataset <code>/dset</code> of the file <code>quux.h5</code>:<br>
              <code>&nbsp;&nbsp;&nbsp;&nbsp;
                    h5dump -d /dset -M 0,1,4,3 quux.h5 </code>
              <br>
              <br>
       <li>Dump the dataset <code>/GroupFoo/GroupBar/Fnord</code> 
           to the file <code>quux.h5</code> and 
           output the DDL into the file <code>ddl.txt</code> and 
           the raw data into the file <code>data.txt</code>:<br>
              <code>&nbsp;&nbsp;&nbsp;&nbsp;
                    h5dump -d /GroupFoo/GroupBar/Fnord --ddl=ddl.txt -y 
                    <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                           -o data.txt quux.h5 </code>
              <br>
              <br>
       <li>Dump the dataset <code>/GroupFoo/GroupBar/Fnord</code> 
           to the file <code>quux.h5</code>,
           suppress the DDL output,
           and output the raw data into the file <code>data.txt</code>:<br>
              <code>&nbsp;&nbsp;&nbsp;&nbsp;
                    h5dump -d /GroupFoo/GroupBar/Fnord --ddl= -y 
                    <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                           -o data.txt quux.h5</code>
              <br>
              <br>

     </ol>
     </dd>

<p>
<dt><strong>Current Status:</strong>
    <dd>The current version of <code>h5dump</code> displays the
        following information:
        <ul>
          <li>Group
            <ul>
               <li>group attribute (see Attribute)
               <li>group member
            </ul>
          <li>Dataset
            <ul>
               <li>dataset attribute (see Attribute)
               <li>dataset type (see Datatype)
               <li>dataset space (see Dataspace)
               <li>dataset data
            </ul>

<!-- NEW PAGE -->

          <li>Attribute
            <ul>
               <li>attribute type (see Datatype)
               <li>attribute space (see Dataspace)
               <li>attribute data
            </ul>
          <li>Datatype
            <ul>
               <li>integer type
                   <br>
                   - H5T_STD_I8BE, H5T_STD_I8LE, H5T_STD_I16BE, ...
                   <br>
                   - packed bits display
                   <br>
                   &nbsp;&nbsp;&nbsp;- integer types only
                   <br>
                   &nbsp;&nbsp;&nbsp;- limited to first 8 bits
                   <br>
                   &nbsp;&nbsp;&nbsp;- applied globally to all integer values, 
                                       including inside compound types
               <li>bitfield type
               <li>floating point type
                   <br>
                   - H5T_IEEE_F32BE, H5T_IEEE_F32LE, H5T_IEEE_F64BE, ...
               <li>string type
               <li>compound type 
                   <br>
                   - named, unnamed and transient compound type
                   <br>
                   - integer, floating or string type member
               <li>opaque types
               <li>reference type
                   <br>
                   - object references 
                   <br>
                   - data regions
               <li>enum type
               <li>variable-length datatypes
                   <br>
                   - atomic types only
                   <br>
                   - scalar or single dimensional array of variable-length
                         types supported
            </ul>
          <li>Dataspace 
            <ul>
               <li>scalar and simple space
            </ul>
          <li>Soft link
          <li>Hard link
          <li>Loop detection
        </ul>
     
<p>
<dt><strong>See Also:</strong>
    
    <dd>
    <table border="0" width="100%">
      <tr><td valign="top">
          <li>HDF5 Data Description Language syntax at
            <a href="../ddl.html"><cite>DDL for HDF5</cite></a>
          <li>HDF5 XML Schema at
            <a href="http://www.hdfgroup.org/HDF5/XML/schema/HDF5-File.xsd">http://www.hdfgroup.org/HDF5/XML/schema/HDF5-File.xsd</a>
          <li>HDF5 XML information at
            <a href="http://www.hdfgroup.org/HDF5/XML/">http://www.hdfgroup.org/HDF5/XML/</a>
      </td></tr>
    </table>
    </dd>

<p>
<dt><strong>History:</strong>
  <dd><table width="90%" id="table2">
     <tr>
       <td valign="top" align="left" width="10%">
         <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;
       </td>
       <td valign="top" align="left">
         <strong>Change</strong>
      </td></tr>
      <tr>
        <td valign="top">1.8.12</td>
        <td valign="top">
          Optional value of <code>0</code> (zero) for the 
          <code>-A, --onlyattr</code> option added in this release.
          <p>
          Option added in this release:
          <br>
          <code>&nbsp;&nbsp;&nbsp;-N <em>P</em></code>
          or
          <code>--any-path=<em>P</em></code> 
       </td></tr>
      <tr>
        <td valign="top">1.8.11</td>
        <td valign="top">
          Option added in this release:
          <br>
          <code>&nbsp;&nbsp;&nbsp;-O <em>F</em></code>
          or
          <code>--ddl=<em>F</em></code> 
          <br>
          This option can be used to suppress the DDL output.
          <br>
          This option, combined with the <code>'--output=<em>F</em>'</code> 
          (or <code>'-o <em>F'</em></code>) option
          will generate files that can be used as input to
          <a href="#Tools-Import"><code>h5import</code></a>.

          <p>
          <code>h5dump</code> updated in this release to display the
          compression ratio for user-defined filters.

          <p>
          In <code>h5dump</code> output, 
          <code>UNKNOWN_FILTER</code> has been changed to 
          <code>USER_DEFINED_FILTER</code>.
       </td></tr>
      <tr>
        <td valign="top">1.8.9</td>
        <td valign="top">
          Option added in this release:
          <br>
          <code>&nbsp;&nbsp;&nbsp;--no-compact-subset</code> 
          <p>
          <code>h5dump</code> output has been updated for 
                      this release to improve compliance with the 
                      HDF5 DDL <a href="../ddl.html">specification</a>
                      and to improve readablilty.
                      This output is now fully compliant with the
                      HDF5 DDL specification, but these changes may affect 
                      some user scripts:
                      <ul>
                      <li>Whitespace has been modified.
                      <li>Display errors, such as misplaced brackets,
                          have been fixed.
                      <li>When printing superblock content, 
                          user block content is now properly displayed within 
                          the superblock.
                      </ul>
       </td></tr>
      <tr>
        <td valign="top">1.8.7</td>
        <td valign="top">
          Option added in this release:
          <br>
          <code>&nbsp;&nbsp;&nbsp;--enable-error-stack</code> 
          <p>
          Tool updated in this release to correctly display reference type:
          <br>
          <code>&nbsp;&nbsp;&nbsp;H5T_REFERENCE {H5T_STD_REF_OBJ}</code> 
              for object references
          <br>
          <code>&nbsp;&nbsp;&nbsp;H5T_REFERENCE {H5T_STD_REF_DSETREG}</code> 
              for dataset region references
       </td></tr>
      <tr>
        <td valign="top">1.8.5</td>
        <td valign="top">
          Bitfield display fixed in this release.
          <p>
          Option added in this release for packed bits data display: 
          <br>
          <code>&nbsp;&nbsp;&nbsp;-M</code>
          or
          <code>--packedbits</code> option
       </td></tr>
      <tr>
        <td valign="top">1.8.4</td>
        <td valign="top">
          Option added in this release for region reference display: 
          <br>
          <code>&nbsp;&nbsp;&nbsp;-R</code>
          or 
          <code>--region</code> option
       </td></tr>
      <tr>
        <td valign="top">1.8.1</td>
        <td valign="top">
          Compression ratio added to output of 
          <code>-p</code> or <code>--properties</code> option 
          in this release.
       </td></tr>
      <tr>
        <td valign="top">1.8.0</td>
        <td valign="top">
          Options added in this release:
          <br>
          <code>&nbsp;&nbsp;&nbsp;-q</code> or <code>--sort_by</code> 
          <br>
          <code>&nbsp;&nbsp;&nbsp;-z</code> or <code>--sort_order</code> 
       </td></tr>
      <tr>
        <td valign="top">1.6.5</td>
        <td valign="top">
          Options added in this release:
          <br>
          <code>&nbsp;&nbsp;&nbsp;-n</code> or <code>--contents</code> 
          <br>
          <code>&nbsp;&nbsp;&nbsp;-e</code> or <code>--escape</code> 
          <br>
          <code>&nbsp;&nbsp;&nbsp;-y</code> or <code>--noindex</code> 
          <br>
          <code>&nbsp;&nbsp;&nbsp;-p</code> or <code>--properties</code> 
          <br>
          <code>&nbsp;&nbsp;&nbsp;-b</code> or <code>--binary</code> 
       </td></tr>
  </table></dd>

</dl>

