<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Sextent_equal" -->
<hr>
<dl>
<dt><strong>Name:</strong> <a name="Dataspace-ExtentEqual">H5Sextent_equal</a>
<dt><strong>Signature:</strong>
    <dd><em>htri_t</em> <code>H5Sextent_equal</code>(<em>hid_t</em> 
      <code>space1_id</code>, <em>hid_t</em> <code>space2_id</code>)
<dt><strong>Purpose:</strong>
    <dd>Determines whether two dataspace extents are equal.
<dt><strong>Description:</strong>
    <dd><code>H5Sextent_equal</code> determines whether the dataspace extents
      of two dataspaces, <code>space1_id</code> and <code>space2_id</code>,
      are equal.
<dt><strong>Parameters:</strong>
    <ul>
      <table>
        <tr>
	  <td valign="top"><em>hid_t</em> <code>space1_id</code></td>
          <td valign="top">First dataspace identifier.</td>
	</tr>
        <tr>
	  <td valign="top"><em>hid_t</em>&nbsp;<code>space2_id</code>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top">Second dataspace identifier.</td>
	</tr>
      </table>
    </ul>
<dt><strong>Returns:</strong>
    <dd>Returns <code>TRUE</code> if equal, <code>FALSE</code> 
      if unequal, if successful; otherwise returns a negative value.

<dt><strong>Fortran90 Interface:</strong> h5sextent_equal_f
    <dd>
	<pre>
SUBROUTINE h5sextent_equal_f(space1_id, space2_id, equal, hdferr)
  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: space1_id ! First dataspace identifier
  INTEGER(HID_T), INTENT(IN) :: space2_id ! Second dataspace identifier
  LOGICAL, INTENT(OUT) :: Equal           ! .TRUE. if equal, .FALSE. if unequal
  INTEGER, INTENT(OUT) :: hdferr          ! Error code
                                          ! 0 on success and -1 on failure 
END SUBROUTINE h5sextent_equal_f 
	</pre>		
</dl>

