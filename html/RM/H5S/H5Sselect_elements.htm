

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Sselect_elements" -->
<hr>
<dl>

<dt><div align=right><font color=999999 size=-1><i>
    Last modified: 17 August 2010
    </i></font></div>

<dt><strong>Name:</strong> <a name="Dataspace-SelectElements">H5Sselect_elements</a>
<dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Sselect_elements</code>(
        <em>hid_t </em><code>space_id</code>,
        <em>H5S_seloper_t</em> <code>op</code>,
        <em>size_t</em> <code>num_elements</code>,
        <em>const hsize_t *</em><code>coord</code>
    )

<p>
<dt><strong>Purpose:</strong>
    <dd>Selects array elements to be included in the selection for a dataspace.

<p>
<dt><strong>Description:</strong>
    <dd><code>H5Sselect_elements</code> selects array elements to be 
        included in the selection for the <code>space_id</code> dataspace. 
        This is referred to as a <i>point selection</i>.
        <p>
        The number of elements selected is set in the 
        <code>num_elements</code> parameter.  
        <p>
        The <code>coord</code> parameter is a pointer to a buffer
        containing a serialized 2-dimensional array of size
        <code>num_elements</code> by the rank of the dataspace.
        The array lists dataset elements in the point selection; 
        that is, it&rsquo;s a list of of zero-based values specifying the 
        coordinates in the dataset of the selected elements.  
        The order of the element coordinates in the 
        <code>coord</code> array specifies the order in which  
        the array elements are iterated through when I/O is performed.  
        Duplicate coordinate locations are not checked for.
        See below for examples of the mapping between 
        the serialized contents of the buffer and
        the point selection array that it represents.
        <p>
        The selection operator <code>op</code> determines how the 
        new selection is to be combined with the previously existing
        selection for the dataspace.  
        The following operators are supported:
        <center>
        <table width=90% border=0>
          <tr><td valign=top>
            <code>H5S_SELECT_SET</code>
            </td><td valign=top>
            Replaces the existing selection with the parameters from 
            this call.
            Overlapping blocks are not supported with this operator.
<!--      </td></tr><tr><td valign=top>
            <code>H5S_SELECT_OR</code>
            </td><td valign=top>
-->         Adds the new selection to the existing selection.
          </td></tr><tr><td valign=top>
            <code>H5S_SELECT_APPEND</code>
            </td><td valign=top>
            Adds the new selection following the last element of the 
            existing selection.
          </td></tr><tr><td valign=top>
            <code>H5S_SELECT_PREPEND&nbsp;&nbsp;</code>
            </td><td valign=top>
            Adds the new selection preceding the first element of the 
            existing selection.
          </td></tr>
        </table>
        </center>
<!--    When operator <code>H5S_SELECT_OR</code> 
        is used to combine a new selection with an existing selection,
        the selection ordering is reset to C array ordering.
-->
        <p>
        <strong>Mapping the serialized <code>coord</code> buffer 
        to a 2-dimensional point selection array:</strong> &nbsp;
        To illustrate the construction of the contents of the 
        <code>coord</code> buffer, consider two simple examples:
        a selection of 5 points in a 1-dimensional array and
        a selection of 3 points in a 4-dimensional array.
        <p>
        In the 1D case, 
        we will be selecting five points and a 1D dataspace has rank 1,
        so the selection will be described in a 5-by-1 array.
        To select the 1st, 14th, 17th, 23rd, 8th elements 
        of the dataset, the selection array would be as follows
        (remembering that point coordinates are zero-based):
        <pre>
         0
        13
        16
        22
         7 </pre>
        This point selection array will be serialized in the 
        <code>coord</code> buffer as:
        <pre>
         0 13 16 22 7 </pre>

        <p>
        In the 4D case, 
        we will be selecting three points and a 4D dataspace has rank 4,
        so the selection will be described in a 3-by-4 array.
        To select the points 
        (1,1,1,1), (14,6,12,18), and (8,22,30,22),
        the point selection array would be as follows:
        <pre>
         0  0  0  0
        13  5 11 17
         7 21 29 21</pre>
        This point selection array will be serialized in the 
        <code>coord</code> buffer as:
        <pre>
         0 0 0 0 13 5 11 17 7 21 29 21</pre>

        

<p>
<dt><strong>Parameters:</strong>
    <dd><table>
        <tr>
          <td valign="top"><em>hid_t</em> <code>space_id</code></td>
          <td valign="top">IN: Identifier of the dataspace.</td></tr>
        <tr>
          <td valign="top"><em>H5S_seloper_t</em> <code>op</code></td>
          <td valign="top">IN: Operator specifying how the new selection is to be 
              combined with the existing selection for the dataspace.</td></tr>
        <tr>
          <td valign="top"><em>size_t</em>&nbsp;<code>num_elements&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
          <td valign="top">IN: Number of elements to be selected.</td></tr>
        <tr>
          <td valign="top"><em>const hsize_t *</em><code>coord</code></td>
          <td valign="top">IN: A pointer to a buffer containing a serialized
              copy of a 2-dimensional array of zero-based values specifying 
              the coordinates of the elements in the point selection.</td></tr>
    </table></ddd

<p>
<dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful; 
        otherwise returns a negative value.

<p>
<dt><strong>Fortran90 Interface:</strong> h5sselect_elements_f
    <dd>
    <pre>
SUBROUTINE h5sselect_elements_f(space_id, operator, rank, num_elements,
                                coord, hdferr) 
  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: space_id  ! Dataspace identifier 
  INTEGER, INTENT(IN) :: operator         ! Flag, valid values are:
                                          !    H5S_SELECT_SET_F 
                                          !    H5S_SELECT_APPEND_F 
                                          !    H5S_SELECT_PREPEND_F 
  INTEGER, INTENT(IN) :: rank             ! Number of dataspace 
                                          ! dimensions
  INTEGER(SIZE_T), INTENT(IN) :: num_elements  
                                          ! Number of elements to be 
                                          ! selected
  INTEGER(HSIZE_T), DIMENSION(rank,num_elements), INTENT(IN) :: coord  
                                          ! A 1-based array containing the 
                                          ! coordinates of the selected 
                                          ! elements
                                          ! NOTE: Reversed dimension declaration
                                          ! compared to the C specification
                                          ! of coord(num_elements, rank)
  INTEGER, INTENT(OUT) :: hdferr          ! Error code
                                          ! 0 on success and -1 on failure
END SUBROUTINE h5sselect_elements_f
    </pre>

<p>
<dt><strong>History</strong>:</strong>
    <dd><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>Change</strong></td>
            </td></tr>
        <tr>
          <td valign="top">1.6.4</td>
          <td valign="top">
            C <code>coord</code> parameter type changed to 
            <em>const hsize_t</em>.
            <br>
            Fortran <code>coord</code> parameter type changed to 
            <code>INTEGER(HSIZE_T)</code>.</td></tr>
    </table></dd>
</dl>

