

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Sset_extent_simple" -->
<hr>
<dl>

<dt><div align=right><font color=999999 size=-1><i>
    Last modified: 16 November 2010
    </i></font></div>

<dt><strong>Name:</strong> <a name="Dataspace-SetExtentSimple">H5Sset_extent_simple</a>
<dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Sset_extent_simple</code>(
        <em>hid_t</em> <code>space_id</code>,
        <em>int</em> <code>rank</code>,
        <em>const hsize_t *</em><code>current_size</code>,
        <em>const hsize_t *</em><code>maximum_size</code>
    )

<p>
<dt><strong>Purpose:</strong>
    <dd>Sets or resets the size of an existing dataspace.

<p>
<dt><strong>Description:</strong>
    <dd><code>H5Sset_extent_simple</code> sets or resets the size of 
        an existing dataspace.
        <p>
        <code>rank</code> is the dimensionality, or number of 
        dimensions, of the dataspace.
        <p>
        <code>current_size</code> is an array of size <code>rank</code> 
        which contains the new size of each dimension in the dataspace.  
        <code>maximum_size</code> is an array of size <code>rank</code> 
        which contains the maximum size of each dimension in the 
        dataspace. 
        <p>
        Any previous extent is removed from the dataspace, the dataspace 
        type is set to <code>H5S_SIMPLE</code>, and the extent is set as 
        specified.
        <p>
        Note that a dataset must be chunked if <code>current_size</code> 
        does not equal <code>maximum_size</code>.

<p>
<dt><strong>Parameters:</strong>
    <dd><table>
        <tr>
          <td valign="top"><em>hid_t</em> <code>space_id</code></td>
          <td valign="top">IN: Dataspace identifier.</td>
        <tr>
          <td valign="top"><em>int</em> <code>rank</code></td>
          <td valign="top">IN: Rank, or dimensionality, of the dataspace.</td>
        <tr>
          <td valign="top"><em>const&nbsp;hsize_t&nbsp;*</em><code>current_size&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
          <td valign="top">IN: Array containing current size of dataspace.</td>
        <tr>
          <td valign="top"><em>const hsize_t *</em><code>maximum_size</code></td>
          <td valign="top">IN: Array containing maximum size of dataspace.
              </td></tr>
    </table></dd>

<p>
<dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.

<p>
<dt><strong>Fortran90 Interface:</strong> h5sset_extent_simple_f
    <dd>
    <pre>
SUBROUTINE h5sset_extent_simple_f(space_id, rank, current_size,
                                  maximum_size, hdferr) 
  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: space_id     ! Dataspace identifier 
  INTEGER, INTENT(IN) :: rank                ! Dataspace rank 
  INTEGER(HSIZE_T), DIMENSION(rank), INTENT(IN) :: current_size 
                                             ! Array with the new sizes
                                             ! of dimensions 
  INTEGER(HSIZE_T), DIMENSION(rank), INTENT(IN) ::  
                                             ! Array with the new maximum
                                             ! sizes of dimensions 
  INTEGER, INTENT(OUT) :: hdferr             ! Error code
                                             ! 0 on success and -1 on failure
END SUBROUTINE h5sset_extent_simple_f
    </pre>

</dl>

