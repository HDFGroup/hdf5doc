<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Screate" -->
<hr>
<dl>
<dt><strong>Name:</strong> <a name="Dataspace-Create">H5Screate</a>
<dt><strong>Signature:</strong>
    <dd><em>hid_t</em> <code>H5Screate</code>(<em>H5S_class_t</em> <code>type</code>)
<dt><strong>Purpose:</strong>
    <dd>Creates a new dataspace of a specified type.
<dt><strong>Description:</strong>
    <dd><code>H5Screate</code> creates a new dataspace of a particular 
        <code>type</code>.  
        Currently supported types are as follows:
                <br>&nbsp;&nbsp;&nbsp;&nbsp;
                    <code>H5S_SCALAR</code>
                <br>&nbsp;&nbsp;&nbsp;&nbsp;
                    <code>H5S_SIMPLE</code>
                <br>&nbsp;&nbsp;&nbsp;&nbsp;
                    <code>H5S_NULL</code>
                <br>
        Further dataspace types may be added later.  
        <p>
        A <i>scalar dataspace</i>, <code>H5S_SCALAR</code>, 
          has a single element, though that element may be of a complex 
          datatype, such as a compound or array datatype.
        A <i>simple dataspace</i>, <code>H5S_SIMPLE</code>, consists of 
          a regular array of elements.
        A <i>null dataspace</i>, <code>H5S_NULL</code>, has no data elements. 
<dt><strong>Parameters:</strong>
    <ul><table>
        <tr>
		  <td valign="top"><em>H5S_class_t</em>&nbsp;<code>type&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
          <td valign="top">The type of dataspace to be created.</td></tr>
    </table></ul>
<dt><strong>Returns:</strong>
    <dd>Returns a dataspace identifier if successful; 
        otherwise returns a negative value.
<dt><strong>Fortran90 Interface:</strong> h5screate_f
    <dd>
	<pre>
SUBROUTINE h5screate_f(classtype, space_id, hdferr) 
  IMPLICIT NONE
  INTEGER, INTENT(IN) :: classtype        ! The type of the dataspace
                                          ! to be created. Possible values
                                          ! are: 
                                          !    H5S_SCALAR_F 
                                          !    H5S_SIMPLE_F 
                                          !    H5S_NULL_F
  INTEGER(HID_T), INTENT(OUT) :: space_id ! Dataspace identifier 
  INTEGER, INTENT(OUT) :: hdferr          ! Error code
                                          ! 0 on success and -1 on failure
END SUBROUTINE h5screate_f
	</pre>		
		
		<!--<dt><strong>Non-C API(s):</strong>
    	<dd>
        
        <img src="Graphics/Java.gif"> 
        <img src="Graphics/C++.gif">
        -->
</dl>

