

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Lcreate_hard" -->
<hr>
<dl>

  <dt><div align=right><font color=999999 size=-1><i>
      Last modified: 9 November 2009
      </i></font></div>

  <dt><strong>Name:</strong> <a name="Link-CreateHard">H5Lcreate_hard</a> 
  <dt><strong>Signature:</strong>
    
  <dd><em>herr_t</em> <code>H5Lcreate_hard</code>(
      <em>hid_t</em> <code>obj_loc_id</code>, 
      <em>const char *</em><code>obj_name</code>,
      <em>hid_t</em> <code>link_loc_id</code>, 
      <em>const char *</em><code>link_name</code>,
      <em>hid_t</em> <code>lcpl_id</code>, 
      <em>hid_t</em> <code>lapl_id</code> 
      ) 
      <p></p>
  <dt><strong>Purpose:</strong>
    <dd>Creates a hard link to an object.
      <p></p>
  <dt><strong>Description:</strong>  
    <dd><code>H5Lcreate_hard</code> creates a new hard link to a 
      pre-existing object in an HDF5 file.  
      The new link may be one of many that point to that object.
      <p>
      The target object must already exist in the file.
      <p>
      <code>obj_loc_id</code> and <code>obj_name</code> specify the 
      location and name, respectively, of the target object,
      i.e., the object that the new hard link points to.
      <p>
      <code>link_loc_id</code> and <code>link_name</code> specify the 
      location and name, respectively, of the new hard link.
      <p>
      <code>obj_name</code> and <code>link_name</code> are interpreted
      relative to <code>obj_loc_id</code> and <code>link_loc_id</code>,
      respectively.
      <p> 
      If <code>obj_loc_id</code> and <code>link_loc_id</code> are 
      the same location, the HDF5 macro <code>H5L_SAME_LOC</code> 
      can be used for either parameter (but not both).
      <p> 
      <code>lcpl_id</code> and <code>lapl_id</code> are the
      link creation and access property lists associated with the 
      new link.
      <p> 
      Hard  and soft links are for use only if the target object 
      is in the current file.  
      If the desired target object is in a different file from the 
      new link, an external link may be created with  
      <a href="#Link-CreateExternal"><code>H5Lcreate_external</code></a>.
      <p> 
      The HDF5 library keeps a count of all hard links pointing to an 
      object; if the hard link count reaches zero (<code>0</code>),
      the object will be deleted from the file.  Creating new hard links
      to an object will prevent it from being deleted if other links 
      are removed.
      The library maintains no similar count for soft links and they 
      can dangle.
      </p>
  <dt><strong>Parameters:</strong>
    <dd><table>
          <tr>
            <td valign="top"><em>hid_t</em> <code>obj_loc_id</code></td>
            <td valign="top">IN: The file or group identifier for the 
                target object.</td></tr>
          <tr>
            <td valign="top"><em>const&nbsp;char&nbsp;*</em><code>obj_name&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
            <td valign="top">IN: Name of the target object, 
                which must already exist.</td></tr>
          <tr>
            <td valign="top"><em>hid_t</em> <code>link_loc_id</code></td>
            <td valign="top">IN: The file or group identifier for the 
                new link.</td></tr> 
          <tr>
            <td valign="top"><em>const char *</em> <code>link_name</code></td>
            <td valign="top">IN: The name of the new link.</td></tr>
          <tr>
            <td valign="top"><em>hid_t</em> <code>lcpl_id</code></td> 
            <td valign="top">IN: Link creation property list identifier.</td></tr>
          <tr>
            <td valign="top"><em>hid_t</em> <code>lapl_id</code></td> 
            <td valign="top">IN: Link access property list identifier.</td></tr>
    </table>
       <p></p>
 <dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.
<!-- NEW PAGE -->
       <p></p>
 <dt><strong>Fortran90 Interface:</strong> h5lcreate_hard_f
    <dd>
    <pre>
SUBROUTINE h5lcreate_hard_f(obj_loc_id, obj_name, link_loc_id, link_name, &
                            hdferr, lcpl_id, lapl_id)
  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: obj_loc_id  
                          ! The file or group identifier for the target object.
  CHARACTER(LEN=*), INTENT(IN) :: obj_name  
                          ! Name of the target object, which must already exist.
  INTEGER(HID_T), INTENT(IN) :: link_loc_id 
                          ! The file or group identifier for the new link.
  CHARACTER(LEN=*), INTENT(IN) :: link_name 
                          ! The name of the new link.
  INTEGER, INTENT(OUT) :: hdferr        
                          ! Error code: 
                          ! 0 on success and -1 on failure
  INTEGER(HID_T), OPTIONAL, INTENT(IN) ::   lcpl_id         
                          ! Link creation property list identifier.
  INTEGER(HID_T), OPTIONAL, INTENT(IN) ::   lapl_id         
                          ! Link access property list identifier.
END SUBROUTINE h5lcreate_hard_f
    </pre>
        <!--<dt><strong>Non-C API(s):</strong>
    	<dd>
        
        <img src="Graphics/Java.gif"> 
        <img src="Graphics/C++.gif">
        -->
<p></p>
<dt><strong>History:</strong>
    <dd><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>C</strong></td></tr>
        <tr>
          <td valign="top">1.8.0</td>
          <td valign="top">
            Function introduced in this release.</td></tr>
    </table>
</dl>


