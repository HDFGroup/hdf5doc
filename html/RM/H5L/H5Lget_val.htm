

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Lget_val" -->
<hr>
<dl>

  <dt><div align=right><font color=999999 size=-1><i>
      Last modified: 9 November 2009
      </i></font></div>

  <dt><strong>Name:</strong> <a name="Link-GetVal">H5Lget_val</a>
  <dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Lget_val</code>(
        <em>hid_t</em> <code>link_loc_id</code>,
        <em>const char *</em><code>link_name</code>,
        <em>void *</em><code>linkval_buff</code>,
        <em>size_t</em> <code>size</code>,
        <em>hid_t</em> <code>lapl_id</code>
    )

  <p></p>
  <dt><strong>Purpose:</strong>
    <dd>Returns the value of a symbolic link.

  <p></p>
  <dt><strong>Description:</strong>
    <dd><code>H5Lget_val</code> returns the link value of the link 
        <code>link_name</code>.  
        <p>
        The parameter <code>link_loc_id</code> is a file or group identifier.
        <p>
        <code>link_name</code> identifies a symbolic link and is defined 
        relative to <code>link_loc_id</code>.
        Symbolic links include soft and external links and some user-defined 
        links.
        This function is not for use with hard links.
        <p>
        The link value is returned in the buffer <code>linkval_buff</code>.
        For soft links, this is the path to which the link points, 
        including the null terminator; for external and user-defined links, 
        it is the link buffer.
        <p>
        <code>size</code> is the size of <code>linkval_buff</code>
        and should be the size of the link value being returned.
        This size value can be determined through a call to 
        <code>H5Lget_info</code>; it is returned in the
        <code>val_size</code> field of the <code>H5L_info_t</code> struct.
        <p>
        If <code>size</code> is smaller than the size of the returned 
        value, then the string stored in <code>linkval_buff</code> 
        will be truncated to <code>size</code> bytes.
        For soft links, this means that the value will not be null terminated. 
        <p> 
        In the case of external links, the target file and object names
        are extracted from <code>linkval_buff</code> by calling
        <a href="#Link-UnpackELinkVal"><code>H5Lunpack_elink_val</code></a>.
        <p> 
        The link class of <code>link_name</code> can be determined with a call 
        to <code>H5Lget_info</code>.
        <p>
        <code>lapl_id</code> specifies the link access property list 
        associated with the link <code>link_name</code>.
        In the general case, when default link access properties are 
        acceptable, this can be passed in as <code>H5P_DEFAULT</code>.
        An example of a situation that requires a non-default link access 
        property list is when the link is an external link; an external link 
        may require that a link prefix be set in a link access property list
        (see <a href="RM_H5P.html#Property-SetELinkPrefix">
        <code>H5Pset_elink_prefix</code></a>).
        <p>
        This function should be used only after 
        <code>H5Lget_info</code> has been called to verify that 
        <code>link_name</code> is a symbolic link.
        This can be deteremined from the <code>link_type</code> field
        of the <code>H5L_info_t</code> struct.

  <p>
  <dt><strong>Parameters:</strong>
    <dd><table>
      <tr>
        <td valign="top"><em>hid_t</em> <code>link_loc_id</code></td>
        <td valign="top">IN: File or group identifier.</td></tr>
      <tr>
        <td valign="top"><em>const&nbsp;char&nbsp;*</em><code>link_name&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
        <td valign="top">IN: Link whose value is to be returned.</td></tr>
      <tr>
        <td valign="top"><em>void *</em><code>linkval_buff</code></td>
        <td valign="top">OUT: The buffer to hold the returned 
            link value.</td></tr>
      <tr>
        <td valign="top"><em>size_t</em> <code>size</code></td>
        <td valign="top">IN: Maximum number of characters of 
            link value to be returned.</td></tr>
      <tr>
        <td valign="top"><em>hid_t</em> <code>lapl_id</code></td>
        <td valign="top">IN: List access property list identifier.</td></tr>
    </table>

<!-- NEW PAGE -->

  <p>
  <dt><strong>Returns:</strong>
    <dd>Returns a non-negative value, with the link value in 
        <code>linkval_buff</code>, if successful.
        Otherwise returns a negative value.
  <p></p>
  <dt><strong>Fortran90 Interface:</strong> <!-- h5lget_val_f -->
    <dd>None.
<!--
    <pre>
SUBROUTINE h5lget_val_f(loc_id, name, size, buffer, lapl_id, hdferr)
  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: loc_id         ! File or group identifier
  CHARACTER(LEN=*), INTENT(IN) :: name         ! Name of the symbolic link 
  CHARACTER(LEN=size), INTENT(OUT) :: buffer   ! Buffer to hold the link value
  INTEGER(HID_T), INTENT(IN) :: lapl_id        ! Link access property list identifier
  INTEGER, INTENT(OUT) :: hdferr               ! Error code 
                                               ! 0 on success and -1 on failure
END SUBROUTINE h5lget_val_f
    </pre>
-->

  <p></p>
  <dt><strong>History:</strong>
    <dd><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>C</strong></td></tr>
        <tr>
          <td valign="top">1.8.0</td>
          <td valign="top">
            Function introduced in this release.</td></tr>
    </table>
</dl>


