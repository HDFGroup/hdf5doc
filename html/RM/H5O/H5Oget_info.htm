<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Oget_info" -->
<hr>
<dl>
  <dt><strong>Name:</strong> <a name="Object-GetInfo">H5Oget_info</a>
  <dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Oget_info</code>(
        <em>hid_t</em> <code>object_id</code>,
        <em>H5O_info_t</em> *<code>object_info</code>
    )
  <p>
  <dt><strong>Purpose:</strong>
    <dd>Retrieves the metadata for an object specified by an identifier.
  <p>
  <dt><strong>Description:</strong>
    <dd><code>H5Oget_info</code> specifies an object by its identifier,
    <code>object_id</code>, and retrieves the metadata describing that object
    in <code>object_info</code>, an <em>H5O_info_t</em> struct.
    <p>
    An <em>H5O_info_t</em> struct is defined (in <code>H5Opublic.h</code>)
    as follows :
    <dir>
    <pre>
typedef struct H5O_info_t {
    unsigned long       fileno;         /* File number that object is         */
                                        /*    located in                      */
    haddr_t             addr;           /* Object address in file             */
    H5O_type_t          type;           /* Basic object type (group,          */
                                        /*    dataset, etc.)                  */
    unsigned            rc;             /* Reference count of object          */
    time_t              atime;          /* Access time                        */
    time_t              mtime;          /* Modification time                  */
    time_t              ctime;          /* Change time                        */
    time_t              btime;          /* Birth time                         */
    hsize_t             num_attrs;      /* # of attributes attached to object */
    struct {
        unsigned version;               /* Version number of header format in */
                                        /*    file                            */
        unsigned nmesgs;                /* Number of object header messages   */
        unsigned nchunks;               /* Number of object header chunks     */
        unsigned flags;                 /* Object header status flags         */
        struct {
            hsize_t total;              /* Total space for storing object     */
                                        /*    header in file                  */
            hsize_t meta;               /* Space within header for object     */
                                        /*    header metadata information     */
            hsize_t mesg;               /* Space within header for actual     */
                                        /*    message information             */
            hsize_t free;               /* Free space within object header    */
        } space;
        struct {
            uint64_t present;           /* Flags to indicate presence of      */
                                        /*    message type in header          */
            uint64_t shared;            /* Flags to indicate message type is  */
                                        /*    shared in header                */
        } mesg;     
    } hdr;
    /* Extra metadata storage for obj & attributes */
    struct {
        H5_ih_info_t   obj;             /* v1/v2 B-tree & local/fractal heap  */
                                        /*    for groups, B-tree for chunked  */
                                        /*    datasets                        */
        H5_ih_info_t   attr;            /* v2 B-tree & heap for attributes    */
    } meta_size;
} H5O_info_t;
    </pre>
    </dir>
<!-- NEW PAGE -->
  <p>
  <dt><strong>Parameters:</strong>
    <dd><table>
      <tr>
        <td valign="top"><em>hid_t</em> <code>object_id</code></td>
        <td valign="top">IN: Identifier for target object</td></tr>
      <tr>
        <td valign="top"><em>H5O_info_t&nbsp;*</em><code>object_info&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
        <td valign="top">OUT: Buffer in which to return object
            information</td></tr>
    </table>
  <p>
  <dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.
  <p>
  <dt><strong>Fortran90 Interface:</strong> <!-- h5ofunc_f -->
    <dd>None.
<!--
    <pre>
  
    </pre>
-->
        <!--<dt><strong>Non-C API(s):</strong>
    	<dd>
        
        <img src="Graphics/Java.gif"> 
        <img src="Graphics/C++.gif">
        -->
  <p>
  <dt><strong>History:</strong>
    <dd><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>C</strong></td></tr>
        <tr>
          <td valign="top">1.8.0</td>
          <td valign="top">
            Function introduced in this release.</td></tr>
    </table>
</dl>


