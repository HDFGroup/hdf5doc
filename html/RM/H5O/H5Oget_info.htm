

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Oget_info" -->
<hr>
<dl>

  <dt><div align=right><font color=999999 size=-1><i>
      Last modified: 11 May 2015
      </i></font></div>

  <dt><strong>Name:</strong> <a name="Object-GetInfo">H5Oget_info</a>
  <dt><strong>Signature:</strong>
    <dd><em>herr_t</em> <code>H5Oget_info</code>(
        <em>hid_t</em> <code>object_id</code>,
        <em>H5O_info_t</em> *<code>object_info</code>
    )

  <p>
  <dt><strong>Purpose:</strong>
    <dd>Retrieves the metadata for an object specified by an identifier.

  <p>
  <dt><strong>Description:</strong>
    <dd><code>H5Oget_info</code> specifies an object by its identifier,
    <code>object_id</code>, and retrieves the metadata describing that object
    in <code>object_info</code>, an <em>H5O_info_t</em> struct.
    <p>
    An <em>H5O_info_t</em> struct is defined (in <code>H5Opublic.h</code>)
    as follows :
    <dir>
    <pre>
typedef struct H5O_info_t {
    unsigned long       fileno;     /* Number of file where object is       */
                                    /*   located                            */
    haddr_t             addr;       /* Object address in file               */
    H5O_type_t          type;       /* Basic object type                    */
                                    /*   (See H5O_type_t below)             */
    unsigned            rc;         /* Reference count of object            */
    time_t              atime;      /* Access time                          */
    time_t              mtime;      /* Modification time                    */
    time_t              ctime;      /* Change time                          */
    time_t              btime;      /* Birth time                           */
    hsize_t             num_attrs;  /* # of attributes attached to object   */
    H5O_hdr_info_t      hdr         /* Object header information            */
                                    /*   (See H5O_hdr_info_t below)         */
    struct {
                                    /* Extra metadata storage for obj &     */
                                    /*   attributes                         */
        H5_ih_info_t    obj;        /* v1/v2 B-tree & local/fractal heap    */
                                    /*   for groups, B-tree for chunked     */
                                    /*   datasets.                          */
                                    /*   For internal library use only.     */
        H5_ih_info_t    attr;       /* v2 B-tree & heap for attributes.     */
                                    /*   For internal library use only.     */
    } meta_size;
} H5O_info_t;
    </pre>
    
    <p>Note the following about <code>H50_info_t</code>:</p>
    <p>Of the four time fields (<code>atime</code>, <code>mtime</code>, 
    <code>ctime</code>, and <code>btime</code>) only <code>ctime</code> 
    has been implemented.</p>

    <p>The <code>atime</code> value is the last time the object was read 
    or written.</p>

    <p>The <code>mtime</code> value is the last time the raw data in 
    the object was changed.</p>

    <p>The <code>ctime</code> value is the last time the metadata for 
    the object was changed.</p>

    <p>The <code>btime</code> value is the time the object was created.</p>

    <p>The fields nested in the <code>meta_size</code> field are for 
    internal library use only.</p>

    </dir>
    <br />
    <p>
    An <em>H5O_type_t</em> enum indicates the object type and is defined 
    (in <code>H5Opublic.h</code>) as follows:</p>
    <dir>
    <pre>
typedef enum H5O_type_t {
    H5O_TYPE_UNKNOWN = -1,      /* Unknown object type                      */
    H5O_TYPE_GROUP,             /* Object is a group                        */
    H5O_TYPE_DATASET,           /* Object is a dataset                      */
    H5O_TYPE_NAMED_DATATYPE,    /* Object is a committed (named) datatype   */
    H5O_TYPE_NTYPES             /* Number of different object types (must   */
                                /* be last!)                                */
} H5O_type_t;
    </pre>
    <p>Note that <code>object_id</code> refers only to the types 
    specified by <code>H5O_type_t</code>.</p>
    </dir>
    <br />
    <p>
    An <em>H5O_hdr_info_t</em> struct holds object header metadata and is 
    defined (in <code>H5Opublic.h</code>) as follows:
    <dir>
    <pre>
typedef struct H5O_hdr_info_t {
    unsigned version;           /* Version number of header format in file  */
    unsigned nmesgs;            /* Number of object header messages         */
    unsigned nchunks;           /* Number of object header chunks           */
    unsigned flags;             /* Object header status flags               */
    struct {
        hsize_t total;          /* Total space for storing object header in */ 
                                /*   file                                   */
        hsize_t meta;           /* Space within header for object header    */
                                /*   metadata information                   */
        hsize_t mesg;           /* Space within header for actual message   */
                                /*   information                            */
        hsize_t free;           /* Free space within object header          */
    } space;
    struct {
        uint64_t present;       /* Flags to indicate presence of message    */
                                /*   type in header                         */
        uint64_t shared;        /* Flags to indicate message type is        */
                                /*   shared in header                       */
    } mesg;
} H5O_hdr_info_t;
    </pre>
    
    <p>
    Valid values for the <code>version</code> field are 
    <code>H5O_VERSION_1</code> and <code>H5O_VERSION_2</code>. 
    Version 2 of the object header is smaller and more efficient 
    than version 1.</p>
    
    <p>
    Note that the information held by <em>H5O_hdr_info_t</em> might be 
    useful only to developers with extensive HDF5 experience. </p>
    </dir>
    <br />

<!-- NEW PAGE -->
  <p>
  <dt><strong>Parameters:</strong>
    <dd><table>
      <tr>
        <td valign="top"><em>hid_t</em> <code>object_id</code></td>
        <td valign="top">IN: Identifier for object of type specified 
        by <code>H5O_type_t</code></td></tr>
      <tr>
        <td valign="top"><em>H5O_info_t&nbsp;*</em><code>object_info&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
        <td valign="top">OUT: Buffer in which to return object
            information</td></tr>
    </table>

  <p>
  <dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.

  <p>
  <dt><strong>Fortran2003 Interface:</strong> h5oget_info_f
    <dd>

        <?php include("H5O/h5oget_info_f_F03.htm"); ?>

    <br>&nbsp;
    <p>
    <strong>Related Fortran2003 Derived Type:</strong> h5o_info_t

        <?php include("H5O/h5o_info_t_F03.htm"); ?>

  <p>
  <dt><strong>History:</strong>
    <dd><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>Change</strong></td></tr>
        <tr>
          <td valign="top">1.8.15</td>
          <td valign="top">
            Added a note about the valid values for the <code>version</code> 
            field in the <em>H5O_hdr_info_t</em> structure.</td></tr>
        <tr>
          <td valign="top">1.8.11</td>
          <td valign="top">
            Fortran subroutine introduced in this release.</td></tr>
        <tr>
          <td valign="top">1.8.10</td>
          <td valign="top">
            Added <em>H5O_type_t</em> structure to the Description section.<br />
            Separated <em>H5O_hdr_info_t</em> structure from 
            <em>H5O_info_t</em> in the Description section.<br />
            Clarified the definition and implementation of the time fields.<br />
            </td></tr>
        <tr>
          <td valign="top">1.8.0</td>
          <td valign="top">
            Function introduced in this release.</td></tr>
    </table>
</dl>


