


<p></p>
<br>
<strong>
<a name="CreateVLString">
Creating variable-length string datatypes</a>
</strong>

<table border="0" width="50%" align="right"><tr><td align="right">
<font color=999999 size=-1><i>
Last modified: 29 August 2012
</i></font>
</td></tr></table>

    <p>
    As the term implies, 
    variable-length strings are strings of varying lengths;
    they can be arbitrarily long,
    anywhere from 1 character to thousands of characters.
    <p>
    HDF5 provides the ability to create a variable-length string datatype.
    Like all string datatypes, this type is based on the 
    atomic string datatype: 
    <code>H5T_C_S1</code> in C or
    <code>H5T_FORTRAN_S1</code> in Fortran.
    While these datatypes default to one character in size, 
    they can be resized to specific fixed lengths 
    or to variable length.
    <p>
    Variable-length strings will transparently accommodate ASCII strings
    or UTF-8 strings.  This characteristic is set with 
    <a href="../RM/RM_H5T.html#Datatype-SetCset"><code>H5Tset_cset</a></code>
    in the process of creating the datatype.
    <p>
    Under the covers, variable-length strings are stored in a heap; 
    this can present challenges for efficient storage and read/write access.

    <p>
    The following HDF5 calls create a 
    C-style variable-length string datatype, 
    <code>vls_type_id</code>:
    <pre>
    vls_type_c_id = H5Tcopy(H5T_C_S1)
    status        = H5Tset_size(vls_type_c_id, H5T_VARIABLE)
    </pre>
    <p>
    In a C environment, variable-length strings will always be 
    <small>NULL</small>-terminated, so the buffer to hold such 
    a string must be one byte larger than the string itself 
    to accomadate the <small>NULL</small> terminator.

    <p>
    In Fortran, the datatype class <code>H5T_STRING</code> is defined 
    by the library to be variable length.  The following HDF5 calls 
    create a FORTRAN-style variable-length string datatype, 
    <code>vls_type_f_id</code>, and set the padding value to space padding:
    <pre>
    h5tcopy_f(H5T_STRING, vls_type_f_id, hdferr)
    h5tset_strpad_f(vls_type_f_id, H5T_STR_SPACEPAD_F, hdferr)
    </pre>
    <p>
    In a Fortran environment, these strings will generally be 
    space padded.
    If used in a C environment, however, they may be
    <small>NULL</small>-terminated.  








