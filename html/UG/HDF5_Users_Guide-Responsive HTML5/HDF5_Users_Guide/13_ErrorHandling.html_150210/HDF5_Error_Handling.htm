
<!DOCTYPE HTML>
<html>
<head>
 <meta http-equiv="X-UA-Compatible" content="IE=edge" />
 <meta name="OriginalFile" content="C:\1 MEE\Working\hdf5_trunk\html\UG\13_ErrorHandling.html_150210.fm" />
 <meta name="Originator" content="ImportMif" />
 <meta content="How to fly your personal spaceship" name="search-keywords" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="viewport" content="width=100%, initial-scale=1" />
<meta name="generator" content="Adobe FrameMaker 12" />
<title>HDF5 User's Guide - HDF5 Error Handling</title>
<link href="../../template/Theme1_Standard/main.css" type="text/css" rel="stylesheet" />
<link href="../../template/Theme1_Standard/jqueryui-custom.css" type="text/css" rel="stylesheet" />
 <link rel="stylesheet" href="13_ErrorHandling.html_150210.css" type="text/css" /><script type="text/javascript" language="JavaScript">//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]></script><style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadcsh.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/showhidecontrols.js"></script>
<script type="text/javascript" src="../../template/scripts/pageloader.js"></script>
<script type="text/javascript" src="../../template/scripts/toctree.js"></script>
<script type="text/javascript" src="../../template/scripts/toctreeloader.js"></script>
<script type="text/javascript" src="../../template/scripts/indextree.js"></script>
<script type="text/javascript" src="../../template/scripts/indextreeloader.js"></script>
<script type="text/javascript" src="../../template/scripts/glossarylist.js"></script>
<script type="text/javascript" src="../../template/scripts/glossarylistloader.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
<script type="text/javascript" src="../../template/scripts/searchfield.js"></script>
<script type="text/javascript" src="../../template/scripts/tabpanels.js"></script>
<script type="text/javascript" >
gTocPageHtml = "{%ICON%}<span  class=\"wTOCTreePageText\">{%LINK_NAME%}</span>";
gTocBookClosedHtml = "{%ICON%}<span  class=\"wTOCTreeCloseBookText\">{%LINK_NAME%}</span>";
gTocBookOpenHtml = "{%ICON%}<span  class=\"wTOCTreeCloseBookText\">{%LINK_NAME%}</span>";
gTocUrlHtml = "{%ICON%}<span  class=\"wTOCTreeLinkText\">{%LINK_NAME%}</span>";
gTocPageIconSrc = "../../template/Theme1_Standard/TOCTreePage.png";
gTocPageIconHoverSrc = "../../template/Theme1_Standard/TOCTreePageHover.png";
gTocPageIconSelSrc = "../../template/Theme1_Standard/TOCTreePageSelected.png";
gTocPageIconClass = "wTOCTreePageIcon";
gTocPageIconStyle = "";
gTocBookClosedIconSrc = "../../template/Theme1_Standard/TOCTreeCloseBook.png";
gTocBookClosedIconHoverSrc = "../../template/Theme1_Standard/TOCTreeCloseBookHover.png";
gTocBookClosedIconSelSrc = "../../template/Theme1_Standard/TOCTreeCloseBookSelected.png";
gTocBookClosedIconClass = "wTOCTreeCloseBookIcon";
gTocBookClosedIconStyle = "";
gTocBookOpenIconSrc = "../../template/Theme1_Standard/TOCTreeOpenBook.png";
gTocBookOpenIconHoverSrc = "../../template/Theme1_Standard/TOCTreeOpenBookHover.png";
gTocBookOpenIconSelSrc = "../../template/Theme1_Standard/TOCTreeOpenBookSelected.png";
gTocBookOpenIconClass = "wTOCTreeOpenBookIcon";
gTocBookOpenIconStyle = "";
gTocUrlIconSrc = "../../template/Theme1_Standard/TOCTreeLink.png";
gTocUrlIconHoverSrc = "../../template/Theme1_Standard/TOCTreeLinkHover.png";
gTocUrlIconSelSrc = "../../template/Theme1_Standard/TOCTreeLinkSelected.png";
gTocUrlIconClass = "wTOCTreeLinkIcon";
gTocUrlIconStyle = "";
</script>
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
</script>
<script type="text/javascript" >
gIdxKWHtml = "<span  class=\"wIdxKeywordText\">{%LINK_NAME%}</span>";
	gIdxLinkHtml = "<span  class=\"wIdxLinkText\">{%LINK_NAME%}</span>";
	gIdxCategoryHtml = "<span  class=\"wIdxAlphabetText\">{%LINK_NAME%}</span>";
</script>
<script type="text/javascript" >
gTopicId = "1_6";
</script>
<script type="text/javascript" >
gGloTermHtml = "<span  class=\"wGloTermText\">{%LINK_NAME%}</span>";
	gGloDefHtml = "<span  class=\"wGloDefinitionText\">{%LINK_NAME%}</span>";
	gGloCategoryHtml = "<span  class=\"wGloAlphabetText\">{%LINK_NAME%}</span>";
</script>
 <link rel="SHORTCUT ICON" href="../../Responsive HTML5_favicon.ico" />
</head>

<body>
<script type="text/javascript" src="../../ehlpdhtm.js"></script>



<div class="floatholder">
	<div class="phone_scrollarea overthrow">
		<div class="header">
			<table class="headertable">
				<tr>
					<td class="logo"><a href="../HDF5_UG_TitleWithoutSamples/HDF5_UG_TitleWithoutSamples.htm" class="homelink"><img src="../../template/Theme1_Standard/logo.png" alt="Logo" id="wLogoImage" style=" border:none; width:100%; max-width:53px;" border="0" /></a> </td>
					<td class="title"><div>
						<a href="../HDF5_UG_TitleWithoutSamples/HDF5_UG_TitleWithoutSamples.htm" class="homelink"><span>HDF5 User's Guide</span></a> 
						 
					</div></td>
					<td class="brsBack"><a id="browseSeqBack" class="wBSBackButton" href="../13_Attributes.html_150210/HDF5_Attributes.htm"><img alt="" src="../../template/Theme1_Standard/topic_left.png" class="wBSBackButton" border="0" style="width:100%; max-width:19px" /></a> </td>
					<td class="brsNext"><a id="browseSeqNext" class="wBSNextButton" href="../14_PropertyLists.html_150210/Properties_and_Property_Lists_in_HDF5.htm"><img alt="" src="../../template/Theme1_Standard/topic_right.png" class="wBSNextButton" border="0" style="width:100%; max-width:19px" /></a> </td>
				</tr>
			</table>
		</div>
		<div class="sidebar">
			<div data-showin="Always" class="wTabbedPanel" id="tabbedpanel">
				<ul class="wTabGroup" id="tab" data-tabid="tocTabButton" style="margin: 0px;">
					<li class="wTab" id="tocTabButton" data-contentid="tocTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/toc.png" class="normal" alt="Table of Contents" title="Table of Contents" id="xmlEditorTOCSidebarButton" style=" border:none; width:100%; max-width:30px;" border="0" /><img src="../../template/Theme1_Standard/toc_hover.png" class="hover" alt="Table of Contents" title="Table of Contents" id="xmlEditorTOCSidebarButtonHover" style=" border:none; width:100%; max-width:30px;" border="0" /></li>
					<li class="wTab" id="idxTabButton" data-contentid="idxTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/index.png" class="normal" alt="Index" title="Index" id="xmlEditorIDXSidebarButton" style=" border:none; width:100%; max-width:30px;" border="0" /><img src="../../template/Theme1_Standard/index_hover.png" class="hover" alt="Index" title="Index" id="xmlEditorIDXSidebarButtonHover" style=" border:none; width:100%; max-width:30px;" border="0" /></li>
					<li class="wTab" id="gloTabButton" data-contentid="gloTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/glo.png" class="normal" alt="Glossary" title="Glossary" id="xmlEditorGLOSidebarButton" style=" border:none; width:100%; max-width:34px;" border="0" /><img src="../../template/Theme1_Standard/glo_hover.png" class="hover" alt="Glossary" title="Glossary" id="xmlEditorGLOSidebarButtonHover" style=" border:none; width:100%; max-width:34px;" border="0" /></li>
				</ul>
				<div class="wTabContentGroup">
					<div id="tocTabPane" class="wTabContent">
						<div id="toc" class="wTOCTree" tabindex="464">
							
							
							
							
						</div>
					</div>
					<div id="idxTabPane" class="wTabContent">
						<div id="idx" class="wIndex">
							<input class="wIdxFilter" id="idxFilterBox" type="text" data-placeholder="Filter Keyword" onkeyup="filterIdx()"></input>
							
							
							
						</div>
					</div>
					<div id="gloTabPane" class="wTabContent">
						<div id="glo" class="wGlossary">
							<input class="wGloFilter" id="gloFilterBox" type="text" data-placeholder="Filter Term" onkeyup="filterGlo()"></input>
							
							
							
						</div>
					</div>
				</div>
			</div>
			<div class="closebutton buttonOpened">
				&#160; 
			</div>
		</div>
		<div class="content">
			<div class="desktop_functionholder">
				<div class="searchholder">
					<div class="wSearchField">
						<input id="searchBox" class="wSearchField" type="search" data-placeholder="-Search-" onkeydown="searchHelp(event, 'searchBox')" data-search="true" /><a class="wSearchLink" onclick="searchHelp(null, 'searchBox')" href="#"><img src="../../template/Theme1_Standard/Search.png" alt="" id="xmlEditwSearchLink" class="wSearchLink" border="0" style="width:100%; max-width:24px" /></a> 
						 
					</div>
				</div>
				<div class="home">
					<a href="../HDF5_UG_TitleWithoutSamples/HDF5_UG_TitleWithoutSamples.htm"><img src="../../template/Theme1_Standard/home.png" alt="" class="homebutton normal" id="xmlEditorHomeButton" border="0" style="width:100%; max-width:27px" /><img src="../../template/Theme1_Standard/home_hover.png" alt="" class="homebutton hover" id="xmlEditorHomeButtonHover" border="0" style="width:100%; max-width:27px" /></a> 
				</div>
				<div class="print">
					<a href="javascript:window.print()" class="wPrintButton"><img src="../../template/Theme1_Standard/Print.png" alt="" class="wPrintButton normal" id="xmlEditorPrintButton" border="0" style="width:100%; max-width:30px" /><img src="../../template/Theme1_Standard/Print_hover.png" alt="" class="wPrintButton hover" id="xmlEditorPrintButtonHover" border="0" style="width:100%; max-width:30px" /></a> 
				</div>
				<div class="brsBack">
					<a id="browseSeqBack0" class="wBSBackButton" href="../13_Attributes.html_150210/HDF5_Attributes.htm"><img alt="" src="../../template/Theme1_Standard/BSBack.png" class="wBSBackButton normal" id="xmlEditorBSBackButton" border="0" style="width:100%; max-width:19px" /><img alt="" src="../../template/Theme1_Standard/BSBack_hover.png" class="wBSBackButton hover" id="xmlEditorBSBackButtonHover" border="0" style="width:100%; max-width:19px" /></a> 
					 
				</div>
				<div class="brsNext">
					<a id="browseSeqNext0" class="wBSNextButton" href="../14_PropertyLists.html_150210/Properties_and_Property_Lists_in_HDF5.htm"><img alt="" src="../../template/Theme1_Standard/BSNext.png" class="wBSNextButton normal" id="xmlEditorBSNextButton" border="0" style="width:100%; max-width:19px" /><img alt="" src="../../template/Theme1_Standard/BSNext_hover.png" class="wBSNextButton hover" id="xmlEditorBSNextButtonHover" border="0" style="width:100%; max-width:19px" /></a> 
					 
				</div>
			</div>
			<div class="contentholder">
				<a name="content_top_placeholder"></a> 
				<div class="wTopic" id="rh_default_topic_placeholder_id">


 <p class="FM__Heading_Level1">9. <a name="XREF_ErrorHandlingChapter"></a>HDF5 Error Handling</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;Intro&quot;&gt;</p>
 <p class="FM__Body">&lt;h3&gt;9.1. Introduction&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;The HDF5 Library provides an error reporting mechanism for both </p>
 <p class="FM__Body">&#160;&#160;the library itself and for user application programs. &#160;It can trace </p>
 <p class="FM__Body">&#160;&#160;errors through function stack and error information like file name, </p>
 <p class="FM__Body"> &#160;function name, line number, and error description. &#160;&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;Section 2 of this chapter discusses the HDF5 error handling programming </p>
 <p class="FM__Body"> &#160;model. &#160;&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;Section 3 presents summaries of HDF5&amp;rsquo;s error handling functions.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;Section 4 discusses the basic error concepts such as error </p>
 <p class="FM__Body">&#160;&#160;stack, error record, and error message and describes the related API </p>
 <p class="FM__Body">&#160;&#160;functions. &#160;</p>
 <p class="FM__Body">&#160;&#160;These concepts and functions are sufficient for application programs to </p>
 <p class="FM__Body"> &#160;trace errors inside the HDF5 Library.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;Section 5 talks about the advanced concepts of error class and error </p>
 <p class="FM__Body">&#160;&#160;stack handle and talks about the related functions. &#160;With these concepts </p>
 <p class="FM__Body">&#160;&#160;and functions, </p>
 <p class="FM__Body">&#160;&#160;an application library or program using the HDF5 Library can have its own </p>
 <p class="FM__Body"> &#160;error report blended with HDF5&amp;rsquo;s error report.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;Starting with Release 1.8, we have a new set of Error Handling API functions.</p>
 <p class="FM__Body">&#160;&#160;For the purpose of backward compatibility with version 1.6 and before, we </p>
 <p class="FM__Body"> &#160;still keep the old API functions, &lt;code&gt;H5Epush&lt;/code&gt;, &lt;code&gt;H5Eprint&lt;/code&gt;,</p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Ewalk&lt;/code&gt;, &lt;code&gt;H5Eclear&lt;/code&gt;, &lt;code&gt;H5Eget_auto&lt;/code&gt;, </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Eset_auto&lt;/code&gt;.  These functions do not have the error stack as </p>
 <p class="FM__Body">&#160;&#160;parameter. &#160;The library allows them to operate on the default error stack. &#160;</p>
 <p class="FM__Body">&#160;&#160;Users do not have to change their code to catch up with the new Error API </p>
 <p class="FM__Body"> &#160;but are encouraged to do so.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;The old API is similar to functionality discussed in Section 4.  The </p>
 <p class="FM__Body">&#160;&#160;functionality discussed in Section 5, the ability of allowing applications to </p>
 <p class="FM__Body"> &#160;add their own error records, is the library new design for the Error API.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;ProgModel&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=&quot;pagebefore&quot;&gt;9.2. Programming Model&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&lt;p&gt;&lt;i&gt;This section is under construction.&lt;/i&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;ErrorHandling&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=&quot;pagebefore&quot;&gt;9.3. Error Handling (H5E) Function Summaries&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&lt;p&gt;Functions that can be used to handle errors (H5E functions) are listed </p>
 <p class="FM__Body">below. &lt;/p&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Function Listing 1. Error handling functions (H5E)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;C Function&lt;br /&gt;Fortran Function&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Purpose&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Eauto_is_v2&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Determines the type of error stack.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Eclear&lt;br /&gt;h5eclear_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Clears the error stack for the current thread.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;The C function is a macro: see &lt;a href=&quot;../RM/APICompatMacros.html&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;ldquo;API Compatibility Macros in HDF5.&amp;rdquo;&lt;/a&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Eclear_stack&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Clears the error stack for the current thread.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Eclose_msg&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Closes an error message identifier.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Eclose_stack&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Closes object handle for error stack.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Ecreate_msg&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Add major error message to an error class.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Eget_auto&lt;br /&gt;h5eget_auto_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Returns the current settings for the automatic error stack </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;traversal function and its data.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;The C function is a macro: see &lt;a href=&quot;../RM/APICompatMacros.html&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;ldquo;API Compatibility Macros in HDF5.&amp;rdquo;&lt;/a&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Eget_class_name&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves error class name.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Eget_current_stack&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Registers the current error stack.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Eget_msg&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves an error message.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Eget_num&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves the number of error messages in an error stack.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Epop&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Deletes specified number of error messages from the error stack.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Eprint&lt;br /&gt;h5eprint_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Prints the error stack in a default manner.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;The C function is a macro: see &lt;a href=&quot;../RM/APICompatMacros.html&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;ldquo;API Compatibility Macros in HDF5.&amp;rdquo;&lt;/a&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Epush&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Pushes new error record onto error stack.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;The C function is a macro: see &lt;a href=&quot;../RM/APICompatMacros.html&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;ldquo;API Compatibility Macros in HDF5.&amp;rdquo;&lt;/a&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Eregister_class&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Registers a client library or application program </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;to the HDF5 error API.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Eset_auto&lt;br /&gt;h5eset_auto_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Turns automatic error printing on or off.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;The C function is a macro: see &lt;a href=&quot;../RM/APICompatMacros.html&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;ldquo;API Compatibility Macros in HDF5.&amp;rdquo;&lt;/a&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Eset_current_stack&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Replaces the current error stack.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Eunregister_class&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Removes an error class.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Ewalk&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Walks the error stack for the current thread, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;calling a specified function.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;The C function is a macro: see &lt;a href=&quot;../RM/APICompatMacros.html&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;ldquo;API Compatibility Macros in HDF5.&amp;rdquo;&lt;/a&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;BasicErrorHandling&quot;&gt;</p>
 <p class="FM__Body">&lt;h3&gt;9.4. Basic Error Handling Operations&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;9.4.1. Introduction&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;Let us first try to understand the error stack. &#160;An &lt;em&gt;error stack&lt;/em&gt; </p>
 <p class="FM__Body">&#160;&#160;is a collection of error records. &#160;&#160;Error records can be pushed onto or </p>
 <p class="FM__Body">&#160;&#160;popped off the error stack. &#160;By default, when an error occurs deep within </p>
 <p class="FM__Body">&#160;&#160;the HDF5 Library, an error record is pushed onto an error stack and that </p>
 <p class="FM__Body">&#160;&#160;function returns a failure indication. Its caller detects the failure, pushes </p>
 <p class="FM__Body">&#160;&#160;another record onto the stack, and returns a failure indication. &#160;This </p>
 <p class="FM__Body">&#160;&#160;continues until the API function called by the application returns a failure </p>
 <p class="FM__Body">&#160;&#160;indication. &#160;The next API function being called will reset the error stack. &#160;</p>
 <p class="FM__Body">&#160;&#160;All HDF5 Library error records belong to the same error class (explained in </p>
 <p class="FM__Body"> &#160;Section 5).&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;h4&gt;9.4.2. Error Stack and Error Message&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;In normal circumstances, an error causes the stack to be printed on the </p>
 <p class="FM__Body">&#160;&#160;standard error stream automatically. &#160;This automatic error stack is the </p>
 <p class="FM__Body">&#160;&#160;library&amp;rsquo;s default stack. &#160;For all the functions in this section, </p>
 <p class="FM__Body"> &#160;whenever an error stack ID is needed as a parameter, &lt;code&gt;H5E_DEFAULT&lt;/code&gt; </p>
 <p class="FM__Body">&#160;&#160;can be used to indicate the library&amp;rsquo;s default stack. &#160;The first </p>
 <p class="FM__Body"> &#160;error record of the error stack, number &lt;code&gt;#000&lt;/code&gt;, is produced </p>
 <p class="FM__Body">&#160;&#160;by the API function itself and is usually sufficient to indicate to </p>
 <p class="FM__Body"> &#160;the application what went wrong.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;h4&gt;Example: An Error Report&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;If an application calls &lt;code&gt;H5Tclose&lt;/code&gt; on a predefined datatype, </p>
 <p class="FM__Body">&#160;&#160;then the message in the example below is printed on the standard error </p>
 <p class="FM__Body">&#160;&#160;stream. </p>
 <p class="FM__Body">&#160;&#160;This is a simple error that has only one component, the API function; </p>
 <p class="FM__Body"> &#160;other errors may have many components.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;HDF5-DIAG: Error detected in HDF5 (1.6.4) thread 0.</p>
 <p class="FM__Body"> &#160;&#160;&#160;#000: H5T.c line 462 in H5Tclose(): predefined datatype</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;major: Function argument</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;minor: Bad value&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 1. An error report&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;In the example above, we can see that an &lt;em&gt;error record&lt;/em&gt; has a major </p>
 <p class="FM__Body"> &#160;message and a minor message. A &lt;em&gt;major message&lt;/em&gt; generally </p>
 <p class="FM__Body">&#160;&#160;indicates where the error happens. &#160;The location can be a dataset or </p>
 <p class="FM__Body"> &#160;a dataspace, for example. &#160;A &lt;em&gt;minor message&lt;/em&gt; explains further </p>
 <p class="FM__Body">&#160;&#160;details of the error. An example is &amp;ldquo;unable to open file&amp;rdquo;. &#160;</p>
 <p class="FM__Body">&#160;&#160;Another </p>
 <p class="FM__Body">&#160;&#160;specific detail about the error can be found at the end of the first </p>
 <p class="FM__Body"> &#160;line of each error record. &#160;This &lt;em&gt;error description&lt;/em&gt; is usually </p>
 <p class="FM__Body">&#160;&#160;added by the library designer to tell what exactly goes wrong. &#160;</p>
 <p class="FM__Body">&#160;&#160;In the example above, the &amp;ldquo;predefined datatype&amp;rdquo; is an error </p>
 <p class="FM__Body"> &#160;description.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;h4&gt;9.4.3. Print and Clear an Error Stack&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;Besides the automatic error report, the error stack can also be printed </p>
 <p class="FM__Body"> &#160;and cleared by the functions &lt;code&gt;H5Eprint()&lt;/code&gt; and </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Eclear_stack()&lt;/code&gt;.  If an application wishes to make explicit </p>
 <p class="FM__Body"> &#160;calls to &lt;code&gt;H5Eprint()&lt;/code&gt; to print the error stack, the </p>
 <p class="FM__Body">&#160;&#160;automatic printing should be turned off to prevent error messages from </p>
 <p class="FM__Body"> &#160;being displayed twice (see &lt;code&gt;H5Eset_auto()&lt;/code&gt; below). &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;b&gt;To print an error stack&lt;/b&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;&lt;em&gt;herr_t&lt;/em&gt; H5Eprint(&lt;em&gt;hid_t&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;error_stack, &lt;em&gt;FILE *&lt;/em&gt; stream)&lt;/code&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;This function prints the error stack specified by &lt;code&gt;error_stack&lt;/code&gt; </p>
 <p class="FM__Body">&#160;&#160;on the </p>
 <p class="FM__Body"> &#160;specified stream, &lt;code&gt;stream&lt;/code&gt;. If the error stack is empty, </p>
 <p class="FM__Body">&#160;&#160;a one-line message will be printed. The following is an example of such a </p>
 <p class="FM__Body">&#160;&#160;message. This message would be generated if the error was in the HDF5 </p>
 <p class="FM__Body"> &#160;Library. &lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;code&gt;HDF5-DIAG: Error detected in HDF5 Library </p>
 <p class="FM__Body"> &#160;version: 1.5.62 thread 0.&lt;/code&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;&lt;b&gt;To clear an error stack&lt;/b&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;&lt;em&gt;herr_t&lt;/em&gt; H5Eclear_stack(&lt;em&gt;hid_t&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;error_stack)&lt;/code&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;The &lt;code&gt;H5Eclear_stack&lt;/code&gt; function shown above clears the error </p>
 <p class="FM__Body">&#160;&#160;stack specified by </p>
 <p class="FM__Body"> &#160;&lt;code&gt;error_stack&lt;/code&gt;. &lt;code&gt;H5E_DEFAULT&lt;/code&gt; can be passed in to </p>
 <p class="FM__Body">&#160;&#160;clear the current error stack. &#160;The current stack is also cleared </p>
 <p class="FM__Body">&#160;&#160;whenever an API function is called; there are certain exceptions to this </p>
 <p class="FM__Body"> &#160;rule such as &lt;code&gt;H5Eprint()&lt;/code&gt;. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;h4&gt;9.4.4. Mute Error Stack&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;Sometimes an application calls a function for the sake of its return value, </p>
 <p class="FM__Body">&#160;&#160;fully expecting the function to fail; sometimes the application wants to </p>
 <p class="FM__Body"> &#160;call &lt;code&gt;H5Eprint()&lt;/code&gt; explicitly.  In these situations, it </p>
 <p class="FM__Body">&#160;&#160;would be misleading if an error message were still automatically printed. &#160;</p>
 <p class="FM__Body"> &#160;Using the &lt;code&gt;H5Eset_auto()&lt;/code&gt; function can control the automatic </p>
 <p class="FM__Body"> &#160;printing of error messages.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;b&gt;To enable or disable automatic printing of errors&lt;/b&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;&lt;em&gt;herr_t&lt;/em&gt; H5Eset_auto(&lt;em&gt;hid_t&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;error_stack, &lt;em&gt;H5E_auto_t&lt;/em&gt; func, </p>
 <p class="FM__Body"> &#160;&lt;em&gt;void&lt;/em&gt; *client_data)&lt;/code&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The H5Eset_auto function can be used to turns on or off the automatic </p>
 <p class="FM__Body">&#160;&#160;printing of errors for the error stack </p>
 <p class="FM__Body"> &#160;specified by &lt;code&gt;error_stack&lt;/code&gt;. When turned on (non-null &lt;code&gt;func&lt;/code&gt; </p>
 <p class="FM__Body">&#160;&#160;pointer), any API function which returns an error indication will first call </p>
 <p class="FM__Body"> &#160;&lt;code&gt;func&lt;/code&gt;, passing it &lt;code&gt;client_data&lt;/code&gt; as an argument.  </p>
 <p class="FM__Body">&#160;&#160;When the library is first initialized the auto printing function is set to </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Eprint()&lt;/code&gt; (cast appropriately) and &lt;code&gt;client_data&lt;/code&gt; is </p>
 <p class="FM__Body"> &#160;the standard error stream pointer, &lt;code&gt;stderr&lt;/code&gt;.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;b&gt;To see the current settings&lt;/b&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;&lt;em&gt;herr_t&lt;/em&gt; H5Eget_auto(&lt;em&gt;hid_t&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;error_stack, &lt;em&gt;H5E_auto_t&lt;/em&gt; * func, </p>
 <p class="FM__Body"> &#160;&lt;em&gt;void&lt;/em&gt; **client_data )&lt;/code&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The function above returns the current settings for the automatic error </p>
 <p class="FM__Body">&#160;&#160;stack traversal </p>
 <p class="FM__Body"> &#160;function, &lt;code&gt;func&lt;/code&gt;, and its data, &lt;code&gt;client_data&lt;/code&gt;. </p>
 <p class="FM__Body">&#160;&#160;If either or both of the arguments are null, then the value is not </p>
 <p class="FM__Body"> &#160;returned.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;h4&gt;Example: Error Control&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;An application can temporarily turn off error messages while </p>
 <p class="FM__Body">&amp;ldquo;probing&amp;rdquo; a function. See the example below.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/* Save old error handler */</p>
 <p class="FM__Body"> &#160;H5E_auto2_t &#160;oldfunc;</p>
 <p class="FM__Body"> &#160;void *old_client_data;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;H5Eget_auto(error_stack, &amp;amp;old_func, &amp;amp;old_client_data);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/* Turn off error handling */</p>
 <p class="FM__Body"> &#160;H5Eset_auto(error_stack, NULL, NULL);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/* Probe. Likely to fail, but that&amp;rsquo;s okay */</p>
 <p class="FM__Body"> &#160;status = H5Fopen (......);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/* Restore previous error handler */</p>
 <p class="FM__Body"> &#160;H5Eset_auto(error_stack, old_func, old_client_data);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 2. Turn off error messages while probing a function&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;Or automatic printing can be disabled altogether and error messages </p>
 <p class="FM__Body"> &#160;can be explicitly printed.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/* Turn off error handling permanently */</p>
 <p class="FM__Body"> &#160;H5Eset_auto(error_stack, NULL, NULL);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/* If failure, print error message */</p>
 <p class="FM__Body"> &#160;if (H5Fopen (....)&amp;lt;0) {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;H5Eprint(H5E_DEFAULT, stderr);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;exit (1);</p>
 <p class="FM__Body"> &#160;}&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 3. Disable automatic printing and explicitly print </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;error messages&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;9.4.5. Customized Printing of an Error Stack&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;Applications are allowed to define an automatic error traversal </p>
 <p class="FM__Body"> &#160;function other than the default &lt;code&gt;H5Eprint()&lt;/code&gt;. For </p>
 <p class="FM__Body">&#160;&#160;instance, one can define a function that prints a simple, one-line </p>
 <p class="FM__Body">&#160;&#160;error message to the standard error stream and then exits. The first </p>
 <p class="FM__Body"> &#160;example below defines a such a function. The second example below installs</p>
 <p class="FM__Body"> &#160;the function as the error handler.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;herr_t</p>
 <p class="FM__Body"> &#160;my_hdf5_error_handler(void *unused)</p>
 <p class="FM__Body"> &#160;{</p>
 <p class="FM__Body">     fprintf (stderr, &amp;ldquo;An HDF5 error was detected. Bye.\n&amp;rdquo;);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;exit (1);</p>
 <p class="FM__Body"> &#160;}&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 4. Defining a function to print a simple error message&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">H5Eset_auto(H5E_DEFAULT, my_hdf5_error_handler, NULL);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 5. The user-defined error handler&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;9.4.6. Walk through the Error Stack&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;The &lt;code&gt;H5Eprint()&lt;/code&gt; function is actually just a </p>
 <p class="FM__Body"> &#160;wrapper around the more complex &lt;code&gt;H5Ewalk()&lt;/code&gt; </p>
 <p class="FM__Body">&#160;&#160;function which traverses an error stack and calls a user-defined </p>
 <p class="FM__Body">&#160;&#160;function for each member of the stack. The example below shows how </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Ewalk&lt;/code&gt; is used.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;&lt;em&gt;herr_t&lt;/em&gt; H5Ewalk(&lt;em&gt;hid_t&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;err_stack, &lt;em&gt;H5E_direction_t&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;direction, &lt;em&gt;H5E_walk_t&lt;/em&gt; func, </p>
 <p class="FM__Body"> &#160;&lt;em&gt;void&lt;/em&gt; *client_data)&lt;/code&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The error stack &lt;code&gt;err_stack&lt;/code&gt; is traversed and </p>
 <p class="FM__Body"> &#160;&lt;code&gt;func&lt;/code&gt; is </p>
 <p class="FM__Body">&#160;&#160;called for each member of the stack. Its arguments are an integer </p>
 <p class="FM__Body"> &#160;sequence number beginning at zero (regardless of &lt;code&gt;direction&lt;/code&gt;) </p>
 <p class="FM__Body"> &#160;and the &lt;code&gt;client_data&lt;/code&gt; pointer. If &lt;code&gt;direction&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;is &lt;code&gt;H5E_WALK_UPWARD&lt;/code&gt;, then traversal begins at the inner-most </p>
 <p class="FM__Body">&#160;&#160;function that detected the error and concludes with the API function. </p>
 <p class="FM__Body"> &#160;Use &lt;code&gt;H5E_WALK_DOWNWARD&lt;/code&gt; for the opposite order.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;h4&gt;9.4.7. Traverse an Error Stack with a Callback Function&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;An error stack traversal callback function takes three arguments: </p>
 <p class="FM__Body"> &#160;&lt;code&gt;n&lt;/code&gt; is a sequence number beginning at zero for each traversal, </p>
 <p class="FM__Body"> &#160;&lt;code&gt;eptr&lt;/code&gt; is a pointer to an error stack member, and </p>
 <p class="FM__Body"> &#160;&lt;code&gt;client_data&lt;/code&gt; is the same pointer used in the example above </p>
 <p class="FM__Body"> &#160;passed to &lt;code&gt;H5Ewalk()&lt;/code&gt;. See the example below.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;typedef &lt;em&gt;herr_t&lt;/em&gt; (*H5E_walk_t)(&lt;em&gt;unsigned&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;n, &lt;em&gt;H5E_error2_t&lt;/em&gt; *eptr, &lt;em&gt;void&lt;/em&gt; *client_data)&lt;/code&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;The &lt;code&gt;H5E_error2_t&lt;/code&gt; structure is shown below.&lt;/p&gt;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;pre&gt;</p>
 <p class="FM__Body">typedef struct {</p>
 <p class="FM__Body"> &#160;&#160;&#160;hid_t<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>cls_id;</p>
 <p class="FM__Body"> &#160;&#160;&#160;hid_t &#160;&#160;&#160;&#160;&#160;&#160;maj_num;</p>
 <p class="FM__Body"> &#160;&#160;&#160;hid_t &#160;&#160;&#160;&#160;&#160;&#160;min_num;</p>
 <p class="FM__Body"> &#160;&#160;&#160;unsigned &#160;&#160;&#160;line;</p>
 <p class="FM__Body"> &#160;&#160;&#160;const char &#160;*func_name;</p>
 <p class="FM__Body"> &#160;&#160;&#160;const char &#160;*file_name;</p>
 <p class="FM__Body"> &#160;&#160;&#160;const char &#160;*desc;</p>
 <p class="FM__Body">} H5E_error2_t;</p>
 <p class="FM__Body">&lt;/pre&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;The &lt;code&gt;maj_num&lt;/code&gt; and &lt;code&gt;min_num&lt;/code&gt; are major and minor </p>
 <p class="FM__Body">error IDs, &lt;code&gt;func_name&lt;/code&gt; is the name of the function where the error </p>
 <p class="FM__Body">was detected, &lt;code&gt;file_name&lt;/code&gt; and &lt;code&gt;line&lt;/code&gt; locate the </p>
 <p class="FM__Body">error within the HDF5 Library source code, and &lt;code&gt;desc&lt;/code&gt; points </p>
 <p class="FM__Body">to a description of the error.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;Example: Callback Function&lt;/h4&gt;</p>
 <p class="FM__Body">&lt;p&gt;The following example shows a user-defined callback function.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">#define MSG_SIZE &#160;&#160;&#160;&#160;&#160;&#160;64</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">herr_t</p>
 <p class="FM__Body">custom_print_cb(unsigned n, const H5E_error2_t *err_desc, void* client_data)</p>
 <p class="FM__Body">{</p>
 <p class="FM__Body"> &#160;&#160;&#160;FILE<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>*stream &#160;= (FILE *)client_data;</p>
 <p class="FM__Body"> &#160;&#160;&#160;char &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;maj[MSG_SIZE];</p>
 <p class="FM__Body"> &#160;&#160;&#160;char &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;min[MSG_SIZE];</p>
 <p class="FM__Body"> &#160;&#160;&#160;char &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cls[MSG_SIZE];</p>
 <p class="FM__Body"> &#160;&#160;&#160;const int<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>indent = 4;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;/* Get descriptions for the major and minor error numbers */</p>
 <p class="FM__Body"> &#160;&#160;&#160;if(H5Eget_class_name(err_desc-&amp;gt;cls_id, cls, MSG_SIZE)&amp;lt;0)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;TEST_ERROR;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;if(H5Eget_msg(err_desc-&amp;gt;maj_num, NULL, maj, MSG_SIZE)&amp;lt;0)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;TEST_ERROR;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;if(H5Eget_msg(err_desc-&amp;gt;min_num, NULL, min, MSG_SIZE)&amp;lt;0)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;TEST_ERROR;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">    fprintf (stream, &amp;ldquo;%*serror #%03d: %s in %s(): line %u\n&amp;rdquo;,</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;indent, &amp;ldquo;&amp;rdquo;, n, err_desc-&amp;gt;file_name,</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;err_desc-&amp;gt;func_name, err_desc-&amp;gt;line);</p>
 <p class="FM__Body">    fprintf (stream, &amp;ldquo;%*sclass: %s\n&amp;rdquo;, indent*2, &amp;ldquo;&amp;rdquo;, cls);</p>
 <p class="FM__Body">    fprintf (stream, &amp;ldquo;%*smajor: %s\n&amp;rdquo;, indent*2, &amp;ldquo;&amp;rdquo;, maj);</p>
 <p class="FM__Body">    fprintf (stream, &amp;ldquo;%*sminor: %s\n&amp;rdquo;, indent*2, &amp;ldquo;&amp;rdquo;, min);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;return 0;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;error:</p>
 <p class="FM__Body"> &#160;&#160;&#160;return -1;</p>
 <p class="FM__Body">}&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 6. A user-defined callback function&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;p&gt;&lt;b&gt;Programming Note for C++ Developers Using C Functions&lt;/b&gt; &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;If a C routine that takes a function pointer as an argument is called </p>
 <p class="FM__Body">from within C++ code, the C routine should be returned from normally. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;Examples of this kind of routine include callbacks such as </p>
 <p class="FM__Body">&lt;code&gt;H5Pset_elink_cb&lt;/code&gt; and &lt;code&gt;H5Pset_type_conv_cb&lt;/code&gt; </p>
 <p class="FM__Body">and functions such as &lt;code&gt;H5Tconvert&lt;/code&gt; and &lt;code&gt;H5Ewalk2&lt;/code&gt;.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;Exiting the routine in its normal fashion allows the HDF5 C Library </p>
 <p class="FM__Body">to clean up its work properly. In other words, if the C++ application </p>
 <p class="FM__Body">jumps out of the routine back to the C++ &amp;ldquo;catch&amp;rdquo; </p>
 <p class="FM__Body">statement, the library is not given the opportunity to close any </p>
 <p class="FM__Body">temporary data structures that were set up when the routine was </p>
 <p class="FM__Body">called. The C++ application should save some state as the routine is </p>
 <p class="FM__Body">started so that any problem that occurs might be diagnosed.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;AdvancedErrorHandling&quot;&gt;</p>
 <p class="FM__Body">&lt;h3&gt;9.5. Advanced Error Handling Operations&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;9.5.1. Introduction&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;Section 4 discusses the basic error handling operations of the library.  </p>
 <p class="FM__Body">&#160;&#160;In that section, all the error records on the error stack are from the </p>
 <p class="FM__Body">&#160;&#160;library itself. &#160;In this section, we are going to introduce the operations </p>
 <p class="FM__Body">&#160;&#160;that allow an application program to push its own error records onto the </p>
 <p class="FM__Body">&#160;&#160;error stack once it declares an error class of its own through the </p>
 <p class="FM__Body"> &#160;HDF5 Error API.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;h4&gt;Example: An Error Report&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;An error report shows both the library&amp;rsquo;s error record and the </p>
 <p class="FM__Body">application&amp;rsquo;s error records. See the example below.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;Error Test-DIAG: Error detected in Error Program (1.0) thread 8192:</p>
 <p class="FM__Body"> &#160;&#160;&#160;#000: ../../hdf5/test/error_test.c line 468 in main(): Error test failed</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;major: Error in test</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;minor: Error in subroutine</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;#001: ../../hdf5/test/error_test.c line 150 in test_error(): H5Dwrite failed </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;as supposed to</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;major: Error in IO</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;minor: Error in H5Dwrite</p>
 <p class="FM__Body"> &#160;HDF5-DIAG: Error detected in HDF5 (1.7.5) thread 8192:</p>
 <p class="FM__Body"> &#160;&#160;&#160;#002: ../../hdf5/src/H5Dio.c line 420 in H5Dwrite(): not a dataset</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;major: Invalid arguments to routine</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;minor: Inappropriate type &lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 7. An error report&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;In the line above error record &lt;code&gt;#002&lt;/code&gt; in the example above, </p>
 <p class="FM__Body"> &#160;the starting phrase is &lt;code&gt;HDF5&lt;/code&gt;.  This is the error class name </p>
 <p class="FM__Body">&#160;&#160;of the HDF5 Library. &#160;All of the library&amp;rsquo;s error messages </p>
 <p class="FM__Body">&#160;&#160;(major and minor) are in this default error class. &#160;</p>
 <p class="FM__Body"> &#160;The &lt;code&gt;Error Test&lt;/code&gt; in the beginning of the line above error record </p>
 <p class="FM__Body"> &#160;&lt;code&gt;#000&lt;/code&gt; is the name of the application&amp;rsquo;s error class.  </p>
 <p class="FM__Body"> &#160;The first two error records, &lt;code&gt;#000&lt;/code&gt; and &lt;code&gt;#001&lt;/code&gt;, </p>
 <p class="FM__Body"> &#160;are from application&amp;rsquo;s error class.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;By definition, an error class is a group of major and minor error messages </p>
 <p class="FM__Body">&#160;&#160;for a library (the HDF5 Library or an application library built on </p>
 <p class="FM__Body">&#160;&#160;top of the </p>
 <p class="FM__Body">&#160;&#160;HDF5 Library) or an application program. &#160;The error class can be registered </p>
 <p class="FM__Body">&#160;&#160;for a </p>
 <p class="FM__Body">&#160;&#160;library or program through the HDF5 Error API. &#160;Major </p>
 <p class="FM__Body">&#160;&#160;and minor messages can be defined in an error class. &#160;An application will </p>
 <p class="FM__Body">&#160;&#160;have object handles for the error class and for major and minor messages for </p>
 <p class="FM__Body"> &#160;further operation. See the example below.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;#define MSG_SIZE &#160;&#160;&#160;&#160;&#160;&#160;64</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;herr_t</p>
 <p class="FM__Body"> &#160;custom_print_cb(unsigned n, const H5E_error2_t *err_desc, void* client_data)</p>
 <p class="FM__Body"> &#160;{</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;FILE<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>*stream &#160;= (FILE *)client_data;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;char &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;maj[MSG_SIZE];</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;char &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;min[MSG_SIZE];</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;char &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cls[MSG_SIZE];</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;const int<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>indent = 4;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;/* Get descriptions for the major and minor error numbers */</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;if(H5Eget_class_name(err_desc-&amp;gt;cls_id, cls, MSG_SIZE)&amp;lt;0)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;TEST_ERROR;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;if(H5Eget_msg(err_desc-&amp;gt;maj_num, NULL, maj, MSG_SIZE)&amp;lt;0)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;TEST_ERROR;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;if(H5Eget_msg(err_desc-&amp;gt;min_num, NULL, min, MSG_SIZE)&amp;lt;0)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;TEST_ERROR;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">      fprintf (stream, &amp;ldquo;%*serror #%03d: %s in %s(): line %u\n&amp;rdquo;,</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&#160;indent, &amp;ldquo;&amp;rdquo;, n, err_desc-&amp;gt;file_name,</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&#160;err_desc-&amp;gt;func_name, err_desc-&amp;gt;line);</p>
 <p class="FM__Body">      fprintf (stream, &amp;ldquo;%*sclass: %s\n&amp;rdquo;, indent*2, &amp;ldquo;&amp;rdquo;, cls);</p>
 <p class="FM__Body">      fprintf (stream, &amp;ldquo;%*smajor: %s\n&amp;rdquo;, indent*2, &amp;ldquo;&amp;rdquo;, maj);</p>
 <p class="FM__Body">      fprintf (stream, &amp;ldquo;%*sminor: %s\n&amp;rdquo;, indent*2, &amp;ldquo;&amp;rdquo;, min);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;return 0;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;error:</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;return -1;</p>
 <p class="FM__Body"> &#160;}&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 8. Defining an error class&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;9.5.2. More Error API Functions&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;The Error API has functions that can be used to register or unregister </p>
 <p class="FM__Body">&#160;&#160;an error class, </p>
 <p class="FM__Body">&#160;&#160;to create or close error messages, and to query an error class or </p>
 <p class="FM__Body"> &#160;error message. These functions are illustrated below.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;b&gt;To register an error class&lt;/b&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;code&gt;&lt;em&gt;hid_t&lt;/em&gt; H5Eregister_class(&lt;em&gt;const char*&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;cls_name, &lt;em&gt;const char*&lt;/em&gt; lib_name, </p>
 <p class="FM__Body"> &#160;&lt;em&gt;const char*&lt;/em&gt; version)&lt;/code&gt;</p>
 <p class="FM__Body">&lt;p&gt;This function registers an error class with the HDF5 Library so that the </p>
 <p class="FM__Body">&#160;&#160;application </p>
 <p class="FM__Body"> &#160;library or program can report errors together with the HDF5 Library.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;b&gt;To add an error message to an error class&lt;/b&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;&lt;em&gt;hid_t&lt;/em&gt; H5Ecreate_msg(&lt;em&gt;hid_t&lt;/em&gt; class, </p>
 <p class="FM__Body"> &#160;&lt;em&gt;H5E_type_t&lt;/em&gt; msg_type, &lt;em&gt;const char*&lt;/em&gt; mesg)&lt;/code&gt;&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This function adds an error message to an error class defined by an </p>
 <p class="FM__Body">&#160;&#160;application library or program. The error message can be either major </p>
 <p class="FM__Body"> &#160;or minor which is indicated by parameter &lt;code&gt;msg_type&lt;/code&gt;.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;p&gt;&lt;b&gt;To get the name of an error class&lt;/b&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;&lt;em&gt;ssize_t&lt;/em&gt; H5Eget_class_name(&lt;em&gt;hid_t&lt;/em&gt; class_id, </p>
 <p class="FM__Body"> &#160;&lt;em&gt;char*&lt;/em&gt; name, &lt;em&gt;size_t&lt;/em&gt; size)&lt;/code&gt;&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This function retrieves the name of the error class specified by </p>
 <p class="FM__Body"> &#160;the class &lt;code&gt;ID&lt;/code&gt;.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;p&gt;&lt;b&gt;To retrieve an error message&lt;/b&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;&lt;em&gt;ssize_t&lt;/em&gt; H5Eget_msg(&lt;em&gt;hid_t&lt;/em&gt; mesg_id, </p>
 <p class="FM__Body"> &#160;&lt;em&gt;H5E_type_t*&lt;/em&gt; mesg_type, &lt;em&gt;char*&lt;/em&gt; mesg, </p>
 <p class="FM__Body"> &#160;&lt;em&gt;size_t&lt;/em&gt; size)&lt;/code&gt;&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This function retrieves the error message including its length and </p>
 <p class="FM__Body"> &#160;type.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;p&gt;&lt;b&gt;To close an error message&lt;/b&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;&lt;em&gt;herr_t&lt;/em&gt; H5Eclose_msg(&lt;em&gt;hid_t&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;mesg_id)&lt;/code&gt;&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This function closes an error message.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;p&gt;&lt;b&gt;To remove an error class&lt;/b&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;&lt;em&gt;herr_t&lt;/em&gt; H5Eunregister_class(&lt;em&gt;hid_t&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;class_id)&lt;/code&gt;&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This function removes an error class from the Error API.&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;br /&gt;</p>
 <p class="FM__Body">&lt;h4&gt;Example: Error Class and its Message&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;The example below shows how an application creates an error class and </p>
 <p class="FM__Body">error messages.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">/* Create an error class */</p>
 <p class="FM__Body">class_id = H5Eregister_class(ERR_CLS_NAME, PROG_NAME, PROG_VERS);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">/* Retrieve class name */</p>
 <p class="FM__Body">H5Eget_class_name(class_id, cls_name, cls_size); </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">/* Create a major error message in the class */</p>
 <p class="FM__Body">maj_id = H5Ecreate_msg(class_id, H5E_MAJOR, &amp;ldquo;... ...&amp;rdquo;);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">/* Create a minor error message in the class */</p>
 <p class="FM__Body">min_id = H5Ecreate_msg(class_id, H5E_MINOR, &amp;ldquo;... ...&amp;rdquo;);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 9. Create an error class and error messages&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;The example below shows how an application closes error messages and </p>
 <p class="FM__Body">unregisters the error class.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;H5Eclose_msg(maj_id);</p>
 <p class="FM__Body"> &#160;H5Eclose_msg(min_id);</p>
 <p class="FM__Body"> &#160;H5Eunregister_class(class_id);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 10. Closing error messages and unregistering the error </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;class&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;9.5.3. Pushing an Application Error Message onto Error Stack&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;An application can push error records onto or pop error records </p>
 <p class="FM__Body">&#160;&#160;off of the error stack just as the library does internally. &#160;An </p>
 <p class="FM__Body">&#160;&#160;error stack can be registered, and an object handle can be </p>
 <p class="FM__Body">&#160;&#160;returned to the application so that the application can </p>
 <p class="FM__Body"> &#160;manipulate a registered error stack.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;b&gt;To register the current stack&lt;/b&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;&lt;em&gt;hid_t&lt;/em&gt; H5Eget_current_stack(void)&lt;/code&gt;&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This function registers the current error stack, returns an object </p>
 <p class="FM__Body">&#160;&#160;handle, and clears the current error stack. An empty error stack will </p>
 <p class="FM__Body"> &#160;also be assigned an ID.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;b&gt;To replace the current error stack with another&lt;/b&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;&lt;em&gt;herr_t&lt;/em&gt; H5Eset_current_stack(&lt;em&gt;hid_t&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;error_stack)&lt;/code&gt;&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This function replaces the current error stack with another error stack </p>
 <p class="FM__Body"> &#160;specified by &lt;code&gt;error_stack&lt;/code&gt; and clears the current error stack.  </p>
 <p class="FM__Body"> &#160;The object handle &lt;code&gt;error_stack&lt;/code&gt; is closed after this function </p>
 <p class="FM__Body"> &#160;call.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;b&gt;To push a new error record to the error stack&lt;/b&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;&lt;em&gt;herr_t&lt;/em&gt; H5Epush(&lt;em&gt;hid_t&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;error_stack, &lt;em&gt;const char*&lt;/em&gt; file, </p>
 <p class="FM__Body"> &#160;&lt;em&gt;const char*&lt;/em&gt; func, &lt;em&gt;unsigned&lt;/em&gt; line, </p>
 <p class="FM__Body"> &#160;&lt;em&gt;hid_t&lt;/em&gt; cls_id, &lt;em&gt;hid_t&lt;/em&gt; major_id, </p>
 <p class="FM__Body"> &#160;&lt;em&gt;hid_t&lt;/em&gt; minor_id, &lt;em&gt;const char*&lt;/em&gt; desc, </p>
 <p class="FM__Body"> &#160;... )&lt;/code&gt;&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This function pushes a new error record onto the error stack for the </p>
 <p class="FM__Body"> &#160;current thread.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;b&gt;To delete some error messages&lt;/b&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;&lt;em&gt;herr_t&lt;/em&gt; H5Epop(&lt;em&gt;hid_t&lt;/em&gt; error_stack, </p>
 <p class="FM__Body"> &#160;&lt;em&gt;size_t&lt;/em&gt; count)&lt;/code&gt;&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This function deletes some error messages from the error stack.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;b&gt;To retrieve the number of error records&lt;/b&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;int H5Eget_num(&lt;em&gt;hid_t&lt;/em&gt; error_stack)&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This function retrieves the number of error records from an error </p>
 <p class="FM__Body"> &#160;stack.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;  </p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;b&gt;To clear the error stack&lt;/b&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;&lt;em&gt;herr_t&lt;/em&gt; H5Eclear_stack(&lt;em&gt;hid_t&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;error_stack)&lt;/code&gt;&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This function clears the error stack.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;b&gt;To close the object handle for an error stack&lt;/b&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;p&gt;&lt;code&gt;&lt;em&gt;herr_t&lt;/em&gt; H5Eclose_stack(&lt;em&gt;hid_t&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;error_stack&lt;/code&gt;)&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This function closes the object handle for an error stack and </p>
 <p class="FM__Body"> &#160;releases its resources.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;h4&gt;Example: Working with an Error Stack&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;The example below shows how an application pushes an error record onto </p>
 <p class="FM__Body">the default error stack.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/* Make call to HDF5 I/O routine */</p>
 <p class="FM__Body"> &#160;if((dset_id=H5Dopen(file_id, dset_name, access_plist))&amp;lt;0)</p>
 <p class="FM__Body"> &#160;{</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;/* Push client error onto error stack */</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;H5Epush(H5E_DEFAULT,__FILE__,FUNC,__LINE__,cls_id,CLIENT_ERR_MAJ_IO,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CLIENT_ERR_MINOR_OPEN,&amp;ldquo;H5Dopen failed&amp;rdquo;);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;/* Indicate error occurred in function */</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;return(0);</p>
 <p class="FM__Body"> &#160;}&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 11. Pushing an error message to an error stack&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;The example below shows how an application registers the current error </p>
 <p class="FM__Body">stack and creates an object handle to avoid another HDF5 function </p>
 <p class="FM__Body">from clearing the error stack.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">if(H5Dwrite(dset_id, mem_type_id, mem_space_id, file_space_id, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dset_xfer_plist_id, buf)&amp;lt;0)</p>
 <p class="FM__Body">{</p>
 <p class="FM__Body"> &#160;&#160;&#160;/* Push client error onto error stack */</p>
 <p class="FM__Body"> &#160;&#160;&#160;H5Epush(H5E_DEFAULT,__FILE__,FUNC,__LINE__,cls_id,CLIENT_ERR_MAJ_IO,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CLIENT_ERR_MINOR_HDF5,&amp;ldquo;H5Dwrite failed&amp;rdquo;);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;/* Preserve the error stack by assigning an object handle to it */</p>
 <p class="FM__Body"> &#160;&#160;&#160;error_stack = H5Eget_current_stack();</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;/* Close dataset */</p>
 <p class="FM__Body"> &#160;&#160;&#160;H5Dclose(dset_id);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;/* Replace the current error stack with the preserved one */</p>
 <p class="FM__Body"> &#160;&#160;&#160;H5Eset_current_stack(error_stack);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;Return(0);</p>
 <p class="FM__Body">}&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 12. Registering the error stack&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- HEADER RIGHT &quot; &quot; --&gt;</p>
 <p class="FM__Body">&lt;/body&gt;</p>
 <p class="FM__Body">&lt;/html&gt;</p>
 <p class="FM__Body">&nbsp;</p>
</div>
				
			</div>
			<div class="content_top_link">
				<span class="desktop"><a>&#160;</a> </span>
			</div>
		</div>
	</div>
</div>
<div class="buttonbar">
	<div class="buttonbarholder topic_page_holder">
		<div class="bar_toc topic_page" id="xmlEditorButtonBarTOC" title="Table of Contents">
			<a href="../../table_of_contents.htm">&#160;</a> 
		</div>
		<div class="bar_index topic_page" id="xmlEditorButtonBarIDX" title="Index">
			<a href="../../index1.htm">&#160;</a> 
		</div>
		<div class="bar_glossary topic_page" id="xmlEditorButtonBarGLO" 
			 title="Glossary">
			<a href="../../glossary.htm">&#160;</a> 
		</div>
		<div class="bar_search topic_page" title="Search">
			<a href="../../searchresults.htm">&#160;</a> 
		</div>
	</div>
</div>
<div id="localisation">
	<p id="localisation_toc"><span>Table of Contents</span></p>
	<p id="localisation_idx"><span>Index</span></p>
	<p id="localisation_glo"><span>Glossary</span></p>
	<p id="localisation_fts"><span>-Search-</span></p>
	<p id="localisation_back"><span>Back</span></p>
</div>
<script type="text/javascript" src="../../template/Theme1_Standard/jquery.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/jqueryui-custom.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/overthrow.min.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/overthrow.sidescroller.min.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/layout.js"></script>
<script type="text/javascript">//<![CDATA[
$(function(){
	addRhLoadCompleteEvent(setTopic);
});
//]]></script>
</body>
</html>
