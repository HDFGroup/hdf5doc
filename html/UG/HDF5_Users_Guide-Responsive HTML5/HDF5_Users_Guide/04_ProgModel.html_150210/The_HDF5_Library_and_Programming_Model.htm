
<!DOCTYPE HTML>
<html>
<head>
 <meta http-equiv="X-UA-Compatible" content="IE=edge" />
 <meta name="OriginalFile" content="C:\1 MEE\Working\hdf5_trunk\html\UG\04_ProgModel.html_150210.fm" />
 <meta name="Originator" content="ImportMif" />
 <meta content="How to fly your personal spaceship" name="search-keywords" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="viewport" content="width=100%, initial-scale=1" />
<meta name="generator" content="Adobe FrameMaker 12" />
<title>HDF5 User's Guide - The HDF5 Library and Programming Model</title>
<link href="../../template/Theme1_Standard/main.css" type="text/css" rel="stylesheet" />
<link href="../../template/Theme1_Standard/jqueryui-custom.css" type="text/css" rel="stylesheet" />
 <link rel="stylesheet" href="04_ProgModel.html_150210.css" type="text/css" /><script type="text/javascript" language="JavaScript">//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]></script><style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadcsh.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/showhidecontrols.js"></script>
<script type="text/javascript" src="../../template/scripts/pageloader.js"></script>
<script type="text/javascript" src="../../template/scripts/toctree.js"></script>
<script type="text/javascript" src="../../template/scripts/toctreeloader.js"></script>
<script type="text/javascript" src="../../template/scripts/indextree.js"></script>
<script type="text/javascript" src="../../template/scripts/indextreeloader.js"></script>
<script type="text/javascript" src="../../template/scripts/glossarylist.js"></script>
<script type="text/javascript" src="../../template/scripts/glossarylistloader.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
<script type="text/javascript" src="../../template/scripts/searchfield.js"></script>
<script type="text/javascript" src="../../template/scripts/tabpanels.js"></script>
<script type="text/javascript" >
gTocPageHtml = "{%ICON%}<span  class=\"wTOCTreePageText\">{%LINK_NAME%}</span>";
gTocBookClosedHtml = "{%ICON%}<span  class=\"wTOCTreeCloseBookText\">{%LINK_NAME%}</span>";
gTocBookOpenHtml = "{%ICON%}<span  class=\"wTOCTreeCloseBookText\">{%LINK_NAME%}</span>";
gTocUrlHtml = "{%ICON%}<span  class=\"wTOCTreeLinkText\">{%LINK_NAME%}</span>";
gTocPageIconSrc = "../../template/Theme1_Standard/TOCTreePage.png";
gTocPageIconHoverSrc = "../../template/Theme1_Standard/TOCTreePageHover.png";
gTocPageIconSelSrc = "../../template/Theme1_Standard/TOCTreePageSelected.png";
gTocPageIconClass = "wTOCTreePageIcon";
gTocPageIconStyle = "";
gTocBookClosedIconSrc = "../../template/Theme1_Standard/TOCTreeCloseBook.png";
gTocBookClosedIconHoverSrc = "../../template/Theme1_Standard/TOCTreeCloseBookHover.png";
gTocBookClosedIconSelSrc = "../../template/Theme1_Standard/TOCTreeCloseBookSelected.png";
gTocBookClosedIconClass = "wTOCTreeCloseBookIcon";
gTocBookClosedIconStyle = "";
gTocBookOpenIconSrc = "../../template/Theme1_Standard/TOCTreeOpenBook.png";
gTocBookOpenIconHoverSrc = "../../template/Theme1_Standard/TOCTreeOpenBookHover.png";
gTocBookOpenIconSelSrc = "../../template/Theme1_Standard/TOCTreeOpenBookSelected.png";
gTocBookOpenIconClass = "wTOCTreeOpenBookIcon";
gTocBookOpenIconStyle = "";
gTocUrlIconSrc = "../../template/Theme1_Standard/TOCTreeLink.png";
gTocUrlIconHoverSrc = "../../template/Theme1_Standard/TOCTreeLinkHover.png";
gTocUrlIconSelSrc = "../../template/Theme1_Standard/TOCTreeLinkSelected.png";
gTocUrlIconClass = "wTOCTreeLinkIcon";
gTocUrlIconStyle = "";
</script>
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
</script>
<script type="text/javascript" >
gIdxKWHtml = "<span  class=\"wIdxKeywordText\">{%LINK_NAME%}</span>";
	gIdxLinkHtml = "<span  class=\"wIdxLinkText\">{%LINK_NAME%}</span>";
	gIdxCategoryHtml = "<span  class=\"wIdxAlphabetText\">{%LINK_NAME%}</span>";
</script>
<script type="text/javascript" >
gTopicId = "0_5";
</script>
<script type="text/javascript" >
gGloTermHtml = "<span  class=\"wGloTermText\">{%LINK_NAME%}</span>";
	gGloDefHtml = "<span  class=\"wGloDefinitionText\">{%LINK_NAME%}</span>";
	gGloCategoryHtml = "<span  class=\"wGloAlphabetText\">{%LINK_NAME%}</span>";
</script>
 <link rel="SHORTCUT ICON" href="../../Responsive HTML5_favicon.ico" />
</head>

<body>
<script type="text/javascript" src="../../ehlpdhtm.js"></script>



<div class="floatholder">
	<div class="phone_scrollarea overthrow">
		<div class="header">
			<table class="headertable">
				<tr>
					<td class="logo"><a href="../HDF5_UG_TitleWithoutSamples/HDF5_UG_TitleWithoutSamples.htm" class="homelink"><img src="../../template/Theme1_Standard/logo.png" alt="Logo" id="wLogoImage" style=" border:none; width:100%; max-width:53px;" border="0" /></a> </td>
					<td class="title"><div>
						<a href="../HDF5_UG_TitleWithoutSamples/HDF5_UG_TitleWithoutSamples.htm" class="homelink"><span>HDF5 User's Guide</span></a> 
						 
					</div></td>
					<td class="brsBack"><a id="browseSeqBack" class="wBSBackButton" href="../03_DataModel.html_150210/The_HDF5_Data_Model_and_File_Structure.htm"><img alt="" src="../../template/Theme1_Standard/topic_left.png" class="wBSBackButton" border="0" style="width:100%; max-width:19px" /></a> </td>
					<td class="brsNext"><a id="browseSeqNext" class="wBSNextButton" href="../08_TheFile.html_150210/The_HDF5_File.htm"><img alt="" src="../../template/Theme1_Standard/topic_right.png" class="wBSNextButton" border="0" style="width:100%; max-width:19px" /></a> </td>
				</tr>
			</table>
		</div>
		<div class="sidebar">
			<div data-showin="Always" class="wTabbedPanel" id="tabbedpanel">
				<ul class="wTabGroup" id="tab" data-tabid="tocTabButton" style="margin: 0px;">
					<li class="wTab" id="tocTabButton" data-contentid="tocTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/toc.png" class="normal" alt="Table of Contents" title="Table of Contents" id="xmlEditorTOCSidebarButton" style=" border:none; width:100%; max-width:30px;" border="0" /><img src="../../template/Theme1_Standard/toc_hover.png" class="hover" alt="Table of Contents" title="Table of Contents" id="xmlEditorTOCSidebarButtonHover" style=" border:none; width:100%; max-width:30px;" border="0" /></li>
					<li class="wTab" id="idxTabButton" data-contentid="idxTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/index.png" class="normal" alt="Index" title="Index" id="xmlEditorIDXSidebarButton" style=" border:none; width:100%; max-width:30px;" border="0" /><img src="../../template/Theme1_Standard/index_hover.png" class="hover" alt="Index" title="Index" id="xmlEditorIDXSidebarButtonHover" style=" border:none; width:100%; max-width:30px;" border="0" /></li>
					<li class="wTab" id="gloTabButton" data-contentid="gloTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/glo.png" class="normal" alt="Glossary" title="Glossary" id="xmlEditorGLOSidebarButton" style=" border:none; width:100%; max-width:34px;" border="0" /><img src="../../template/Theme1_Standard/glo_hover.png" class="hover" alt="Glossary" title="Glossary" id="xmlEditorGLOSidebarButtonHover" style=" border:none; width:100%; max-width:34px;" border="0" /></li>
				</ul>
				<div class="wTabContentGroup">
					<div id="tocTabPane" class="wTabContent">
						<div id="toc" class="wTOCTree" tabindex="152">
							
							
							
							
						</div>
					</div>
					<div id="idxTabPane" class="wTabContent">
						<div id="idx" class="wIndex">
							<input class="wIdxFilter" id="idxFilterBox" type="text" data-placeholder="Filter Keyword" onkeyup="filterIdx()"></input>
							
							
							
						</div>
					</div>
					<div id="gloTabPane" class="wTabContent">
						<div id="glo" class="wGlossary">
							<input class="wGloFilter" id="gloFilterBox" type="text" data-placeholder="Filter Term" onkeyup="filterGlo()"></input>
							
							
							
						</div>
					</div>
				</div>
			</div>
			<div class="closebutton buttonOpened">
				&#160; 
			</div>
		</div>
		<div class="content">
			<div class="desktop_functionholder">
				<div class="searchholder">
					<div class="wSearchField">
						<input id="searchBox" class="wSearchField" type="search" data-placeholder="-Search-" onkeydown="searchHelp(event, 'searchBox')" data-search="true" /><a class="wSearchLink" onclick="searchHelp(null, 'searchBox')" href="#"><img src="../../template/Theme1_Standard/Search.png" alt="" id="xmlEditwSearchLink" class="wSearchLink" border="0" style="width:100%; max-width:24px" /></a> 
						 
					</div>
				</div>
				<div class="home">
					<a href="../HDF5_UG_TitleWithoutSamples/HDF5_UG_TitleWithoutSamples.htm"><img src="../../template/Theme1_Standard/home.png" alt="" class="homebutton normal" id="xmlEditorHomeButton" border="0" style="width:100%; max-width:27px" /><img src="../../template/Theme1_Standard/home_hover.png" alt="" class="homebutton hover" id="xmlEditorHomeButtonHover" border="0" style="width:100%; max-width:27px" /></a> 
				</div>
				<div class="print">
					<a href="javascript:window.print()" class="wPrintButton"><img src="../../template/Theme1_Standard/Print.png" alt="" class="wPrintButton normal" id="xmlEditorPrintButton" border="0" style="width:100%; max-width:30px" /><img src="../../template/Theme1_Standard/Print_hover.png" alt="" class="wPrintButton hover" id="xmlEditorPrintButtonHover" border="0" style="width:100%; max-width:30px" /></a> 
				</div>
				<div class="brsBack">
					<a id="browseSeqBack0" class="wBSBackButton" href="../03_DataModel.html_150210/The_HDF5_Data_Model_and_File_Structure.htm"><img alt="" src="../../template/Theme1_Standard/BSBack.png" class="wBSBackButton normal" id="xmlEditorBSBackButton" border="0" style="width:100%; max-width:19px" /><img alt="" src="../../template/Theme1_Standard/BSBack_hover.png" class="wBSBackButton hover" id="xmlEditorBSBackButtonHover" border="0" style="width:100%; max-width:19px" /></a> 
					 
				</div>
				<div class="brsNext">
					<a id="browseSeqNext0" class="wBSNextButton" href="../08_TheFile.html_150210/The_HDF5_File.htm"><img alt="" src="../../template/Theme1_Standard/BSNext.png" class="wBSNextButton normal" id="xmlEditorBSNextButton" border="0" style="width:100%; max-width:19px" /><img alt="" src="../../template/Theme1_Standard/BSNext_hover.png" class="wBSNextButton hover" id="xmlEditorBSNextButtonHover" border="0" style="width:100%; max-width:19px" /></a> 
					 
				</div>
			</div>
			<div class="contentholder">
				<a name="content_top_placeholder"></a> 
				<div class="wTopic" id="rh_default_topic_placeholder_id">


 <p class="FM__Heading_Level1">2. <a name="XREF_ProgModelChapter"></a>The HDF5 Library and Programming Model</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [</p>
 <p class="FM__Body"> &#160;] ] ]&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- HEADER LEFT &quot; &quot; --&gt;</p>
 <p class="FM__Body">&lt;!-- HEADER RIGHT &quot; &quot; --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- HEADER LEFT &quot;HDF5 User's Guide&quot; --&gt;</p>
 <p class="FM__Body">&lt;!-- HEADER RIGHT &quot;HDF5 Library and Programming Model&quot; --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;Intro&quot;&gt;</p>
 <p class="FM__Body">&lt;h3&gt;2.1. Introduction&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;a name=&quot;LibPModel&quot;&gt;</p>
 <p class="FM__Body">&lt;div align=&quot;right&quot;&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=&quot;-1&quot;&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 Library implements the HDF5 abstract data model and storage </p>
 <p class="FM__Body">&#160;&#160;model. These models were described in the preceding chapter, </p>
 <p class="FM__Body"> &#160;&amp;ldquo;&lt;a href=&quot;03_DataModel.html&quot;&gt;The HDF5 Data Model&lt;/a&gt;&amp;rdquo;. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Two major objectives of the HDF5 products are to provide tools </p>
 <p class="FM__Body">&#160;&#160;that can be used on as many computational platforms as possible </p>
 <p class="FM__Body"> &#160;(portability), and to provide a reasonably object-oriented data model</p>
 <p class="FM__Body"> &#160;and programming interface. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [</p>
 <p class="FM__Body">&#160;&#160;Explain? &#160;E.g., Java is portable, </p>
 <p class="FM__Body">&#160;&#160;but there are many platforms on which it does not run. </p>
 <p class="FM__Body"> &#160;] ] ]&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To be as portable as possible, the HDF5 Library is implemented in </p>
 <p class="FM__Body">&#160;&#160;portable C. C is not an object-oriented language, but the library uses </p>
 <p class="FM__Body"> &#160;several mechanisms and conventions to implement an object model.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;One mechanism the HDF5 library uses is to implement the objects </p>
 <p class="FM__Body">&#160;&#160;as data structures. To refer to an object, the HDF5 library implements </p>
 <p class="FM__Body">&#160;&#160;its own pointers. These pointers are called identifiers. </p>
 <p class="FM__Body">&#160;&#160;An identifier is then used to invoke operations on a specific instance </p>
 <p class="FM__Body">&#160;&#160;of an object. For example, when a group is opened, &#160;</p>
 <p class="FM__Body">&#160;&#160;the API returns a group identifier. This identifier is a reference to that </p>
 <p class="FM__Body">&#160;&#160;specific group and will be used to invoke future operations on that group. </p>
 <p class="FM__Body">&#160;&#160;The identifier is valid only within the context it is created </p>
 <p class="FM__Body"> &#160;and remains valid until it is closed or the file is closed.</p>
 <p class="FM__Body">&#160;&#160;This mechanism is essentially the same as the mechanism that C++ or </p>
 <p class="FM__Body">&#160;&#160;other object-oriented languages use to refer to objects except that the </p>
 <p class="FM__Body"> &#160;syntax is C. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Similarly, object-oriented languages collect all the methods for </p>
 <p class="FM__Body">&#160;&#160;an object in a single name space. An example is the methods of a C++ class. </p>
 <p class="FM__Body">&#160;&#160;The C language does not have any such mechanism, </p>
 <p class="FM__Body">&#160;&#160;but the HDF5 Library simulates this through its API naming convention. </p>
 <p class="FM__Body">&#160;&#160;API function names begin with a common prefix that is related to the </p>
 <p class="FM__Body">&#160;&#160;class of objects that the function operates on. </p>
 <p class="FM__Body">&#160;&#160;The table below lists the HDF5 objects and the standard prefixes </p>
 <p class="FM__Body">&#160;&#160;used by the corresponding HDF5 APIs. </p>
 <p class="FM__Body">&#160;&#160;For example, functions that operate on datatype objects all have names </p>
 <p class="FM__Body"> &#160;beginning with H5T.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;300&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 1. The HDF5 API naming scheme&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Prefix&amp;nbsp;&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Operates on&amp;nbsp;&amp;nbsp;&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;H5A&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Attributes &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;H5D&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Datasets &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;H5E&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Error reports&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;H5F&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Files&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;H5G&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Groups&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;H5I&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Identifiers&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;H5L&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Links&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;H5O&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Objects&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;H5P&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Property lists&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;H5R&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;References&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;H5S&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Dataspaces&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;H5T&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Datatypes&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;H5Z&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Filters&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;ProgModel&quot;&gt;</p>
 <p class="FM__Body">&lt;h3&gt;2.2. The HDF5 Programming Model&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In this section we introduce the HDF5 </p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;termDefinition&quot;&gt;programming model&lt;/span&gt; by means of </p>
 <p class="FM__Body">&#160;&#160;a series of short code samples. These samples illustrate a broad </p>
 <p class="FM__Body">&#160;&#160;selection of common HDF5 tasks. More details are provided in the </p>
 <p class="FM__Body">&#160;&#160;following chapters and in the </p>
 <p class="FM__Body"> &#160;&lt;a href=&quot;../RM/RM_H5Front.html&quot; TARGET=&quot;H5DocWin&quot;&gt; </p>
 <p class="FM__Body"> &#160;&lt;cite&gt;HDF5 Reference Manual&lt;/cite&gt;&lt;/a&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;&lt;p&gt;[ [ [</p>
 <p class="FM__Body">&#160;&#160;The following is based on text from the old &quot;Intro to HDF5&quot; &#160;</p>
 <p class="FM__Body"> &#160;and presumably needs some technical verification.</p>
 <p class="FM__Body"> &#160;] ] ]&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;CreateFile&quot;&gt;</p>
 <p class="FM__Body">&lt;h4&gt;2.2.1. Creating an HDF5 File&lt;/h4&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Before an HDF5 file can be used or referred to in any manner, </p>
 <p class="FM__Body">&#160;&#160;it must be explicitly created or opened. When the need for access to </p>
 <p class="FM__Body">&#160;&#160;a file ends, the file must be closed. The example below provides a C </p>
 <p class="FM__Body"> &#160;code fragment illustrating these steps. In this example, the values</p>
 <p class="FM__Body"> &#160;for the file creation property list and the file access property list</p>
 <p class="FM__Body"> &#160;are set to the defaults &lt;code&gt;H5P_DEFAULT&lt;/code&gt;.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;hid_t &#160;&#160;&#160;&#160;&#160;&#160;file; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* declare file identifier */</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body">&#160;&#160;* Create a new file using H5F_ACC_TRUNC </p>
 <p class="FM__Body"> &#160;* to truncate and overwrite any file of the same name,</p>
 <p class="FM__Body">&#160;&#160;* default file creation properties, and </p>
 <p class="FM__Body"> &#160;* default file access properties.</p>
 <p class="FM__Body"> &#160;* Then close the file.</p>
 <p class="FM__Body"> &#160;*/</p>
 <p class="FM__Body"> &#160;file = H5Fcreate(FILE, H5F_ACC_TRUNC, H5P_DEFAULT, H5P_DEFAULT);</p>
 <p class="FM__Body"> &#160;status = H5Fclose(file); &lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 1. Creating and closing an HDF5 file&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 1--&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Note: If there is a possibility that a file of the declared name</p>
 <p class="FM__Body"> &#160;already exists and you wish to open a new file regardless of that</p>
 <p class="FM__Body"> &#160;possibility, the flag &lt;code&gt;H5F_ACC_TRUNC&lt;/code&gt; will cause the</p>
 <p class="FM__Body"> &#160;operation to overwrite the previous file. If the operation should</p>
 <p class="FM__Body"> &#160;fail in such a circumstance, use the flag &lt;code&gt;H5F_ACC_EXCL&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;instead.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;CreateDataset&quot;&gt;</p>
 <p class="FM__Body">&lt;h4&gt;2.2.2. Creating and Initializing a Dataset&lt;/h4&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The essential objects within a dataset are datatype and dataspace. </p>
 <p class="FM__Body">&#160;&#160;These are independent objects and are created separately from any dataset </p>
 <p class="FM__Body">&#160;&#160;to which they may be attached. Hence, creating a dataset requires, </p>
 <p class="FM__Body"> &#160;at a minimum, the following steps:&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;ol&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;Create and initialize a dataspace for the dataset&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;Define a datatype for the dataset&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;Create and initialize the dataset&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;/ol&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The code in the example below illustrates the execution of these steps.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;hid_t &#160;&#160;&#160;dataset, datatype, dataspace; &#160;/* declare identifiers */</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;/* </p>
 <p class="FM__Body">&#160;&#160;&#160;* Create a dataspace: Describe the size of the array and </p>
 <p class="FM__Body">&#160;&#160;&#160;* create the dataspace for a fixed-size dataset. </p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;dimsf[0] = NX;</p>
 <p class="FM__Body"> &#160;dimsf[1] = NY;</p>
 <p class="FM__Body">&#160;&#160;dataspace = H5Screate_simple(RANK, dimsf, NULL); </p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Define a datatype for the data in the dataset.</p>
 <p class="FM__Body"> &#160;&#160;* We will store little endian integers.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;datatype = H5Tcopy(H5T_NATIVE_INT);</p>
 <p class="FM__Body"> &#160;status = H5Tset_order(datatype, H5T_ORDER_LE);</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body">&#160;&#160;&#160;* Create a new dataset within the file using the defined </p>
 <p class="FM__Body"> &#160;&#160;* dataspace and datatype and default dataset creation</p>
 <p class="FM__Body"> &#160;&#160;* properties.</p>
 <p class="FM__Body">&#160;&#160;&#160;* NOTE: H5T_NATIVE_INT can be used as the datatype if </p>
 <p class="FM__Body"> &#160;&#160;* conversion to little endian is not needed.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;dataset = H5Dcreate(file, DATASETNAME, datatype, dataspace,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT); &lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 2. Create a dataset&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;CloseObject&quot;&gt;</p>
 <p class="FM__Body">&lt;h4&gt;2.2.3. Closing an Object &lt;/h4&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;An application should close an object such as a datatype, dataspace, </p>
 <p class="FM__Body"> &#160;or dataset once the object is no longer needed.</p>
 <p class="FM__Body">&#160;&#160;Since each is an independent object, each must be released </p>
 <p class="FM__Body">&#160;&#160;(or closed) separately. This action is frequently referred to as </p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;termDefinition&quot;&gt;releasing the object&amp;rsquo;s identifier&lt;/span&gt;.</p>
 <p class="FM__Body"> &#160;The code in the example below &lt;!-- formerly Figure 3 --&gt;closes the </p>
 <p class="FM__Body">&#160;&#160;datatype, dataspace, and dataset that were created in the preceding </p>
 <p class="FM__Body"> &#160;section.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">&#160;&#160;H5Tclose(datatype); </p>
 <p class="FM__Body">&#160;&#160;H5Dclose(dataset); </p>
 <p class="FM__Body"> &#160;H5Sclose(dataspace);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 3. Close an object&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 3 --&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;There is a long list of HDF5 Library items that return a unique </p>
 <p class="FM__Body">identifier when the item is created or opened. Each time that one of </p>
 <p class="FM__Body">these items is opened, a unique identifier is returned. Closing a file </p>
 <p class="FM__Body">does not mean that the groups, datasets, or other open items are also </p>
 <p class="FM__Body">closed. Each opened item must be closed separately. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- FOR USE WITH ELECTRONIC VERSION ---------------------------------&gt;</p>
 <p class="FM__Body">&lt;p&gt;For more information, see </p>
 <p class="FM__Body">&lt;a href=&quot;../Advanced/UsingIdentifiers/index.html&quot;&gt;&amp;ldquo;Using Identifiers&amp;rdquo;&lt;/a&gt; </p>
 <p class="FM__Body">in the &amp;ldquo;Advanced Topics&amp;rdquo; page.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- FOR USE WITH ELECTRONIC VERSION ---------------------------------&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- FOR USE WITH PRINT VERSION --------------------------------------</p>
 <p class="FM__Body">&lt;p&gt;For more information, see &amp;ldquo;Using Identifiers&amp;rdquo; in the </p>
 <p class="FM__Body">&amp;ldquo;Additional Resources&amp;rdquo; chapter.&lt;/p&gt;</p>
 <p class="FM__Body">&lt;!-- FOR USE WITH PRINT VERSION --------------------------------------&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;ClosingAFileNotes&quot;&gt;</p>
 <p class="FM__Body">&lt;h4&gt;How Closing a File Effects Other Open Structural Elements&lt;/h4&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;p&gt;Every structural element in an HDF5 file can be opened, and these </p>
 <p class="FM__Body">elements can be opened more than once. Elements range in size from </p>
 <p class="FM__Body">the entire file down to attributes. When an element is opened, the </p>
 <p class="FM__Body">HDF5 Library returns a unique identifier to the application. Every </p>
 <p class="FM__Body">element that is opened must be closed. If an element was opened more </p>
 <p class="FM__Body">than once, each identifier that was returned to the application must </p>
 <p class="FM__Body">be closed. For example, if a dataset was opened twice, both dataset </p>
 <p class="FM__Body">identifiers must be released (closed) before the dataset can be </p>
 <p class="FM__Body">considered closed. Suppose an application has opened a file, a group in </p>
 <p class="FM__Body">the file, and two datasets in the group. In order for the file to be </p>
 <p class="FM__Body">totally closed, the file, group, and datasets must each be closed. </p>
 <p class="FM__Body">Closing the file before the group or the datasets will not effect the </p>
 <p class="FM__Body">state of the group or datasets: the group and datasets will still be </p>
 <p class="FM__Body">open.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;There are several exceptions to the above general rule. One is when </p>
 <p class="FM__Body">the &lt;code&gt;H5close&lt;/code&gt; function is used. &lt;code&gt;H5close&lt;/code&gt; causes a </p>
 <p class="FM__Body">general shutdown of the library: all data is written to disk, all </p>
 <p class="FM__Body">identifiers are closed, and all memory used by the library is </p>
 <p class="FM__Body">cleaned up. Another exception occurs on parallel processing systems. </p>
 <p class="FM__Body">Suppose on a parallel system an application has opened a file, a </p>
 <p class="FM__Body">group in the file, and two datasets in the group. If the application </p>
 <p class="FM__Body">uses the &lt;code&gt;H5Fclose&lt;/code&gt; function to close the file, the call </p>
 <p class="FM__Body">will fail with an error. The open group and datasets must be closed </p>
 <p class="FM__Body">before the file can be closed. A third exception is when the file </p>
 <p class="FM__Body">access property list includes the property &lt;code&gt;H5F_CLOSE_STRONG&lt;/code&gt;. </p>
 <p class="FM__Body">This property closes any open elements when the file is closed with </p>
 <p class="FM__Body">&lt;code&gt;H5Fclose&lt;/code&gt;. For more information, see the </p>
 <p class="FM__Body">&lt;a href=&quot;../RM/RM_H5P.html#Property-SetFcloseDegree&quot;&gt;</p>
 <p class="FM__Body">&lt;code&gt;H5Pset_fclose_degree&lt;/code&gt;&lt;/a&gt; function in the </p>
 <p class="FM__Body">&lt;cite&gt;HDF5 Reference Manual&lt;/cite&gt;.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;WriteRead&quot;&gt;</p>
 <p class="FM__Body">&lt;h4&gt;2.2.4. Writing or Reading a Dataset to or from a File&lt;/h4&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Having created the dataset, the actual data can be written </p>
 <p class="FM__Body"> &#160;with a call to &lt;code&gt;H5Dwrite&lt;/code&gt;. See the example below.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;* Write the data to the dataset using default transfer</p>
 <p class="FM__Body"> &#160;* properties.</p>
 <p class="FM__Body"> &#160;*/</p>
 <p class="FM__Body"> &#160;status = H5Dwrite(dataset, H5T_NATIVE_INT, H5S_ALL, H5S_ALL,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, data);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 4. Writing a dataset&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 4 --&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Note that the third and fourth &lt;code&gt;H5Dwrite&lt;/code&gt; parameters in </p>
 <p class="FM__Body">&#160;&#160;the above example describe the dataspaces in memory and in the file, </p>
 <p class="FM__Body"> &#160;respectively. For now, these are both set to &lt;code&gt;H5S_ALL&lt;/code&gt; which </p>
 <p class="FM__Body">&#160;&#160;indicates that the entire dataset is to be written. </p>
 <p class="FM__Body"> &#160;The selection of partial datasets and the use of differing dataspaces</p>
 <p class="FM__Body">&#160;&#160;in memory and in storage will be discussed later in this chapter and </p>
 <p class="FM__Body"> &#160;in more detail elsewhere in this guide.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Reading the dataset from storage is similar to writing the dataset to </p>
 <p class="FM__Body"> &#160;storage. To read an entire dataset, substitute &lt;code&gt;H5Dread&lt;/code&gt; for </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Dwrite&lt;/code&gt; in the above example.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;PartialWR&quot;&gt;</p>
 <p class="FM__Body">&lt;h4&gt;2.2.5. Reading and Writing a Portion of a Dataset&lt;/h4&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The previous section described writing or reading an entire </p>
 <p class="FM__Body"> &#160;dataset. HDF5 also supports access to portions of a dataset. These parts of</p>
 <p class="FM__Body"> &#160;datasets are known as &lt;span class=&quot;termDefinition&quot;&gt;selections&lt;/span&gt;. </p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The simplest type of selection is a </p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;termDefinition&quot;&gt;simple hyperslab&lt;/span&gt;. This is </p>
 <p class="FM__Body"> &#160;an &lt;span class=&quot;codeVar&quot;&gt;n&lt;/span&gt;-dimensional rectangular sub-set of </p>
 <p class="FM__Body"> &#160;a dataset where &lt;span class=&quot;codeVar&quot;&gt;n&lt;/span&gt; is equal to the </p>
 <p class="FM__Body">&#160;&#160;dataset&amp;rsquo;s rank. Other available selections include </p>
 <p class="FM__Body"> &#160;a more complex hyperslab with user-defined stride and block size,</p>
 <p class="FM__Body"> &#160;a list of independent points, or the union of any of these.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure below &lt;!-- formerly Figure 5 --&gt;shows several </p>
 <p class="FM__Body"> &#160;sample selections.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Pmodel_fig5_a.jpg&quot;&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Pmodel_fig5_b.jpg&quot;&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Pmodel_fig5_c.jpg&quot;&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Pmodel_fig5_d.jpg&quot;&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Pmodel_fig5_e.jpg&quot;&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 1. Dataset selections&lt;/b&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 5. --&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Selections can take the form of a simple hyperslab, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;a hyperslab with user-defined stride and block,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;a selection of points, or a union of any of these forms.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!--</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;span class=&quot;editingComment&quot;&gt;&lt;br /&gt;[ [ [ </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Edit figures to retain... </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;upper left, </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;maybe a second simple hyperslab, </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2nd left, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;box on right (3-D point),</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;and an interesting-looking union.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;None of the text in the JPEGs need be retained.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Use new figure filenames as we are holding the current figure for possible reuse elsewhere.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;If it's not already been done, remember that the original figure is to be used, in toto, </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;in the &quot;Memory&amp;lt;--&amp;gt;Disk Data Transfer&quot; discussion, with &quot;Key&quot; to add characters '(hyperslab)'</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;immediately to the right of the hyperslab icon.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;] ] ]&lt;/span&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;--&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Selections and hyperslabs are portions of a dataset. </p>
 <p class="FM__Body"> &#160;As described above, a &lt;span class=&quot;termDefinition&quot;&gt;simple hyperslab&lt;/span&gt; </p>
 <p class="FM__Body">&#160;&#160;is a rectangular array of data elements with the same rank as the </p>
 <p class="FM__Body">&#160;&#160;dataset&amp;rsquo;s dataspace. Thus, a simple hyperslab is a </p>
 <p class="FM__Body"> &#160;logically contiguous collection of points within the dataset. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The more general case of a &lt;span class=&quot;termDefinition&quot;&gt;hyperslab&lt;/span&gt;</p>
 <p class="FM__Body">&#160;&#160;can also be a regular pattern of points or blocks within the dataspace. </p>
 <p class="FM__Body">&#160;&#160;Four parameters are required to describe a general hyperslab: the </p>
 <p class="FM__Body">&#160;&#160;starting coordinates, the block size, the stride or space between </p>
 <p class="FM__Body">&#160;&#160;blocks, and the number of blocks. These parameters are each expressed </p>
 <p class="FM__Body">&#160;&#160;as a one-dimensional array with length equal to the rank of the dataspace </p>
 <p class="FM__Body">&#160;&#160;and are described in the table below </p>
 <p class="FM__Body"> &#160;&lt;!-- formerly table 2--&gt;.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 2. Hyperslab parameters&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Parameter&amp;nbsp;&amp;nbsp;&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Definition&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;&lt;i&gt;start&lt;/i&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt; </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The coordinates of the starting location of the hyperslab </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;in the dataset&amp;rsquo;s dataspace.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;&lt;i&gt;block&lt;/i&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt; </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The size of each block to be selected from the dataspace. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;If the &lt;code&gt;block&lt;/code&gt; parameter is set to NULL, </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;the block size defaults to a single element in each dimension, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;as if the block array was set to all &lt;code&gt;1&lt;/code&gt;s (all ones).</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;This will result in the selection of </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;a uniformly spaced set of &lt;code&gt;count&lt;/code&gt; points </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;starting at &lt;code&gt;start&lt;/code&gt; and </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;on the interval defined by &lt;code&gt;stride&lt;/code&gt;.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;&lt;i&gt;stride&lt;/i&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt; </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The number of elements separating the starting point of each element </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;or block to be selected. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;If the &lt;code&gt;stride&lt;/code&gt; parameter is set to NULL, </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;the stride size defaults to 1 (one) in each dimension </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;and no elements are skipped.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;&lt;i&gt;count&lt;/i&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;The number of elements or blocks to select along each dimension.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;h4&gt;Reading Data into a Differently Shaped Memory Block&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;For maximum flexibility in user applications, a selection in storage </p>
 <p class="FM__Body">&#160;&#160;can be mapped into a differently-shaped selection in memory. All that </p>
 <p class="FM__Body">&#160;&#160;is required is that the two selections contain the same number of data </p>
 <p class="FM__Body">&#160;&#160;elements. In this example, we will first define the selection to be </p>
 <p class="FM__Body">&#160;&#160;read from the dataset in storage, and then we will define the </p>
 <p class="FM__Body"> &#160;selection as it will appear in application memory.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Suppose we want to read a 3 x 4 hyperslab from a two-dimensional </p>
 <p class="FM__Body">&#160;&#160;dataset in a file beginning at the dataset element &amp;lt;1,2&amp;gt;. </p>
 <p class="FM__Body">&#160;&#160;The first task is to create the dataspace that describes the </p>
 <p class="FM__Body">&#160;&#160;overall rank and dimensions of the dataset in the file and to </p>
 <p class="FM__Body">&#160;&#160;specify the position and size of the in-file hyperslab that we </p>
 <p class="FM__Body">&#160;&#160;are extracting from that dataset. See the code below. &#160;</p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Figure 6--&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">&#160;&#160;/* </p>
 <p class="FM__Body"> &#160;* Define dataset dataspace in file.</p>
 <p class="FM__Body"> &#160;*/</p>
 <p class="FM__Body"> &#160;dataspace = H5Dget_space(dataset); &#160;&#160;&#160;/* dataspace identifier */</p>
 <p class="FM__Body"> &#160;rank &#160;&#160;&#160;&#160;&#160;= H5Sget_simple_extent_ndims(dataspace);</p>
 <p class="FM__Body"> &#160;status_n &#160;= H5Sget_simple_extent_dims(dataspace, dims_out, NULL);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;/* </p>
 <p class="FM__Body">&#160;&#160;* Define hyperslab in the dataset. </p>
 <p class="FM__Body"> &#160;*/</p>
 <p class="FM__Body"> &#160;offset[0] = 1;</p>
 <p class="FM__Body"> &#160;offset[1] = 2;</p>
 <p class="FM__Body"> &#160;count[0] &#160;= 3;</p>
 <p class="FM__Body"> &#160;count[1] &#160;= 4;</p>
 <p class="FM__Body">&#160;&#160;status = H5Sselect_hyperslab(dataspace, H5S_SELECT_SET, offset, NULL, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;count, NULL);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 5. Define the selection to be read from storage &lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 6.--&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The next task is to define a dataspace in memory. </p>
 <p class="FM__Body">&#160;&#160;Suppose that we have in memory a three-dimensional 7 x 7 x 3 array </p>
 <p class="FM__Body">&#160;&#160;into which we wish to read the two-dimensional 3 x 4 hyperslab </p>
 <p class="FM__Body">&#160;&#160;described above and that we want the memory selection to begin at </p>
 <p class="FM__Body">&#160;&#160;the element &amp;lt;3,0,0&amp;gt; and reside in the plane of the first two </p>
 <p class="FM__Body">&#160;&#160;dimensions of the array. Since the in-memory dataspace is </p>
 <p class="FM__Body">&#160;&#160;three-dimensional, we have to describe the in-memory selection as </p>
 <p class="FM__Body">&#160;&#160;three-dimensional. Since we are keeping the selection in the plane </p>
 <p class="FM__Body">&#160;&#160;of the first two dimensions of the in-memory dataset, the in-memory </p>
 <p class="FM__Body"> &#160;selection will be a 3 x 4 x 1 array defined as &amp;lt;3,4,1&amp;gt;. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NOT EDITED TO..... -----&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Notice that we must describe two things: the dimensions of the </p>
 <p class="FM__Body">&#160;&#160;in-memory array, and the size and position of the hyperslab that we </p>
 <p class="FM__Body"> &#160;wish to read in. The code below &lt;!--formerly Figure 7 --&gt;illustrates </p>
 <p class="FM__Body"> &#160;how this would be done.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;* Define memory dataspace.</p>
 <p class="FM__Body"> &#160;*/</p>
 <p class="FM__Body"> &#160;dimsm[0] = 7;</p>
 <p class="FM__Body"> &#160;dimsm[1] = 7;</p>
 <p class="FM__Body"> &#160;dimsm[2] = 3;</p>
 <p class="FM__Body">&#160;&#160;memspace = H5Screate_simple(RANK_OUT,dimsm,NULL); &#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;/* </p>
 <p class="FM__Body">&#160;&#160;* Define memory hyperslab. </p>
 <p class="FM__Body"> &#160;*/</p>
 <p class="FM__Body"> &#160;offset_out[0] = 3;</p>
 <p class="FM__Body"> &#160;offset_out[1] = 0;</p>
 <p class="FM__Body"> &#160;offset_out[2] = 0;</p>
 <p class="FM__Body"> &#160;count_out[0] &#160;= 3;</p>
 <p class="FM__Body"> &#160;count_out[1] &#160;= 4;</p>
 <p class="FM__Body"> &#160;count_out[2] &#160;= 1;</p>
 <p class="FM__Body">&#160;&#160;status = H5Sselect_hyperslab(memspace, H5S_SELECT_SET, offset_out, NULL, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;count_out, NULL);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 6. Define the memory dataspace and selection &lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 7.--&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The hyperslab defined in the code above has the following parameters: </p>
 <p class="FM__Body"> &#160;&lt;code&gt;start=(3,0,0)&lt;/code&gt;, &lt;code&gt;count=(3,4,1)&lt;/code&gt;, stride and </p>
 <p class="FM__Body"> &#160;block size are &lt;code&gt;NULL&lt;/code&gt;.&lt;/p&gt;</p>
 <p class="FM__Body">&lt;!-- .....TO HERE -----&gt;  </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;h4&gt;Writing Data into a Differently Shaped Disk Storage Block&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Now let&amp;rsquo;s consider the opposite process of </p>
 <p class="FM__Body"> &#160;writing a selection from memory to a selection in a dataset in a file.</p>
 <p class="FM__Body">&#160;&#160;Suppose that the source dataspace in memory is a 50-element, </p>
 <p class="FM__Body"> &#160;one-dimensional array called &lt;code&gt;vector&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Figure 8--&gt; </p>
 <p class="FM__Body">&#160;&#160;and that the source selection is a 48-element simple hyperslab </p>
 <p class="FM__Body"> &#160;that starts at the second element of &lt;code&gt;vector&lt;/code&gt;. </p>
 <p class="FM__Body"> &#160;See the figure below.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;400&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;&lt;br /&gt;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table align=&quot;center&quot; border=&quot;1&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr valign=&quot;top&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;-1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;...&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;49&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;50&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;-1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;&amp;nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 2. A one-dimensional array&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 8--&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Further suppose that we wish to write this data to the file as </p>
 <p class="FM__Body">&#160;&#160;a series of 3 x 2-element blocks in a two-dimensional dataset, </p>
 <p class="FM__Body"> &#160;skipping one row and one column between blocks.</p>
 <p class="FM__Body">&#160;&#160;Since the source selection contains 48 data elements and &#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;each block in the destination selection contains 6 data elements, </p>
 <p class="FM__Body">&#160;&#160;we must define the destination selection with 8 blocks. </p>
 <p class="FM__Body"> &#160;We will write 2 blocks in the first dimension and 4 in the second.</p>
 <p class="FM__Body"> &#160;The code below &lt;!-- formerly Figure 9 --&gt; shows how to achieve this </p>
 <p class="FM__Body"> &#160;objective.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">&#160;&#160;/* Select the hyperslab for the dataset in the file, using 3 x 2 blocks, </p>
 <p class="FM__Body"> &#160;&#160;* a (4,3) stride, a (2,4) count, and starting at the position (0,1).</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;start[0] &#160;= 0; start[1] &#160;= 1;</p>
 <p class="FM__Body"> &#160;stride[0] = 4; stride[1] = 3;</p>
 <p class="FM__Body">&#160;&#160;count[0] &#160;= 2; count[1] &#160;= 4; &#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;block[0] &#160;= 3; block[1] &#160;= 2;</p>
 <p class="FM__Body"> &#160;ret = H5Sselect_hyperslab(fid, H5S_SELECT_SET, start, stride, count, block);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Create dataspace for the first dataset.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;mid1 = H5Screate_simple(MSPACE1_RANK, dim1, NULL);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body">&#160;&#160;&#160;* Select hyperslab. </p>
 <p class="FM__Body"> &#160;&#160;* We will use 48 elements of the vector buffer starting at the second element.</p>
 <p class="FM__Body"> &#160;&#160;* Selected elements are 1 2 3 . . . 48</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;start[0] &#160;= 1;</p>
 <p class="FM__Body"> &#160;stride[0] = 1;</p>
 <p class="FM__Body"> &#160;count[0] &#160;= 48;</p>
 <p class="FM__Body"> &#160;block[0] &#160;= 1;</p>
 <p class="FM__Body"> &#160;ret = H5Sselect_hyperslab(mid1, H5S_SELECT_SET, start, stride, count, block);</p>
 <p class="FM__Body">&#160;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Write selection from the vector buffer to the dataset in the file.</p>
 <p class="FM__Body"> &#160;&#160;*</p>
 <p class="FM__Body"> &#160;ret = H5Dwrite(dataset, H5T_NATIVE_INT, mid1, fid, H5P_DEFAULT, vector)&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 7. The destination selection</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 9--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;GetInfo&quot;&gt;</p>
 <p class="FM__Body">&lt;h4&gt;2.2.6. Getting Information about a Dataset&lt;/h4&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Although reading is analogous to writing, it is often first necessary </p>
 <p class="FM__Body">&#160;&#160;to query a file to obtain information about the dataset to be read. </p>
 <p class="FM__Body">&#160;&#160;For instance, we often need to determine the datatype associated with a </p>
 <p class="FM__Body">&#160;&#160;dataset, or its dataspace (i.e., rank and dimensions). </p>
 <p class="FM__Body"> &#160;As illustrated in the code example below &lt;!--formerly Figure 10--&gt;, </p>
 <p class="FM__Body"> &#160;there are several &lt;span class=&quot;termDefinition&quot;&gt;get&lt;/span&gt; routines for </p>
 <p class="FM__Body"> &#160;obtaining this information.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body">&#160;&#160;* Get datatype and dataspace identifiers, &#160;</p>
 <p class="FM__Body">&#160;&#160;* then query datatype class, order, and size, and </p>
 <p class="FM__Body"> &#160;* then query dataspace rank and dimensions.</p>
 <p class="FM__Body"> &#160;*/</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;datatype = H5Dget_type (dataset); &#160;/* datatype identifier */</p>
 <p class="FM__Body"> &#160;&#160;class = H5Tget_class (datatype);</p>
 <p class="FM__Body">   if (class == H5T_INTEGER) printf(&quot;Dataset has INTEGER type \n&quot;);</p>
 <p class="FM__Body"> &#160;&#160;order = H5Tget_order (datatype);</p>
 <p class="FM__Body">   if (order == H5T_ORDER_LE) printf(&quot;Little endian order \n&quot;);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;size = H5Tget_size (datatype);</p>
 <p class="FM__Body">   printf (&quot;Size is %d \n&quot;, size);</p>
 <p class="FM__Body"> &#160;&#160;dataspace = H5Dget_space (dataset); /* dataspace identifier */</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;&#160;/* Find rank and retrieve current and maximum dimension sizes */ </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;rank = H5Sget_simple_extent_dims (dataspace, dims, max_dims);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 8. Routines to get dataset parameters</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!--formerly Figure 10--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;CreateCDType&quot;&gt;</p>
 <p class="FM__Body">&lt;h4&gt;2.2.7. Creating and Defining Compound Datatypes&lt;/h4&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A &lt;span class=&quot;termDefinition&quot;&gt;compound datatype&lt;/span&gt; is a </p>
 <p class="FM__Body">&#160;&#160;collection of one or more data elements. Each element might be an </p>
 <p class="FM__Body"> &#160;atomic type, a small array, or another compound datatype. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The provision for nested compound datatypes allows these structures </p>
 <p class="FM__Body">&#160;&#160;to become quite complex. An HDF5 compound datatype has some similarities </p>
 <p class="FM__Body">&#160;&#160;to a C struct or a Fortran common block. Though not originally designed </p>
 <p class="FM__Body">&#160;&#160;with databases in mind, HDF5 compound datatypes are sometimes used </p>
 <p class="FM__Body">&#160;&#160;in a way that is similar to a database record. Compound datatypes </p>
 <p class="FM__Body">&#160;&#160;can become either a powerful tool or a complex and difficult-to-debug </p>
 <p class="FM__Body"> &#160;construct. Reasonable caution is advised.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To create and use a compound datatype, </p>
 <p class="FM__Body">&#160;&#160;you need to create a datatype with class </p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;termDefinition&quot;&gt;compound&lt;/span&gt; (&lt;code&gt;H5T_COMPOUND&lt;/code&gt;) </p>
 <p class="FM__Body">&#160;&#160;and specify the total size of the data element in bytes. </p>
 <p class="FM__Body">&#160;&#160;A compound datatype consists of zero or more uniquely named members. </p>
 <p class="FM__Body">&#160;&#160;Members can be defined in any order but must occupy non-overlapping regions </p>
 <p class="FM__Body">&#160;&#160;within the datum. The table below &lt;!-- formerly </p>
 <p class="FM__Body"> &#160;Table 3 --&gt;lists the properties of compound datatype members.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 3. Compound datatype member properties&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;2&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;&lt;b&gt;Parameter&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;80%&quot;&gt;&lt;b&gt;Definition&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Index&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;An index number between zero and N-1, where N is the number of </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;members in the compound. The elements are indexed in the order of </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;their location in the array of bytes.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Name&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;A string that must be unique within the members </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;of the same datatype.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Datatype&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;An HDF5 datatype.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Offset&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;A fixed byte offset which defines the location of the first </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;byte of that member in the compound datatype.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;2&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Properties of the members of a compound datatype are </p>
 <p class="FM__Body">&#160;&#160;defined when the member is added to the compound type. These </p>
 <p class="FM__Body"> &#160;properties cannot be modified later. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;Defining Compound Datatypes&lt;/h4&gt; </p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Compound datatypes must be built out of other datatypes. </p>
 <p class="FM__Body">&#160;&#160;To do this, you first create an empty compound datatype and specify </p>
 <p class="FM__Body">&#160;&#160;its total size. Members are then added to the compound datatype </p>
 <p class="FM__Body"> &#160;in any order. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Each member must have a descriptive name. This is the </p>
 <p class="FM__Body">&#160;&#160;key used to uniquely identify the member within the </p>
 <p class="FM__Body">&#160;&#160;compound datatype. A member name in an HDF5 datatype does </p>
 <p class="FM__Body">&#160;&#160;not necessarily have to be the same as the name of the </p>
 <p class="FM__Body">&#160;&#160;corresponding member in the C struct in memory although </p>
 <p class="FM__Body">&#160;&#160;this is often the case. You also do not need to define all the </p>
 <p class="FM__Body">&#160;&#160;members of the C struct in the HDF5 compound datatype </p>
 <p class="FM__Body"> &#160;(or vice versa). &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Usually a C struct will be defined to hold a data </p>
 <p class="FM__Body">&#160;&#160;point in memory, and the offsets of the members in memory </p>
 <p class="FM__Body">&#160;&#160;will be the offsets of the struct members from the beginning </p>
 <p class="FM__Body">&#160;&#160;of an instance of the struct. The library defines the macro </p>
 <p class="FM__Body"> &#160;that computes the offset of member &lt;code&gt;m&lt;/code&gt; within a </p>
 <p class="FM__Body"> &#160;struct variable &lt;code&gt;s&lt;/code&gt;.: &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;dir&gt;&lt;code&gt;HOFFSET(s,m)&lt;/code&gt;&lt;/dir&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The code below &lt;!-- formerly Figure 11 --&gt;shows an example in </p>
 <p class="FM__Body">&#160;&#160;which a compound datatype is created to describe complex numbers </p>
 <p class="FM__Body"> &#160;whose type is defined by the &lt;code&gt;complex_t&lt;/code&gt; struct.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;Typedef struct {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;double re; &#160;&#160;/*real part */</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;double im; &#160;&#160;/*imaginary part */</p>
 <p class="FM__Body"> &#160;} complex_t;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;complex_t tmp; &#160;/*used only to compute offsets */</p>
 <p class="FM__Body"> &#160;hid_t complex_id = H5Tcreate (H5T_COMPOUND, sizeof tmp);</p>
 <p class="FM__Body"> &#160;H5Tinsert (complex_id, &quot;real&quot;, HOFFSET(tmp,re),</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_DOUBLE);</p>
 <p class="FM__Body"> &#160;H5Tinsert (complex_id, &quot;imaginary&quot;, HOFFSET(tmp,im),</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_DOUBLE);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 9. A compound datatype for complex numbers&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 11--&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;For more information about Datatypes, see Chapter ???.</p>
 <p class="FM__Body"> &#160;&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;ExtendChunked&quot;&gt;</p>
 <p class="FM__Body">&lt;h4&gt;2.2.8. Creating and Writing Extendable Datasets&lt;/h4&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;An extendable dataset is one whose dimensions can grow. </p>
 <p class="FM__Body">&#160;&#160;One can define an HDF5 dataset to have certain initial </p>
 <p class="FM__Body">&#160;&#160;dimensions with the capacity to later increase the size </p>
 <p class="FM__Body">&#160;&#160;of any of the initial dimensions. For example, the figure below </p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Figure 12 --&gt;shows a  3 x 3 dataset (a) </p>
 <p class="FM__Body">&#160;&#160;which is later extended to be a 10 x 3 dataset by adding 7 </p>
 <p class="FM__Body">&#160;&#160;rows (b), and further extended to be a 10 x 5 dataset by </p>
 <p class="FM__Body"> &#160;adding two columns (c).&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;table width=&quot;80%&quot; cellspacing=&quot;0&quot; class=&quot;fullImgTable&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;&lt;br /&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;table align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;45%&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table align=&quot;center&quot; border=&quot;1&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a)&amp;nbsp;Initially,&amp;nbsp;3&amp;nbsp;x&amp;nbsp;3</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table align=&quot;center&quot; border=&quot;1&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;b)&amp;nbsp;Extend&amp;nbsp;to&amp;nbsp;10&amp;nbsp;x&amp;nbsp;3</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;55%&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;55%&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table align=&quot;center&quot; border=&quot;1&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;1&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;code&gt;3&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c)&amp;nbsp;Extend&amp;nbsp;to&amp;nbsp;10&amp;nbsp;x&amp;nbsp;5</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/table&gt;&amp;nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 3. Extending a dataset&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 12--&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;HDF5 requires the use of chunking when defining </p>
 <p class="FM__Body">&#160;&#160;extendable datasets. Chunking makes it possible to extend </p>
 <p class="FM__Body">&#160;&#160;datasets efficiently without having to reorganize contiguous </p>
 <p class="FM__Body"> &#160;storage excessively. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To summarize, an extendable dataset requires two conditions:&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;ol&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;Define the dataspace of the dataset as unlimited in </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;all dimensions that might eventually be extended&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;Enable chunking in the dataset creation properties&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;/ol&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;For example, suppose we wish to create a dataset similar </p>
 <p class="FM__Body"> &#160;to the one shown in the figure above&lt;!-- formerly Figure 12--&gt;. </p>
 <p class="FM__Body">&#160;&#160;We want to start with a 3 x 3 dataset, and then later we will </p>
 <p class="FM__Body"> &#160;extend it. To do this, go through the steps below.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;First, declare the dataspace to have unlimited dimensions. See </p>
 <p class="FM__Body">&#160;&#160;the code shown below. Note the use of the predefined constant </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5S_UNLIMITED&lt;/code&gt; to specify that a dimension is </p>
 <p class="FM__Body"> &#160;unlimited.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;Hsize_t dims[2] = {3, 3}; /* dataset dimensions</p>
 <p class="FM__Body">&#160;&#160;at the creation time */ </p>
 <p class="FM__Body"> &#160;hsize_t maxdims[2] = {H5S_UNLIMITED, H5S_UNLIMITED};</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body">&#160;&#160;&#160;* Create the data space with unlimited dimensions. </p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;dataspace = H5Screate_simple(RANK, dims, maxdims);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 10. Declaring a dataspace with unlimited dimensions&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 13--&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Next, set the dataset creation property list to </p>
 <p class="FM__Body"> &#160;enable chunking. See the code below.&lt;/p&gt; </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">&#160;&#160;hid_t cparms; </p>
 <p class="FM__Body"> &#160;hsize_t chunk_dims[2] ={2, 5};</p>
 <p class="FM__Body">&#160;&#160;/* </p>
 <p class="FM__Body"> &#160;&#160;* Modify dataset creation properties to enable chunking.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;cparms = H5Pcreate (H5P_DATASET_CREATE);</p>
 <p class="FM__Body"> &#160;status = H5Pset_chunk(cparms, RANK, chunk_dims);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 11. Enable chunking</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 14--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The next step is to create the dataset. See the code below.&lt;/p&gt; </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Create a new dataset within the file using cparms</p>
 <p class="FM__Body"> &#160;&#160;* creation properties.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;dataset = H5Dcreate(file, DATASETNAME, H5T_NATIVE_INT, dataspace,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, cparms, H5P_DEFAULT);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 12. Create a dataset </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 15--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Finally, when the time comes to extend the size of </p>
 <p class="FM__Body"> &#160;the dataset, invoke &lt;code&gt;H5Dextend&lt;/code&gt;. Extending </p>
 <p class="FM__Body">&#160;&#160;the dataset along the first dimension by seven rows </p>
 <p class="FM__Body">&#160;&#160;leaves the dataset with new dimensions of &amp;lt;10,3&amp;gt;. See the </p>
 <p class="FM__Body"> &#160;code below.&lt;/p&gt; </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Extend the dataset. Dataset becomes 10 x 3.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;dims[0] = dims[0] + 7;</p>
 <p class="FM__Body">&#160;&#160;size[0] = dims[0]; </p>
 <p class="FM__Body">&#160;&#160;size[1] = dims[1]; </p>
 <p class="FM__Body"> &#160;status = H5Dextend (dataset, size);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 13. Extend the dataset by seven rows&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 16--&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;Groups&quot;&gt;</p>
 <p class="FM__Body">&lt;h4&gt;2.2.9. Creating and Working with Groups&lt;/h4&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Groups provide a mechanism for organizing meaningful </p>
 <p class="FM__Body">&#160;&#160;and extendable sets of datasets within an HDF5 file. The H5G </p>
 <p class="FM__Body"> &#160;API provides several routines for working with groups. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;Creating a Group&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;With no datatype, dataspace, or storage layout to define, </p>
 <p class="FM__Body">&#160;&#160;creating a group is considerably simpler than creating a </p>
 <p class="FM__Body">&#160;&#160;dataset. For example, the following code creates a group </p>
 <p class="FM__Body"> &#160;called &lt;code&gt;Data&lt;/code&gt; in the root group of </p>
 <p class="FM__Body"> &#160;&lt;code&gt;file&lt;/code&gt;.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* &#160;Create a group in the file.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;grp = H5Gcreate(file, &quot;/Data&quot;, H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 14. Create a group&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 17--&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A group may be created within another group by providing </p>
 <p class="FM__Body"> &#160;the absolute name of the group to the &lt;code&gt;H5Gcreate&lt;/code&gt; function </p>
 <p class="FM__Body">&#160;&#160;or by specifying its location. For example, to create the </p>
 <p class="FM__Body"> &#160;group &lt;code&gt;Data_new&lt;/code&gt; in the group &lt;code&gt;Data&lt;/code&gt;, you might use </p>
 <p class="FM__Body"> &#160;the sequence of calls shown below.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;/*</p>
 <p class="FM__Body"> &#160;&#160;&#160;* Create group &quot;Data_new&quot; in the group &quot;Data&quot; by specifying</p>
 <p class="FM__Body"> &#160;&#160;&#160;* absolute name of the group.</p>
 <p class="FM__Body"> &#160;&#160;&#160;*/</p>
 <p class="FM__Body"> &#160;&#160;grp_new = H5Gcreate(file, &quot;/Data/Data_new&quot;, H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;or </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;/*</p>
 <p class="FM__Body"> &#160;&#160;&#160;* Create group &quot;Data_new&quot; in the &quot;Data&quot; group.</p>
 <p class="FM__Body"> &#160;&#160;&#160;*/</p>
 <p class="FM__Body"> &#160;&#160;grp_new = H5Gcreate(grp, &quot;Data_new&quot;, H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 15. Create a group within a group&lt;/b&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 18--&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This first parameter of &lt;code&gt;H5Gcreate&lt;/code&gt; is a location </p>
 <p class="FM__Body"> &#160;identifier. &lt;code&gt;file&lt;/code&gt; in the first example specifies only </p>
 <p class="FM__Body"> &#160;the file. &lt;code&gt;grp&lt;/code&gt; in the second example specifies </p>
 <p class="FM__Body">&#160;&#160;a particular group in a particular file. Note that in </p>
 <p class="FM__Body"> &#160;this instance, the group identifier &lt;code&gt;grp&lt;/code&gt; is </p>
 <p class="FM__Body"> &#160;used as the first parameter in the &lt;code&gt;H5Gcreate&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;call so that the relative name of &lt;code&gt;Data_new&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;can be used.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The third parameter of &lt;code&gt;H5Gcreate&lt;/code&gt; optionally specifies </p>
 <p class="FM__Body">&#160;&#160;how much file space to reserve to store the names of objects that </p>
 <p class="FM__Body">&#160;&#160;will be created in this group. If a non-positive value is supplied, </p>
 <p class="FM__Body"> &#160;the library provides a default size.&lt;/p&gt; </p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Use &lt;code&gt;H5Gclose&lt;/code&gt; to close the group and release </p>
 <p class="FM__Body"> &#160;the group identifier. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;h4&gt;Creating a Dataset within a Group&lt;/h4&gt; </p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;As with groups, a dataset can be created in a particular group </p>
 <p class="FM__Body">&#160;&#160;by specifying either its absolute name in the file or its relative </p>
 <p class="FM__Body">&#160;&#160;name with respect to that group. The next code excerpt </p>
 <p class="FM__Body"> &#160;uses the absolute name.&lt;/p&gt; </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body">&#160;&#160;&#160;* Create the dataset &quot;Compressed_Data&quot; in the group Data using the </p>
 <p class="FM__Body">&#160;&#160;&#160;* absolute name. The dataset creation property list is modified </p>
 <p class="FM__Body"> &#160;&#160;* to use GZIP compression with the compression effort set to 6.</p>
 <p class="FM__Body">&#160;&#160;&#160;* Note that compression can be used only when the dataset is </p>
 <p class="FM__Body"> &#160;&#160;* chunked.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;dims[0] = 1000;</p>
 <p class="FM__Body"> &#160;dims[1] = 20;</p>
 <p class="FM__Body"> &#160;cdims[0] = 20;</p>
 <p class="FM__Body"> &#160;cdims[1] = 20;</p>
 <p class="FM__Body"> &#160;dataspace = H5Screate_simple(RANK, dims, NULL);</p>
 <p class="FM__Body"> &#160;plist &#160;&#160;&#160;&#160;= H5Pcreate(H5P_DATASET_CREATE);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5Pset_chunk(plist, 2, cdims);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5Pset_deflate(plist, 6);</p>
 <p class="FM__Body">&#160;&#160;dataset = H5Dcreate(file, &quot;/Data/Compressed_Data&quot;, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_INT, dataspace, H5P_DEFAULT, plist, H5P_DEFAULT);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 16. Create a dataset within </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;a group using an absolute name &lt;/b&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 19--&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Alternatively, you can first obtain an identifier for </p>
 <p class="FM__Body">&#160;&#160;the group in which the dataset is to be created, and then </p>
 <p class="FM__Body"> &#160;create the dataset with a relative name.&lt;/p&gt; </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">&#160;&#160;/* </p>
 <p class="FM__Body"> &#160;&#160;* Open the group.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;grp = H5Gopen(file, &quot;Data&quot;, H5P_DEFAULT);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Create the dataset &quot;Compressed_Data&quot; in the &quot;Data&quot; group</p>
 <p class="FM__Body">&#160;&#160;&#160;* by providing a group identifier and a relative dataset </p>
 <p class="FM__Body"> &#160;&#160;* name as parameters to the H5Dcreate function.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;dataset = H5Dcreate(grp, &quot;Compressed_Data&quot;, H5T_NATIVE_INT,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dataspace, H5P_DEFAULT, plist, H5P_DEFAULT);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 17. Create a dataset within a group using a relative name&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 20--&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;h4&gt;Accessing an Object in a Group&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Any object in a group </p>
 <p class="FM__Body">&#160;&#160;can be accessed by its absolute or relative name. The </p>
 <p class="FM__Body">&#160;&#160;first code snippet below illustrates the use of the absolute </p>
 <p class="FM__Body"> &#160;name to access the dataset &lt;code&gt;Compressed_Data&lt;/code&gt; in </p>
 <p class="FM__Body"> &#160;the group &lt;code&gt;Data&lt;/code&gt; created in the examples above. </p>
 <p class="FM__Body">&#160;&#160;The second code snippet illustrates the use of the </p>
 <p class="FM__Body"> &#160;relative name.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body">&#160;&#160;&#160;* Open the dataset &quot;Compressed_Data&quot; in the &quot;Data&quot; group. </p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;dataset = H5Dopen(file, &quot;/Data/Compressed_Data&quot;, H5P_DEFAULT);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 18. Accessing a group using its absolute name&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 21--&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Open the group &quot;data&quot; in the file.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;grp &#160;= H5Gopen(file, &quot;Data&quot;, H5P_DEFAULT);</p>
 <p class="FM__Body">&#160;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Access the &quot;Compressed_Data&quot; dataset in the group.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;dataset = H5Dopen(grp, &quot;Compressed_Data&quot;, H5P_DEFAULT);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 19. Accessing a group using its relative name&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 22--&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;Attrs&quot;&gt;</p>
 <p class="FM__Body">&lt;h4&gt;2.2.10. Working with Attributes&lt;/h4&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;An attribute is a small dataset that is attached to </p>
 <p class="FM__Body">&#160;&#160;a normal dataset or group. Attributes share many of the </p>
 <p class="FM__Body">&#160;&#160;characteristics of datasets, so the programming model for </p>
 <p class="FM__Body">&#160;&#160;working with attributes is similar in many ways to the </p>
 <p class="FM__Body">&#160;&#160;model for working with datasets. The primary differences </p>
 <p class="FM__Body">&#160;&#160;are that an attribute must be attached to a dataset or a </p>
 <p class="FM__Body">&#160;&#160;group and sub-setting operations cannot be performed on </p>
 <p class="FM__Body"> &#160;attributes. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To create an attribute belonging to a particular </p>
 <p class="FM__Body">&#160;&#160;dataset or group, first create a dataspace for the attribute </p>
 <p class="FM__Body"> &#160;with the call to &lt;code&gt;H5Screate&lt;/code&gt;, and then create the </p>
 <p class="FM__Body"> &#160;attribute using &lt;code&gt;H5Acreate&lt;/code&gt;. For example, the </p>
 <p class="FM__Body">&#160;&#160;code shown below creates an attribute called </p>
 <p class="FM__Body"> &#160;&lt;code&gt;Integer_attribute&lt;/code&gt; that is a member of a dataset </p>
 <p class="FM__Body"> &#160;whose identifier is &lt;code&gt;dataset&lt;/code&gt;. The attribute identifier is </p>
 <p class="FM__Body"> &#160;&lt;code&gt;attr2&lt;/code&gt;. &lt;code&gt;H5Awrite&lt;/code&gt; then sets the value of </p>
 <p class="FM__Body">&#160;&#160;the attribute of that of the integer variable point. </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Aclose&lt;/code&gt; then releases the attribute </p>
 <p class="FM__Body"> &#160;identifier.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">&#160;&#160;Int point = 1; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Value of the scalar attribute */ </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Create scalar attribute.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;aid2 &#160;= H5Screate(H5S_SCALAR);</p>
 <p class="FM__Body"> &#160;attr2 = H5Acreate(dataset, &quot;Integer attribute&quot;, H5T_NATIVE_INT, aid2,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, H5P_DEFAULT);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Write scalar attribute.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body">&#160;&#160;&#160;ret = H5Awrite(attr2, H5T_NATIVE_INT, &amp;amp;point); </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Close attribute dataspace.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body">&#160;&#160;ret = H5Sclose(aid2); </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Close attribute.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;ret = H5Aclose(attr2); &lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 20. Create an attribute&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 23--&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To read a scalar attribute whose name and datatype </p>
 <p class="FM__Body">&#160;&#160;are known, first open the attribute using </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Aopen_by_name&lt;/code&gt;, and then use &lt;code&gt;H5Aread&lt;/code&gt; </p>
 <p class="FM__Body">&#160;&#160;to get its value. For example, the code shown below reads a scalar </p>
 <p class="FM__Body"> &#160;attribute called &lt;code&gt;Integer_attribute&lt;/code&gt; whose </p>
 <p class="FM__Body">&#160;&#160;datatype is a native integer and whose parent dataset </p>
 <p class="FM__Body"> &#160;has the identifier &lt;code&gt;dataset&lt;/code&gt;.&lt;/p&gt; </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body">&#160;&#160;&#160;* Attach to the scalar attribute using attribute name, then read and </p>
 <p class="FM__Body"> &#160;&#160;* display its value.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;attr = H5Aopen_by_name(file_id, dataset_name, &quot;Integer attribute&quot;,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, H5P_DEFAULT);</p>
 <p class="FM__Body"> &#160;ret &#160;= H5Aread(attr, H5T_NATIVE_INT, &amp;amp;point_out);</p>
 <p class="FM__Body">  printf(&quot;The value of the attribute \&quot;Integer attribute\&quot; is %d \n&quot;, point_out); </p>
 <p class="FM__Body"> &#160;ret = &#160;H5Aclose(attr);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 21. Read a known attribute&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 24--&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To read an attribute whose characteristics are </p>
 <p class="FM__Body">&#160;&#160;not known, go through these steps. First, query the file to </p>
 <p class="FM__Body">&#160;&#160;obtain information about the attribute such as its name, </p>
 <p class="FM__Body">&#160;&#160;datatype, rank, and dimensions, and then read the attribute. The </p>
 <p class="FM__Body">&#160;&#160;following code opens an attribute by its index value using </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Aopen_by_idx&lt;/code&gt;, and then it reads in information about </p>
 <p class="FM__Body"> &#160;the datatype with &lt;code&gt;H5Aread&lt;/code&gt;.&lt;/p&gt; </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Attach to the string attribute using its index, then read and display the value.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;attr = &#160;H5Aopen_by_idx(file_id, dataset_name, index_type, iter_order, 2,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, H5P_DEFAULT);</p>
 <p class="FM__Body"> &#160;atype = H5Tcopy(H5T_C_S1);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5Tset_size(atype, 4);</p>
 <p class="FM__Body"> &#160;ret &#160;&#160;= H5Aread(attr, atype, string_out);</p>
 <p class="FM__Body"> &#160;printf(&quot;The value of the attribute with the index 2 is %s \n&quot;, string_out);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 22. Read an unknown attribute</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 25--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In practice, if the characteristics of attributes </p>
 <p class="FM__Body">&#160;&#160;are not known, the code involved in accessing and processing </p>
 <p class="FM__Body">&#160;&#160;the attribute can be quite complex. For this reason, HDF5 </p>
 <p class="FM__Body"> &#160;includes a function called &lt;code&gt;H5Aiterate&lt;/code&gt;. This function </p>
 <p class="FM__Body">&#160;&#160;applies a user-supplied function to each of a set of attributes. </p>
 <p class="FM__Body">&#160;&#160;The user-supplied function can contain the code that </p>
 <p class="FM__Body"> &#160;interprets, accesses, and processes each attribute.&lt;/p&gt; </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;IOPipeline&quot;&gt;</p>
 <p class="FM__Body">&lt;h3&gt;2.3. The Data Transfer Pipeline&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [</p>
 <p class="FM__Body"> &#160;This section needs to be reviewed in detail by QAK and others.</p>
 <p class="FM__Body"> &#160;] ] ]&lt;</p>
 <p class="FM__Body"> &#160;br&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;[ [ [</p>
 <p class="FM__Body">&#160;&#160;There probably should be a whole chapter on data transfer, </p>
 <p class="FM__Body"> &#160;selection, transformation, etc.}&lt;/em&gt;</p>
 <p class="FM__Body"> &#160;] ] ]&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 Library implements data transfers between </p>
 <p class="FM__Body">&#160;&#160;different storage locations. At the lowest levels, the </p>
 <p class="FM__Body">&#160;&#160;HDF5 Library reads and writes blocks of bytes to and from </p>
 <p class="FM__Body">&#160;&#160;storage using calls to the virtual file layer (VFL) drivers. </p>
 <p class="FM__Body">&#160;&#160;In addition to this, the HDF5 Library manages caches of metadata </p>
 <p class="FM__Body">&#160;&#160;and a data I/O pipeline. The data I/O pipeline applies compression </p>
 <p class="FM__Body"> &#160;to data blocks, transforms data elements, and implements selections. &#160;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A substantial portion of the HDF5 Library&amp;rsquo;s work is in </p>
 <p class="FM__Body">&#160;&#160;transferring data from one environment or media to another. This </p>
 <p class="FM__Body">&#160;&#160;most often involves a transfer between system memory and a storage </p>
 <p class="FM__Body">&#160;&#160;medium. Data transfers are affected by compression, encryption, </p>
 <p class="FM__Body">&#160;&#160;machine-dependent differences in numerical representation, and other </p>
 <p class="FM__Body">&#160;&#160;features. So, the bit-by-bit arrangement of a given dataset is </p>
 <p class="FM__Body"> &#160;often substantially different in the two environments.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Consider the representation on disk of a compressed and </p>
 <p class="FM__Body">&#160;&#160;encrypted little-endian array as compared to the same array </p>
 <p class="FM__Body">&#160;&#160;after it has been read from disk, decrypted, decompressed, and loaded </p>
 <p class="FM__Body">&#160;&#160;into memory on a big-endian system. HDF5 performs all of the </p>
 <p class="FM__Body">&#160;&#160;operations necessary to make that transition during the I/O </p>
 <p class="FM__Body">&#160;&#160;process with many of the operations being handled by the VFL </p>
 <p class="FM__Body"> &#160;and the data transfer pipeline.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure below &lt;!-- formerly Figure 26 --&gt;provides a simplified </p>
 <p class="FM__Body">&#160;&#160;view of a sample data transfer with four stages. Note that the </p>
 <p class="FM__Body">&#160;&#160;modules are used only when needed. For example, if the data is </p>
 <p class="FM__Body"> &#160;not compressed, the compression stage is omitted.&lt;/p&gt;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Pmodel_fig26.JPG&quot; height=&quot;75%&quot; width=&quot;95%&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 4. A data transfer from storage to memory&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 26--&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;For a given I/O request, different combinations of </p>
 <p class="FM__Body">&#160;&#160;actions may be performed by the pipeline. The library </p>
 <p class="FM__Body">&#160;&#160;automatically sets up the pipeline and passes data through </p>
 <p class="FM__Body"> &#160;the processing steps. For example, for a &lt;em&gt;read&lt;/em&gt; request </p>
 <p class="FM__Body">&#160;&#160;(from disk to memory), the library must determine which </p>
 <p class="FM__Body">&#160;&#160;logical blocks contain the requested data elements and fetch </p>
 <p class="FM__Body">&#160;&#160;each block into the library&amp;rsquo;s cache. If the data needs to be </p>
 <p class="FM__Body">&#160;&#160;decompressed, then the compression algorithm is applied to </p>
 <p class="FM__Body">&#160;&#160;the block after it is read from disk. If the data is a selection, </p>
 <p class="FM__Body">&#160;&#160;the selected elements are extracted from the data block after it </p>
 <p class="FM__Body">&#160;&#160;is decompressed. If the data needs to be transformed (for example, </p>
 <p class="FM__Body">&#160;&#160;byte swapped), then the data elements are transformed after </p>
 <p class="FM__Body"> &#160;decompression and selection.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;While an application must sometimes set up some elements </p>
 <p class="FM__Body">&#160;&#160;of the pipeline, use of the pipeline is normally transparent to </p>
 <p class="FM__Body">&#160;&#160;the user program. The library determines what must be done </p>
 <p class="FM__Body">&#160;&#160;based on the metadata for the file, the object, and the </p>
 <p class="FM__Body">&#160;&#160;specific request. An example of when an application might be required </p>
 <p class="FM__Body">&#160;&#160;to set up some elements in the pipeline is if the application used </p>
 <p class="FM__Body"> &#160;a custom error-checking algorithm. &lt;/p&gt;</p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;</p>
 <p class="FM__Body"> &#160;For more details of the pipeline, see [citeit].&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In some cases, it is necessary to pass parameters to </p>
 <p class="FM__Body">&#160;&#160;and from modules in the pipeline or among other parts </p>
 <p class="FM__Body">&#160;&#160;of the library that are not directly called through the </p>
 <p class="FM__Body">&#160;&#160;programming API. This is accomplished through the use of </p>
 <p class="FM__Body"> &#160;dataset transfer and data access property lists. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The VFL provides an interface whereby user applications </p>
 <p class="FM__Body">&#160;&#160;can add custom modules to the data transfer pipeline. For example, </p>
 <p class="FM__Body">&#160;&#160;a custom compression algorithm can be used with the HDF5 Library </p>
 <p class="FM__Body">&#160;&#160;by linking an appropriate module into the pipeline through the </p>
 <p class="FM__Body">&#160;&#160;VFL. This requires creating an appropriate wrapper for the </p>
 <p class="FM__Body">&#160;&#160;compression module </p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [</p>
 <p class="FM__Body">&#160;&#160;[cite filter doc and ref manual] </p>
 <p class="FM__Body"> &#160;] ] ]&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body"> &#160;and registering it with the library with &lt;code&gt;H5Zregister&lt;/code&gt;.</p>
 <p class="FM__Body">&#160;&#160;The algorithm can then be applied to a dataset with an </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Pset_filter&lt;/code&gt; call which will add the algorithm to the </p>
 <p class="FM__Body"> &#160;selected dataset&amp;rsquo;s transfer property list.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;div align=&quot;right&quot;&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=&quot;-1&quot;&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;/body&gt;</p>
 <p class="FM__Body">&lt;/html&gt;</p>
 <p class="FM__Body">&nbsp;</p>
</div>
				
			</div>
			<div class="content_top_link">
				<span class="desktop"><a>&#160;</a> </span>
			</div>
		</div>
	</div>
</div>
<div class="buttonbar">
	<div class="buttonbarholder topic_page_holder">
		<div class="bar_toc topic_page" id="xmlEditorButtonBarTOC" title="Table of Contents">
			<a href="../../table_of_contents.htm">&#160;</a> 
		</div>
		<div class="bar_index topic_page" id="xmlEditorButtonBarIDX" title="Index">
			<a href="../../index1.htm">&#160;</a> 
		</div>
		<div class="bar_glossary topic_page" id="xmlEditorButtonBarGLO" 
			 title="Glossary">
			<a href="../../glossary.htm">&#160;</a> 
		</div>
		<div class="bar_search topic_page" title="Search">
			<a href="../../searchresults.htm">&#160;</a> 
		</div>
	</div>
</div>
<div id="localisation">
	<p id="localisation_toc"><span>Table of Contents</span></p>
	<p id="localisation_idx"><span>Index</span></p>
	<p id="localisation_glo"><span>Glossary</span></p>
	<p id="localisation_fts"><span>-Search-</span></p>
	<p id="localisation_back"><span>Back</span></p>
</div>
<script type="text/javascript" src="../../template/Theme1_Standard/jquery.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/jqueryui-custom.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/overthrow.min.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/overthrow.sidescroller.min.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/layout.js"></script>
<script type="text/javascript">//<![CDATA[
$(function(){
	addRhLoadCompleteEvent(setTopic);
});
//]]></script>
</body>
</html>
