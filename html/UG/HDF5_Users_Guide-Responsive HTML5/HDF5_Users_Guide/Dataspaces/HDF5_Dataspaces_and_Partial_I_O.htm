<!DOCTYPE HTML>
<html>
<head>

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>HDF5 Dataspaces and Partial I/O</title>

 <meta content="How to fly your personal spaceship" name="search-keywords" />
 <meta name="generator" content="Adobe FrameMaker 12" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\1 MEE\Working\hdf5_trunk\html\UG\FmSource\Dataspaces.fm" />
 <link rel="stylesheet" href="Dataspaces.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "7";
</script>
 <meta name="brsprev" value="HDF5_Users_Guide/Datatypes/HDF5_Datatypes.htm">
 <meta name="brsnext" value="HDF5_Users_Guide/Attributes/HDF5_Attributes.htm">
</head>

<body>
<script type="text/javascript" src="../../ehlpdhtm.js"></script>

 <p class="FM__Heading_Level1">7. <a name="XREF_DataspacesChapter"></a>HDF5 Dataspaces and Partial I/O</p>
 <p class="FM__Body">The HDF5 <span class="FM_EI_EmphasisItalic">dataspace</span>&#160;is a required component of an HDF5 dataset or attribute definition. The dataspace defines the size and shape of the dataset or attribute raw data. In other words, a dataspace defines the number of dimensions and the size of each dimension of the multidimensional array in which the raw data is represented. The dataspace must be defined when the dataset or attribute is created.</p>
 <p class="FM__Body">The <span class="FM_EI_EmphasisItalic">dataspace</span> is also used during dataset I/O operations, defining the elements of the dataset that partic&#173;ipate in the I/O operation.</p>
 <p class="FM__Body">This chapter explains the <span class="FM_EI_EmphasisItalic">dataspace</span>&#160;object and its use in dataset and attribute creation and data transfer. It also describes selection operations on a dataspace used to implement sub-setting, sub-sampling, and scatter-gather access to datasets.</p>
 <p class="FM__Heading_Level2"><a name="TOC_7_1_Dataspace_H5S"></a>7.1. Dataspace (H5S) Functio<a name="XREF_DSpaceFunctSums"></a>n Summaries</p>
 <p class="FM__Body">This section provides a reference list of dataspace functions, the H5S APIs, with brief descriptions. The functions are presented in the following categories:</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Dataspace management functions</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Dataspace query functions</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Dataspace selection functions: hyperslabs</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Dataspace selection functions: points</p>
 <p class="FM__Body">The rest of the chapter will provide examples and explanations of how to use these functions.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-bottom:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionFunctionListing1" x-list-start="1">Function Listing 7-1. Dataspace management functions</caption>
  <tr style=" height : 36.00pt;">
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">C Function</p>
  <p class="FM__Heading_Cell">Fortran Subroutine</p>
</th>
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell"> Purpose</p>
</th>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Screate_2"></a>H5Screate</p>
  <p class="FM__BodyCellCode"><a name="IX_h5screate_f"></a>h5screate_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Creates a new dataspace of a specified type.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Scopy"></a>H5Scopy</p>
  <p class="FM__BodyCellCode"><a name="IX_h5scopy_f"></a>h5scopy_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Creates an exact copy of a dataspace.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sclose_8"></a>H5Sclose</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sclose_f"></a>h5sclose_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Releases and terminates access to a dataspace.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sdecode"></a>H5Sdecode</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sdecode_f"></a>h5sdecode_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Decode a binary object description of a dataspace and return a new object identifier. </p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sencode"></a>H5Sencode</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sencode_1"></a>h5sencode</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">&#160;Encode a dataspace object description into a binary buffer. </p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Screate_simple_13"></a>H5Screate_simple</p>
  <p class="FM__BodyCellCode"><a name="IX_h5screate_simple_f"></a>h5screate_simple_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Creates a new simple dataspace and opens it for access.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sis_simple"></a>H5Sis_simple</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sis_simple_f"></a>h5sis_simple_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Determines whether a dataspace is a simple dataspace.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sextent_copy"></a>H5Sextent_copy</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sextent_copy_f"></a>h5sextent_copy_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Copies the extent of a dataspace.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sextent_equal"></a>H5Sextent_equal</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sextent_equal_f"></a>h5sextent_equal_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Determines whether two dataspace extents are equal.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sset_extent_simple"></a>H5Sset_extent_simple</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sset_extent_simple_f"></a>h5sset_extent_simple_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets or resets the size of an existing dataspace.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sset_extent_none"></a>H5Sset_extent_none</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sset_extent_none_f"></a>h5sset_extent_none_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Removes the extent from a dataspace.</p>
</td>
</tr>
 </table>
</div>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-bottom:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionFunctionListing">Function Listing 7-2. Dataspace query functions</caption>
  <tr style=" height : 36.00pt;">
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">C Function</p>
  <p class="FM__Heading_Cell">Fortran Subroutine</p>
</th>
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell"> Purpose</p>
</th>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_simple_extent_dims_2"></a>H5Sget_simple_extent_dims</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sget_simple_extent_1"></a>h5sget_simple_extent_dims_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Retrieves dataspace dimension size and maxi&#173;mum size.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_simple_extent_2"></a>H5Sget_simple_extent_ndims</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sget_simple_extent_3"></a>h5sget_simple_extent_ndims_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Determines the dimensionality of a dataspace.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_simple_extent_4"></a>H5Sget_simple_extent_npoints</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sget_simple_extent_5"></a>h5sget_simple_extent_npoints_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Determines the number of elements in a dataspace.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_simple_extent_type"></a>H5Sget_simple_extent_type</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sget_simple_extent_6"></a>h5sget_simple_extent_type_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Determine the current class of a dataspace.</p>
</td>
</tr>
 </table>
</div>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-bottom:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionFunctionListing">Function Listing 7-3. Dataspace selection functions: hyperslabs</caption>
  <tr style=" height : 36.00pt;">
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">C Function</p>
  <p class="FM__Heading_Cell">Fortran Subroutine</p>
</th>
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell"> Purpose</p>
</th>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Soffset_simple"></a>H5Soffset_simple</p>
  <p class="FM__BodyCellCode"><a name="IX_h5soffset_simple_f"></a>h5soffset_simple_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets the offset of a simple dataspace.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_select_type"></a>H5Sget_select_type</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sget_select_type_f"></a>h5sget_select_type_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Determines the type of the dataspace selec&#173;tion.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_select_hyper"></a>H5Sget_select_hyper_nblocks</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sget_select_hyper_1"></a>h5sget_select_hyper_nblocks_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Get number of hyperslab blocks.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_select_hyper_2"></a>H5Sget_select_hyper_blocklist</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sget_select_hyper_3"></a>h5sget_select_hyper_blocklist_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Gets the list of hyperslab blocks currently selected.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_select_bounds"></a>H5Sget_select_bounds</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sget_select_bounds_f"></a>h5sget_select_bounds_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Gets the bounding box containing the current selection.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sselect_all"></a>H5Sselect_all</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sselect_all_f"></a>h5sselect_all_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Selects the entire dataspace.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sselect_none"></a>H5Sselect_none</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sselect_none_f"></a>h5sselect_none_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Resets the selection region to include no ele&#173;ments.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sselect_valid"></a>H5Sselect_valid</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sselect_valid_f"></a>h5sselect_valid_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Verifies that the selection is within the extent of the dataspace.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sselect_hyperslab_4"></a>H5Sselect_hyperslab</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sselect_hyperslab_f"></a>h5sselect_hyperslab_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Selects a hyperslab region to add to the cur&#173;rent selected region.</p>
</td>
</tr>
 </table>
</div>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-bottom:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionFunctionListing">Function Listing 7-4. Dataspace selection functions: points</caption>
  <tr style=" height : 36.00pt;">
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">C Function</p>
  <p class="FM__Heading_Cell">Fortran Subroutine</p>
</th>
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell"> Purpose</p>
</th>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_select_npoints"></a>H5Sget_select_npoints</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sget_select_npoints_f"></a>h5sget_select_npoints_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Determines the number of elements in a dataspace selection.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_select_elem"></a>H5Sget_select_elem_npoints</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sget_select_elem_1"></a>h5sget_select_elem_npoints_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Gets the number of element points in the cur&#173;rent selection.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_select_elem_2"></a>H5Sget_select_elem_pointlist</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sget_select_elem_3"></a>h5sget_select_elem_pointlist_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Gets the list of element points currently selected.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sselect_elements"></a>H5Sselect_elements</p>
  <p class="FM__BodyCellCode"><a name="IX_h5sselect_elements_f"></a>h5sselect_elements_f</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Selects array elements to be included in the selection for a dataspace.</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level2"><a name="TOC_7_2_Definition_of"></a>7.2. Definition of Dataspace Objec<a name="XREF_DefDataObjs"></a>ts and the Dataspace Programming Model</p>
 <p class="FM__Body">This section introduces the notion of the HDF5 dataspace object and a programming model for creating and working with dataspaces. </p>
 <p class="FM__Heading_Level3"><a name="TOC_7_2_1_Dataspace_Objects"></a>7.2.1. Dataspace Objects</p>
 <p class="FM__Body">An HDF5 dataspace is a required component of an HDF5 dataset or attribute. A dataspace defines the size and the shape of a dataset’s or an attribute’s raw data. Currently, HDF5 supports the following types of the dataspaces: </p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Scalar dataspaces </p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Simple dataspaces</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Null dataspaces</p>
 <p class="FM__Body"><a name="IX_H5S_SCALAR_1"></a><a name="IX_scalar_dataspace"></a>A <span class="FM_EI_EmphasisItalic">scalar dataspace</span>, <span class="FM_Code">H5S_SCALAR</span>, represents just one element, a scalar. Note that the datatype of this one element may be very complex; example would be a compound structure with members being of any allowed HDF5 datatype, including multidimensional arrays, strings, and nested compound structures. By convention, the rank of a scalar dataspace is always <span class="FM_Code">0</span> (zero); think of it geometrically as a single, dimen&#173;sionless point, though that point may be complex.</p>
 <p class="FM__Body"><a name="IX_dataspace_extent"></a><a name="IX_H5S_SIMPLE"></a><a name="IX_simple_dataspace"></a>A <span class="FM_EI_EmphasisItalic">simple dataspace</span>, <span class="FM_Code">H5S_SIMPLE</span>, is a multidimensional array of elements. The dimensionality of the dataspace (or the rank of the array) is fixed and is defined at creation time. The size of each dimension can grow during the life time of the dataspace from the <span class="FM_EI_EmphasisItalic">current size</span>&#160;up to the <span class="FM_EI_EmphasisItalic">maximum size</span>. Both the current size and the maximum size are specified at creation time. The sizes of dimensions at any particular time in the life of a dataspace are called the <span class="FM_EI_EmphasisItalic">current dimensions</span>, or the <span class="FM_EI_EmphasisItalic">dataspace extent</span>. They can be queried along with the maximum sizes.</p>
 <p class="FM__Body"><a name="IX_H5S_NULL"></a><a name="IX_null_dataspace"></a>A <span class="FM_EI_EmphasisItalic">null dataspace</span>, <span class="FM_Code">H5S_NULL</span>, contains no data elements. Note that no selections can be applied to a null dataset as there is nothing to select.</p>
 <p class="FM__Body">As shown in the UML diagram in the figure below, an HDF5 simple dataspace object has three attributes: the rank or number of dimensions; the current sizes, expressed as an array of length <span class="FM_Code">rank</span> with each ele&#173;ment of the array denoting the current size of the corresponding dimension; and the maximum sizes, expressed as an array of length <span class="FM_Code">rank</span>&#160;with each element of the array denoting the maximum size of the corresponding dimension. </p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:288.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure1" x-list-start="1" align="bottom">Figure 7-1. A simple dataspace</caption>
  <tr style=" height : 98.78pt;">
  <td style="width : 288.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="Dspace_fig1new.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:258px;" id="image0" src="Dspace_fig1new.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__CaptionNote">Note: A simple dataspace is defined by its rank, the current size of each dimension, and the maximum size of each dimension.</p>
 <p class="FM__Body"><a name="IX_H5S_UNLIMITED_2"></a>The size of a current dimension cannot be greater than the maximum size, which can be unlimited, speci&#173;fied as <span class="FM_Code">H5S_UNLIMITED</span>. Note that while the HDF5 file format and library impose no maximum size on an unlimited dimension, practically speaking its size will always be limited to the biggest integer available on the particular system being used. </p>
 <p class="FM__Body">Dataspace rank is restricted to 32, the standard limit in C on the rank of an array, in the current implemen&#173;tation of the HDF5 Library. The HDF5 file format, on the other hand, allows any rank up to the maximum integer value on the system, so the library restriction can be raised in the future if higher dimensionality is required.</p>
 <p class="FM__Body">Note that most of the time Fortran applications calling HDF5 will work with dataspaces of rank less than or equal to seven, since seven i the maximum number of dimensions in a Fortran array. But dataspace rank is not limited to seven for Fortran applications.</p>
 <p class="FM__Body">The current dimensions of a dataspace, also referred to as the dataspace extent, define the bounding box for dataset elements that can participate in I/O operations.</p>
 <p class="FM__Heading_Level3"><a name="TOC_7_2_2_Dataspace"></a>7.2.2. Dataspace Programmin<a name="XREF_DataspaceProgrammingModel"></a>g Model</p>
 <p class="FM__Body">The programming model for creating and working with HDF5 dataspaces can be summarized as follows:</p>
 <p class="FM__ListNumbered1_Level1">1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Create a dataspace</p>
 <p class="FM__ListNumbered_Level1">2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Use the dataspace to create a dataset in the file or to describe a data array in memory</p>
 <p class="FM__ListNumbered_Level1">3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Modify the dataspace to define dataset elements that will participate in I/O operations</p>
 <p class="FM__ListNumbered_Level1">4.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Use the modified dataspace while reading/writing dataset raw data or to create a region refer&#173;ence</p>
 <p class="FM__ListNumbered_Level1">5.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Close the dataspace when no longer needed</p>
 <p class="FM__Body">The rest of this section will address steps 1, 2, and 5 of the programming model; steps 3 and 4 will be dis&#173;cussed in later sections of this chapter.</p>
 <p class="FM__Heading_Level4">7.2.2.1. Creating a Dataspace</p>
 <p class="FM__Body"><a name="IX_h5screate_simple_f_1"></a><a name="IX_H5Screate_simple_14"></a><a name="IX_h5screate_f_1"></a><a name="IX_H5Screate_3"></a>A dataspace can be created by calling the <span class="FM_Code">H5Screate</span> function (<span class="FM_Code">h5screate_f</span> in Fortran). Since the defi&#173;nition of a simple dataspace requires the specification of dimensionality (or rank) and initial and maximum dimension sizes, the HDF5 Library provides a <span class="FM_EI_EmphasisItalic">convenience</span>&#160;API, <span class="FM_Code">H5Screate_simple</span> (<span class="FM_Code">h5screate_sim&#173;ple_f</span>) to create a simple dataspace in one step.</p>
 <p class="FM__Body">The following examples illustrate the usage of these APIs.</p>
 <p class="FM__Heading_Level4">7.2.2.2. Creating a Scalar Dataspace</p>
 <p class="FM__Body"><a name="IX_h5screate_f_2"></a><a name="IX_H5Screate_4"></a>A scalar dataspace is created with the <span class="FM_Code">H5Screate</span>&#160;or the <span class="FM_Code">h5screate_f</span> function.</p>
 <p class="FM__Body">In C:</p>
 <p class="FM__BodyCellCodeIndent">hid_t space_id;</p>
 <p class="FM__BodyCellCodeIndent">. . .</p>
 <p class="FM__BodyCellCodeIndent">space_id = H5Screate(H5S_SCALAR);</p>
 <p class="FM__Body">In Fortran:</p>
 <p class="FM__BodyCellCodeIndent">INTEGER(HID_T) :: space_id</p>
 <p class="FM__BodyCellCodeIndent">. . .</p>
 <p class="FM__BodyCellCodeIndent">CALL h5screate_f(H5S_SCALAR_F, space_id, error)</p>
 <p class="FM__Body">As mentioned above, the dataspace will contain only one element. Scalar dataspaces are used more often for describing attributes that have just one value. For example, the attribute <span class="FM_Code">temperature</span>&#160;with the value <span class="FM_Code">Celsius</span> is used to indicate that the dataset with this attribute stores temperature values using the Cel&#173;sius scale.</p>
 <p class="FM__Heading_Level4">7.2.2.3. Creating a Null Dataspace</p>
 <p class="FM__Body"><a name="IX_h5screate_f_3"></a><a name="IX_H5Screate_5"></a>A null dataspace is created with the <span class="FM_Code">H5Screate</span>&#160;or the <span class="FM_Code">h5screate_f</span> function.</p>
 <p class="FM__Body">In C:</p>
 <p class="FM__BodyCellCodeIndent">hid_t space_id;</p>
 <p class="FM__BodyCellCodeIndent">. . .</p>
 <p class="FM__BodyCellCodeIndent">space_id = H5Screate(H5S_NULL);</p>
 <p class="FM__Body">In Fortran: </p>
 <p class="FM__Body"><a name="IX_H5S_NULL_1"></a> &#160;&#160;&#160;&#160;(<span class="FM_Code">H5S_NULL</span> not yet implemented in Fortran.)</p>
 <p class="FM__BodyCellCodeIndent">INTEGER(HID_T) :: space_id</p>
 <p class="FM__BodyCellCodeIndent">. . .</p>
 <p class="FM__BodyCellCodeIndent">CALL h5screate_f(H5S_NULL_F, space_id, error)</p>
 <p class="FM__Body">As mentioned above, the dataspace will contain no elements.</p>
 <p class="FM__Heading_Level4">7.2.2.4. Creating a Simple Dataspace</p>
 <p class="FM__Body">Let’s assume that an application wants to store a two-dimensional array of data, A(20,100). During the life of the application, the first dimension of the array can grow up to 30; there is no restriction on the size of the second dimension. The following steps are used to declare a dataspace for the dataset in which the array data will be stored.</p>
 <p class="FM__Body">In C:</p>
 <p class="FM__BodyCellCodeIndent">hid_t space_id;</p>
 <p class="FM__BodyCellCodeIndent">int rank = 2;</p>
 <p class="FM__BodyCellCodeIndent">hsize_t current_dims[2] = {20, 100};</p>
 <p class="FM__BodyCellCodeIndent">hsize_t max_dims[2] = {30, H5S_UNLIMITED};</p>
 <p class="FM__BodyCellCodeIndent">. . .</p>
 <p class="FM__BodyCellCodeIndent">space_id = H5Screate(H5S_SIMPLE);</p>
 <p class="FM__BodyCellCodeIndent">H5Sset_extent_simple(space_id,rank,current_dims,max_dims);</p>
 <p class="FM__Body">In Fortran:</p>
 <p class="FM__BodyCellCodeIndent">INTEGER(HID_T) :: space_id</p>
 <p class="FM__BodyCellCodeIndent">INTEGER :: rank = 2</p>
 <p class="FM__BodyCellCodeIndent">INTEGER(HSIZE_T) :: current dims = /( 20, 100)/</p>
 <p class="FM__BodyCellCodeIndent">INTEGER(HSIZE_T) :: max_dims = /(30, H5S_UNLIMITED_F)/</p>
 <p class="FM__BodyCellCodeIndent">INTEGER error </p>
 <p class="FM__BodyCellCodeIndent">. . .</p>
 <p class="FM__BodyCellCodeIndent">CALL h5screate_f(H5S_SIMPLE_F, space_id, error)</p>
 <p class="FM__BodyCellCodeIndent">CALL h5sset_extent_simple_f(space_id, rank, current_dims, max_dims, error)</p>
 <p class="FM__Body"><a name="IX_H5Sset_extent_simple_1"></a><a name="IX_H5Screate_6"></a><a name="IX_H5Screate_simple_15"></a>Alternatively, the convenience APIs <span class="FM_Code">H5Screate_simple</span>/<span class="FM_Code">h5screate_simple_f</span>&#160;can replace the <span class="FM_Code">H5Screate</span>/<span class="FM_Code">h5screate_f</span>&#160;and <span class="FM_Code">H5Sset_extent_simple</span>/<span class="FM_Code">h5sset_extent_simple_f</span> calls.</p>
 <p class="FM__Body">In C:</p>
 <p class="FM__BodyCodeIndent">space_id = H5Screate_simple(rank, current_dims, max_dims);</p>
 <p class="FM__Body">In Fortran:</p>
 <p class="FM__BodyCodeIndent">CALL h5screate_simple_f(rank, current_dims, space_id, error, max_dims)</p>
 <p class="FM__Body">In this example, a dataspace with current dimensions of 20 by 100 is created. The first dimension can be extended only up to 30. The second dimension, however, is declared unlimited; it can be extended up to the largest available integer value on the system.</p>
 <p class="FM__Body">Note that when there is a difference between the current dimensions and the maximum dimensions of an array, then chunking storage must be used. In other words, if the number of dimensions may change over the life of the dataset, then chunking must be used. If the array dimensions are fixed (if the number of cur&#173;rent dimensions is equal to the maximum number of dimensions when the dataset is created), then con&#173;tiguous storage can be used. <a href="../Datasets/HDF5_Datasets.htm#XREF_DTransfer">For more information, see &quot;Data Transfer.&quot;</a></p>
 <p class="FM__Body"><a name="IX_h5screate_simple_f_2"></a><a name="IX_H5Sset_extent_simple_2"></a><a name="IX_H5Screate_simple_16"></a>Maximum dimensions can be the same as current dimensions. In such a case, the sizes of dimensions can&#173;not be changed during the life of the dataspace object. In C, <span class="FM_Code">NULL</span>&#160;can be used to indicate to the <span class="FM_Code">H5Scre&#173;ate_simple</span>&#160;and <span class="FM_Code">H5Sset_extent_simple</span>&#160;functions that the maximum sizes of all dimensions are the same as the current sizes. In Fortran, the maximum size parameter is optional for <span class="FM_Code">h5screate_simple_f</span>&#160;and can be omitted when the sizes are the same.</p>
 <p class="FM__Body">In C:</p>
 <p class="FM__BodyCodeIndent">space_id = H5Screate_simple(rank, current_dims, NULL);</p>
 <p class="FM__Body">In Fortran:</p>
 <p class="FM__BodyCodeIndent">CALL h5screate_f(rank, current_dims, space_id, error)</p>
 <p class="FM__Body">The created dataspace will have current and maximum dimensions of 20 and 100 correspondingly, and the sizes of those dimensions cannot be changed.</p>
 <p class="FM__Heading_Level4">7.2.2.5. C versus Fortran Dataspaces</p>
 <p class="FM__Body">Dataspace dimensions are numbered from 1 to <span class="FM_Code">rank</span>. HDF5 uses C storage conventions, assuming that the last listed dimension is the fastest-changing dimension and the first-listed dimension is the slowest chang&#173;ing. The HDF5 file format storage layout specification adheres to the C convention and the HDF5 Library adheres to the same convention when storing dataspace dimensions in the file. This affects how C pro&#173;grams and tools interpret data written from Fortran programs and vice versa. The example below illus&#173;trates the issue.</p>
 <p class="FM__Body">When a Fortran application describes a dataspace to store an array as A(20,100), it specifies the value of the first dimension to be 20 and the second to be 100. Since Fortran stores data by columns, the first-listed dimension with the value 20 is the fastest-changing dimension and the last-listed dimension with the value 100 is the slowest-changing. In order to adhere to the HDF5 storage convention, the HDF5 Fortran wrapper transposes dimensions, so the first dimension becomes the last. The dataspace dimensions stored in the file will be 100,20 instead of 20,100 in order to correctly describe the Fortran data that is stored in 100 columns, each containing 20 elements.</p>
 <p class="FM__Body">When a Fortran application reads the data back, the HDF5 Fortran wrapper transposes the dimensions once more, returning the first dimension to be 20 and the second to be 100, describing correctly the sizes of the array that should be used to read data in the Fortran array A(20,100).</p>
 <p class="FM__Body"><a name="IX_h5ls"></a><a name="IX_h5dump_3"></a>When a C application reads data back, the dimensions will come out as 100 and 20, correctly describing the size of the array to read data into, since the data was written as 100 records of 20 elements each. Therefore C tools such as <span class="FM_Code">h5dump</span>&#160;and <span class="FM_Code">h5ls</span>&#160;always display transposed dimensions and values for the data written by a Fortran application.</p>
 <p class="FM__Body">Consider the following simple example of equivalent C 3 x 5 and Fortran 5 x 3 arrays. As illustrated in the figure below, a C application will store a 3 x 5 2-dimensional array as three 5-element rows. In order to store the same data in the same order, a Fortran application must view the array as a 5 x 3 array with three 5-element columns. The dataspace of this dataset, as written from Fortran, will therefore be described as 5 x 3 in the application but stored and described in the file according to the C convention as a 3 x 5 array. This ensures that C and Fortran applications will always read the data in the order in which it was written. The HDF5 Fortran interface handles this transposition automatically.</p>
 <p class="FM__Body">In C (from h5_write.c):</p>
 <p class="FM__BodyCellCodeIndent">#define NX &#160;&#160;&#160;&#160;3 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* dataset dimensions */</p>
 <p class="FM__BodyCellCodeIndent">#define NY &#160;&#160;&#160;&#160;5</p>
 <p class="FM__BodyCellCodeIndent">. . .</p>
 <p class="FM__BodyCellCodeIndent">int &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data[NX][NY]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* data to write */</p>
 <p class="FM__BodyCellCodeIndent">. . .</p>
 <p class="FM__BodyCellCodeIndent">/*</p>
 <p class="FM__BodyCellCodeIndent">* Data &#160;and output buffer initialization.</p>
 <p class="FM__BodyCellCodeIndent">*/</p>
 <p class="FM__BodyCellCodeIndent">for (j = 0; j &lt; NX; j++) {</p>
 <p class="FM__BodyCellCodeIndent"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>for (i = 0; i &lt; NY; i++)</p>
 <p class="FM__BodyCellCodeIndent"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>data[j][i] = i + 1 + j*NY;</p>
 <p class="FM__BodyCellCodeIndent">}</p>
 <p class="FM__BodyCellCodeIndent">/*</p>
 <p class="FM__BodyCellCodeIndent">* &#160;1 &#160;2 &#160;3 &#160;4 &#160;5</p>
 <p class="FM__BodyCellCodeIndent">* &#160;6 &#160;7 &#160;8 &#160;9 10</p>
 <p class="FM__BodyCellCodeIndent">* 11 12 13 14 15</p>
 <p class="FM__BodyCellCodeIndent">*/</p>
 <p class="FM__BodyCellCodeIndent">. . .</p>
 <p class="FM__BodyCellCodeIndent">dims[0] = NX;</p>
 <p class="FM__BodyCellCodeIndent">dims[1] = NY;</p>
 <p class="FM__BodyCellCodeIndent">dataspace = H5Screate_simple(RANK, dims, NULL);</p>
 <p class="FM__BodyIndent"><a href="#XREF_h5_write_c">For more information, see &quot;h5_write.c.&quot;</a></p>
 <p class="FM__Body">In Fortran (from <span class="FM_Code">h5_write.f90</span>):</p>
 <p class="FM__BodyCellCodeIndent">INTEGER, PARAMETER :: NX = 3</p>
 <p class="FM__BodyCellCodeIndent">INTEGER, PARAMETER :: NY = 5</p>
 <p class="FM__BodyCellCodeIndent">. . .</p>
 <p class="FM__BodyCellCodeIndent">INTEGER(HSIZE_T), DIMENSION(2) :: dims = (/3,5/) ! Dataset dimensions</p>
 <p class="FM__BodyCellCodeIndent">---</p>
 <p class="FM__BodyCellCodeIndent">INTEGER &#160;&#160;&#160;&#160;:: &#160;&#160;&#160;data(NX,NY)</p>
 <p class="FM__BodyCellCodeIndent">. . .</p>
 <p class="FM__BodyCellCodeIndent">!</p>
 <p class="FM__BodyCellCodeIndent">! Initialize data</p>
 <p class="FM__BodyCellCodeIndent">!</p>
 <p class="FM__BodyCellCodeIndent"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>do i = 1, NX</p>
 <p class="FM__BodyCellCodeIndent"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>do j = 1, NY</p>
 <p class="FM__BodyCellCodeIndent"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>data(i,j) = j + (i-1)*NY</p>
 <p class="FM__BodyCellCodeIndent"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> enddo</p>
 <p class="FM__BodyCellCodeIndent">enddo</p>
 <p class="FM__BodyCellCodeIndent">!</p>
 <p class="FM__BodyCellCodeIndent">! Data</p>
 <p class="FM__BodyCellCodeIndent">!</p>
 <p class="FM__BodyCellCodeIndent">! &#160;1 &#160;2 &#160;3 &#160;4 &#160;5</p>
 <p class="FM__BodyCellCodeIndent">! &#160;6 &#160;7 &#160;8 &#160;9 10</p>
 <p class="FM__BodyCellCodeIndent">! 11 12 13 14 15</p>
 <p class="FM__BodyCellCodeIndent">. . .</p>
 <p class="FM__BodyCellCodeIndent">CALL h5screate_simple_f(rank, dims, dspace_id, error)</p>
 <p class="FM__BodyIndent"><a href="#XREF_h5_write_f90">For more information, see &quot;h5_write.f90.&quot;</a></p>
 <p class="FM__Body">In Fortran (from <span class="FM_Code">h5_write_tr.f90</span>):</p>
 <p class="FM__BodyCellCodeIndent">INTEGER, PARAMETER :: NX = 3</p>
 <p class="FM__BodyCellCodeIndent">INTEGER, PARAMETER :: NY = 5</p>
 <p class="FM__BodyCellCodeIndent">. . .</p>
 <p class="FM__BodyCellCodeIndent">INTEGER(HSIZE_T), DIMENSION(2) :: dims = (/NY, NX/) ! Dataset dimensions</p>
 <p class="FM__BodyCellCodeIndent">. . .</p>
 <p class="FM__BodyCellCodeIndent">!</p>
 <p class="FM__BodyCellCodeIndent">! Initialize data</p>
 <p class="FM__BodyCellCodeIndent">!</p>
 <p class="FM__BodyCellCodeIndent">do i = 1, NY</p>
 <p class="FM__BodyCellCodeIndent"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>do j = 1, NX</p>
 <p class="FM__BodyCellCodeIndent"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>data(i,j) = i + (j-1)*NY</p>
 <p class="FM__BodyCellCodeIndent"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>enddo</p>
 <p class="FM__BodyCellCodeIndent">enddo</p>
 <p class="FM__BodyCellCodeIndent">!</p>
 <p class="FM__BodyCellCodeIndent">! Data</p>
 <p class="FM__BodyCellCodeIndent">!</p>
 <p class="FM__BodyCellCodeIndent">! &#160;1 &#160;6 &#160;11</p>
 <p class="FM__BodyCellCodeIndent">! &#160;2 &#160;7 &#160;12</p>
 <p class="FM__BodyCellCodeIndent">! &#160;3 &#160;8 &#160;13</p>
 <p class="FM__BodyCellCodeIndent">! &#160;4 &#160;9 &#160;14</p>
 <p class="FM__BodyCellCodeIndent">! &#160;5 10 &#160;15</p>
 <p class="FM__BodyCellCodeIndent">. . .</p>
 <p class="FM__BodyCellCodeIndent">CALL h5screate_simple_f(rank, dims, dspace_id, error)</p>
 <p class="FM__BodyIndent"><a href="#XREF_h5_write_tr_f90">For more information, see &quot;h5_write_tr.f90.&quot;</a></p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure" align="bottom">Figure 7-2. Comparing C and Fortran dataspaces</caption>
  <tr style=" height : 15.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">A dataset stored by a C program in a 3 x 5 array:</p>
</td>
</tr>
  <tr style=" height : 80.35pt;">
  <td style="width : 432.000pt; ">
  <div align="center"><img alt="Dspace_fig2a.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:1.500pt; width:100%; max-width:184px;" id="image1" src="Dspace_fig2a.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
  <tr style=" height : 15.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">The same dataset stored by a Fortran program in a 5 x 3 array:</p>
</td>
</tr>
  <tr style=" height : 114.62pt;">
  <td style="width : 432.000pt; ">
  <div align="center"><img alt="Dspace_fig2b.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:1.500pt; margin-bottom:0.750pt; width:100%; max-width:116px;" id="image2" src="Dspace_fig2b.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
  <tr style=" height : 28.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">The first dataset above as written to an HDF5 file from C or the second dataset above as written from Fortran:</p>
</td>
</tr>
  <tr style=" height : 43.99pt;">
  <td style="width : 432.000pt; ">
  <div align="center"><img alt="Dspace_fig2c.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:527px;" id="image3" src="Dspace_fig2c.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
  <tr style=" height : 15.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">The first dataset above as written to an HDF5 file from Fortran:</p>
</td>
</tr>
  <tr style=" height : 45.36pt;">
  <td style="width : 432.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="Dspace_fig2d.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:527px;" id="image4" src="Dspace_fig2d.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__CaptionNote">Note: The HDF5 Library stores arrays along the fastest-changing dimension. This approach is often referred to as being “in C order.” C, C++, and Java work with arrays in row-major order. In other words, the row, or the last dimen&#173;sion, is the fastest-changing dimension. Fortran, on the other hand, handles arrays in column-major order making the column, or the first dimension, the fastest-changing dimension. Therefore, the C and Fortran arrays illustrated in the top portion of this figure are stored identically in an HDF5 file. This ensures that data written by any language can be meaningfully read, interpreted, and manipulated by any other.</p>
 <p class="FM__Heading_Level4">7.2.2.6. Finding Dataspace Characteristics</p>
 <p class="FM__Body">The HDF5 Library provides several APIs designed to query the characteristics of a dataspace.</p>
 <p class="FM__Body"><a name="IX_H5Sis_simple_1"></a>The function <span class="FM_Code">H5Sis_simple</span> (<span class="FM_Code">h5sis_simple_f</span>) returns information about the type of a dataspace. This function is rarely used and currently supports only simple and scalar dataspaces.</p>
 <p class="FM__Body"><a name="IX_H5Sget_simple_extent_7"></a>To find out the dimensionality, or rank, of a dataspace, use <span class="FM_Code">H5Sget_simple_extent_ndims</span> (<span class="FM_Code">h5sget_&#173;simple_extent_ndims_f</span>). <span class="FM_Code">H5Sget_simple_extent_dims</span>&#160;can also be used to find out the rank. See the example below. If both functions return <span class="FM_Code">0</span>&#160;for the value of <span class="FM_Code">rank</span>, then the dataspace is scalar.</p>
 <p class="FM__Body"><a name="IX_H5Sget_simple_extent_dims_3"></a>To query the sizes of the current and maximum dimensions, use <span class="FM_Code">H5Sget_simple_extent_dims</span>&#160;(<span class="FM_Code">h5sget_simple_extent_dims_f</span>).</p>
 <p class="FM__Body">The following example illustrates querying the rank and dimensions of a dataspace using these functions.</p>
 <p class="FM__Body">In C:</p>
 <p class="FM__BodyCellCodeIndent">hid_t space_id;</p>
 <p class="FM__BodyCellCodeIndent">int rank;</p>
 <p class="FM__BodyCellCodeIndent">hsize_t &#160;*current_dims;</p>
 <p class="FM__BodyCellCodeIndent">hsize_t &#160;*max_dims;</p>
 <p class="FM__BodyCellCodeIndent">---------</p>
 <p class="FM__BodyCellCodeIndent">&nbsp;</p>
 <p class="FM__BodyCellCodeIndent">rank=H5Sget_simple_extent_ndims(space_id); </p>
 <p class="FM__BodyCellCodeIndent">(or rank=H5Sget_simple_extent_dims(space_id, NULL, NULL);)</p>
 <p class="FM__BodyCellCodeIndent">current_dims= (hsize_t)malloc(rank*sizeof(hsize_t));</p>
 <p class="FM__BodyCellCodeIndent">max_dims=(hsize_t)malloc(rank*sizeof(hsize_t));</p>
 <p class="FM__BodyCellCodeIndent">H5Sget_simple_extent_dims(space_id, current_dims, max_dims);</p>
 <p class="FM__BodyCellCodeIndent">Print values here for the previous example</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level2"><a name="TOC_7_3_Dataspaces_and_Data"></a>7.3. Dataspaces an<a name="XREF_DTransfer"></a>d Data Transfer</p>
 <p class="FM__Body">Read and write operations transfer data between an HDF5 file on disk and in memory. The shape that the array data takes in the file and in memory may be the same, but HDF5 also allows users the ability to rep&#173;resent data in memory in a different shape than in the file. If the shape of an array in the file and in mem&#173;ory will be the same, then the same dataspace definition can be used for both. If the shape of an array in memory needs to be different than the shape in the file, then the dataspace definition for the shape of the array in memory can be changed. During a read operation, the array will be read into the different shape in memory, and during a write operation, the array will be written to the file in the shape specified by the dataspace in the file. The only qualification is that the number of elements read or written must be the same in both the source and the destination dataspaces.</p>
 <p class="FM__Body">Item a in the figure below shows a simple example of a read operation in which the data is stored as a 3 by 4 array in the file (item b) on disk, but the program wants it to be a 4 by 3 array in memory. This is accom&#173;plished by setting the memory dataspace to describe the desired memory layout, as in item c. The read operation reads the data in the file array into the memory array.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure" align="bottom">Figure 7-3. Data layout before and after a read operation</caption>
  <tr style=" height : 241.27pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="Dspace_fig4.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:502px;" id="image5" src="Dspace_fig4.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:396.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure" align="bottom">Figure 7-4. Moving data from disk to memory</caption>
  <tr style=" height : 218.02pt;">
  <td style="width : 396.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="Dspace_fig5.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:426px;" id="image6" src="Dspace_fig5.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">Both the source and destination are stored as contiguous blocks of storage with the elements in the order specified by the <span class="FM_EI_EmphasisItalic">dataspace</span>. The figure above shows one way the elements might be organized. In item a, the elements are stored as 3 blocks of 4 elements. The destination is an array of 12 elements in memory (see item c). As the figure suggests, the transfer reads the disk blocks into a memory buffer (see item b), and then writes the elements to the correct locations in memory. A similar process occurs in reverse when data is written to disk.</p>
 <p class="FM__Heading_Level3"><a name="TOC_7_3_1_Data_Selection"></a>7.3.1. Data Selection</p>
 <p class="FM__Body">In addition to rearranging data, the transfer may select the data elements from the source and destina&#173;tion.</p>
 <p class="FM__Body">Data selection is implemented by creating a <span class="FM_EI_EmphasisItalic">dataspace</span>&#160;object that describes the selected elements (within the hyper rectangle) rather than the whole array. Two <span class="FM_EI_EmphasisItalic">dataspace</span>&#160;objects with selections can be used in data transfers to read selected elements from the source and write selected elements to the destination. When data is transferred using the dataspace object, only the selected elements will be transferred.</p>
 <p class="FM__Body">This can be used to implement partial I/O, including:</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Sub-setting - reading part of a large dataset</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Sampling - reading selected elements (for example, every second element) of a dataset</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Scatter-gather - read non-contiguous elements into contiguous locations (gather) or read contigu&#173;ous elements into non-contiguous locations <span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>(scatter) or both</p>
 <p class="FM__Body">To use selections, the following steps are followed:</p>
 <p class="FM__ListNumbered1_Level1">1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Get or define the dataspace for the source and destination</p>
 <p class="FM__ListNumbered_Level1">2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Specify one or more selections for source and destination dataspaces</p>
 <p class="FM__ListNumbered_Level1">3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Transfer data using the dataspaces with selections</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"><a name="IX_H5T_SELECT_OR"></a><a name="IX_H5T_SELECT_SET"></a>A selection is created by applying one or more selections to a <span class="FM_EI_EmphasisItalic">dataspace</span>. A selection may override any other selections (<span class="FM_Code">H5T_SELECT_SET</span>) or may be “Ored” with previous selections on the same dataspace (<span class="FM_Code">H5T_SELECT_OR</span>). In the latter case, the resulting selection is the union of the selection and all previ&#173;ously selected selections. Arbitrary sets of points from a dataspace can be selected by specifying an appro&#173;priate set of selections.</p>
 <p class="FM__Body">Two selections are used in data transfer, so the source and destination must be compatible, as described below.</p>
 <p class="FM__Body">There are two forms of selection, hyperslab and point. A selection must be either a point selection or a set of hyperslab selections. Selections cannot be mixed.</p>
 <p class="FM__Body">The definition of a selection within a dataspace, not the data in the selection, cannot be saved to the file unless the selection definition is saved as a region reference. <a href="#XREF_DRegions">For more information, see &quot;References to Dataset Regions.&quot;</a></p>
 <p class="FM__Heading_Level4">7.3.1.1. Hyperslab Selection</p>
 <p class="FM__Body"><a name="IX_hyperslab_2"></a>A hyperslab is a selection of elements from a hyper rectangle. An HDF5 hyperslab is a rectangular pattern defined by four arrays. The four arrays are summarized in the table below. </p>
 <p class="FM__Body"><a name="IX_offset"></a>The <span class="FM_EI_EmphasisItalic">offset</span> defines the origin of the hyperslab in the original dataspace.</p>
 <p class="FM__Body"><a name="IX_stride"></a>The <span class="FM_EI_EmphasisItalic">stride</span> is the number of elements to increment between selected elements. A stride of ‘1’ is every ele&#173;ment, a stride of ‘2’ is every second element, etc. Note that there may be a different stride for each dimen&#173;sion of the dataspace. The default stride is 1.</p>
 <p class="FM__Body"><a name="IX_count"></a>The <span class="FM_EI_EmphasisItalic">count</span>&#160;is the number of elements in the hyperslab selection. When the stride is 1, the selection is a hyper rectangle with a corner at the offset and size count[0] by count[1] by.... When stride is greater than one, the hyperslab bounded by the offset and the corners defined by stride[n] * count[n].</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionTable1" x-list-start="1">Table 7-1. Hyperslab elements</caption>
  <tr style=" height : 23.00pt;">
  <th style="width : 72.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Parameter</p>
</th>
  <th style="width : 360.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Description</p>
</th>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 72.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Offset</p>
</td>
  <td style="width : 360.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">The starting location for the hyperslab.</p>
</td>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 72.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Stride</p>
</td>
  <td style="width : 360.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">The number of elements to separate each element or block to be selected.</p>
</td>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 72.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Count</p>
</td>
  <td style="width : 360.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">The number of elements or blocks to select along each dimension.</p>
</td>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 72.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Block</p>
</td>
  <td style="width : 360.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">The size of the block selected from the dataspace.</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"><a name="IX_block"></a>The <span class="FM_EI_EmphasisItalic">block</span>&#160;is a count on the number of repetitions of the hyperslab. The default block size is ‘1’, which is one hyperslab. A block of 2 would be two hyperslabs in that dimension, with the second starting at off&#173;set[n]+ (count[n] * stride[n]) + 1.</p>
 <p class="FM__Body">A hyperslab can be used to access a sub-set of a large dataset. The figure below shows an example of a hyperslab that reads a rectangle from the middle of a larger two dimensional array. The destination is the same shape as the source.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:360.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure" align="bottom">Figure 7-5. Access a sub-set of data with a hyperslab</caption>
  <tr style=" height : 119.74pt;">
  <td style="width : 360.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="Dspace_fig6.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:391px;" id="image7" src="Dspace_fig6.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">Hyperslabs can be combined to select complex regions of the source and destination. The figure below shows an example of a transfer from one non-rectangular region into another non-rectangular region. The source is defined as the union of two hyperslabs, and the destination is the union of three hyperslabs.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:360.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure" align="bottom">Figure 7-6. Build complex regions with hyperslab unions</caption>
  <tr style=" height : 146.02pt;">
  <td style="width : 360.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="Dspace_fig7.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:391px;" id="image8" src="Dspace_fig7.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">Hyperslabs may also be used to collect or scatter data from regular patterns. The figure below shows an example where the source is a repeating pattern of blocks, and the destination is a single, one dimensional array.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:360.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure" align="bottom">Figure 7-7. Use hyperslabs to combine or disperse data</caption>
  <tr style=" height : 117.50pt;">
  <td style="width : 360.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="Dspace_fig8.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:391px;" id="image9" src="Dspace_fig8.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level4">7.3.1.2. Select Points</p>
 <p class="FM__Body">The second type of selection is an array of points such as coordinates. Essentially, this selection is a list of all the points to include. The figure below shows an example of a transfer of seven elements from a two dimensional dataspace to a three dimensional dataspace using a point selection to specify the points.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:360.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure" align="bottom">Figure 7-8. Point selection</caption>
  <tr style=" height : 157.97pt;">
  <td style="width : 360.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="Dspace_fig9.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:391px;" id="image10" src="Dspace_fig9.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level4">7.3.1.3. Rules for Defining Selections</p>
 <p class="FM__Body">A selection must have the same number of dimensions (rank) as the dataspace it is applied to, although it may select from only a small region such as a plane from a 3D dataspace. Selections do not affect the extent of the <span class="FM_EI_EmphasisItalic">dataspace</span>, the selection may be larger than the <span class="FM_EI_EmphasisItalic">dataspace</span>. The boundaries of selections are reconciled with the extent at the time of the data transfer.</p>
 <p class="FM__Heading_Level4">7.3.1.4. Data Transfer with Selections</p>
 <p class="FM__Body">A data transfer (read or write) with selections is the same as any read or write, except the source and des&#173;tination <span class="FM_EI_EmphasisItalic">dataspace</span>&#160;have compatible selections. </p>
 <p class="FM__Body">During the data transfer, the following steps are executed by the library:</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>The source and destination <span class="FM_EI_EmphasisItalic">dataspaces</span> are checked to assure that the selections are compatible.</p>
 <p class="FM__ListBullets_Level2">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Each selection must be within the current extent of the <span class="FM_EI_EmphasisItalic">dataspace</span>. A selection may be defined to extend outside the current extent of the <span class="FM_EI_EmphasisItalic">dataspace</span>, but the <span class="FM_EI_EmphasisItalic">dataspace</span>&#160;cannot be accessed if the selection is not valid at the time of the access.</p>
 <p class="FM__ListBullets_Level2">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>The total number of points selected in the source and destination must be the same. Note that the dimensionality of the source and destination can be different (for example, the source could be 2D, the destination 1D or 3D), and the shape can be different, but the num&#173;ber of elements selected must be the same.</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>The data is transferred, element by element.</p>
 <p class="FM__Body"><a name="IX_H5Sselect_elements_1"></a>Selections have an iteration order for the points selected, which can be any permutation of the dimen&#173;sions involved (defaulting to ‘C’ array order) or a specific order for the selected points, for selections com&#173;posed of single array elements with <span class="FM_Code">H5Sselect_elements</span>.</p>
 <p class="FM__Body">The elements of the selections are transferred in row-major, or C order. That is, it is assumed that the first dimension varies slowest, the second next slowest, and so forth. For hyperslab selections, the order can be any permutation of the dimensions involved (defaulting to ‘C’ array order). When multiple hyperslabs are combined, the hyperslabs are coalesced into contiguous reads and writes.</p>
 <p class="FM__Body">In the case of point selections, the points are read and written in the order specified. </p>
 <p class="FM__Heading_Level3"><a name="TOC_7_3_2_Programming_Model"></a>7.3.2. Programming Model</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level4">7.3.2.1. Selecting Hyperslabs</p>
 <p class="FM__Body">Suppose we want to read a 3x4 hyperslab from a dataset in a file beginning at the element &lt;1,2&gt; in the dataset, and read it into a 7 x 7 x 3 array in memory. See the figure below. In order to do this, we must cre&#173;ate a dataspace that describes the overall rank and dimensions of the dataset in the file as well as the posi&#173;tion and size of the hyperslab that we are extracting from that dataset.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:324.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure" align="bottom">Figure 7-9. Selecting a hyperslab</caption>
  <tr style=" height : 292.25pt;">
  <td style="width : 324.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="Dspace_fig10.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:318px;" id="image11" src="Dspace_fig10.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">The code in the first example below illustrates the selection of the hyperslab in the file dataspace. The sec&#173;ond example below shows the definition of the destination dataspace in memory. Since the in-memory dataspace has three dimensions, the hyperslab is an array with three dimensions with the last dimension being 1: &lt;3,4,1&gt;. The third example below shows the read using the source and destination <span class="FM_EI_EmphasisItalic">dataspaces</span>&#160;with selections. </p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample1" x-list-start="1" align="bottom">Code Example 7-1. Selecting a hyperslab</caption>
  <tr style=" height : 126.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">/* </p>
  <p class="FM__BodyCellCode">* get the file dataspace.</p>
  <p class="FM__BodyCellCode">*/</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Dget_space_4"></a>dataspace = H5Dget_space(dataset); /* dataspace */</p>
  <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/* identifier */</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode">/* </p>
  <p class="FM__BodyCellCode">* Define hyperslab in the dataset. </p>
  <p class="FM__BodyCellCode">*/</p>
</td>
</tr>
  <tr style=" height : 87.00pt;">
  <td style="width : 432.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">offset[0] = 1;</p>
  <p class="FM__BodyCellCode">offset[1] = 2;</p>
  <p class="FM__BodyCellCode">count[0] &#160;= 3;</p>
  <p class="FM__BodyCellCode">count[1] &#160;= 4;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5S_SELECT_SET_4"></a><a name="IX_H5Sselect_hyperslab_5"></a>status = H5Sselect_hyperslab(dataspace, H5S_SELECT_SET, </p>
  <p class="FM__BodyCellCodeIndent">offset, NULL, count, NULL);</p>
</td>
</tr>
 </table>
</div>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 7-2. Defining the destination memory</caption>
  <tr style=" height : 113.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">/*</p>
  <p class="FM__BodyCellCode">* Define memory dataspace.</p>
  <p class="FM__BodyCellCode">*/</p>
  <p class="FM__BodyCellCode">dimsm[0] = 7;</p>
  <p class="FM__BodyCellCode">dimsm[1] = 7;</p>
  <p class="FM__BodyCellCode">dimsm[2] = 3;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Screate_simple_17"></a>memspace = H5Screate_simple(3,dimsm,NULL); &#160;&#160;</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
</td>
</tr>
  <tr style=" height : 152.00pt;">
  <td style="width : 432.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">/* </p>
  <p class="FM__BodyCellCode">* Define memory hyperslab. </p>
  <p class="FM__BodyCellCode">*/</p>
  <p class="FM__BodyCellCode">offset_out[0] = 3;</p>
  <p class="FM__BodyCellCode">offset_out[1] = 0;</p>
  <p class="FM__BodyCellCode">offset_out[2] = 0;</p>
  <p class="FM__BodyCellCode">count_out[0] &#160;= 3;</p>
  <p class="FM__BodyCellCode">count_out[1] &#160;= 4;</p>
  <p class="FM__BodyCellCode">count_out[2] &#160;= 1;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5S_SELECT_SET_5"></a><a name="IX_H5Sselect_hyperslab_6"></a>status = H5Sselect_hyperslab(memspace, H5S_SELECT_SET, </p>
  <p class="FM__BodyCellCodeIndent">offset_out, NULL, count_out, NULL);</p>
</td>
</tr>
 </table>
</div>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 7-3. A sample read specifying source and destination dataspaces</caption>
  <tr style=" height : 35.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Dread_30"></a>ret = H5Dread(dataset, H5T_NATIVE_INT, memspace, </p>
  <p class="FM__BodyCellCodeIndent">dataspace, H5P_DEFAULT, data);</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level4">7.3.2.2. Example with Strides and Blocks</p>
 <p class="FM__Body">Consider an 8 x 12 dataspace into which we want to write eight 3 x 2 blocks in a two dimensional array from a source dataspace in memory that is a 50-element one dimensional array. See the figure below.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:396.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure" align="bottom">Figure 7-10. Write from a one dimensional array to a two dimensional array</caption>
  <tr style=" height : 219.53pt;">
  <td style="width : 396.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="Dspace_fig14.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:442px;" id="image12" src="Dspace_fig14.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">The example below shows code to write 48 elements from the one dimensional array to the file dataset starting with the second element in vector. The destination hyperslab has the following parameters: off&#173;set=(0,1), stride=(4,3), count=(2,4), block=(3,2). The source has the parameters: offset=(1), stride=(1), count=(48), block=(1). After these operations, the file dataspace will have the values shown in item b in the figure above. Notice that the values are inserted in the file dataset in row-major order.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 7-4. Write from a one dimensional array to a two dimensional array</caption>
  <tr style=" height : 61.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">/* Select hyperslab for the dataset in the file, using </p>
  <p class="FM__BodyCellCode">* 3 x 2 blocks, (4,3) stride (2,4) count starting at </p>
  <p class="FM__BodyCellCode">* the position (0,1).</p>
  <p class="FM__BodyCellCode">*/</p>
</td>
</tr>
  <tr style=" height : 100.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">offset[0] &#160;= 0; offset[1] &#160;= 1;</p>
  <p class="FM__BodyCellCode">stride[0] = 4; stride[1] = 3;</p>
  <p class="FM__BodyCellCode">count[0] &#160;= 2; count[1] &#160;= 4; &#160;&#160;&#160;</p>
  <p class="FM__BodyCellCode">block[0] &#160;= 3; block[1] &#160;= 2;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5S_SELECT_SET_6"></a><a name="IX_H5Sselect_hyperslab_7"></a>ret = H5Sselect_hyperslab(fid, H5S_SELECT_SET, offset, </p>
  <p class="FM__BodyCellCodeIndent">stride, count, block);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
</td>
</tr>
  <tr style=" height : 152.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">/*</p>
  <p class="FM__BodyCellCode">* Create dataspace for the first dataset.</p>
  <p class="FM__BodyCellCode">*/</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Screate_simple_18"></a>mid1 = H5Screate_simple(MSPACE1_RANK, dim1, NULL);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode">/*</p>
  <p class="FM__BodyCellCode">* Select hyperslab. </p>
  <p class="FM__BodyCellCode">* We will use 48 elements of the vector buffer starting </p>
  <p class="FM__BodyCellCode">* at the second element. Selected elements are </p>
  <p class="FM__BodyCellCode">* 1 2 3 . . . 48</p>
  <p class="FM__BodyCellCode">*/</p>
</td>
</tr>
  <tr style=" height : 178.00pt;">
  <td style="width : 432.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">offset[0] &#160;= 1;</p>
  <p class="FM__BodyCellCode">stride[0] = 1;</p>
  <p class="FM__BodyCellCode">count[0] &#160;= 48;</p>
  <p class="FM__BodyCellCode">block[0] &#160;= 1;</p>
  <p class="FM__BodyCellCode">ret = H5Sselect_hyperslab(mid1, H5S_SELECT_SET, offset, </p>
  <p class="FM__BodyCellCodeIndent">stride, count, block);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode">/*</p>
  <p class="FM__BodyCellCode">* Write selection from the vector buffer to the dataset </p>
  <p class="FM__BodyCellCode">* in the file.</p>
  <p class="FM__BodyCellCode">*/</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Dwrite_26"></a>ret = H5Dwrite(dataset, H5T_NATIVE_INT, midd1, fid, </p>
  <p class="FM__BodyCellCodeIndent">H5P_DEFAULT, vector)</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level4">7.3.2.3. Selecting a Union of Hyperslabs</p>
 <p class="FM__Body">The HDF5 Library allows the user to select a union of hyperslabs and write or read the selection into another selection. The shapes of the two selections may differ, but the number of elements must be equal. </p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:252.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure" align="bottom">Figure 7-11. Transferring hyperslab unions</caption>
  <tr style=" height : 130.74pt;">
  <td style="width : 252.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; ">
  <div align="center"><img alt="Dspace_fig16a.jpg" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:235px;" id="image13" src="Dspace_fig16a.jpg" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
  <tr style=" height : 60.97pt;">
  <td style="width : 252.000pt; ">
  <div align="center"><img alt="Dspace_fig16b.jpg" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:38px;" id="image14" src="Dspace_fig16b.jpg" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
  <tr style=" height : 133.27pt;">
  <td style="width : 252.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="Dspace_fig16c.jpg" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:173px;" id="image15" src="Dspace_fig16c.jpg" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">The figure above shows the transfer of a selection that is two overlapping hyperslabs from the dataset into a union of hyperslabs in the memory dataset. Note that the destination dataset has a different shape from the source dataset. Similarly, the selection in the memory dataset could have a different shape than the selected union of hyperslabs in the original file. For simplicity, the selection is that same shape at the des&#173;tination.</p>
 <p class="FM__Body">To implement this transfer, it is necessary to: </p>
 <p class="FM__ListNumbered1_Level1">1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Get the source dataspace</p>
 <p class="FM__ListNumbered_Level1">2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Define one hyperslab selection for the source</p>
 <p class="FM__ListNumbered_Level1">3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Define a second hyperslab selection, unioned with the first</p>
 <p class="FM__ListNumbered_Level1">4.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Get the destination dataspace</p>
 <p class="FM__ListNumbered_Level1">5.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Define one hyperslab selection for the destination</p>
 <p class="FM__ListNumbered_Level1">6.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Define a second hyperslab seletion, unioned with the first</p>
 <p class="FM__ListNumbered_Level1"><a name="IX_H5Dwrite_27"></a><a name="IX_H5Dread_31"></a>7.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Execute the data transfer (<span class="FM_Code">H5Dread</span>&#160;or <span class="FM_Code">H5Dwrite</span>) using the source and destination dataspaces</p>
 <p class="FM__Body"><a name="IX_H5S_SELECT_OR"></a>The example below shows example code to create the selections for the source dataspace (the file). The first hyperslab is size 3 x 4 and the left upper corner at the position (1,2). The hyperslab is a simple rectan&#173;gle, so the stride and block are 1. The second hyperslab is 6 x 5 at the position (2,4). The second selection is a union with the first hyperslab (<span class="FM_Code">H5S_SELECT_OR</span>).</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 7-5. Select source hyperslabs</caption>
  <tr style=" height : 74.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Dget_space_5"></a>fid = H5Dget_space(dataset);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode">/*</p>
  <p class="FM__BodyCellCode">* Select first hyperslab for the dataset in the file. </p>
  <p class="FM__BodyCellCode">*/ </p>
</td>
</tr>
  <tr style=" height : 87.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">offset[0] = 1; offset[1] = 2;</p>
  <p class="FM__BodyCellCode">block[0] = 1; block[1] = 1;</p>
  <p class="FM__BodyCellCode">stride[0] = 1; stride[1] = 1;</p>
  <p class="FM__BodyCellCode">count[0] &#160;= 3; count[1] &#160;= 4;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5S_SELECT_SET_7"></a><a name="IX_H5Sselect_hyperslab_8"></a>ret = H5Sselect_hyperslab(fid, H5S_SELECT_SET, offset, </p>
  <p class="FM__BodyCellCodeIndent">stride, count, block); </p>
</td>
</tr>
  <tr style=" height : 48.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">/*</p>
  <p class="FM__BodyCellCode">* Add second selected hyperslab to the selection.</p>
  <p class="FM__BodyCellCode">*/</p>
</td>
</tr>
  <tr style=" height : 87.00pt;">
  <td style="width : 432.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">offset[0] = 2; offset[1] = 4;</p>
  <p class="FM__BodyCellCode">block[0] = 1; block[1] = 1;</p>
  <p class="FM__BodyCellCode">stride[0] = 1; stride[1] = 1;</p>
  <p class="FM__BodyCellCode">count[0] &#160;= 6; count[1] &#160;= 5;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5S_SELECT_OR_1"></a>ret = H5Sselect_hyperslab(fid, H5S_SELECT_OR, offset, </p>
  <p class="FM__BodyCellCodeIndent">stride, count, block);</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">The example below shows example code to create the selection for the destination in memory. The steps are similar. In this example, the hyperslabs are the same shape, but located in different positions in the dataspace. The first hyperslab is 3 x 4 and starts at (0,0), and the second is 6 x 5 and starts at (1,2).</p>
 <p class="FM__Body"><a name="IX_H5Dread_32"></a>Finally, the <span class="FM_Code">H5Dread</span> call transfers the selected data from the file dataspace to the selection in memory.</p>
 <p class="FM__Body"><a name="IX_H5S_SELECT_OR_2"></a><a name="IX_H5S_SELECT_SET_8"></a>In this example, the source and destination selections are two overlapping rectangles. In general, any number of rectangles can be OR’ed, and they do not have to be contiguous. The order of the selections does not matter, but the first should use <span class="FM_Code">H5S_SELECT_SET</span>; subsequent selections are unioned using <span class="FM_Code">H5S_SELECT_OR</span>.</p>
 <p class="FM__Body">It is important to emphasize that the source and destination do not have to be the same shape (or number of rectangles). As long as the two selections have the same number of elements, the data can be trans&#173;ferred.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 7-6. Select destination hyperslabs</caption>
  <tr style=" height : 61.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">/*</p>
  <p class="FM__BodyCellCode">* Create memory dataspace.</p>
  <p class="FM__BodyCellCode">*/</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Screate_simple_19"></a>mid = H5Screate_simple(MSPACE_RANK, mdim, NULL);</p>
</td>
</tr>
  <tr style=" height : 87.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode">/*</p>
  <p class="FM__BodyCellCode">* Select two hyperslabs in memory. Hyperslabs has the </p>
  <p class="FM__BodyCellCode">* same size and shape as the selected hyperslabs for </p>
  <p class="FM__BodyCellCode">* the file dataspace.</p>
  <p class="FM__BodyCellCode">*/</p>
</td>
</tr>
  <tr style=" height : 87.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">offset[0] = 0; offset[1] = 0;</p>
  <p class="FM__BodyCellCode">block[0] = 1; block[1] = 1;</p>
  <p class="FM__BodyCellCode">stride[0] = 1; stride[1] = 1;</p>
  <p class="FM__BodyCellCode">count[0] &#160;= 3; count[1] &#160;= 4;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5S_SELECT_SET_9"></a><a name="IX_H5Sselect_hyperslab_9"></a>ret = H5Sselect_hyperslab(mid, H5S_SELECT_SET, offset, </p>
  <p class="FM__BodyCellCodeIndent">stride, count, block); </p>
</td>
</tr>
  <tr style=" height : 126.00pt;">
  <td style="width : 432.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">offset[0] = 1; offset[1] = 2;</p>
  <p class="FM__BodyCellCode">block[0] = 1; block[1] = 1;</p>
  <p class="FM__BodyCellCode">stride[0] = 1; stride[1] = 1;</p>
  <p class="FM__BodyCellCode">count[0] &#160;= 6; count[1] &#160;= 5;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5S_SELECT_OR_3"></a>ret = H5Sselect_hyperslab(mid, H5S_SELECT_OR, offset, </p>
  <p class="FM__BodyCellCodeIndent">stride, count, block);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Dread_33"></a>ret = H5Dread(dataset, H5T_NATIVE_INT, mid, fid, </p>
  <p class="FM__BodyCellCodeIndent">H5P_DEFAULT, matrix_out);</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level4">7.3.2.4. Selecting a List of Independent Points</p>
 <p class="FM__Body"><a name="IX_H5Sselect_elements_2"></a>It is also possible to specify a list of elements to read or write using the function <span class="FM_Code">H5Sselect_elements</span>. The procedure is similar to hyperslab selections.</p>
 <p class="FM__ListNumbered1_Level1">1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Get the source dataspace</p>
 <p class="FM__ListNumbered_Level1">2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Set the selected points</p>
 <p class="FM__ListNumbered_Level1">3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Get the destination dataspace</p>
 <p class="FM__ListNumbered_Level1">4.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Set the selected points</p>
 <p class="FM__ListNumbered_Level1">5.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Transfer the data using the source and destination dataspaces</p>
 <p class="FM__Body">The figure below shows an example where four values are to be written to four separate points in a two dimensional dataspace. The source dataspace is a one dimensional array with the values 53, 59, 61, 67. The destination dataspace is an 8 x 12 array. The elements are to be written to the points (0,0), (3,3), (3,5), and (5,6). In this example, the source does not require a selection. The example below the figure shows example code to implement this transfer.</p>
 <p class="FM__Body">A point selection lists the exact points to be transferred and the order they will be transferred. The source and destination are required to have the same number of elements. A point selection can be used with a hyperslab (for example, the source could be a point selection and the destination a hyperslab, or vice versa), so long as the number of elements selected are the same.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:252.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure" align="bottom">Figure 7-12. Write data to separate points</caption>
  <tr style=" height : 30.22pt;">
  <td style="width : 252.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; ">
  <div align="center"><img alt="Dspace_fig19a.jpg" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:79px;" id="image16" src="Dspace_fig19a.jpg" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
  <tr style=" height : 55.78pt;">
  <td style="width : 252.000pt; ">
  <div align="center"><img alt="Dspace_fig19b.jpg" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:52px;" id="image17" src="Dspace_fig19b.jpg" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
  <tr style=" height : 133.27pt;">
  <td style="width : 252.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="Dspace_fig19c.jpg" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:225px;" id="image18" src="Dspace_fig19c.jpg" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 7-7. Write data to separate points</caption>
  <tr style=" height : 100.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">hsize_t dim2[] = {4}; &#160;&#160;&#160;&#160;&#160;&#160;</p>
  <p class="FM__BodyCellCode">int values[] = {53, 59, 61, 67}; </p>
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode">/* Array to store selected points from the </p>
  <p class="FM__BodyCellCode">* file dataspace </p>
  <p class="FM__BodyCellCode">*/ </p>
  <p class="FM__BodyCellCode">hssize_t coord[4][2]; </p>
</td>
</tr>
  <tr style=" height : 61.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode">/*</p>
  <p class="FM__BodyCellCode">* Create dataspace for the second dataset.</p>
  <p class="FM__BodyCellCode">*/</p>
</td>
</tr>
  <tr style=" height : 87.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Screate_simple_20"></a>mid2 = H5Screate_simple(1, dim2, NULL);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode">/*</p>
  <p class="FM__BodyCellCode">* Select sequence of NPOINTS points in the file </p>
  <p class="FM__BodyCellCode">* dataspace.</p>
  <p class="FM__BodyCellCode">*/</p>
</td>
</tr>
  <tr style=" height : 139.00pt;">
  <td style="width : 432.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">coord[0][0] = 0; coord[0][1] = 0;</p>
  <p class="FM__BodyCellCode">coord[1][0] = 3; coord[1][1] = 3;</p>
  <p class="FM__BodyCellCode">coord[2][0] = 3; coord[2][1] = 5;</p>
  <p class="FM__BodyCellCode">coord[3][0] = 5; coord[3][1] = 6;</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5S_SELECT_SET_10"></a><a name="IX_H5Sselect_elements_3"></a>ret = H5Sselect_elements(fid, H5S_SELECT_SET, NPOINTS, </p>
  <p class="FM__BodyCellCodeIndent">(const hssize_t **)coord);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Dwrite_28"></a>ret = H5Dwrite(dataset, H5T_NATIVE_INT, mid2, fid, </p>
  <p class="FM__BodyCellCodeIndent">H5P_DEFAULT, values);</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level4">7.3.2.5. Combinations of Selections</p>
 <p class="FM__Body">Selections are a very flexible mechanism for reorganizing data during a data transfer. With different com&#173;binations of <span class="FM_EI_EmphasisItalic">dataspaces</span>&#160;and selections, it is possible to implement many kinds of data transfers including sub-setting, sampling, and reorganizing the data. The table below gives some example combinations of source and destination, and the operations they implement. </p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionTable">Table 7-2. Selection operations</caption>
  <tr style=" height : 23.00pt;">
  <th style="width : 158.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Source</p>
</th>
  <th style="width : 136.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Destination</p>
</th>
  <th style="width : 136.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Operation</p>
</th>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 158.400pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">All</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">All</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Copy whole array</p>
</td>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 158.400pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">All</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">All (different shape)</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Copy and reorganize array</p>
</td>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 158.400pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Hyperslab</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">All</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sub-set</p>
</td>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 158.400pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Hyperslab</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Hyperslab (same shape)</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Selection</p>
</td>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 158.400pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Hyperslab</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Hyperslab (different shape)</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Select and rearrange</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 158.400pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Hyperslab with stride or block</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">All or hyperslab with stride 1</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sub-sample, scatter</p>
</td>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 158.400pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Hyperslab</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Points</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Scatter</p>
</td>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 158.400pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Points</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Hyperslab or all</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Gather</p>
</td>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 158.400pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Points</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Points (same)</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Selection</p>
</td>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 158.400pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Points</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Points (different)</p>
</td>
  <td style="width : 136.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Reorder points</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level2"><a name="TOC_7_4_Dataspace_Selection"></a>7.4. Dataspace Selection Operations an<a name="XREF_DSelectTransfer"></a>d Data Transfer</p>
 <p class="FM__Body">This section is under construction.</p>
 <p class="FM__Heading_Level2"><a name="TOC_7_5_References_to"></a>7.5. References t<a name="XREF_DRegions"></a>o Dataset Regions</p>
 <p class="FM__Body"><a name="IX_region_reference"></a>Another use of selections is to store a reference to a region of a dataset. An HDF5 object reference object is a pointer to an object (dataset, group, or committed datatype) in the file. A selection can be used to cre&#173;ate a pointer to a set of selected elements of a <span class="FM_EI_EmphasisItalic">dataset</span>, called a region reference. The selection can be either a point selection or a hyperslab selection.</p>
 <p class="FM__Body"><a name="IX_H5T_STD_REF_DSETREG"></a>A region reference is an object maintained by the HDF5 Library. The region reference can be stored in a dataset or attribute, and then read. The dataset or attribute is defined to have the special datatype, <span class="FM_Code">H5T_STD_REF_DSETREG</span>.</p>
 <p class="FM__Body"><a name="IX_H5Rget_select"></a><a name="IX_H5Rdefrerence"></a>To discover the elements and/or read the data, the region reference can be dereferenced. The <span class="FM_Code">H5Rde&#173;frerence</span>&#160;call returns an identifier for the <span class="FM_EI_EmphasisItalic">dataset</span>, and then the selected dataspace can be retrieved with <span class="FM_Code">H5Rget_select</span>&#160;call. The selected <span class="FM_EI_EmphasisItalic">dataspace</span> can be used to read the selected data elements.</p>
 <p class="FM__Body"><a href="../Datatypes/HDF5_Datatypes.htm#XREF_reference">For more information, see &quot;Reference.&quot;</a></p>
 <p class="FM__Heading_Level3"><a name="TOC_7_5_1_Example_Uses_for"></a>7.5.1. Example Uses for Region References</p>
 <p class="FM__Body">Region references are used to implement stored pointers to data within a dataset. For example, features in a large dataset might be indexed by a table. See the figure below. This table could be stored as an HDF5 dataset with a compound datatype, for example, with a field for the name of the feature and a region ref&#173;erence to point to the feature in the dataset. See the second figure below. </p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure" align="bottom">Figure 7-13. Features indexed by a table</caption>
  <tr style=" height : 394.99pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="Dspace_fig21.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:500px;" id="image19" src="Dspace_fig21.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:360.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure" align="bottom">Figure 7-14. Storing the table with a compound datatype</caption>
  <tr style=" height : 385.99pt;">
  <td style="width : 360.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="Dspace_fig22.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:414px;" id="image20" src="Dspace_fig22.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level3"><a name="TOC_7_5_2_Creating"></a>7.5.2. Creating References to Regions</p>
 <p class="FM__Body">To create a region reference:</p>
 <p class="FM__ListNumbered1_Level1">1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Create or open the dataset that contains the region</p>
 <p class="FM__ListNumbered_Level1">2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Get the dataspace for the dataset</p>
 <p class="FM__ListNumbered_Level1">3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Define a selection that specifies the region</p>
 <p class="FM__ListNumbered_Level1">4.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Create a region reference using the dataset and dataspace with selection</p>
 <p class="FM__ListNumbered_Level1">5.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Write the region reference(s) to the desired dataset or attribute</p>
 <p class="FM__Body">The figure below shows a diagram of a file with three datasets. Dataset D1 and D2 are two dimensional arrays of integers. Dataset R1 is a one dimensional array of references to regions in D1 and D2. The regions can be any valid selection of the dataspace of the target dataset.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:288.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure" align="bottom">Figure 7-15. A file with three datasets</caption>
  <tr style=" height : 282.53pt;">
  <td style="width : 288.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="Dspace_fig23.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:244px;" id="image21" src="Dspace_fig23.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__CaptionNote">Note: In the figure above, R1 is a 1 D array of region pointers; each pointer refers to a selection in one dataset.</p>
 <p class="FM__Body"><a name="IX_H5Rcreate_3"></a><a name="IX_hdset_reg_ref_t"></a>The example below shows code to create the array of region references. The references are created in an array of type <span class="FM_Code">hdset_reg_ref_t</span>. Each region is defined as a selection on the dataspace of the dataset, and a reference is created using <span class="FM_Code">H5Rcreate()</span>. The call to <span class="FM_Code">H5Rcreate()</span>&#160;specifies the file, dataset, and the dataspace with selection.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 7-8. Create an array of region references</caption>
  <tr style=" height : 87.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">/* create an array of 4 region references */</p>
  <p class="FM__BodyCellCode">hdset_reg_ref_t ref[4];</p>
  <p class="FM__BodyCellCode">/*</p>
  <p class="FM__BodyCellCode">* Create a reference to the first hyperslab in the first </p>
  <p class="FM__BodyCellCode">* Dataset.</p>
  <p class="FM__BodyCellCode">*/</p>
</td>
</tr>
  <tr style=" height : 100.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">offset[0] = 1; offset[1] = 1; </p>
  <p class="FM__BodyCellCode">count[0] = 3; count[1] = 2;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5S_SELECT_SET_11"></a><a name="IX_H5Sselect_hyperslab_10"></a>status = &#160;H5Sselect_hyperslab(space_id, H5S_SELECT_SET, </p>
  <p class="FM__BodyCellCodeIndent">offset, NULL, count, NULL);</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Rcreate_4"></a>status = H5Rcreate(&amp;ref[0], file_id, &quot;D1&quot;, </p>
  <p class="FM__BodyCellCodeIndent"><a name="IX_H5R_DATASET_REGION_1"></a>H5R_DATASET_REGION, space_id);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
</td>
</tr>
  <tr style=" height : 74.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">/*</p>
  <p class="FM__BodyCellCode">* The second reference is to a union of hyperslabs in </p>
  <p class="FM__BodyCellCode">* the first Dataset</p>
  <p class="FM__BodyCellCode">*/</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
</td>
</tr>
  <tr style=" height : 100.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">offset[0] = 5; &#160;offset[1] = 3; </p>
  <p class="FM__BodyCellCode">count[0] = 1; count[1] = 4;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Sselect_none_1"></a>status = H5Sselect_none(space_id);</p>
  <p class="FM__BodyCellCode">status = H5Sselect_hyperslab(space_id, H5S_SELECT_SET, </p>
  <p class="FM__BodyCellCodeIndent">offset, NULL, count, NULL);</p>
  <p class="FM__BodyCellCode">offset[0] = 6; &#160;&#160;offset[1] = 5; </p>
  <p class="FM__BodyCellCode">count[0] = 1; &#160;count[1] = 2;</p>
</td>
</tr>
  <tr style=" height : 74.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5S_SELECT_OR_4"></a>status = H5Sselect_hyperslab(space_id, H5S_SELECT_OR, </p>
  <p class="FM__BodyCellCodeIndent">offset, NULL, count, NULL);</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Rcreate_5"></a>status = H5Rcreate(&amp;ref[1], file_id, &quot;D1&quot;, </p>
  <p class="FM__BodyCellCodeIndent"><a name="IX_H5R_DATASET_REGION_2"></a>H5R_DATASET_REGION, space_id);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
</td>
</tr>
  <tr style=" height : 61.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">/*</p>
  <p class="FM__BodyCellCode">* the fourth reference is to a selection of points in </p>
  <p class="FM__BodyCellCode">* the first Dataset</p>
  <p class="FM__BodyCellCode">*/</p>
</td>
</tr>
  <tr style=" height : 139.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sselect_none_2"></a>status = H5Sselect_none(space_id);</p>
  <p class="FM__BodyCellCode">coord[0][0] = 4; coord[0][1] = 4;</p>
  <p class="FM__BodyCellCode">coord[1][0] = 2; coord[1][1] = 6;</p>
  <p class="FM__BodyCellCode">coord[2][0] = 3; coord[2][1] = 7;</p>
  <p class="FM__BodyCellCode">coord[3][0] = 1; coord[3][1] = 5;</p>
  <p class="FM__BodyCellCode">coord[4][0] = 5; coord[4][1] = 8;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Sselect_elements_4"></a>status = H5Sselect_elements(space_id, H5S_SELECT_SET, </p>
  <p class="FM__BodyCellCodeIndent">num_points, (const hssize_t **)coord);</p>
  <p class="FM__BodyCellCode">status = H5Rcreate(&amp;ref[3], file_id, &quot;D1&quot;, </p>
  <p class="FM__BodyCellCodeIndent">H5R_DATASET_REGION, space_id);</p>
</td>
</tr>
  <tr style=" height : 139.00pt;">
  <td style="width : 432.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">/*</p>
  <p class="FM__BodyCellCode">* the third reference is to a hyperslab in the second </p>
  <p class="FM__BodyCellCode">* Dataset</p>
  <p class="FM__BodyCellCode">*/</p>
  <p class="FM__BodyCellCode">offset[0] = 0; &#160;offset[1] = 0; </p>
  <p class="FM__BodyCellCode">count[0] = 4; count[1] = 6;</p>
  <p class="FM__BodyCellCode">status = H5Sselect_hyperslab(space_id2, H5S_SELECT_SET, </p>
  <p class="FM__BodyCellCodeIndent">offset, NULL, count, NULL);</p>
  <p class="FM__BodyCellCode">status = H5Rcreate(&amp;ref[2], file_id, &quot;D2&quot;, </p>
  <p class="FM__BodyCellCodeIndent">H5R_DATASET_REGION, space_id2);</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"><a name="IX_H5T_STD_REF_DSETREG_1"></a>When all the references are created, the array of references is written to the dataset R1. The dataset is declared to have datatype <span class="FM_Code">H5T_STD_REF_DSETREG</span>. See the example below. </p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 7-9. Write the array of references to a dataset</caption>
  <tr style=" height : 74.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">Hsize_t dimsr[1];</p>
  <p class="FM__BodyCellCode">dimsr[0] = 4;</p>
  <p class="FM__BodyCellCode">/* </p>
  <p class="FM__BodyCellCode">* Dataset with references.</p>
  <p class="FM__BodyCellCode">*/</p>
</td>
</tr>
  <tr style=" height : 61.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Screate_simple_21"></a>spacer_id = H5Screate_simple(1, dimsr, NULL);</p>
  <p class="FM__BodyCellCode"><a name="IX_H5T_STD_REF_DSETREG_2"></a><a name="IX_H5Dcreate_31"></a>dsetr_id = H5Dcreate(file_id, &quot;R1&quot;, H5T_STD_REF_DSETREG, </p>
  <p class="FM__BodyCellCodeIndent">spacer_id, H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
</td>
</tr>
  <tr style=" height : 74.00pt;">
  <td style="width : 432.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">/*</p>
  <p class="FM__BodyCellCode">* Write dataset with the references.</p>
  <p class="FM__BodyCellCode">*/</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Dwrite_29"></a>status = H5Dwrite(dsetr_id, H5T_STD_REF_DSETREG, H5S_ALL, </p>
  <p class="FM__BodyCellCodeIndent">H5S_ALL, H5P_DEFAULT, ref);</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">When creating region references, the following rules are enforced.</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>The selection must be a valid selection for the target <span class="FM_EI_EmphasisItalic">dataset</span>, just as when transferring data</p>
 <p class="FM__ListBullets_Level1"><a name="IX_H5Rcreate_6"></a>•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>The <span class="FM_EI_EmphasisItalic">dataset</span> must exist in the file when the reference is created (<span class="FM_Code">H5Rcreate</span>)</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>The target <span class="FM_EI_EmphasisItalic">dataset</span> must be in the same file as the stored reference</p>
 <p class="FM__Heading_Level3"><a name="TOC_7_5_3_Reading_References"></a>7.5.3. Reading References to Regions</p>
 <p class="FM__Body">To retrieve data from a region reference, the reference must be read from the file, and then the data can be retrieved. The steps are:</p>
 <p class="FM__ListNumbered1_Level1">1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Open the dataset or attribute containing the reference objects</p>
 <p class="FM__ListNumbered_Level1">2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Read the reference object(s)</p>
 <p class="FM__ListNumbered_Level1"><a name="IX_H5Rget_space"></a><a name="IX_H5R_dereference"></a>3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>For each region reference, get the dataset (<span class="FM_Code">H5R_dereference</span>) and dataspace (<span class="FM_Code">H5Rget_space</span>)</p>
 <p class="FM__ListNumbered_Level1">4.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Use the dataspace and datatype to discover what space is needed to store the data, allocate the correct storage and create a dataspace and datatype to define the memory data layout</p>
 <p class="FM__Body">The example below shows code to read an array of region references from a dataset, and then read the data from the first selected region. Note that the region reference has information that records the data&#173;set (within the file) and the selection on the <span class="FM_EI_EmphasisItalic">dataspace</span>&#160;of the <span class="FM_EI_EmphasisItalic">dataset</span>. After dereferencing the regions ref&#173;erence, the <span class="FM_EI_EmphasisItalic">datatype</span>, number of points, and some aspects of the selection can be discovered. (For a union of hyperslabs, it may not be possible to determine the exact set of hyperslabs that has been combined.) The table below the code example shows the inquiry functions.</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">When reading data from a region reference, the following rules are enforced:</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>The target <span class="FM_EI_EmphasisItalic">dataset</span> must be present and accessible in the file</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>The selection must be a valid selection for the <span class="FM_EI_EmphasisItalic">dataset</span></p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 7-10. Read an array of region references; read from the first selection</caption>
  <tr style=" height : 74.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Dopen_23"></a>dsetr_id = H5Dopen (file_id, &quot;R1&quot;, H5P_DEFAULT);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5T_STD_REF_DSETREG_3"></a><a name="IX_H5Dread_34"></a>status = H5Dread(dsetr_id, H5T_STD_REF_DSETREG, H5S_ALL, </p>
  <p class="FM__BodyCellCodeIndent">H5S_ALL, H5P_DEFAULT, ref_out);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
</td>
</tr>
  <tr style=" height : 74.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">/* </p>
  <p class="FM__BodyCellCode">* Dereference the first reference.</p>
  <p class="FM__BodyCellCode">* &#160;&#160;1) get the dataset (H5Rdereference)</p>
  <p class="FM__BodyCellCode">* &#160;&#160;2) get the selected dataspace (H5Rget_region)</p>
  <p class="FM__BodyCellCode">*/</p>
</td>
</tr>
  <tr style=" height : 139.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5R_DATASET_REGION_3"></a><a name="IX_H5Rdereference_2"></a>dsetv_id = H5Rdereference(dsetr_id, H5R_DATASET_REGION, </p>
  <p class="FM__BodyCellCodeIndent">&amp;ref_out[0]);</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Rget_region"></a>space_id = H5Rget_region(dsetr_id, H5R_DATASET_REGION, </p>
  <p class="FM__BodyCellCodeIndent">&amp;ref_out[0]);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode">/*</p>
  <p class="FM__BodyCellCode">* &#160;Discover how many points and shape of the data</p>
  <p class="FM__BodyCellCode">*/</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_simple_extent_8"></a>ndims = H5Sget_simple_extent_ndims(space_id);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
</td>
</tr>
  <tr style=" height : 113.00pt;">
  <td style="width : 432.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_simple_extent_dims_4"></a>H5Sget_simple_extent_dims(space_id,dimsx,NULL);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode">/* </p>
  <p class="FM__BodyCellCode">* Read and display hyperslab selection from the dataset.</p>
  <p class="FM__BodyCellCode">*/</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_select_npoints_1"></a>dimsy[0] = H5Sget_select_npoints(space_id);</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Screate_simple_22"></a>spacex_id = H5Screate_simple(1, dimsy, NULL);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
</td>
</tr>
  <tr style=" height : 139.00pt;">
  <td style="width : 432.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Dread_35"></a>status = H5Dread(dsetv_id, H5T_NATIVE_INT, H5S_ALL, </p>
  <p class="FM__BodyCellCodeIndent">space_id, H5P_DEFAULT, data_out);</p>
  <p class="FM__BodyCellCode">printf(&quot;Selected hyperslab: &quot;);</p>
  <p class="FM__BodyCellCode">for (i = 0; i &lt; 8; i++)</p>
  <p class="FM__BodyCellCode">{ &#160;&#160;</p>
  <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>printf(&quot;\n&quot;);</p>
  <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>for (j = 0; j &lt; 10; j++)</p>
  <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>printf(&quot;%d &quot;, data_out[i][j]);</p>
  <p class="FM__BodyCellCode">}</p>
  <p class="FM__BodyCellCode">printf(&quot;\n&quot;);</p>
</td>
</tr>
 </table>
</div>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionTable">Table 7-3. The inquiry functions</caption>
  <tr style=" height : 23.00pt;">
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Function</p>
</th>
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Information</p>
</th>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_select_npoints_2"></a>H5Sget_select_npoints</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">The number of elements in the selection (hyperslab or point selection).</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_select_bounds_1"></a>H5Sget_select_bounds</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">The bounding box that encloses the selected points (hyperslab or point selection).</p>
</td>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_select_hyper_4"></a>H5Sget_select_hyper_nblocks</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">The number of blocks in the selection.</p>
</td>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_select_hyper_5"></a>H5Sget_select_hyper_blocklist</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">A list of the blocks in the selection.</p>
</td>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_select_elem_4"></a>H5Sget_select_elem_npoints</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">The number of points in the selection.</p>
</td>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Sget_select_elem_5"></a>H5Sget_select_elem_pointlist</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">The points.</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level2"><a name="TOC_7_6_Sample_Programs"></a>7.6. Sample Progra<a name="XREF_Programs"></a>ms</p>
 <p class="FM__Body"><a name="IX_h5dump_4"></a>This section contains the full programs from which several of the code examples in this chapter were derived. The <span class="FM_Code">h5dump</span> output from the program’s output file immediately follows each program.</p>
 <p class="FM__Heading_Level3"><a name="TOC_7_6_1_h5_write_c"></a>7.6.1. h5_writ<a name="XREF_h5_write_c"></a>e.c</p>
 <p class="FM__BodyCellCode">----------</p>
 <p class="FM__BodyCellCode">#include &quot;hdf5.h&quot;</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode">#define H5FILE_NAME &#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;SDS.h5&quot;</p>
 <p class="FM__BodyCellCode">#define DATASETNAME &quot;C Matrix&quot;</p>
 <p class="FM__BodyCellCode">#define NX &#160;&#160;&#160;&#160;3 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* dataset dimensions */</p>
 <p class="FM__BodyCellCode">#define NY &#160;&#160;&#160;&#160;5</p>
 <p class="FM__BodyCellCode">#define RANK &#160;&#160;2</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode">int</p>
 <p class="FM__BodyCellCode">main (void)</p>
 <p class="FM__BodyCellCode">{</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>hid_t &#160;&#160;&#160;&#160;&#160;&#160;file, dataset; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* file and dataset identifiers */</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>hid_t &#160;&#160;&#160;&#160;&#160;&#160;datatype, dataspace; &#160;&#160;/* identifiers */</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>hsize_t &#160;&#160;&#160;&#160;dims[2]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* dataset dimensions */</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>herr_t &#160;&#160;&#160;&#160;&#160;status;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>int &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data[NX][NY]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* data to write */</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>int &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;i, j;</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/*</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>* Data &#160;and output buffer initialization.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>*/</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>for (j = 0; j &lt; NX; j++) {</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>for (i = 0; i &lt; NY; i++)</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>data[j][i] = i + 1 + j*NY;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/*</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>* &#160;1 &#160;2 &#160;3 &#160;4 &#160;5</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>* &#160;6 &#160;7 &#160;8 &#160;9 10</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>* 11 12 13 14 15</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>*/</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/*</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>* Create a new file using H5F_ACC_TRUNC access,</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>* default file creation properties, and default file</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>* access properties.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>*/</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>file = H5Fcreate(H5FILE_NAME, H5F_ACC_TRUNC, H5P_DEFAULT, H5P_DEFAULT);</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/*</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>* Describe the size of the array and create the data space for fixed</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>* size dataset.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>*/</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>dims[0] = NX;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>dims[1] = NY;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>dataspace = H5Screate_simple(RANK, dims, NULL);</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/*</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>* Create a new dataset within the file using defined dataspace and</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>* datatype and default dataset creation properties.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>*/</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>dataset = H5Dcreate(file, DATASETNAME, H5T_NATIVE_INT, dataspace,</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/*</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>* Write the data to the dataset using default transfer properties.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>*/</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = H5Dwrite(dataset, H5T_NATIVE_INT, H5S_ALL, H5S_ALL,</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>H5P_DEFAULT, data);</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/*</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>* Close/release resources.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>*/</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>H5Sclose(dataspace);</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>H5Dclose(dataset);</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>H5Fclose(file);</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return 0;</p>
 <p class="FM__BodyCellCode">}</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode">SDS.out</p>
 <p class="FM__BodyCellCode">-------</p>
 <p class="FM__BodyCellCode">HDF5 &quot;SDS.h5&quot; {</p>
 <p class="FM__BodyCellCode">GROUP &quot;/&quot; {</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>DATASET &quot;C Matrix&quot; {</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>DATATYPE &#160;H5T_STD_I32BE</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>DATASPACE &#160;SIMPLE { ( 3, 5 ) / ( 3, 5 ) }</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>DATA {</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>1, 2, 3, 4, 5,</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>6, 7, 8, 9, 10,</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>11, 12, 13, 14, 15</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}</p>
 <p class="FM__BodyCellCode">}</p>
 <p class="FM__BodyCellCode">}</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level3"><a name="TOC_7_6_2_h5_write_f90"></a>7.6.2. h5_writ<a name="XREF_h5_write_f90"></a>e.f90</p>
 <p class="FM__BodyCellCode">------------</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PROGRAM DSETEXAMPLE</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>USE HDF5 ! This module contains all necessary modules</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>IMPLICIT NONE</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CHARACTER(LEN=7), PARAMETER :: filename = &quot;SDSf.h5&quot; ! File name</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CHARACTER(LEN=14), PARAMETER :: dsetname = &quot;Fortran Matrix&quot; ! Dataset name</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER, PARAMETER :: NX = 3</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER, PARAMETER :: NY = 5</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER(HID_T) :: file_id &#160;&#160;&#160;&#160;&#160;&#160;! File identifier</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER(HID_T) :: dset_id &#160;&#160;&#160;&#160;&#160;&#160;! Dataset identifier</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER(HID_T) :: dspace_id &#160;&#160;&#160;&#160;! Dataspace identifier</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER(HSIZE_T), DIMENSION(2) :: dims = (/3,5/) ! Dataset dimensions</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER &#160;&#160;&#160;&#160;:: &#160;&#160;&#160;rank = 2 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;! Dataset rank</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER &#160;&#160;&#160;&#160;:: &#160;&#160;&#160;data(NX,NY)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER &#160;&#160;&#160;&#160;:: &#160;&#160;error ! Error flag</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER &#160;&#160;&#160;&#160;:: i, j</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Initialize data</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>do i = 1, NX</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>do j = 1, NY</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>data(i,j) = j + (i-1)*NY</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>enddo</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>enddo</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Data</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! &#160;1 &#160;2 &#160;3 &#160;4 &#160;5</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! &#160;6 &#160;7 &#160;8 &#160;9 10</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! 11 12 13 14 15</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Initialize FORTRAN interface.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5open_f(error)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Create a new file using default properties.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5fcreate_f(filename, H5F_ACC_TRUNC_F, file_id, error)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Create the dataspace.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5screate_simple_f(rank, dims, dspace_id, error)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Create and write dataset using default properties.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5dcreate_f(file_id, dsetname, H5T_NATIVE_INTEGER, dspace_id, &amp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>dset_id, error, H5P_DEFAULT_F, H5P_DEFAULT_F, &amp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>H5P_DEFAULT_F)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5dwrite_f(dset_id, H5T_NATIVE_INTEGER, data, dims, error)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! End access to the dataset and release resources used by it.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5dclose_f(dset_id, error)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Terminate access to the data space.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5sclose_f(dspace_id, error)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Close the file.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5fclose_f(file_id, error)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Close FORTRAN interface.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5close_f(error)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>END PROGRAM DSETEXAMPLE</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode">SDSf.out</p>
 <p class="FM__BodyCellCode">--------</p>
 <p class="FM__BodyCellCode">HDF5 &quot;SDSf.h5&quot; {</p>
 <p class="FM__BodyCellCode">GROUP &quot;/&quot; {</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>DATASET &quot;Fortran Matrix&quot; {</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>DATATYPE &#160;H5T_STD_I32BE</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>DATASPACE &#160;SIMPLE { ( 5, 3 ) / ( 5, 3 ) }</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>DATA {</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>1, 6, 11,</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>2, 7, 12,</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3, 8, 13,</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4, 9, 14,</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>5, 10, 15</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}</p>
 <p class="FM__BodyCellCode">}</p>
 <p class="FM__BodyCellCode">}</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level3"><a name="TOC_7_6_3_h5_write_tr_f90"></a>7.6.3. h5_write_t<a name="XREF_h5_write_tr_f90"></a>r.f90</p>
 <p class="FM__BodyCellCode">---------------</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PROGRAM DSETEXAMPLE</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>USE HDF5 ! This module contains all necessary modules</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>IMPLICIT NONE</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CHARACTER(LEN=10), PARAMETER :: filename = &quot;SDSf_tr.h5&quot; ! File name</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CHARACTER(LEN=24), PARAMETER :: dsetname = &quot;Fortran Transpose Matrix&quot;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Dataset name</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER, PARAMETER :: NX = 3</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER, PARAMETER :: NY = 5</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER(HID_T) :: file_id &#160;&#160;&#160;&#160;&#160;&#160;! File identifier</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER(HID_T) :: dset_id &#160;&#160;&#160;&#160;&#160;&#160;! Dataset identifier</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER(HID_T) :: dspace_id &#160;&#160;&#160;&#160;! Dataspace identifier</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER(HSIZE_T), DIMENSION(2) :: dims = (/NY, NX/) ! Dataset dimensions</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER &#160;&#160;&#160;&#160;:: &#160;&#160;&#160;rank = 2 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;! Dataset rank</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER &#160;&#160;&#160;&#160;:: &#160;&#160;&#160;data(NY,NX)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER &#160;&#160;&#160;&#160;:: &#160;&#160;error ! Error flag</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>INTEGER &#160;&#160;&#160;&#160;:: i, j</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Initialize data</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>do i = 1, NY</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>do j = 1, NX</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>data(i,j) = i + (j-1)*NY</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>enddo</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>enddo</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Data</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! &#160;1 &#160;6 &#160;11</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! &#160;2 &#160;7 &#160;12</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! &#160;3 &#160;8 &#160;13</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! &#160;4 &#160;9 &#160;14</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! &#160;5 10 &#160;15</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Initialize FORTRAN interface.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5open_f(error)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Create a new file using default properties.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5fcreate_f(filename, H5F_ACC_TRUNC_F, file_id, error)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Create the dataspace.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5screate_simple_f(rank, dims, dspace_id, error)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Create and write dataset using default properties.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5dcreate_f(file_id, dsetname, H5T_NATIVE_INTEGER, dspace_id, &amp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>dset_id, error, H5P_DEFAULT_F, H5P_DEFAULT_F, &amp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>H5P_DEFAULT_F)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5dwrite_f(dset_id, H5T_NATIVE_INTEGER, data, dims, error)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! End access to the dataset and release resources used by it.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5dclose_f(dset_id, error)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Terminate access to the data space.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5sclose_f(dspace_id, error)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Close the file.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5fclose_f(file_id, error)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>! Close FORTRAN interface.</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>!</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CALL h5close_f(error)</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>END PROGRAM DSETEXAMPLE</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode">&nbsp;</p>
 <p class="FM__BodyCellCode">SDSf_tr.out</p>
 <p class="FM__BodyCellCode">-----------</p>
 <p class="FM__BodyCellCode">HDF5 &quot;SDSf_tr.h5&quot; {</p>
 <p class="FM__BodyCellCode">GROUP &quot;/&quot; {</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>DATASET &quot;Fortran Transpose Matrix&quot; {</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>DATATYPE &#160;H5T_STD_I32LE</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>DATASPACE &#160;SIMPLE { ( 3, 5 ) / ( 3, 5 ) }</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>DATA {</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>1, 2, 3, 4, 5,</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>6, 7, 8, 9, 10,</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>11, 12, 13, 14, 15</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}</p>
 <p class="FM__BodyCellCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}</p>
 <p class="FM__BodyCellCode">}</p>
 <p class="FM__BodyCellCode">}</p>
 <p class="FM__Body">&nbsp;</p>
</body>
</html>