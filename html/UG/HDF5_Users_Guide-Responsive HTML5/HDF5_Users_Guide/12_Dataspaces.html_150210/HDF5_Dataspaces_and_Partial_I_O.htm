
<!DOCTYPE HTML>
<html>
<head>
 <meta http-equiv="X-UA-Compatible" content="IE=edge" />
 <meta name="OriginalFile" content="C:\1 MEE\Working\hdf5_trunk\html\UG\12_Dataspaces.html_150210.fm" />
 <meta name="Originator" content="ImportMif" />
 <meta content="How to fly your personal spaceship" name="search-keywords" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="viewport" content="width=100%, initial-scale=1" />
<meta name="generator" content="Adobe FrameMaker 12" />
<title>HDF5 User's Guide - HDF5 Dataspaces and Partial I/O</title>
<link href="../../template/Theme1_Standard/main.css" type="text/css" rel="stylesheet" />
<link href="../../template/Theme1_Standard/jqueryui-custom.css" type="text/css" rel="stylesheet" />
 <link rel="stylesheet" href="12_Dataspaces.html_150210.css" type="text/css" /><script type="text/javascript" language="JavaScript">//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]></script><style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadcsh.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/showhidecontrols.js"></script>
<script type="text/javascript" src="../../template/scripts/pageloader.js"></script>
<script type="text/javascript" src="../../template/scripts/toctree.js"></script>
<script type="text/javascript" src="../../template/scripts/toctreeloader.js"></script>
<script type="text/javascript" src="../../template/scripts/indextree.js"></script>
<script type="text/javascript" src="../../template/scripts/indextreeloader.js"></script>
<script type="text/javascript" src="../../template/scripts/glossarylist.js"></script>
<script type="text/javascript" src="../../template/scripts/glossarylistloader.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
<script type="text/javascript" src="../../template/scripts/searchfield.js"></script>
<script type="text/javascript" src="../../template/scripts/tabpanels.js"></script>
<script type="text/javascript" >
gTocPageHtml = "{%ICON%}<span  class=\"wTOCTreePageText\">{%LINK_NAME%}</span>";
gTocBookClosedHtml = "{%ICON%}<span  class=\"wTOCTreeCloseBookText\">{%LINK_NAME%}</span>";
gTocBookOpenHtml = "{%ICON%}<span  class=\"wTOCTreeCloseBookText\">{%LINK_NAME%}</span>";
gTocUrlHtml = "{%ICON%}<span  class=\"wTOCTreeLinkText\">{%LINK_NAME%}</span>";
gTocPageIconSrc = "../../template/Theme1_Standard/TOCTreePage.png";
gTocPageIconHoverSrc = "../../template/Theme1_Standard/TOCTreePageHover.png";
gTocPageIconSelSrc = "../../template/Theme1_Standard/TOCTreePageSelected.png";
gTocPageIconClass = "wTOCTreePageIcon";
gTocPageIconStyle = "";
gTocBookClosedIconSrc = "../../template/Theme1_Standard/TOCTreeCloseBook.png";
gTocBookClosedIconHoverSrc = "../../template/Theme1_Standard/TOCTreeCloseBookHover.png";
gTocBookClosedIconSelSrc = "../../template/Theme1_Standard/TOCTreeCloseBookSelected.png";
gTocBookClosedIconClass = "wTOCTreeCloseBookIcon";
gTocBookClosedIconStyle = "";
gTocBookOpenIconSrc = "../../template/Theme1_Standard/TOCTreeOpenBook.png";
gTocBookOpenIconHoverSrc = "../../template/Theme1_Standard/TOCTreeOpenBookHover.png";
gTocBookOpenIconSelSrc = "../../template/Theme1_Standard/TOCTreeOpenBookSelected.png";
gTocBookOpenIconClass = "wTOCTreeOpenBookIcon";
gTocBookOpenIconStyle = "";
gTocUrlIconSrc = "../../template/Theme1_Standard/TOCTreeLink.png";
gTocUrlIconHoverSrc = "../../template/Theme1_Standard/TOCTreeLinkHover.png";
gTocUrlIconSelSrc = "../../template/Theme1_Standard/TOCTreeLinkSelected.png";
gTocUrlIconClass = "wTOCTreeLinkIcon";
gTocUrlIconStyle = "";
</script>
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
</script>
<script type="text/javascript" >
gIdxKWHtml = "<span  class=\"wIdxKeywordText\">{%LINK_NAME%}</span>";
	gIdxLinkHtml = "<span  class=\"wIdxLinkText\">{%LINK_NAME%}</span>";
	gIdxCategoryHtml = "<span  class=\"wIdxAlphabetText\">{%LINK_NAME%}</span>";
</script>
<script type="text/javascript" >
gTopicId = "1_4";
</script>
<script type="text/javascript" >
gGloTermHtml = "<span  class=\"wGloTermText\">{%LINK_NAME%}</span>";
	gGloDefHtml = "<span  class=\"wGloDefinitionText\">{%LINK_NAME%}</span>";
	gGloCategoryHtml = "<span  class=\"wGloAlphabetText\">{%LINK_NAME%}</span>";
</script>
 <link rel="SHORTCUT ICON" href="../../Responsive HTML5_favicon.ico" />
</head>

<body>
<script type="text/javascript" src="../../ehlpdhtm.js"></script>



<div class="floatholder">
	<div class="phone_scrollarea overthrow">
		<div class="header">
			<table class="headertable">
				<tr>
					<td class="logo"><a href="../HDF5_UG_TitleWithoutSamples/HDF5_UG_TitleWithoutSamples.htm" class="homelink"><img src="../../template/Theme1_Standard/logo.png" alt="Logo" id="wLogoImage" style=" border:none; width:100%; max-width:53px;" border="0" /></a> </td>
					<td class="title"><div>
						<a href="../HDF5_UG_TitleWithoutSamples/HDF5_UG_TitleWithoutSamples.htm" class="homelink"><span>HDF5 User's Guide</span></a> 
						 
					</div></td>
					<td class="brsBack"><a id="browseSeqBack" class="wBSBackButton" href="../11_Datatypes.html_150210/HDF5_Datatypes.htm"><img alt="" src="../../template/Theme1_Standard/topic_left.png" class="wBSBackButton" border="0" style="width:100%; max-width:19px" /></a> </td>
					<td class="brsNext"><a id="browseSeqNext" class="wBSNextButton" href="../13_Attributes.html_150210/HDF5_Attributes.htm"><img alt="" src="../../template/Theme1_Standard/topic_right.png" class="wBSNextButton" border="0" style="width:100%; max-width:19px" /></a> </td>
				</tr>
			</table>
		</div>
		<div class="sidebar">
			<div data-showin="Always" class="wTabbedPanel" id="tabbedpanel">
				<ul class="wTabGroup" id="tab" data-tabid="tocTabButton" style="margin: 0px;">
					<li class="wTab" id="tocTabButton" data-contentid="tocTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/toc.png" class="normal" alt="Table of Contents" title="Table of Contents" id="xmlEditorTOCSidebarButton" style=" border:none; width:100%; max-width:30px;" border="0" /><img src="../../template/Theme1_Standard/toc_hover.png" class="hover" alt="Table of Contents" title="Table of Contents" id="xmlEditorTOCSidebarButtonHover" style=" border:none; width:100%; max-width:30px;" border="0" /></li>
					<li class="wTab" id="idxTabButton" data-contentid="idxTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/index.png" class="normal" alt="Index" title="Index" id="xmlEditorIDXSidebarButton" style=" border:none; width:100%; max-width:30px;" border="0" /><img src="../../template/Theme1_Standard/index_hover.png" class="hover" alt="Index" title="Index" id="xmlEditorIDXSidebarButtonHover" style=" border:none; width:100%; max-width:30px;" border="0" /></li>
					<li class="wTab" id="gloTabButton" data-contentid="gloTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/glo.png" class="normal" alt="Glossary" title="Glossary" id="xmlEditorGLOSidebarButton" style=" border:none; width:100%; max-width:34px;" border="0" /><img src="../../template/Theme1_Standard/glo_hover.png" class="hover" alt="Glossary" title="Glossary" id="xmlEditorGLOSidebarButtonHover" style=" border:none; width:100%; max-width:34px;" border="0" /></li>
				</ul>
				<div class="wTabContentGroup">
					<div id="tocTabPane" class="wTabContent">
						<div id="toc" class="wTOCTree" tabindex="368">
							
							
							
							
						</div>
					</div>
					<div id="idxTabPane" class="wTabContent">
						<div id="idx" class="wIndex">
							<input class="wIdxFilter" id="idxFilterBox" type="text" data-placeholder="Filter Keyword" onkeyup="filterIdx()"></input>
							
							
							
						</div>
					</div>
					<div id="gloTabPane" class="wTabContent">
						<div id="glo" class="wGlossary">
							<input class="wGloFilter" id="gloFilterBox" type="text" data-placeholder="Filter Term" onkeyup="filterGlo()"></input>
							
							
							
						</div>
					</div>
				</div>
			</div>
			<div class="closebutton buttonOpened">
				&#160; 
			</div>
		</div>
		<div class="content">
			<div class="desktop_functionholder">
				<div class="searchholder">
					<div class="wSearchField">
						<input id="searchBox" class="wSearchField" type="search" data-placeholder="-Search-" onkeydown="searchHelp(event, 'searchBox')" data-search="true" /><a class="wSearchLink" onclick="searchHelp(null, 'searchBox')" href="#"><img src="../../template/Theme1_Standard/Search.png" alt="" id="xmlEditwSearchLink" class="wSearchLink" border="0" style="width:100%; max-width:24px" /></a> 
						 
					</div>
				</div>
				<div class="home">
					<a href="../HDF5_UG_TitleWithoutSamples/HDF5_UG_TitleWithoutSamples.htm"><img src="../../template/Theme1_Standard/home.png" alt="" class="homebutton normal" id="xmlEditorHomeButton" border="0" style="width:100%; max-width:27px" /><img src="../../template/Theme1_Standard/home_hover.png" alt="" class="homebutton hover" id="xmlEditorHomeButtonHover" border="0" style="width:100%; max-width:27px" /></a> 
				</div>
				<div class="print">
					<a href="javascript:window.print()" class="wPrintButton"><img src="../../template/Theme1_Standard/Print.png" alt="" class="wPrintButton normal" id="xmlEditorPrintButton" border="0" style="width:100%; max-width:30px" /><img src="../../template/Theme1_Standard/Print_hover.png" alt="" class="wPrintButton hover" id="xmlEditorPrintButtonHover" border="0" style="width:100%; max-width:30px" /></a> 
				</div>
				<div class="brsBack">
					<a id="browseSeqBack0" class="wBSBackButton" href="../11_Datatypes.html_150210/HDF5_Datatypes.htm"><img alt="" src="../../template/Theme1_Standard/BSBack.png" class="wBSBackButton normal" id="xmlEditorBSBackButton" border="0" style="width:100%; max-width:19px" /><img alt="" src="../../template/Theme1_Standard/BSBack_hover.png" class="wBSBackButton hover" id="xmlEditorBSBackButtonHover" border="0" style="width:100%; max-width:19px" /></a> 
					 
				</div>
				<div class="brsNext">
					<a id="browseSeqNext0" class="wBSNextButton" href="../13_Attributes.html_150210/HDF5_Attributes.htm"><img alt="" src="../../template/Theme1_Standard/BSNext.png" class="wBSNextButton normal" id="xmlEditorBSNextButton" border="0" style="width:100%; max-width:19px" /><img alt="" src="../../template/Theme1_Standard/BSNext_hover.png" class="wBSNextButton hover" id="xmlEditorBSNextButtonHover" border="0" style="width:100%; max-width:19px" /></a> 
					 
				</div>
			</div>
			<div class="contentholder">
				<a name="content_top_placeholder"></a> 
				<div class="wTopic" id="rh_default_topic_placeholder_id">


 <p class="FM__Heading_Level1">7. <a name="XREF_DataspacesChapter"></a>HDF5 Dataspaces and Partial I/O</p>
 <p class="FM__Body">&lt;a name=&quot;Intro&quot;&gt;</p>
 <p class="FM__Body">&lt;h3&gt;7.1. Introduction&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">The HDF5 <span class="FM_EI_EmphasisItalic" style="font-family : Calibri; font-style : italic; font-weight : normal; font-size  : 11.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">dataspace</span>&#160;is a required component of an HDF5 dataset or attribute definition. The dataspace defines the size and shape of the dataset or attribute raw data. In other words, a dataspace defines the number of dimensions and the size of each dimension of the multidimensional array in which the raw data is represented. The dataspace must be defined when the dataset or attribute is created.</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;The &lt;em&gt;dataspace&lt;/em&gt; is also used during dataset I/O operations,</p>
 <p class="FM__Body"> &#160;defining the elements of the dataset that participate in the I/O operation.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This chapter explains the &lt;em&gt;dataspace&lt;/em&gt; object and </p>
 <p class="FM__Body"> &#160;its use in dataset and attribute creation and data transfer.</p>
 <p class="FM__Body"> &#160;It also describes selection operations on a dataspace used to</p>
 <p class="FM__Body"> &#160;implement sub-setting, sub-sampling, and scatter-gather access to datasets.</p>
 <p class="FM__Body"> &#160;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The rest of this chapter is structured as follows:&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;Section 2, &amp;ldquo;Dataspace Function Summaries,&amp;rdquo; </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;provides a categorized list of dataspace functions, </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;also known as the H5S APIs&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;Section 3, &amp;ldquo;Definition of Dataspace Objects and </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;the Dataspace Programming Model,&amp;rdquo; </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;describes dataspace objects and the programming model, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;including the creation and use of dataspaces&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;Section 4, &amp;ldquo;Dataspaces and Data Transfer,&amp;rdquo; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;describes the use of dataspaces in data transfer&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;Section 5, &amp;ldquo;Dataspace Selection Operations and Data </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Transfer,&amp;rdquo; describes selection operations on dataspaces </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;and their usage in data transfer&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;Section 6, &amp;ldquo;References to Dataset Regions,&amp;rdquo; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;briefly discusses references to dataset regions&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;Section 7, &amp;ldquo;Sample Programs,&amp;rdquo; </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;contains the full programs from which several of the code samples </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;in this chapter were derived&lt;/li&gt;</p>
 <p class="FM__Body"> &lt;/ul&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;a name=&quot;DSpaceFunctSums&quot;&gt;</p>
 <p class="FM__Body">&lt;div align=&quot;right&quot;&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=-1&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;DSpaceFunctSums&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=&quot;pagebefore&quot;&gt;7.2. Dataspace (H5S) Function Summaries&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This section provides a reference list of dataspace functions, </p>
 <p class="FM__Body"> &#160;the H5S APIs, with brief descriptions.</p>
 <p class="FM__Body"> &#160;The functions are presented in the following catagories:&lt;/p&gt;</p>
 <p class="FM__Body">&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&lt;li&gt;Dataspace management functions&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;li&gt;Dataspace query functions&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;li&gt;Dataspace selection functions: hyperslabs&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;li&gt;Dataspace selection functions: points&lt;/li&gt;</p>
 <p class="FM__Body">&lt;/ul&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The rest of the chapter will provide examples and explanations </p>
 <p class="FM__Body"> &#160;of how to use these functions.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Function Listing 1. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Dataspace management functions&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;C Function&lt;br /&gt;Fortran Function&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Purpose&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Screate&lt;br /&gt;h5screate_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Creates a new dataspace of a specified type.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Scopy&lt;br /&gt;h5scopy_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Creates an exact copy of a dataspace.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sclose&lt;br /&gt;h5sclose_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Releases and terminates access to a dataspace.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sdecode&lt;br /&gt;h5sdecode_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Decode a binary object description of a dataspace and return a new </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;object identifier. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sencode&lt;br /&gt;h5sencode&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Encode a dataspace object description into a binary buffer. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Screate_simple&lt;br /&gt;h5screate_simple_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Creates a new simple dataspace and opens it for access.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sis_simple&lt;br /&gt;h5sis_simple_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Determines whether a dataspace is a simple dataspace.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sextent_copy&lt;br /&gt;h5sextent_copy_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Copies the extent of a dataspace.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sextent_equal&lt;br /&gt;h5sextent_equal_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Determines whether two dataspace extents are equal.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sset_extent_simple&lt;br /&gt;h5sset_extent_simple_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Sets or resets the size of an existing dataspace.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sset_extent_none&lt;br /&gt;h5sset_extent_none_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Removes the extent from a dataspace.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Function Listing 2. Dataspace query functions&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;C Function&lt;br /&gt;Fortran Function&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Purpose&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sget_simple_extent_dims&lt;br /&gt;h5sget_simple_extent_dims_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves dataspace dimension size and maximum size.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sget_simple_extent_ndims&lt;br /&gt;h5sget_simple_extent_ndims_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Determines the dimensionality of a dataspace.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sget_simple_extent_npoints&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;h5sget_simple_extent_npoints_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Determines the number of elements in a dataspace.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sget_simple_extent_type&lt;br /&gt;h5sget_simple_extent_type_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Determine the current class of a dataspace.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Function Listing 3. Dataspace selection functions: hyperslabs</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;C Function&lt;br /&gt;Fortran Function&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Purpose&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Soffset_simple&lt;br /&gt;h5soffset_simple_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Sets the offset of a simple dataspace.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sget_select_type&lt;br /&gt;h5sget_select_type_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Determines the type of the dataspace selection.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sget_select_hyper_nblocks&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;h5sget_select_hyper_nblocks_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Get number of hyperslab blocks.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sget_select_hyper_blocklist&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;h5sget_select_hyper_blocklist_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Gets the list of hyperslab blocks currently selected.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sget_select_bounds&lt;br /&gt;h5sget_select_bounds_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Gets the bounding box containing the current selection.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sselect_all&lt;br /&gt;h5sselect_all_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Selects the entire dataspace.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sselect_none&lt;br /&gt;h5sselect_none_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Resets the selection region to include no elements.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sselect_valid&lt;br /&gt;h5sselect_valid_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Verifies that the selection is within the extent of the dataspace.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sselect_hyperslab&lt;br /&gt;h5sselect_hyperslab_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Selects a hyperslab region to add to the current selected region.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Function Listing 4. Dataspace selection functions: points</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;C Function&lt;br /&gt;Fortran Function&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Purpose&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sget_select_npoints&lt;br /&gt;h5sget_select_npoints_f&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Determines the number of elements in a dataspace selection.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sget_select_elem_npoints&lt;br /&gt;h5sget_select_elem_npoints_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Gets the number of element points in the current selection.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sget_select_elem_pointlist&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;h5sget_select_elem_pointlist_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Gets the list of element points currently selected.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Sselect_elements&lt;br /&gt;h5sselect_elements_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Selects array elements to be included in the selection for a dataspace.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;a name=&quot;DefDataObjs&quot;&gt;</p>
 <p class="FM__Body">&lt;div align=&quot;right&quot;&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=-1&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;DefDataObjs&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=&quot;pagebefore&quot;&gt;7.3. Definition of Dataspace Objects and </p>
 <p class="FM__Body"> &#160;&#160;&#160;the Dataspace Programming Model&lt;/h3&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This section introduces the notion of the HDF5 dataspace object </p>
 <p class="FM__Body"> &#160;and a programming model for creating and working with dataspaces.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;h4&gt;7.3.1. Dataspace Objects&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;An HDF5 dataspace is a required component of an HDF5 dataset or attribute. </p>
 <p class="FM__Body">&#160;&#160;A dataspace defines the size and the shape of a dataset&amp;rsquo;s or an </p>
 <p class="FM__Body">&#160;&#160;attribute&amp;rsquo;s raw data. </p>
 <p class="FM__Body"> &#160;Currently, HDF5 supports the following types of the dataspaces: &lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Scalar dataspaces&lt;/li&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Simple dataspaces&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Null dataspaces&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;/ul&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A &lt;em&gt;scalar dataspace&lt;/em&gt;, &lt;code&gt;H5S_SCALAR&lt;/code&gt;, </p>
 <p class="FM__Body">&#160;&#160;represents just one element, a scalar. </p>
 <p class="FM__Body">&#160;&#160;Note that the datatype of this one element may be very complex, </p>
 <p class="FM__Body">&#160;&#160;e.g., a compound structure with members being of </p>
 <p class="FM__Body">&#160;&#160;any allowed HDF5 datatype, including </p>
 <p class="FM__Body"> &#160;multidimensional arrays, strings, and nested compound structures.</p>
 <p class="FM__Body">&#160;&#160;By convention, the rank of a scalar dataspace is always </p>
 <p class="FM__Body"> &#160;&lt;code&gt;0&lt;/code&gt; (zero); think of it geometrically as a single, </p>
 <p class="FM__Body"> &#160;dimensionless point, though that point may be complex.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A &lt;i&gt;simple dataspace&lt;/i&gt;, &lt;code&gt;H5S_SIMPLE&lt;/code&gt;, </p>
 <p class="FM__Body">&#160;&#160;is a multidimensional array of elements. </p>
 <p class="FM__Body">&#160;&#160;The dimensionality of the dataspace (or the rank of the array) </p>
 <p class="FM__Body">&#160;&#160;is fixed and is defined at creation time. </p>
 <p class="FM__Body">&#160;&#160;The size of each dimension can grow during the life time of the dataspace </p>
 <p class="FM__Body"> &#160;from the &lt;i&gt;current size&lt;/i&gt; up to the &lt;i&gt;maximum size&lt;/i&gt;. </p>
 <p class="FM__Body">&#160;&#160;Both the current size and the maximum size are specified at </p>
 <p class="FM__Body">&#160;&#160;creation time. </p>
 <p class="FM__Body">&#160;&#160;The sizes of dimensions at any particular time in the life of a dataspace </p>
 <p class="FM__Body"> &#160;are called the &lt;i&gt;current dimensions&lt;/i&gt;, or the &lt;i&gt;dataspace extent&lt;/i&gt;. </p>
 <p class="FM__Body"> &#160;They can be queried along with the maximum sizes.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A &lt;em&gt;null dataspace&lt;/em&gt;, &lt;code&gt;H5S_NULL&lt;/code&gt;, </p>
 <p class="FM__Body"> &#160;contains no data elements.</p>
 <p class="FM__Body">&#160;&#160;Note that no selections can be applied to a null dataset </p>
 <p class="FM__Body"> &#160;as there is nothing to select.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;As shown in the UML diagram in the figure below, an HDF5 simple </p>
 <p class="FM__Body">&#160;&#160;dataspace object has three attributes: the rank or number of dimensions; </p>
 <p class="FM__Body">&#160;&#160;the current sizes, expressed as an array of length </p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;codeVar&quot;&gt;rank&lt;/span&gt; with each element of the array </p>
 <p class="FM__Body">&#160;&#160;denoting the current size of the corresponding dimension; and the </p>
 <p class="FM__Body">&#160;&#160;maximum sizes, expressed as an array of length </p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;codeVar&quot;&gt;rank&lt;/span&gt; with each element of the array </p>
 <p class="FM__Body"> &#160;denoting the maximum size of the corresponding dimension. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;400&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;1&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;Simple dataspace&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;&amp;nbsp;rank:int&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;&amp;nbsp;current_size:hsize_t[rank]&amp;nbsp;&amp;nbsp;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;&amp;nbsp;maximum_size:hsize_t[rank]&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&amp;nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 1. A simple dataspace&lt;/b&gt; &lt;br /&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;A simple dataspace is defined by its rank, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;the current size of each dimension, and</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;the maximum size of each dimension.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The size of a current dimension cannot be greater than </p>
 <p class="FM__Body">&#160;&#160;the maximum size, which can be unlimited, </p>
 <p class="FM__Body"> &#160;specified as &lt;code&gt;H5S_UNLIMITED&lt;/code&gt;. </p>
 <p class="FM__Body"> &#160;Note that while the HDF5 file format and library impose no maximum size</p>
 <p class="FM__Body">&#160;&#160;on an unlimited dimension, practically speaking its size </p>
 <p class="FM__Body">&#160;&#160;will always be limited to the biggest integer available on the </p>
 <p class="FM__Body"> &#160;particular system being used. &lt;/p&gt;</p>
 <p class="FM__Body">&lt;!-- &#160;editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [ Prior excessively casual phrasing replaced (...the caveat that the value of infinity is limited to...). ] ] ]&lt;/span&gt;) </p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Dataspace rank is restricted to 32, </p>
 <p class="FM__Body">&#160;&#160;the standard limit in C on the rank of an array, </p>
 <p class="FM__Body">&#160;&#160;in the current implementation of the HDF5 Library. </p>
 <p class="FM__Body">&#160;&#160;The HDF5 file format, on the other hand, allows any rank up to the </p>
 <p class="FM__Body">&#160;&#160;maximum integer value on the system, so the library restriction can be </p>
 <p class="FM__Body"> &#160;raised in the future if higher dimensionality is required.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Note that most of the time Fortran applications calling HDF5 will </p>
 <p class="FM__Body"> &#160;work with dataspaces of rank less than or equal to seven,</p>
 <p class="FM__Body">&#160;&#160;since seven is &#160;the maximum number of dimensions in a Fortran array. &#160;</p>
 <p class="FM__Body"> &#160;But dataspace rank is not limited to seven for Fortran applications.&lt;/p&gt;</p>
 <p class="FM__Body">&lt;!-- &#160;editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [ or &quot;But with the use of XXX, Fortran applications can [easily?] work with dataspace rank of up to 32.&quot; ] ] ]&lt;/span&gt;) </p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The current dimensions of a dataspace, also referred to as the </p>
 <p class="FM__Body">&#160;&#160;dataspace extent, define the bounding box for dataset elements that </p>
 <p class="FM__Body"> &#160;can participate in I/O operations.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;ProgModel&quot;&gt; </p>
 <p class="FM__Body">&lt;h4&gt;7.3.2. Programming Model&lt;/h4&gt;</p>
 <p class="FM__Body">&lt;/a&gt; </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;</p>
 <p class="FM__Body">&#160;&#160;The programming model for creating and working with HDF5 dataspaces </p>
 <p class="FM__Body"> &#160;can be summarized as follows:&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;ol&gt;&lt;li&gt;Create a dataspace&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;Use the dataspace to create a dataset in the file or </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;to describe a data array in memory&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;Modify the dataspace to define dataset elements that will </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;participate in I/O operations&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;Use the modified dataspace while reading/writing dataset raw </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data or to create a region reference&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;Close the dataspace when no longer needed&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;/ol&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The rest of this section will address </p>
 <p class="FM__Body"> &#160;steps 1, 2, and 5 of the programming model;</p>
 <p class="FM__Body"> &#160;steps 3 and 4 will be discussed in later sections of this chapter.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;h4&gt;7.3.2.1. Creating a Dataspace&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A dataspace can be created by calling the</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;codeText&quot;&gt;H5Screate&lt;/span&gt; function</p>
 <p class="FM__Body"> &#160;(&lt;span class=&quot;codeText&quot;&gt;h5screate_f&lt;/span&gt; in Fortran). </p>
 <p class="FM__Body">&#160;&#160;Since the definition of a simple dataspace requires the specification of </p>
 <p class="FM__Body">&#160;&#160;dimensionality (or rank) and initial and maximum dimension sizes, </p>
 <p class="FM__Body"> &#160;the HDF5 Library provides a &lt;i&gt;convenience&lt;/i&gt; API, </p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;codeText&quot;&gt;H5Screate_simple&lt;/span&gt; </p>
 <p class="FM__Body"> &#160;(&lt;span class=&quot;codeText&quot;&gt;h5screate_simple_f&lt;/span&gt;) </p>
 <p class="FM__Body"> &#160;to create a simple dataspace in one step.&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The following examples illustrate the usage of these APIs.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;h4&gt;7.3.2.2. Creating a Scalar Dataspace&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A scalar dataspace is created with the &lt;code&gt;H5Screate&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;or the &lt;code&gt;h5screate_f&lt;/code&gt; function.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In C:&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hid_t space_id;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;. . .</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;space_id = H5Screate(H5S_SCALAR);</p>
 <p class="FM__Body"> &#160;&lt;/pre&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In Fortran:&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;INTEGER(HID_T) :: space_id</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;. . .</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CALL h5screate_f(H5S_SCALAR_F, space_id, error)</p>
 <p class="FM__Body"> &#160;&lt;/pre&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;As mentioned above, the dataspace will contain only one element.</p>
 <p class="FM__Body">&#160;&#160;Scalar dataspaces are used more often for describing attributes </p>
 <p class="FM__Body">&#160;&#160;that have just one value, e.g. the attribute </p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;codeText&quot;&gt;temperature&lt;/span&gt; with the value </p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;codeText&quot;&gt;celsius&lt;/span&gt; is used to indicate that the </p>
 <p class="FM__Body"> &#160;dataset with this attribute stores temperature values using the celsius scale.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;h4&gt;7.3.2.3. Creating a Null Dataspace&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A null dataspace is created with the &lt;code&gt;H5Screate&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;or the &lt;code&gt;h5screate_f&lt;/code&gt; function.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In C:&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hid_t space_id;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;. . .</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;space_id = H5Screate(H5S_NULL);</p>
 <p class="FM__Body"> &#160;&lt;/pre&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In Fortran: &lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;(&lt;code&gt;H5S_NULL&lt;/code&gt; not yet implemented in Fortran.)</p>
 <p class="FM__Body"> &#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;INTEGER(HID_T) :: space_id</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;. . .</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CALL h5screate_f(H5S_NULL_F, space_id, error)</p>
 <p class="FM__Body"> &#160;&lt;/pre&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;As mentioned above, the dataspace will contain no elements.</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;NEED MORE INFO. &#160;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SPECIFICALLY, HOW ARE SUCH DATASPACES USED? </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;AND WHAT ATTRIBUTES ARE RELEVANT?</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;h4&gt;7.3.2.4. Creating a Simple Dataspace&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Let&amp;rsquo;s assume that an application wants to store a </p>
 <p class="FM__Body">&#160;&#160;two-dimensional array of data, A(20,100). </p>
 <p class="FM__Body">&#160;&#160;During the life of the application, the first dimension of the array </p>
 <p class="FM__Body">&#160;&#160;can grow up to 30; there is no restriction on the size of the </p>
 <p class="FM__Body">&#160;&#160;second dimension. </p>
 <p class="FM__Body">&#160;&#160;The following steps are used to declare a dataspace for the dataset </p>
 <p class="FM__Body"> &#160;in which the array data will be stored.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In C:&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hid_t space_id;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;int rank = 2;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hsize_t current_dims[2] = {20, 100};</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hsize_t max_dims[2] = {30, H5S_UNLIMITED};</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;. . .</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;space_id = H5Screate(H5S_SIMPLE);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5Sset_extent_simple(space_id,rank,current_dims,max_dims);</p>
 <p class="FM__Body"> &#160;&lt;/pre&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In Fortran:&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;INTEGER(HID_T) :: space_id</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;INTEGER :: rank = 2</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;INTEGER(HSIZE_T) :: current dims = /( 20, 100)/</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;INTEGER(HSIZE_T) :: max_dims = /(30, H5S_UNLIMITED_F)/</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;INTEGER error </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;. . .</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CALL h5screate_f(H5S_SIMPLE_F, space_id, error)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CALL h5sset_extent_simple_f(space_id, rank, current_dims, max_dims, error)</p>
 <p class="FM__Body"> &#160;&lt;/pre&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Alternatively, the convenience APIs </p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;codeText&quot;&gt;H5Screate_simple&lt;/span&gt;/&lt;span class=&quot;codeText&quot;&gt;h5screate_simple_f&lt;/span&gt; </p>
 <p class="FM__Body"> &#160;can replace the &lt;span class=&quot;codeText&quot;&gt;H5Screate&lt;/span&gt;/&lt;span class=&quot;codeText&quot;&gt;h5screate_f&lt;/span&gt; </p>
 <p class="FM__Body"> &#160;and &lt;span class=&quot;codeText&quot;&gt;H5Sset_extent_simple&lt;/span&gt;/&lt;span class=&quot;codeText&quot;&gt;h5sset_extent_&#173;simple_f&lt;/span&gt; </p>
 <p class="FM__Body"> &#160;calls.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In C:&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;space_id = H5Screate_simple(rank, current_dims, max_dims);</p>
 <p class="FM__Body"> &#160;&lt;/pre&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In Fortran:&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CALL h5screate_simple_f(rank, current_dims, space_id, error, max_dims)</p>
 <p class="FM__Body"> &#160;&lt;/pre&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In this example, a dataspace with current dimensions of 20 by 100 </p>
 <p class="FM__Body">&#160;&#160;is created. The first dimension can be extended only up to 30. The </p>
 <p class="FM__Body">&#160;&#160;second dimension, however, is declared unlimited; it can be extended </p>
 <p class="FM__Body"> &#160;up to the largest available integer value on the system.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Note that when there is a difference between the current dimensions </p>
 <p class="FM__Body">&#160;&#160;and the maximum dimensions of an array, then chunking storage must be </p>
 <p class="FM__Body">&#160;&#160;used. In other words, if the number of dimensions may change over the </p>
 <p class="FM__Body">&#160;&#160;life of the dataset, then chunking must be used. If the array dimensions </p>
 <p class="FM__Body">&#160;&#160;are fixed (if the number of current dimensions is equal to the maximum </p>
 <p class="FM__Body">&#160;&#160;number of dimensions when the dataset is created), then contiguous </p>
 <p class="FM__Body"> &#160;storage can be used. See the &amp;ldquo;</p>
 <p class="FM__Body"> &#160;&lt;a href=&quot;10_Datasets.html#DTransfer&quot;&gt;Data Transfer&lt;/a&gt;&amp;rdquo; </p>
 <p class="FM__Body"> &#160;section in the &amp;ldquo;&lt;a href=&quot;UG_frame10Datasets.html&quot; target=_top&gt;</p>
 <p class="FM__Body"> &#160;Datasets&lt;/a&gt;&amp;rdquo; chapter.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Maximum dimensions can be the same as current dimensions. </p>
 <p class="FM__Body">&#160;&#160;In such a case, the sizes of dimensions cannot be changed during the life </p>
 <p class="FM__Body">&#160;&#160;of the dataspace object. </p>
 <p class="FM__Body"> &#160;In C, &lt;span class=&quot;codeText&quot;&gt;NULL&lt;/span&gt; can be used to indicate to </p>
 <p class="FM__Body"> &#160;the &lt;span class=&quot;codeText&quot;&gt;H5Screate_simple&lt;/span&gt; and </p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;codeText&quot;&gt;H5Sset_extent_simple&lt;/span&gt; functions that the </p>
 <p class="FM__Body">&#160;&#160;maximum sizes of all dimensions are the same as the current sizes. </p>
 <p class="FM__Body">&#160;&#160;In Fortran, the maximum size parameter is optional for </p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;codeText&quot;&gt;h5screate_simple_f&lt;/span&gt; and can be omitted </p>
 <p class="FM__Body"> &#160;when the sizes are the same.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In C:&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;space_id = H5Screate_simple(rank, current_dims, NULL);</p>
 <p class="FM__Body"> &#160;&lt;/pre&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In Fortran:&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CALL h5screate_f(rank, current_dims, space_id, error)</p>
 <p class="FM__Body"> &#160;&lt;/pre&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The created dataspace will have current and maximum dimensions </p>
 <p class="FM__Body">&#160;&#160;of 20 and 100 correspondingly, </p>
 <p class="FM__Body"> &#160;and the sizes of those dimensions cannot be changed.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;h4&gt;7.3.2.5. C versus Fortran Dataspaces&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Dataspace dimensions are numbered from 1 to </p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;codeVar&quot;&gt;rank&lt;/span&gt;. HDF5 uses C storage conventions, </p>
 <p class="FM__Body">&#160;&#160;assuming that the last listed dimension is the fastest-changing dimension </p>
 <p class="FM__Body">&#160;&#160;and the first-listed dimension is the slowest changing. &#160;</p>
 <p class="FM__Body">&lt;!-- &#160;editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [ Fortran, on the other hand, .... ? ] ] ]&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&#160;&#160;The HDF5 file format storage layout specification adheres to the C convention </p>
 <p class="FM__Body">&#160;&#160;and the HDF5 Library adheres to the same convention </p>
 <p class="FM__Body">&#160;&#160;when storing dataspace dimensions in the file. </p>
 <p class="FM__Body">&#160;&#160;This affects how C programs and tools interpret data written </p>
 <p class="FM__Body">&#160;&#160;from Fortran programs and vice versa. </p>
 <p class="FM__Body"> &#160;The example below illustrates the issue.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;When a Fortran application describes a dataspace to store an array </p>
 <p class="FM__Body">&#160;&#160;as A(20,100), it specifies the value of the first dimension to be 20 </p>
 <p class="FM__Body">&#160;&#160;and the second to be 100. &#160;</p>
 <p class="FM__Body">&#160;&#160;Since Fortran stores data by columns, </p>
 <p class="FM__Body"> &#160;the first-listed dimension with the value 20 is the fastest-changing</p>
 <p class="FM__Body">&#160;&#160;dimension and the last-listed dimension with the value 100 is the </p>
 <p class="FM__Body">&#160;&#160;slowest-changing. </p>
 <p class="FM__Body">&#160;&#160;In order to adhere to the HDF5 storage convention, </p>
 <p class="FM__Body">&#160;&#160;the HDF5 Fortran wrapper transposes dimensions, </p>
 <p class="FM__Body">&#160;&#160;so the first dimension becomes the last. </p>
 <p class="FM__Body">&#160;&#160;The dataspace dimensions stored in the file will be 100,20 instead </p>
 <p class="FM__Body">&#160;&#160;of 20,100 in order to correctly describe the Fortran data that is </p>
 <p class="FM__Body"> &#160;stored in 100 columns, each containing 20 elements.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;When a Fortran application reads the data back, </p>
 <p class="FM__Body">&#160;&#160;the HDF5 Fortran wrapper transposes the dimensions once more, </p>
 <p class="FM__Body">&#160;&#160;returning the first dimension to be 20 and the second to be 100, </p>
 <p class="FM__Body">&#160;&#160;describing correctly the sizes of the array that should be used </p>
 <p class="FM__Body"> &#160;to read data in the Fortran array A(20,100).&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;When a C application reads data back, </p>
 <p class="FM__Body">&#160;&#160;the dimensions will come out as 100 and 20, </p>
 <p class="FM__Body">&#160;&#160;correctly describing the size of the array to read data into, </p>
 <p class="FM__Body">&#160;&#160;since the data was written as 100 records of 20 elements each. </p>
 <p class="FM__Body"> &#160;Therefore C tools such as &lt;span class=&quot;codeText&quot;&gt;h5dump&lt;/span&gt; </p>
 <p class="FM__Body"> &#160;and &lt;span class=&quot;codeText&quot;&gt;h5ls&lt;/span&gt; always display </p>
 <p class="FM__Body">&#160;&#160;transposed dimensions and values for the data written </p>
 <p class="FM__Body"> &#160;by a Fortran application. &#160;&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Consider the following simple example of equivalent </p>
 <p class="FM__Body"> &#160;C 3 x 5 and Fortran 5 x 3 arrays.</p>
 <p class="FM__Body"> &#160;As illustrated in the figure &lt;!-- formerly Figure 3 --&gt;below, </p>
 <p class="FM__Body">&#160;&#160;a C applications will store </p>
 <p class="FM__Body"> &#160;a 3 x 5 2-dimensional array as three 5-element rows.</p>
 <p class="FM__Body">&#160;&#160;In order to store the same data in the same order, </p>
 <p class="FM__Body">&#160;&#160;a Fortran application must view the array as as a 5 x 3 array with </p>
 <p class="FM__Body"> &#160;three 5-element columns.</p>
 <p class="FM__Body">&#160;&#160;The dataspace of this dataset, as written from Fortran, </p>
 <p class="FM__Body">&#160;&#160;will therefore be described as 5 x 3 in the application </p>
 <p class="FM__Body">&#160;&#160;but stored and described in the file according to the C convention </p>
 <p class="FM__Body"> &#160;as a 3 x 5 array.</p>
 <p class="FM__Body">&#160;&#160;This ensures that C and Fortran applications will always read </p>
 <p class="FM__Body"> &#160;the data in the order in which it was written.</p>
 <p class="FM__Body"> &#160;The HDF5 Fortran interface handles this transposition automatically.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In C (from &lt;a href=&quot;#h5_write_c&quot;&gt;&lt;code&gt;h5_write.c&lt;/code&gt;&lt;/a&gt;):&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#define NX &#160;&#160;&#160;&#160;3 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* dataset dimensions */</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#define NY &#160;&#160;&#160;&#160;5</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;. . .</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;int &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data[NX][NY]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* data to write */</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;. . .</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;* Data &#160;and output buffer initialization.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for (j = 0; j &amp;lt; NX; j++) {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for (i = 0; i &amp;lt; NY; i++)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data[j][i] = i + 1 + j*NY;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;* &#160;1 &#160;2 &#160;3 &#160;4 &#160;5</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;* &#160;6 &#160;7 &#160;8 &#160;9 10</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;* 11 12 13 14 15</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;. . .</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dims[0] = NX;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dims[1] = NY;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dataspace = H5Screate_simple(RANK, dims, NULL);</p>
 <p class="FM__Body"> &#160;&lt;/pre&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In Fortran (from &lt;a href=&quot;#h5_write_f90&quot;&gt;&lt;code&gt;h5_write.f90&lt;/code&gt;)&lt;/a&gt;:&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;INTEGER, PARAMETER :: NX = 3</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;INTEGER, PARAMETER :: NY = 5</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;. . .</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;INTEGER(HSIZE_T), DIMENSION(2) :: dims = (/3,5/) ! Dataset dimensions</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;---</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;INTEGER &#160;&#160;&#160;&#160;:: &#160;&#160;&#160;data(NX,NY)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;. . .</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;! Initialize data</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;do i = 1, NX</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;do j = 1, NY</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data(i,j) = j + (i-1)*NY</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;enddo</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;enddo</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;! Data</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;! &#160;1 &#160;2 &#160;3 &#160;4 &#160;5</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;! &#160;6 &#160;7 &#160;8 &#160;9 10</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;! 11 12 13 14 15</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;. . .</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CALL h5screate_simple_f(rank, dims, dspace_id, error)</p>
 <p class="FM__Body"> &#160;&lt;/pre&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In Fortran (from &lt;a href=#h5_write_tr_f90&gt;</p>
 <p class="FM__Body"> &#160;&lt;code&gt;h5_write_tr.f90&lt;/code&gt;):&lt;/a&gt;&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;INTEGER, PARAMETER :: NX = 3</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;INTEGER, PARAMETER :: NY = 5</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;. . .</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;INTEGER(HSIZE_T), DIMENSION(2) :: dims = (/NY, NX/) ! Dataset dimensions</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;. . .</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;! Initialize data</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;do i = 1, NY</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;do j = 1, NX</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data(i,j) = i + (j-1)*NY</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;enddo</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;enddo</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;! Data</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;! &#160;1 &#160;6 &#160;11</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;! &#160;2 &#160;7 &#160;12</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;! &#160;3 &#160;8 &#160;13</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;! &#160;4 &#160;9 &#160;14</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;! &#160;5 10 &#160;15</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;. . .</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CALL h5screate_simple_f(rank, dims, dspace_id, error)</p>
 <p class="FM__Body"> &#160;&lt;/pre&gt; </p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;table border=&quot;0&quot; width=&quot;95%&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr align=&quot;left&quot; valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;35%&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;p&gt;A dataset stored by a&lt;br /&gt;C program in a 3 x 5 array:&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;1&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;1&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;2&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;3&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;4&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;5&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;6&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;7&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;8&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;9&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;10&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;11&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;12&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;13&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;14&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;15&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;15%&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;45%&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;p&gt;The same dataset stored by a&lt;br /&gt;Fortran program in a 5 x 3 array:&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;1&quot; width=&quot;48%&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;33%&quot;&gt;1&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;34%&quot;&gt;6&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;33%&quot;&gt;11&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;33%&quot;&gt;2&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;34%&quot;&gt;7&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;33%&quot;&gt;12&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;33%&quot;&gt;3&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;34%&quot;&gt;8&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;33%&quot;&gt;13&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;33%&quot;&gt;4&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;34%&quot;&gt;9&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;33%&quot;&gt;14&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;33%&quot;&gt;5&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;34%&quot;&gt;10&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;33%&quot;&gt;15&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;5%&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;table width=&quot;95%&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;&lt;br /&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The left-hand dataset above as written to an HDF5 </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;file from C or the right-hand dataset as written from Fortran:</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;table border=&quot;1&quot; width=&quot;95%&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;1&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;2&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;3&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;4&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;5&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;6&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;7&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;8&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;9&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;10&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;11&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;12&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;13&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;14&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;15&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;table width=&quot;95%&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;&lt;br /&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The left-hand dataset above as written to an HDF5 </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;file from Fortran:</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;table border=&quot;1&quot; width=&quot;95%&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;1&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;6&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;11&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;2&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;7&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;12&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;3&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;8&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;13&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;4&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;9&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;14&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;5&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;10&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot; width=&quot;6.5%&quot;&gt;15&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;br /&gt;</p>
 <p class="FM__Body">&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 2. Comparing C and Fortran dataspaces</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 3 --&gt;&lt;/b&gt;&lt;br /&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The HDF5 Library stores arrays along the fastest-changing </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dimension. This approach is often referred to as being &amp;ldquo;in </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;C order.&amp;rdquo; C, C++, and Java work with arrays in row-major </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;order. In other words, the row, or the last dimension, is the </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fastest-changing dimension. Fortran, on the other hand, handles </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;arrays in column-major order making the column, or the first </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dimension, the fastest-changing dimension. Therefore, the C and </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Fortran arrays illustrated in the top portion of this figure are </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;stored identically in an HDF5 file. This ensures that data </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;written by any language can be meaningfully read, interpreted, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;and manipulated by any other.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- &#160;editingComment this entire section needs to be --&gt;</p>
 <p class="FM__Body">&lt;!-- &#160;written properly then reincluded. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;--&gt;</p>
 <p class="FM__Body">&lt;!-- &#160;</p>
 <p class="FM__Body"> &#160;&lt;h4&gt;Extending a dataspace&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [ Text here describing the extension of the dataset, per the following diagram. ] ]&lt;/span&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;</p>
 <p class="FM__Body">&lt;table x-use-null-cells</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>width=&quot;600&quot;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>cellspacing=&quot;0&quot;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;class=&quot;fullImgTable&quot;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;td class=&quot;fullImgTableImgCell&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig03.jpg&quot;&gt;</p>
 <p class="FM__Body">&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&lt;tr&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;td align=&quot;center&quot; class=&quot;fullImgTableCapCell&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;span class=&quot;figurenumber&quot;&gt;Figure 4&lt;/span&gt; </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>Extend the simple dataspace array to 12x130</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;!-- The next 10 lines were already commented out --&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;!-- before this entire section was removed. &#160;&#160;&#160;&#160;&#160;--&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;!--</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;p align=&quot;left&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;To extend (conceptual): </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;br /&gt;    </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &#160;&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;code&gt;err = H5Sset_extent_simple(id,rank,new_dims,max_dims)&lt;/code&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;br /&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>To extend (concrete): </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;br /&gt;    </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;err = H5Sset_extent_simple(id,2,[12,130],[H5S_UNLIMITED,200])&lt;/code&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>--&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;h4&gt;7.3.2.6. Finding Dataspace Charateristics&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 Library provides several APIs designed to query </p>
 <p class="FM__Body"> &#160;the characteristics of a dataspace.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The function &lt;span class=&quot;codeText&quot;&gt;H5Sis_simple&lt;/span&gt; </p>
 <p class="FM__Body"> &#160;(&lt;span class=&quot;codeText&quot;&gt;h5sis_simple_f&lt;/span&gt;) </p>
 <p class="FM__Body">&#160;&#160;returns information about the type of a dataspace. </p>
 <p class="FM__Body">&#160;&#160;This function is rarely used and </p>
 <p class="FM__Body"> &#160;currently supports only simple and scalar dataspaces.&lt;/p&gt;</p>
 <p class="FM__Body">&lt;!-- &#160;editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [ Isn't that all of them? &#160;What other types are there? ] ] ]&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To find out the dimensionality, or rank, of a dataspace, </p>
 <p class="FM__Body"> &#160;use &lt;span class=&quot;codeText&quot;&gt;H5Sget_simple_extent_ndims&lt;/span&gt; </p>
 <p class="FM__Body"> &#160;(&lt;span class=&quot;codeText&quot;&gt;h5sget_simple_extent_ndims_f&lt;/span&gt;).  </p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;codeText&quot;&gt;H5Sget_simple_extent_dims&lt;/span&gt; </p>
 <p class="FM__Body">&#160;&#160;can also be used to find out the rank. </p>
 <p class="FM__Body">&#160;&#160;See the example below. </p>
 <p class="FM__Body"> &#160;If both functions return &lt;span class=&quot;codeText&quot;&gt;0&lt;/span&gt; for the </p>
 <p class="FM__Body"> &#160;value of &lt;span class=&quot;codeVar&quot;&gt;rank&lt;/span&gt;, then the dataspace is scalar.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To query the sizes of the current and maximum dimensions, </p>
 <p class="FM__Body"> &#160;use &lt;span class=&quot;codeText&quot;&gt;H5Sget_simple_extent_dims&lt;/span&gt; </p>
 <p class="FM__Body"> &#160;(&lt;span class=&quot;codeText&quot;&gt;h5sget_simple_extent_dims_f)&lt;/span&gt;. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The following example illustrates querying the rank and dimensions </p>
 <p class="FM__Body"> &#160;of a dataspace using these functions. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In C:&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hid_t space_id;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;int rank;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hsize_t &#160;*current_dims;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hsize_t &#160;*max_dims;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;---------</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rank=H5Sget_simple_extent_ndims(space_id); </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(or rank=H5Sget_simple_extent_dims(space_id, NULL, NULL);)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;current_dims= (hsize_t)malloc(rank*sizeof(hsize_t));</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;max_dims=(hsize_t)malloc(rank*sizeof(hsize_t));</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5Sget_simple_extent_dims(space_id, current_dims, max_dims);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Print values here for the previous example</p>
 <p class="FM__Body"> &#160;&lt;/pre&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- &#160;editingComment</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In Fortran:</p>
 <p class="FM__Body"> &#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Example ??????????</p>
 <p class="FM__Body"> &#160;&lt;/pre&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;a name=&quot;DTransfer&quot;&gt;</p>
 <p class="FM__Body">&lt;div align=&quot;right&quot;&gt; </p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=-1&gt;(Top)&lt;/font&gt;&lt;/a&gt; </p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;DTransfer&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=&quot;pagebefore&quot;&gt;7.4. Dataspaces and Data Transfer&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Read and write operations transfer data between an HDF5 file on </p>
 <p class="FM__Body">&#160;&#160;disk and in memory. The shape that the array data takes in the file </p>
 <p class="FM__Body">&#160;&#160;and in memory may be the same, but HDF5 also allows users the ability </p>
 <p class="FM__Body">&#160;&#160;to represent data in memory in a different shape than in the file. </p>
 <p class="FM__Body">&#160;&#160;If the shape of an array in the file and in memory will be the same, </p>
 <p class="FM__Body">&#160;&#160;then the same dataspace definition can be used for both. If the shape </p>
 <p class="FM__Body">&#160;&#160;of an array in memory needs to be different than the shape in the file, </p>
 <p class="FM__Body">&#160;&#160;then the dataspace definition for the shape of the array in memory can </p>
 <p class="FM__Body">&#160;&#160;be changed. During a read operation, the array will be read into the </p>
 <p class="FM__Body">&#160;&#160;different shape in memory, and during a write operation, the array </p>
 <p class="FM__Body">&#160;&#160;will be written to the file in the shape specified by the dataspace </p>
 <p class="FM__Body">&#160;&#160;in the file. The only qualification is that the number of elements </p>
 <p class="FM__Body">&#160;&#160;read or written must be the same in both the source and the destination </p>
 <p class="FM__Body"> &#160;dataspaces.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Item a in the figure below shows a simple example of a read operation </p>
 <p class="FM__Body">&#160;&#160;in which the data is stored as a 3 by 4 array in the file (item b) on </p>
 <p class="FM__Body">&#160;&#160;disk, but the program wants it to be a 4 by 3 array in memory. This </p>
 <p class="FM__Body">&#160;&#160;is accomplished by setting the memory dataspace to describe the </p>
 <p class="FM__Body">&#160;&#160;desired memory layout, as in item c. The read operation reads the </p>
 <p class="FM__Body"> &#160;data in the file array into the memory array.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;table width=&quot;500&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig4.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 3. Data layout before and after a read operation</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 4 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;500&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig5.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 4. Moving data from disk to memory</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 5 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Both the source and destination are stored as contiguous blocks of storage </p>
 <p class="FM__Body"> &#160;with the elements in the order specified by the &lt;em&gt;dataspace&lt;/em&gt;. </p>
 <p class="FM__Body"> &#160;The figure above &lt;!-- formerly Figure 5 --&gt;shows one way the elements might </p>
 <p class="FM__Body"> &#160;be organized. In item a&lt;!-- formerly Figure 5a--&gt;, </p>
 <p class="FM__Body">&#160;&#160;the elements are stored as 3 blocks of 4 elements. &#160;The destination is </p>
 <p class="FM__Body"> &#160;an array of 12 elements in memory (see item c&lt;!-- formerly Figure 5c --&gt;).  </p>
 <p class="FM__Body">&#160;&#160;As the figure suggests, the transfer reads the disk blocks into a </p>
 <p class="FM__Body"> &#160;memory buffer (see item b&lt;!-- formerly Figure 5b--&gt;), and then </p>
 <p class="FM__Body">&#160;&#160;writes the elements to the correct locations in memory. &#160;A similar </p>
 <p class="FM__Body"> &#160;process occurs in reverse when data is written to disk.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;h4&gt;7.4.1. Data Selection&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In addition to rearranging data, the transfer may select the data </p>
 <p class="FM__Body"> &#160;elements from the source and destination.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Data selection is implemented by creating a &lt;em&gt;dataspace&lt;/em&gt; </p>
 <p class="FM__Body">&#160;&#160;object that describes the selected elements (within the hyper rectangle) </p>
 <p class="FM__Body"> &#160;rather than the whole array. Two &lt;em&gt;dataspace&lt;/em&gt; objects with </p>
 <p class="FM__Body">&#160;&#160;selections can be used in data transfers to read selected elements </p>
 <p class="FM__Body">&#160;&#160;from the source and write selected elements to the destination. &#160;When </p>
 <p class="FM__Body">&#160;&#160;data is transferred using the dataspace object, only the selected </p>
 <p class="FM__Body"> &#160;elements will be transferred.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This can be used to implement partial I/O, including:&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Sub-setting - reading part of a large dataset&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Sampling - reading selected elements (e.g., every second element) </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;of a dataset&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Scatter-gather - read non-contiguous elements into contiguous locations </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(gather) or read contiguous elements into non-contiguous locations </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>(scatter) or both&lt;/li&gt;</p>
 <p class="FM__Body">&lt;/ul&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To use selections, the following steps are followed:&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;ol&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Get or define the dataspace for the source and destination&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Specify one or more selections for source and destination dataspaces&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Transfer data using the dataspaces with selections&lt;/li&gt;</p>
 <p class="FM__Body">&lt;/ol&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A selection is created by applying one or more selections to a </p>
 <p class="FM__Body"> &#160;&lt;em&gt;dataspace&lt;/em&gt;.  A selection may override any other selections </p>
 <p class="FM__Body"> &#160;(&lt;code&gt;H5T_SELECT_SET&lt;/code&gt;) </p>
 <p class="FM__Body">&#160;&#160;or may be &amp;ldquo;Ored&amp;rdquo; with previous selections on the same dataspace </p>
 <p class="FM__Body"> &#160;(&lt;code&gt;H5T_SELECT_OR&lt;/code&gt;). </p>
 <p class="FM__Body">&#160;&#160;In the latter case, the resulting selection is the union of the selection and </p>
 <p class="FM__Body">&#160;&#160;all previously selected selections. Arbitrary sets of points from a dataspace </p>
 <p class="FM__Body"> &#160;can be selected by specifying an appropriate set of selections.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Two selections are used in data transfer, so the source and destination </p>
 <p class="FM__Body"> &#160;must be compatible, as described below.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;There are two forms of selection, hyperslab and point.  A selection must </p>
 <p class="FM__Body">&#160;&#160;be either a point selection or a set of hyperslab selections. &#160;</p>
 <p class="FM__Body"> &#160;Selections cannot be mixed.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The definition of a selection within a dataspace, not the data </p>
 <p class="FM__Body">&#160;&#160;in the selection, cannot be saved to the file unless the selection </p>
 <p class="FM__Body"> &#160;definition is saved as a region reference. See the &lt;a href=&quot;#DRegions&quot;&gt;</p>
 <p class="FM__Body"> &#160;“References to Dataset Regions”&lt;/a&gt; section for more information.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;h4&gt;7.4.1.1. Hyperslab selection&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A hyperslab is a selection of elements from a hyper rectangle.  </p>
 <p class="FM__Body">&#160;&#160;An HDF5 hyperslab is a rectangular pattern defined by four arrays. The </p>
 <p class="FM__Body"> &#160;four arrays are summarized in the table below &lt;!-- formerly Table 1--&gt;. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The &lt;em&gt;offset&lt;/em&gt; defines the origin of the hyperslab in the original </p>
 <p class="FM__Body"> &#160;dataspace.&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The &lt;em&gt;stride&lt;/em&gt; is the number of elements to increment between </p>
 <p class="FM__Body">&#160;&#160;selected elements. A stride of &amp;lsquo;1&amp;rsquo; is every element, a </p>
 <p class="FM__Body">&#160;&#160;stride of &amp;lsquo;2&amp;rsquo; is every second element, etc. Note that there </p>
 <p class="FM__Body">&#160;&#160;may be a different stride for each dimension of the dataspace. The </p>
 <p class="FM__Body"> &#160;default stride is 1.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The &lt;em&gt;count&lt;/em&gt; is the number of elements in the hyperslab selection.  </p>
 <p class="FM__Body">&#160;&#160;When the stride is 1, the selection is a hyper rectangle with a corner at </p>
 <p class="FM__Body">&#160;&#160;the offset and size count[0] by count[1] by.... When stride is greater </p>
 <p class="FM__Body">&#160;&#160;than one, the hyperslab bounded by the offset and the corners defined </p>
 <p class="FM__Body"> &#160;by stride[n] * count[n].&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 1. Hyperslab elements&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;15%&quot;&gt;&lt;b&gt;Parameter&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;85%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Offset&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The starting location for the hyperslab.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Stride&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The number of elements to separate each element or block </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;to be selected.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Count&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The number of elements or blocks to select along each </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;dimension.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Block&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The size of the block selected from the dataspace.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The &lt;em&gt;block&lt;/em&gt; is a count on the number of repetitions of the </p>
 <p class="FM__Body">&#160;&#160;hyperslab. The default block size is &amp;lsquo;1&amp;rsquo;, which is one </p>
 <p class="FM__Body">&#160;&#160;hyperslab. &#160;A block of 2 would be two hyperslabs in that dimension, </p>
 <p class="FM__Body"> &#160;with the second starting at offset[n]+ (count[n] * stride[n]) + 1.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A hyperslab can be used to access a sub-set of a large dataset. </p>
 <p class="FM__Body"> &#160;The figure below &lt;!-- formerly Figure 6 --&gt;shows an example of a hyperslab </p>
 <p class="FM__Body">&#160;&#160;that reads a rectangle from the middle of a larger two dimensional </p>
 <p class="FM__Body"> &#160;array. The destination is the same shape as the source.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;500&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig6.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 5. Access a sub-set of data </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;with a hyperslab&lt;!-- formerly Figure 6--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Hyperslabs can be combined to select complex regions of the source and </p>
 <p class="FM__Body"> &#160;destination. The figure below &lt;!-- formerly Figure 7 --&gt;shows an example </p>
 <p class="FM__Body">&#160;&#160;of a transfer from one non-rectangular </p>
 <p class="FM__Body">&#160;&#160;region into another non-rectangular region. The source is defined as the </p>
 <p class="FM__Body">&#160;&#160;union of two hyperslabs, and the destination is the union of three </p>
 <p class="FM__Body"> &#160;hyperslabs.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;500&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig7.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 6. Build complex regions with </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;hyperslab unions&lt;!-- formerly Figure 7--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Hyperslabs may also be used to collect or scatter data from regular </p>
 <p class="FM__Body"> &#160;patterns. The figure below &lt;!-- formerly Figure 8 --&gt;shows an example </p>
 <p class="FM__Body">&#160;&#160;where the source is a repeating pattern of blocks, and the destination </p>
 <p class="FM__Body"> &#160;is a single, one dimensional array.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;500&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig8.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 7. Use hyperslabs to combine or disperse data</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 8--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;7.4.1.2. Select Points&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The second type of selection is an array of points, i.e., coordinates.  </p>
 <p class="FM__Body">&#160;&#160;Essentially, this selection is a list of all the points to include. </p>
 <p class="FM__Body"> &#160;The figure below &lt;!-- formerly Figure 9 --&gt;shows an example of a transfer </p>
 <p class="FM__Body">&#160;&#160;of seven elements from a two dimensional dataspace to a three </p>
 <p class="FM__Body"> &#160;dimensional dataspace using a point selection to specify the points.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;table width=&quot;500&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig9.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 8. Point selection</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 9--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;7.4.1.3. Rules for Defining Selections&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A selection must have the same number of dimensions (rank) as the </p>
 <p class="FM__Body">&#160;&#160;dataspace it is applied to, although it may select from only a small </p>
 <p class="FM__Body">&#160;&#160;region, e.g., a plane from a 3D dataspace. Selections do not affect the </p>
 <p class="FM__Body"> &#160;extent of the &lt;em&gt;dataspace&lt;/em&gt;, the selection may be larger than </p>
 <p class="FM__Body"> &#160;the &lt;em&gt;dataspace&lt;/em&gt;. The boundaries of selections are reconciled </p>
 <p class="FM__Body"> &#160;with the extent at the time of the data transfer.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;h4&gt;7.4.1.4. Data Transfer with Selections&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A data transfer (read or write) with selections is the same as any </p>
 <p class="FM__Body"> &#160;read or write, except the source and destination &lt;em&gt;dataspace&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;have compatible selections. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;During the data transfer, the following steps are executed by the </p>
 <p class="FM__Body"> &#160;library:&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&lt;li&gt;The source and destination &lt;em&gt;dataspaces&lt;/em&gt; are checked to assure </p>
 <p class="FM__Body"> &#160;that the selections are compatible.&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;ul&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;li&gt;Each selection must be within the current extent of the &lt;em&gt;dataspace&lt;/em&gt;.  </p>
 <p class="FM__Body">&#160;&#160;A selection may be defined to extend outside the current extent of the </p>
 <p class="FM__Body"> &#160;&lt;em&gt;dataspace&lt;/em&gt;, but the &lt;em&gt;dataspace&lt;/em&gt; cannot be accessed if the </p>
 <p class="FM__Body"> &#160;selection is not valid at the time of the access.&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;li&gt;The total number of points selected in the source and destination must </p>
 <p class="FM__Body">&#160;&#160;be the same. &#160;Note that the dimensionality of the source and destination can </p>
 <p class="FM__Body">&#160;&#160;be different (e.g., the source could be 2D, the destination 1D or 3D), and </p>
 <p class="FM__Body">&#160;&#160;the shape can be different, but the number of elements selected must be </p>
 <p class="FM__Body"> &#160;the same.&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;/ul&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;li&gt;The data is transferred, element by element.&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;/ul&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Selections have an iteration order for the points selected, which can be </p>
 <p class="FM__Body">&#160;&#160;any permutation of the dimensions involved (defaulting to &amp;lsquo;C&amp;rsquo; </p>
 <p class="FM__Body">&#160;&#160;array order) or a specific order for the selected points, for selections </p>
 <p class="FM__Body"> &#160;composed of single array elements with &lt;code&gt;H5Sselect_elements&lt;/code&gt;.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The elements of the selections are transferred in row-major, or C order. </p>
 <p class="FM__Body">&#160;&#160;That is, it is assumed that the first dimension varies slowest, the second </p>
 <p class="FM__Body">&#160;&#160;next slowest, and so forth. For hyperslab selections, the order can be any </p>
 <p class="FM__Body">&#160;&#160;permutation of the dimensions involved (defaulting to &amp;lsquo;C&amp;rsquo; </p>
 <p class="FM__Body">&#160;&#160;array order). When multiple hyperslabs are combined, the hyperslabs </p>
 <p class="FM__Body"> &#160;are coalesced into contiguous reads and writes.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In the case of point selections, the points are read and written in the </p>
 <p class="FM__Body"> &#160;order specified.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;h4&gt;7.4.2. Programming Model&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;7.4.2.1. Selecting Hyperslabs&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Suppose we want to read a 3x4 hyperslab from a dataset in a file beginning </p>
 <p class="FM__Body">&#160;&#160;at the element &amp;lt;1,2&amp;gt; in the dataset, and read it into a 7 x 7 x 3 array </p>
 <p class="FM__Body"> &#160;in memory. See the figure below. &lt;!-- formerly (Figure 10).--&gt; In order </p>
 <p class="FM__Body">&#160;&#160;to do this, we must create a dataspace that describes the overall rank </p>
 <p class="FM__Body">&#160;&#160;and dimensions of the dataset in the file as well as the position and </p>
 <p class="FM__Body"> &#160;size of the hyperslab that we are extracting from that dataset.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;400&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig10.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 9. Selecting a hyperslab</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 10--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The code in the first example below &lt;!-- formerly Figure 11 --&gt;</p>
 <p class="FM__Body">&#160;&#160;illustrates the selection of the hyperslab in the </p>
 <p class="FM__Body"> &#160;file dataspace. The second example below &lt;!-- formerly Figure 12 --&gt;shows </p>
 <p class="FM__Body">&#160;&#160;the definition of the destination dataspace in </p>
 <p class="FM__Body">&#160;&#160;memory. Since the in-memory dataspace has three dimensions, the hyperslab is </p>
 <p class="FM__Body">&#160;&#160;an array with three dimensions with the last dimension being </p>
 <p class="FM__Body"> &#160;1: &amp;lt;3,4,1&amp;gt;. &#160;The third example below &lt;!-- formerly Figure 13 --&gt;</p>
 <p class="FM__Body"> &#160;shows the read using the source and destination &lt;em&gt;dataspaces&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;with selections.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">&#160;&#160;/* </p>
 <p class="FM__Body"> &#160;* get the file dataspace.</p>
 <p class="FM__Body"> &#160;*/</p>
 <p class="FM__Body"> &#160;dataspace = H5Dget_space(dataset); &#160;&#160;&#160;/* dataspace identifier */</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;/* </p>
 <p class="FM__Body">&#160;&#160;* Define hyperslab in the dataset. </p>
 <p class="FM__Body"> &#160;*/</p>
 <p class="FM__Body"> &#160;offset[0] = 1;</p>
 <p class="FM__Body"> &#160;offset[1] = 2;</p>
 <p class="FM__Body"> &#160;count[0] &#160;= 3;</p>
 <p class="FM__Body"> &#160;count[1] &#160;= 4;</p>
 <p class="FM__Body">&#160;&#160;status = H5Sselect_hyperslab(dataspace, H5S_SELECT_SET, offset, NULL, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;count, NULL);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 1. Selecting a hyperslab</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 11--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;* Define memory dataspace.</p>
 <p class="FM__Body"> &#160;*/</p>
 <p class="FM__Body"> &#160;dimsm[0] = 7;</p>
 <p class="FM__Body"> &#160;dimsm[1] = 7;</p>
 <p class="FM__Body"> &#160;dimsm[2] = 3;</p>
 <p class="FM__Body">&#160;&#160;memspace = H5Screate_simple(3,dimsm,NULL); &#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;/* </p>
 <p class="FM__Body">&#160;&#160;* Define memory hyperslab. </p>
 <p class="FM__Body"> &#160;*/</p>
 <p class="FM__Body"> &#160;offset_out[0] = 3;</p>
 <p class="FM__Body"> &#160;offset_out[1] = 0;</p>
 <p class="FM__Body"> &#160;offset_out[2] = 0;</p>
 <p class="FM__Body"> &#160;count_out[0] &#160;= 3;</p>
 <p class="FM__Body"> &#160;count_out[1] &#160;= 4;</p>
 <p class="FM__Body"> &#160;count_out[2] &#160;= 1;</p>
 <p class="FM__Body">&#160;&#160;status = H5Sselect_hyperslab(memspace, H5S_SELECT_SET, offset_out, NULL, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;count_out, NULL);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 2. Defining the destination memory</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 12--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">&#160;&#160;ret = H5Dread(dataset, H5T_NATIVE_INT, memspace, dataspace, H5P_DEFAULT, &#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;data);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 3. A sample read specifying source </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;and destination dataspaces</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 13--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;7.4.2.2. Example with Strides and Blocks&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Consider an 8 x 12 dataspace into which we want to write eight 3 x 2 </p>
 <p class="FM__Body">&#160;&#160;blocks in a two dimensional array </p>
 <p class="FM__Body">&#160;&#160;from a source dataspace in memory that is a 50-element one dimensional </p>
 <p class="FM__Body">&#160;&#160;array. </p>
 <p class="FM__Body"> &#160;See the figure below.&lt;!-- formerly (Figure 14).--&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;80&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;440&quot;&gt;a) The source is a 1D array with 50 elements&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;80&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig14.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;80&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;440&quot;&gt;b) The destination on disk is a 2D array </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;with 48 selected elements&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;80&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 10. Write from a one dimensional </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;array to a two dimensional array&lt;!-- Figure 14--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The example below &lt;!-- formerly Figure 15 --&gt;shows code to write 48 </p>
 <p class="FM__Body">&#160;&#160;elements from the one dimensional array to the </p>
 <p class="FM__Body">&#160;&#160;file dataset starting with the second element in vector. The destination </p>
 <p class="FM__Body">&#160;&#160;hyperslab has the following parameters: offset=(0,1), stride=(4,3), </p>
 <p class="FM__Body">&#160;&#160;count=(2,4), block=(3,2). The source has the parameters: &#160;offset=(1), </p>
 <p class="FM__Body">&#160;&#160;stride=(1), count=(48), block=(1). After these operations, the file </p>
 <p class="FM__Body"> &#160;dataspace will have the values shown in item b in the figure above</p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Figure 14--&gt;.  Notice that the values are inserted in </p>
 <p class="FM__Body"> &#160;the file dataset in row-major order.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/* Select hyperslab for the dataset in the file, using 3 x 2 blocks, (4,3) stride</p>
 <p class="FM__Body"> &#160;&#160;* (2,4) count starting at the position (0,1).</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;offset[0] &#160;= 0; offset[1] &#160;= 1;</p>
 <p class="FM__Body"> &#160;stride[0] = 4; stride[1] = 3;</p>
 <p class="FM__Body">&#160;&#160;count[0] &#160;= 2; count[1] &#160;= 4; &#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;block[0] &#160;= 3; block[1] &#160;= 2;</p>
 <p class="FM__Body"> &#160;ret = H5Sselect_hyperslab(fid, H5S_SELECT_SET, offset, stride, count, block);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Create dataspace for the first dataset.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;mid1 = H5Screate_simple(MSPACE1_RANK, dim1, NULL);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body">&#160;&#160;&#160;* Select hyperslab. </p>
 <p class="FM__Body"> &#160;&#160;* We will use 48 elements of the vector buffer starting at the second element.</p>
 <p class="FM__Body"> &#160;&#160;* Selected elements are 1 2 3 . . . 48</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;offset[0] &#160;= 1;</p>
 <p class="FM__Body"> &#160;stride[0] = 1;</p>
 <p class="FM__Body"> &#160;count[0] &#160;= 48;</p>
 <p class="FM__Body"> &#160;block[0] &#160;= 1;</p>
 <p class="FM__Body"> &#160;ret = H5Sselect_hyperslab(mid1, H5S_SELECT_SET, offset, stride, count, block);</p>
 <p class="FM__Body">&#160;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Write selection from the vector buffer to the dataset in the file.</p>
 <p class="FM__Body"> &#160;&#160;*</p>
 <p class="FM__Body"> &#160;ret = H5Dwrite(dataset, H5T_NATIVE_INT, midd1, fid, H5P_DEFAULT, vector)&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 4. Write from a one dimensional </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;array to a two dimensional array </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 15--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;7.4.2.3. Selecting a Union of Hyperslabs&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 Library allows the user to select a union of hyperslabs and </p>
 <p class="FM__Body">&#160;&#160;write or read the selection into another selection. The shapes of the </p>
 <p class="FM__Body"> &#160;two selections may differ, but the number of elements must be equal. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;400&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig16a.jpg&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig16b.jpg&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig16c.jpg&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 11. Transferring hyperslab unions</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 16--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure above &lt;!-- formerly Figure 16 --&gt;shows the transfer of a </p>
 <p class="FM__Body">&#160;&#160;selection that is two overlapping hyperslabs </p>
 <p class="FM__Body">&#160;&#160;from the dataset into a union of hyperslabs in the memory dataset. Note that </p>
 <p class="FM__Body">&#160;&#160;the destination dataset has a different shape from the source dataset. </p>
 <p class="FM__Body">&#160;&#160;Similarly, the selection in the memory dataset could have a different shape </p>
 <p class="FM__Body">&#160;&#160;than the selected union of hyperslabs in the original file. For simplicity, </p>
 <p class="FM__Body"> &#160;the selection is that same shape at the destination.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To implement this transfer, it is necessary to:&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;ol&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Get the source dataspace&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Define one hyperslab selection for the source&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Define a second hyperslab selection, unioned with the first&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Get the destination dataspace&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Define one hyperslab selection for the destination&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Define a second hyperslab seletion, unioned with the first&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Execute the data transfer (&lt;code&gt;H5Dread&lt;/code&gt; or </p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;code&gt;H5Dwrite&lt;/code&gt;) using the source and </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;destination dataspaces&lt;/li&gt;</p>
 <p class="FM__Body">&lt;/ol&gt;&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The example below &lt;!-- formerly Figure 17 --&gt;shows example code to </p>
 <p class="FM__Body">&#160;&#160;create the selections for the source </p>
 <p class="FM__Body">&#160;&#160;dataspace (the file). The first hyperslab is size 3 x 4 and the left upper </p>
 <p class="FM__Body">&#160;&#160;corner at the position (1,2). &#160;The hyperslab is a simple rectangle, so the </p>
 <p class="FM__Body">&#160;&#160;stride and block are 1. The second hyperslab is 6 x 5 at the position (2,4). </p>
 <p class="FM__Body">&#160;&#160;The second selection is a union with the first hyperslab </p>
 <p class="FM__Body"> &#160;(&lt;code&gt;H5S_SELECT_OR&lt;/code&gt;).&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;fid = H5Dget_space(dataset);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body">&#160;&#160;&#160;* Select first hyperslab for the dataset in the file. </p>
 <p class="FM__Body">&#160;&#160;&#160;* &#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;&#160;*/ </p>
 <p class="FM__Body"> &#160;offset[0] = 1; offset[1] = 2;</p>
 <p class="FM__Body"> &#160;block[0] = 1; block[1] = 1;</p>
 <p class="FM__Body"> &#160;stride[0] = 1; stride[1] = 1;</p>
 <p class="FM__Body"> &#160;count[0] &#160;= 3; count[1] &#160;= 4;</p>
 <p class="FM__Body">&#160;&#160;ret = H5Sselect_hyperslab(fid, H5S_SELECT_SET, offset, stride, count, block); </p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Add second selected hyperslab to the selection.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;offset[0] = 2; offset[1] = 4;</p>
 <p class="FM__Body"> &#160;block[0] = 1; block[1] = 1;</p>
 <p class="FM__Body"> &#160;stride[0] = 1; stride[1] = 1;</p>
 <p class="FM__Body"> &#160;count[0] &#160;= 6; count[1] &#160;= 5;</p>
 <p class="FM__Body"> &#160;ret = H5Sselect_hyperslab(fid, H5S_SELECT_OR, offset, stride, count, block);&lt;/pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 5. Select source hyperslabs </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 17 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The example below &lt;!-- formerly Figure 18 --&gt;shows example code to </p>
 <p class="FM__Body">&#160;&#160;create the selection for the destination </p>
 <p class="FM__Body">&#160;&#160;in memory. The steps are similar. &#160;In this example, the hyperslabs are the </p>
 <p class="FM__Body">&#160;&#160;same shape, but located in different positions in the dataspace. The first </p>
 <p class="FM__Body"> &#160;hyperslab is 3 x 4 and starts at (0,0), and the second is 6 x 5 and starts at (1,2).&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Finally, the &lt;code&gt;H5Dread&lt;/code&gt; call transfers the selected data from </p>
 <p class="FM__Body">&#160;&#160;the file dataspace </p>
 <p class="FM__Body"> &#160;to the selection in memory.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In this example, the source and destination selections are two </p>
 <p class="FM__Body">&#160;&#160;overlapping rectangles. &#160;In general, any number of rectangles can be </p>
 <p class="FM__Body">&#160;&#160;OR&amp;rsquo;ed, and they do not have to be contiguous. &#160;The order of the </p>
 <p class="FM__Body">&#160;&#160;selections does not matter, but the first should use </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5S_SELECT_SET&lt;/code&gt;; subsequent selections are unioned </p>
 <p class="FM__Body"> &#160;using &lt;code&gt;H5S_SELECT_OR&lt;/code&gt;.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;It is important to emphasize that the source and destination do not </p>
 <p class="FM__Body">&#160;&#160;have to be the same shape (or number of rectangles). As long as the two </p>
 <p class="FM__Body"> &#160;selections have the same number of elements, the data can be transferred.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Create memory dataspace.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;mid = H5Screate_simple(MSPACE_RANK, mdim, NULL);</p>
 <p class="FM__Body">&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Select two hyperslabs in memory. Hyperslabs has the same</p>
 <p class="FM__Body"> &#160;&#160;* size and shape as the selected hyperslabs for the file dataspace.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;offset[0] = 0; offset[1] = 0;</p>
 <p class="FM__Body"> &#160;block[0] = 1; block[1] = 1;</p>
 <p class="FM__Body"> &#160;stride[0] = 1; stride[1] = 1;</p>
 <p class="FM__Body"> &#160;count[0] &#160;= 3; count[1] &#160;= 4;</p>
 <p class="FM__Body">&#160;&#160;ret = H5Sselect_hyperslab(mid, H5S_SELECT_SET, offset, stride, count, block); &#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;offset[0] = 1; offset[1] = 2;</p>
 <p class="FM__Body"> &#160;block[0] = 1; block[1] = 1;</p>
 <p class="FM__Body"> &#160;stride[0] = 1; stride[1] = 1;</p>
 <p class="FM__Body"> &#160;count[0] &#160;= 6; count[1] &#160;= 5;</p>
 <p class="FM__Body"> &#160;ret = H5Sselect_hyperslab(mid, H5S_SELECT_OR, offset, stride, count, block);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">ret = H5Dread(dataset, H5T_NATIVE_INT, mid, fid, H5P_DEFAULT, matrix_out);&lt;/pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 6. Select destination hyperslabs</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 18--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;7.4.2.4. Selecting a List of Independent Points&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;It is also possible to specify a list of elements to read or write using </p>
 <p class="FM__Body"> &#160;the function &lt;code&gt;H5Sselect_elements&lt;/code&gt;. The procedure is similar </p>
 <p class="FM__Body"> &#160;to hyperslab selections.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;ol&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Get the source dataspace&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Set the selected points&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Get the destination dataspacev</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Set the selected points&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Transfer the data using the source and destination dataspaces&lt;/li&gt;</p>
 <p class="FM__Body">&lt;/ol&gt;&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure below &lt;!-- formerly Figure 19 --&gt;shows an example where </p>
 <p class="FM__Body">&#160;&#160;four values are to be written to four separate points in a two </p>
 <p class="FM__Body">&#160;&#160;dimensional dataspace. The source dataspace is a one dimensional </p>
 <p class="FM__Body">&#160;&#160;array with the values 53, 59, 61, 67. The destination dataspace </p>
 <p class="FM__Body">&#160;&#160;is an 8 x 12 array. &#160;The elements are to be written to the points </p>
 <p class="FM__Body">&#160;&#160;(0,0), (3,3), (3,5), and (5,6). In this example, the source does not </p>
 <p class="FM__Body">&#160;&#160;require a selection. The example below the figure </p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Figure 20 --&gt;shows example code to implement this </p>
 <p class="FM__Body"> &#160;transfer.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A point selection lists the exact points to be transferred and the order </p>
 <p class="FM__Body">&#160;&#160;they will be transferred. The source and destination are required to have </p>
 <p class="FM__Body">&#160;&#160;the same number of elements. A point selection can be used with a hyperslab </p>
 <p class="FM__Body">&#160;&#160;(e.g., the source could be a point selection and the destination a hyperslab, </p>
 <p class="FM__Body"> &#160;or vice versa), so long as the number of elements selected are the same.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;400&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig19a.jpg&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig19b.jpg&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig19c.jpg&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 12. Write data to separate points</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 19--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">&#160;&#160;hsize_t dim2[] = {4}; &#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;int &#160;&#160;&#160;&#160;values[] = {53, 59, 61, 67}; </p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;hssize_t coord[4][2]; /* Array to store selected points </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;from the file dataspace */ </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Create dataspace for the second dataset.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;mid2 = H5Screate_simple(1, dim2, NULL);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Select sequence of NPOINTS points in the file dataspace.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;coord[0][0] = 0; coord[0][1] = 0;</p>
 <p class="FM__Body"> &#160;coord[1][0] = 3; coord[1][1] = 3;</p>
 <p class="FM__Body"> &#160;coord[2][0] = 3; coord[2][1] = 5;</p>
 <p class="FM__Body"> &#160;coord[3][0] = 5; coord[3][1] = 6;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;ret = H5Sselect_elements(fid, H5S_SELECT_SET, NPOINTS, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(const hssize_t **)coord);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;ret = H5Dwrite(dataset, H5T_NATIVE_INT, mid2, fid, H5P_DEFAULT, values);&lt;/pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 7. Write data to separate points</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 20 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;h4&gt;7.4.2.5. Combinations of Selections&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Selections are a very flexible mechanism for reorganizing data during a </p>
 <p class="FM__Body"> &#160;data transfer. With different combinations of &lt;em&gt;dataspaces&lt;/em&gt; and </p>
 <p class="FM__Body">&#160;&#160;selections, it is possible to implement many kinds of data transfers </p>
 <p class="FM__Body">&#160;&#160;including sub-setting, sampling, and reorganizing the data. The table below </p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Table 2 --&gt;gives some example combinations of </p>
 <p class="FM__Body"> &#160;source and destination, and the operations they implement.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 2. Selection operations&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;38%&quot;&gt;&lt;b&gt;Source&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;37%&quot;&gt;&lt;b&gt;Destination&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;25%&quot;&gt;&lt;b&gt;Operation&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;All&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;All&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Copy whole array&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;All&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;All (different shape)&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Copy and reorganize array&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Hyperslab&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;All&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Sub-set&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Hyperslab&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Hyperslab (same shape)&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Selection&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Hyperslab&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Hyperslab (different shape)&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Select and rearrange&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Hyperslab with stride or block&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;All or hyperslab with stride 1&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Sub-sample, scatter&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Hyperslab&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Points&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Scatter&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Points&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Hyperslab or all&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Gather&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Points&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Points (same)&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Selection&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Points&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Points (different)&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Reorder points&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;    </p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;a name=&quot;DSelectTransfer&quot;&gt;</p>
 <p class="FM__Body">&lt;div align=&quot;right&quot;&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=-1&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;DSelectTransfer&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=&quot;pagebefore&quot;&gt;7.5. Dataspace Selection Operations and Data Transfer&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;em&gt;This section is under construction.&lt;/em&gt;&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;a name=&quot;DRegions&quot;&gt;</p>
 <p class="FM__Body">&lt;div align=&quot;right&quot;&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=-1&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;DRegions&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=&quot;pagebefore&quot;&gt;7.6. References to Dataset Regions&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Another use of selections is to store a reference to a region of a </p>
 <p class="FM__Body">&#160;&#160;dataset. An HDF5 object reference object is a pointer to an object </p>
 <p class="FM__Body">&#160;&#160;(dataset, group, or committed datatype) in the file. &#160;A selection can be </p>
 <p class="FM__Body">&#160;&#160;used to create a pointer to a set of selected elements of a </p>
 <p class="FM__Body"> &#160;&lt;em&gt;dataset&lt;/em&gt;, called a region reference. The selection can be </p>
 <p class="FM__Body"> &#160;either a point selection or a hyperslab selection. &#160;&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;</p>
 <p class="FM__Body"> &#160;WORKING TOWARD AN IMPROVED PARAGRAPH:</p>
 <p class="FM__Body"> &#160;In addition to the object reference, HDF5 also provides a regions reference.</p>
 <p class="FM__Body"> &#160;An HDF5 Region Reference is a pointer to a selection within a dataset.</p>
 <p class="FM__Body">&#160;&#160;The selection can be either a point or hyperslab selection. &#160;</p>
 <p class="FM__Body"> &#160;&lt;/span&gt;</p>
 <p class="FM__Body"> &#160;--&gt;</p>
 <p class="FM__Body"> &#160;A more complete description of region references can be found in the</p>
 <p class="FM__Body"> &#160;chapter &amp;ldquo;&lt;a href=&quot;11_Datatypes.html&quot;&gt;HDF5 Datatypes&lt;/a&gt;.&amp;rdquo;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A region reference is an object maintained by the HDF5 Library. </p>
 <p class="FM__Body">&#160;&#160;The region reference can be stored in a dataset or attribute, and then read. </p>
 <p class="FM__Body">&#160;&#160;The dataset or attribute is defined to have the special datatype, </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5T_STD_REF_DSETREG&lt;/code&gt;. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To discover the elements and/or read the data, the region reference can </p>
 <p class="FM__Body"> &#160;be dereferenced. The &lt;code&gt;H5Rdefrerence&lt;/code&gt; call returns an </p>
 <p class="FM__Body"> &#160;identifier for the &lt;em&gt;dataset&lt;/em&gt;, and then the selected dataspace can </p>
 <p class="FM__Body"> &#160;be retrieved with &lt;code&gt;H5Rget_select&lt;/code&gt; call. The selected </p>
 <p class="FM__Body"> &#160;&lt;em&gt;dataspace&lt;/em&gt; can be used to read the selected data elements.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;h4&gt;7.6.1. Example Uses for Region References&lt;/h4&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Region references are used to implement stored pointers to data within </p>
 <p class="FM__Body">&#160;&#160;a dataset. For example, features in a large dataset might be indexed </p>
 <p class="FM__Body"> &#160;by a table. See the figure below&lt;!-- formerly Figure 21--&gt;. This table </p>
 <p class="FM__Body">&#160;&#160;could be stored as an HDF5 dataset with a compound datatype, for example, </p>
 <p class="FM__Body">&#160;&#160;with a field for the name of the feature and a region reference </p>
 <p class="FM__Body"> &#160;to point to the feature in the dataset. See the second figure below.</p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Figure 22--&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig21.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 13. Features indexed by a table</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 21--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;500&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig22.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 14. Storing the table with a </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;compound datatype&lt;!-- formerly Figure 22--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;7.6.2. Creating References to Regions&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To create a region reference:&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;ol&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Create or open the dataset that contains the region&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Get the dataspace for the dataset&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Define a selection that specifies the region&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Create a region reference using the dataset and dataspace with </p>
 <p class="FM__Body"> &#160;&#160;&#160;selection&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Write the region reference(s) to the desired dataset or attribute&lt;/li&gt;</p>
 <p class="FM__Body">&lt;/ol&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure below &lt;!-- formerly Figure 23 --&gt;shows a diagram of a file </p>
 <p class="FM__Body">&#160;&#160;with three datasets. &#160;Dataset D1 and D2 are two dimensional arrays of </p>
 <p class="FM__Body">&#160;&#160;integers. Dataset R1 is a one dimensional array of references to </p>
 <p class="FM__Body">&#160;&#160;regions in D1 and D2. &#160;The regions can be any valid selection </p>
 <p class="FM__Body"> &#160;of the dataspace of the target dataset.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;400&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;a) 1 D array of region pointers, &lt;br /&gt;each pointer refers to a </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;br /&gt;selection in one Dataset.&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dspace_fig23.JPG&quot;&gt;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 15. A file with three datasets</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 23--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The example below &lt;!-- formerly Figure 24 --&gt;shows code to </p>
 <p class="FM__Body">&#160;&#160;create the array of region references. </p>
 <p class="FM__Body"> &#160;The references are created in an array of type &lt;code&gt;hdset_reg_ref_t&lt;/code&gt;. </p>
 <p class="FM__Body">&#160;&#160;Each region is defined as a selection on the dataspace of the dataset, </p>
 <p class="FM__Body"> &#160;and a reference is created using &lt;code&gt;H5Rcreate()&lt;/code&gt;. The call </p>
 <p class="FM__Body"> &#160;to &lt;code&gt;H5Rcreate()&lt;/code&gt; specifies the file, dataset, and the </p>
 <p class="FM__Body"> &#160;dataspace with selection.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/* create an array of 4 region references */</p>
 <p class="FM__Body"> &#160;hdset_reg_ref_t ref[4];</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Create a reference to the first hyperslab in the first Dataset.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body">&#160;&#160;offset[0] = 1; offset[1] = 1; </p>
 <p class="FM__Body"> &#160;count[0] = 3; count[1] = 2;</p>
 <p class="FM__Body">&#160;&#160;status = &#160;H5Sselect_hyperslab(space_id, H5S_SELECT_SET, offset, NULL, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;count, NULL);</p>
 <p class="FM__Body">&#160;&#160;status = H5Rcreate(&amp;amp;ref[0], file_id, &quot;D1&quot;, H5R_DATASET_REGION, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;space_id);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* The second reference is to a union of hyperslabs in the first</p>
 <p class="FM__Body"> &#160;&#160;* Dataset</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;offset[0] = 5; &#160;offset[1] = 3; </p>
 <p class="FM__Body"> &#160;count[0] = 1; count[1] = 4;</p>
 <p class="FM__Body"> &#160;status = H5Sselect_none(space_id);</p>
 <p class="FM__Body">&#160;&#160;status = H5Sselect_hyperslab(space_id, H5S_SELECT_SET,offset, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;NULL, count, NULL);</p>
 <p class="FM__Body">&#160;&#160;offset[0] = 6; &#160;&#160;offset[1] = 5; </p>
 <p class="FM__Body"> &#160;count[0] = 1; &#160;count[1] = 2;</p>
 <p class="FM__Body">&#160;&#160;status = H5Sselect_hyperslab(space_id, H5S_SELECT_OR, offset, NULL, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;count, NULL);</p>
 <p class="FM__Body">&#160;&#160;status = H5Rcreate(&amp;amp;ref[1], file_id, &quot;D1&quot;, H5R_DATASET_REGION, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;space_id);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* the fourth reference is to a selection of points in the first</p>
 <p class="FM__Body"> &#160;&#160;* Dataset</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;status = H5Sselect_none(space_id);</p>
 <p class="FM__Body"> &#160;coord[0][0] = 4; coord[0][1] = 4;</p>
 <p class="FM__Body"> &#160;coord[1][0] = 2; coord[1][1] = 6;</p>
 <p class="FM__Body"> &#160;coord[2][0] = 3; coord[2][1] = 7;</p>
 <p class="FM__Body"> &#160;coord[3][0] = 1; coord[3][1] = 5;</p>
 <p class="FM__Body"> &#160;coord[4][0] = 5; coord[4][1] = 8;</p>
 <p class="FM__Body"> &#160;status = H5Sselect_elements(space_id, H5S_SELECT_SET,num_points,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(const hssize_t **)coord);</p>
 <p class="FM__Body">&#160;&#160;status = H5Rcreate(&amp;amp;ref[3], file_id, &quot;D1&quot;, H5R_DATASET_REGION, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;space_id);</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* the third reference is to a hyperslab in the second Dataset</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body">&#160;&#160;offset[0] = 0; &#160;offset[1] = 0; </p>
 <p class="FM__Body"> &#160;count[0] = 4; count[1] = 6;</p>
 <p class="FM__Body">&#160;&#160;status = H5Sselect_hyperslab(space_id2, H5S_SELECT_SET, offset, NULL, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;count, NULL);</p>
 <p class="FM__Body">&#160;&#160;status = H5Rcreate(&amp;amp;ref[2], file_id, &quot;D2&quot;, H5R_DATASET_REGION, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;space_id2);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 8. Create an array of region references</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 24--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;When all the references are created, the array of references is written </p>
 <p class="FM__Body">&#160;&#160;to the dataset R1. The dataset is declared to have datatype </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5T_STD_REF_DSETREG&lt;/code&gt;. See the example below.</p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Figure 25--&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;Hsize_t dimsr[1];</p>
 <p class="FM__Body"> &#160;dimsr[0] = 4;</p>
 <p class="FM__Body">&#160;&#160;/* </p>
 <p class="FM__Body"> &#160;&#160;* Dataset with references.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;spacer_id = H5Screate_simple(1, dimsr, NULL);</p>
 <p class="FM__Body">&#160;&#160;dsetr_id = H5Dcreate(file_id, &quot;R1&quot;, H5T_STD_REF_DSETREG, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;spacer_id, H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* Write dataset with the references.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body">&#160;&#160;status = H5Dwrite(dsetr_id, H5T_STD_REF_DSETREG, H5S_ALL, H5S_ALL, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT,ref);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 9. Write the array of references to a dataset</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 25--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;When creating region references, the following rules are enforced.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;The selection must be a valid selection for the target &lt;em&gt;dataset&lt;/em&gt;, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;just as when transferring data&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;The &lt;em&gt;dataset&lt;/em&gt; must exist in the file when the reference is </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;created (&lt;code&gt;H5Rcreate&lt;/code&gt;)&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;The target &lt;em&gt;dataset&lt;/em&gt; must be in the same file as the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;stored reference&lt;/li&gt;</p>
 <p class="FM__Body">&lt;/ul&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;h4&gt;7.6.3. Reading References to Regions&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To retrieve data from a region reference, the reference must be read from </p>
 <p class="FM__Body"> &#160;the file, and then the data can be retrieved. The steps are:&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;ol&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Open the dataset or attribute containing the reference objects&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Read the reference object(s)&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;For each region reference, get the dataset (&lt;code&gt;H5R_dereference&lt;/code&gt;) and </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;dataspace (&lt;code&gt;H5Rget_space&lt;/code&gt;)&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Use the dataspace and datatype to discover what space is needed to </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;store the data, allocate the correct storage and create a dataspace </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;and datatype to define the memory data layout&lt;/li&gt;</p>
 <p class="FM__Body">&lt;/ol&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The example below &lt;!-- formerly Figure 26 --&gt;shows code to read an </p>
 <p class="FM__Body">&#160;&#160;array of region references from a </p>
 <p class="FM__Body">&#160;&#160;dataset, and then read the data from the first selected region. Note that the </p>
 <p class="FM__Body">&#160;&#160;region reference has information that records the dataset (within the file) </p>
 <p class="FM__Body"> &#160;and the selection on the &lt;em&gt;dataspace&lt;/em&gt; of the &lt;em&gt;dataset&lt;/em&gt;. </p>
 <p class="FM__Body"> &#160;After dereferencing the regions reference, the &lt;em&gt;datatype&lt;/em&gt;, </p>
 <p class="FM__Body">&#160;&#160;number of points, and some aspects of the selection can be discovered. &#160;</p>
 <p class="FM__Body">&#160;&#160;(For a union of hyperslabs, it may not be possible to determine the exact </p>
 <p class="FM__Body">&#160;&#160;set of hyperslabs that has been combined.) The table below the code example </p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Table 3 --&gt;shows the inquiry functions.&lt;/p&gt;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;When reading data from a region reference, the following rules are </p>
 <p class="FM__Body"> &#160;enforced:&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;The target &lt;em&gt;dataset&lt;/em&gt; must be present and accessible in the </p>
 <p class="FM__Body"> &#160;&#160;&#160;file&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;The selection must be a valid selection for the &lt;em&gt;dataset&lt;/em&gt;&lt;/li&gt;</p>
 <p class="FM__Body">&lt;/ul&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;dsetr_id = H5Dopen (file_id, &quot;R1&quot;, H5P_DEFAULT);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;status = H5Dread(dsetr_id, H5T_STD_REF_DSETREG, H5S_ALL, H5S_ALL, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, ref_out);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;/* </p>
 <p class="FM__Body"> &#160;&#160;* Dereference the first reference.</p>
 <p class="FM__Body"> &#160;&#160;* &#160;&#160;1) get the dataset (H5Rdereference)</p>
 <p class="FM__Body"> &#160;&#160;* &#160;&#160;2) get the selected dataspace (H5Rget_region)</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body">&#160;&#160;dsetv_id = H5Rdereference(dsetr_id, H5R_DATASET_REGION, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;amp;ref_out[0]);</p>
 <p class="FM__Body"> &#160;space_id = H5Rget_region(dsetr_id, H5R_DATASET_REGION,&amp;amp;ref_out[0]);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/*</p>
 <p class="FM__Body"> &#160;&#160;* &#160;Discover how many points and shape of the data</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;ndims = H5Sget_simple_extent_ndims(space_id);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;H5Sget_simple_extent_dims(space_id,dimsx,NULL);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;/* </p>
 <p class="FM__Body"> &#160;&#160;* Read and display hyperslab selection from the dataset.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body"> &#160;dimsy[0] = H5Sget_select_npoints(space_id);</p>
 <p class="FM__Body"> &#160;spacex_id = H5Screate_simple(1, dimsy, NULL);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;status = H5Dread(dsetv_id, H5T_NATIVE_INT, H5S_ALL, space_id, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, data_out);</p>
 <p class="FM__Body"> &#160;printf(&quot;Selected hyperslab: &quot;);</p>
 <p class="FM__Body"> &#160;for (i = 0; i &amp;lt; 8; i++)</p>
 <p class="FM__Body">&#160;&#160;{ &#160;&#160;</p>
 <p class="FM__Body">      printf(&quot;\n&quot;);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;for (j = 0; j &amp;lt; 10; j++)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;printf(&quot;%d &quot;, data_out[i][j]);</p>
 <p class="FM__Body"> &#160;}</p>
 <p class="FM__Body"> &#160;printf(&quot;\n&quot;);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 10. Read an array of region references, and then </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;read from the first selection</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 26--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 3. The inquiry functions&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;45%&quot;&gt;&lt;b&gt;Function&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;55%&quot;&gt;&lt;b&gt;Information&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5Sget_select_npoints&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The number of elements in the selection (hyperslab </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;or point selection).&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5Sget_select_bounds&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The bounding box that encloses the selected </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;points (hyperslab or point selection).&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5Sget_select_hyper_nblocks&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The number of blocks in the selection.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5Sget_select_hyper_blocklist&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;A list of the blocks in the selection.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5Sget_select_elem_npoints&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The number of points in the selection.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5Sget_select_elem_pointlist&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The points.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;a name=&quot;Programs&quot;&gt;</p>
 <p class="FM__Body">&lt;div align=&quot;right&quot;&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=-1&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;Programs&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=&quot;pagebefore&quot;&gt;7.7. Sample Programs&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;This section contains the full programs from which several of the </p>
 <p class="FM__Body"> &#160;code examples in this chapter were derived.</p>
 <p class="FM__Body"> &#160;The &lt;code&gt;h5dump&lt;/code&gt; output from the program&amp;rsquo;s output file </p>
 <p class="FM__Body"> &#160;immediately follows each program.</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;7.7.1. &lt;a name=&quot;h5_write_c&quot;&gt;&lt;code&gt;h5_write.c&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;</p>
 <p class="FM__Body"> &#160;&lt;pre&gt;</p>
 <p class="FM__Body">----------</p>
 <p class="FM__Body">#include &quot;hdf5.h&quot;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">#define H5FILE_NAME &#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;SDS.h5&quot;</p>
 <p class="FM__Body">#define DATASETNAME &quot;C Matrix&quot;</p>
 <p class="FM__Body">#define NX &#160;&#160;&#160;&#160;3 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* dataset dimensions */</p>
 <p class="FM__Body">#define NY &#160;&#160;&#160;&#160;5</p>
 <p class="FM__Body">#define RANK &#160;&#160;2</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">int</p>
 <p class="FM__Body">main (void)</p>
 <p class="FM__Body">{</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;hid_t &#160;&#160;&#160;&#160;&#160;&#160;file, dataset; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* file and dataset identifiers */</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;hid_t &#160;&#160;&#160;&#160;&#160;&#160;datatype, dataspace; &#160;&#160;/* identifiers */</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;hsize_t &#160;&#160;&#160;&#160;dims[2]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* dataset dimensions */</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;herr_t &#160;&#160;&#160;&#160;&#160;status;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;int &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data[NX][NY]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* data to write */</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;int &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;i, j;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;/*</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;* Data &#160;and output buffer initialization.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;for (j = 0; j &amp;lt; NX; j++) {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for (i = 0; i &amp;lt; NY; i++)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data[j][i] = i + 1 + j*NY;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;}</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;/*</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;* &#160;1 &#160;2 &#160;3 &#160;4 &#160;5</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;* &#160;6 &#160;7 &#160;8 &#160;9 10</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;* 11 12 13 14 15</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;/*</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;* Create a new file using H5F_ACC_TRUNC access,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;* default file creation properties, and default file</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;* access properties.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;file = H5Fcreate(H5FILE_NAME, H5F_ACC_TRUNC, H5P_DEFAULT, H5P_DEFAULT);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;/*</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;* Describe the size of the array and create the data space for fixed</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;* size dataset.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;dims[0] = NX;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;dims[1] = NY;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;dataspace = H5Screate_simple(RANK, dims, NULL);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;/*</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;* Create a new dataset within the file using defined dataspace and</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;* datatype and default dataset creation properties.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;dataset = H5Dcreate(file, DATASETNAME, H5T_NATIVE_INT, dataspace,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);&lt;/pre&gt;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;/*</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;* Write the data to the dataset using default transfer properties.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;status = H5Dwrite(dataset, H5T_NATIVE_INT, H5S_ALL, H5S_ALL,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, data);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;/*</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;* Close/release resources.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;H5Sclose(dataspace);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;H5Dclose(dataset);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;H5Fclose(file);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;return 0;</p>
 <p class="FM__Body">}</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">SDS.out</p>
 <p class="FM__Body">-------</p>
 <p class="FM__Body">HDF5 &quot;SDS.h5&quot; {</p>
 <p class="FM__Body">GROUP &quot;/&quot; {</p>
 <p class="FM__Body"> &#160;&#160;&#160;DATASET &quot;C Matrix&quot; {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;DATATYPE &#160;H5T_STD_I32BE</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;DATASPACE &#160;SIMPLE { ( 3, 5 ) / ( 3, 5 ) }</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;DATA {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1, 2, 3, 4, 5,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;6, 7, 8, 9, 10,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;11, 12, 13, 14, 15</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM__Body"> &#160;&#160;&#160;}</p>
 <p class="FM__Body">}</p>
 <p class="FM__Body">}</p>
 <p class="FM__Body">&lt;/pre&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;7.7.2. &lt;a name=&quot;h5_write_f90&quot;&gt;&lt;code&gt;h5_write.f90&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;</p>
 <p class="FM__Body">&lt;pre&gt;</p>
 <p class="FM__Body">------------</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;PROGRAM DSETEXAMPLE</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;USE HDF5 ! This module contains all necessary modules</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;IMPLICIT NONE</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CHARACTER(LEN=7), PARAMETER :: filename = &quot;SDSf.h5&quot; ! File name</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CHARACTER(LEN=14), PARAMETER :: dsetname = &quot;Fortran Matrix&quot; ! Dataset name</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER, PARAMETER :: NX = 3</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER, PARAMETER :: NY = 5</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER(HID_T) :: file_id &#160;&#160;&#160;&#160;&#160;&#160;! File identifier</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER(HID_T) :: dset_id &#160;&#160;&#160;&#160;&#160;&#160;! Dataset identifier</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER(HID_T) :: dspace_id &#160;&#160;&#160;&#160;! Dataspace identifier</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER(HSIZE_T), DIMENSION(2) :: dims = (/3,5/) ! Dataset dimensions</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER &#160;&#160;&#160;&#160;:: &#160;&#160;&#160;rank = 2 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;! Dataset rank</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER &#160;&#160;&#160;&#160;:: &#160;&#160;&#160;data(NX,NY)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER &#160;&#160;&#160;&#160;:: &#160;&#160;error ! Error flag</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER &#160;&#160;&#160;&#160;:: i, j&lt;/pre&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Initialize data</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;do i = 1, NX</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;do j = 1, NY</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data(i,j) = j + (i-1)*NY</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;enddo</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;enddo</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Data</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! &#160;1 &#160;2 &#160;3 &#160;4 &#160;5</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! &#160;6 &#160;7 &#160;8 &#160;9 10</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! 11 12 13 14 15</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Initialize FORTRAN interface.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5open_f(error)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Create a new file using default properties.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5fcreate_f(filename, H5F_ACC_TRUNC_F, file_id, error)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Create the dataspace.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5screate_simple_f(rank, dims, dspace_id, error)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Create and write dataset using default properties.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5dcreate_f(file_id, dsetname, H5T_NATIVE_INTEGER, dspace_id, &amp;amp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dset_id, error, H5P_DEFAULT_F, H5P_DEFAULT_F, &amp;amp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT_F)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5dwrite_f(dset_id, H5T_NATIVE_INTEGER, data, dims, error)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! End access to the dataset and release resources used by it.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5dclose_f(dset_id, error)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Terminate access to the data space.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5sclose_f(dspace_id, error)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Close the file.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5fclose_f(file_id, error)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Close FORTRAN interface.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5close_f(error)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;END PROGRAM DSETEXAMPLE&lt;/pre&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;pre&gt;</p>
 <p class="FM__Body">SDSf.out</p>
 <p class="FM__Body">--------</p>
 <p class="FM__Body">HDF5 &quot;SDSf.h5&quot; {</p>
 <p class="FM__Body">GROUP &quot;/&quot; {</p>
 <p class="FM__Body"> &#160;&#160;&#160;DATASET &quot;Fortran Matrix&quot; {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;DATATYPE &#160;H5T_STD_I32BE</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;DATASPACE &#160;SIMPLE { ( 5, 3 ) / ( 5, 3 ) }</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;DATA {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1, 6, 11,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2, 7, 12,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;3, 8, 13,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;4, 9, 14,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;5, 10, 15</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM__Body"> &#160;&#160;&#160;}</p>
 <p class="FM__Body">}</p>
 <p class="FM__Body">}</p>
 <p class="FM__Body">&lt;/pre&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;7.7.3. &lt;a name=&quot;h5_write_tr_f90&quot;&gt;&lt;code&gt;h5_write_tr.f90&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;</p>
 <p class="FM__Body">&lt;pre&gt;</p>
 <p class="FM__Body">---------------</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;PROGRAM DSETEXAMPLE</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;USE HDF5 ! This module contains all necessary modules</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;IMPLICIT NONE</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CHARACTER(LEN=10), PARAMETER :: filename = &quot;SDSf_tr.h5&quot; ! File name</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CHARACTER(LEN=24), PARAMETER :: dsetname = &quot;Fortran Transpose Matrix&quot;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;! Dataset name</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER, PARAMETER :: NX = 3</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER, PARAMETER :: NY = 5</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER(HID_T) :: file_id &#160;&#160;&#160;&#160;&#160;&#160;! File identifier</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER(HID_T) :: dset_id &#160;&#160;&#160;&#160;&#160;&#160;! Dataset identifier</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER(HID_T) :: dspace_id &#160;&#160;&#160;&#160;! Dataspace identifier</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER(HSIZE_T), DIMENSION(2) :: dims = (/NY, NX/) ! Dataset dimensions</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER &#160;&#160;&#160;&#160;:: &#160;&#160;&#160;rank = 2 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;! Dataset rank</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER &#160;&#160;&#160;&#160;:: &#160;&#160;&#160;data(NY,NX)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER &#160;&#160;&#160;&#160;:: &#160;&#160;error ! Error flag</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;INTEGER &#160;&#160;&#160;&#160;:: i, j</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Initialize data</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;do i = 1, NY</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;do j = 1, NX</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data(i,j) = i + (j-1)*NY</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;enddo</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;enddo</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Data</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! &#160;1 &#160;6 &#160;11</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! &#160;2 &#160;7 &#160;12</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! &#160;3 &#160;8 &#160;13</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! &#160;4 &#160;9 &#160;14</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! &#160;5 10 &#160;15</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Initialize FORTRAN interface.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5open_f(error)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Create a new file using default properties.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5fcreate_f(filename, H5F_ACC_TRUNC_F, file_id, error)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Create the dataspace.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5screate_simple_f(rank, dims, dspace_id, error)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Create and write dataset using default properties.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5dcreate_f(file_id, dsetname, H5T_NATIVE_INTEGER, dspace_id, &amp;amp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dset_id, error, H5P_DEFAULT_F, H5P_DEFAULT_F, &amp;amp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT_F)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5dwrite_f(dset_id, H5T_NATIVE_INTEGER, data, dims, error)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! End access to the dataset and release resources used by it.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5dclose_f(dset_id, error)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Terminate access to the data space.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5sclose_f(dspace_id, error)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Close the file.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5fclose_f(file_id, error)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;! Close FORTRAN interface.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CALL h5close_f(error)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;END PROGRAM DSETEXAMPLE&lt;/pre&gt;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;pre&gt;</p>
 <p class="FM__Body">SDSf_tr.out</p>
 <p class="FM__Body">-----------</p>
 <p class="FM__Body">HDF5 &quot;SDSf_tr.h5&quot; {</p>
 <p class="FM__Body">GROUP &quot;/&quot; {</p>
 <p class="FM__Body"> &#160;&#160;&#160;DATASET &quot;Fortran Transpose Matrix&quot; {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;DATATYPE &#160;H5T_STD_I32LE</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;DATASPACE &#160;SIMPLE { ( 3, 5 ) / ( 3, 5 ) }</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;DATA {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1, 2, 3, 4, 5,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;6, 7, 8, 9, 10,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;11, 12, 13, 14, 15</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM__Body"> &#160;&#160;&#160;}</p>
 <p class="FM__Body">}</p>
 <p class="FM__Body">}&lt;/pre&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;br /&gt;&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;/body&gt;</p>
 <p class="FM__Body">&lt;/html&gt;</p>
 <p class="FM__Body">&nbsp;</p>
</div>
				
			</div>
			<div class="content_top_link">
				<span class="desktop"><a>&#160;</a> </span>
			</div>
		</div>
	</div>
</div>
<div class="buttonbar">
	<div class="buttonbarholder topic_page_holder">
		<div class="bar_toc topic_page" id="xmlEditorButtonBarTOC" title="Table of Contents">
			<a href="../../table_of_contents.htm">&#160;</a> 
		</div>
		<div class="bar_index topic_page" id="xmlEditorButtonBarIDX" title="Index">
			<a href="../../index1.htm">&#160;</a> 
		</div>
		<div class="bar_glossary topic_page" id="xmlEditorButtonBarGLO" 
			 title="Glossary">
			<a href="../../glossary.htm">&#160;</a> 
		</div>
		<div class="bar_search topic_page" title="Search">
			<a href="../../searchresults.htm">&#160;</a> 
		</div>
	</div>
</div>
<div id="localisation">
	<p id="localisation_toc"><span>Table of Contents</span></p>
	<p id="localisation_idx"><span>Index</span></p>
	<p id="localisation_glo"><span>Glossary</span></p>
	<p id="localisation_fts"><span>-Search-</span></p>
	<p id="localisation_back"><span>Back</span></p>
</div>
<script type="text/javascript" src="../../template/Theme1_Standard/jquery.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/jqueryui-custom.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/overthrow.min.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/overthrow.sidescroller.min.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/layout.js"></script>
<script type="text/javascript">//<![CDATA[
$(function(){
	addRhLoadCompleteEvent(setTopic);
});
//]]></script>
</body>
</html>
