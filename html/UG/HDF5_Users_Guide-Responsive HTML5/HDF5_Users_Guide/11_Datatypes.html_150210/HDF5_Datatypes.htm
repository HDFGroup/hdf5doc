
<!DOCTYPE HTML>
<html>
<head>
 <meta http-equiv="X-UA-Compatible" content="IE=edge" />
 <meta name="OriginalFile" content="C:\1 MEE\Working\hdf5_trunk\html\UG\11_Datatypes.html_150210.fm" />
 <meta name="Originator" content="ImportMif" />
 <meta content="How to fly your personal spaceship" name="search-keywords" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="viewport" content="width=100%, initial-scale=1" />
<meta name="generator" content="Adobe FrameMaker 12" />
<title>HDF5 User's Guide - HDF5 Datatypes</title>
<link href="../../template/Theme1_Standard/main.css" type="text/css" rel="stylesheet" />
<link href="../../template/Theme1_Standard/jqueryui-custom.css" type="text/css" rel="stylesheet" />
 <link rel="stylesheet" href="11_Datatypes.html_150210.css" type="text/css" /><script type="text/javascript" language="JavaScript">//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]></script><style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadcsh.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/showhidecontrols.js"></script>
<script type="text/javascript" src="../../template/scripts/pageloader.js"></script>
<script type="text/javascript" src="../../template/scripts/toctree.js"></script>
<script type="text/javascript" src="../../template/scripts/toctreeloader.js"></script>
<script type="text/javascript" src="../../template/scripts/indextree.js"></script>
<script type="text/javascript" src="../../template/scripts/indextreeloader.js"></script>
<script type="text/javascript" src="../../template/scripts/glossarylist.js"></script>
<script type="text/javascript" src="../../template/scripts/glossarylistloader.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
<script type="text/javascript" src="../../template/scripts/searchfield.js"></script>
<script type="text/javascript" src="../../template/scripts/tabpanels.js"></script>
<script type="text/javascript" >
gTocPageHtml = "{%ICON%}<span  class=\"wTOCTreePageText\">{%LINK_NAME%}</span>";
gTocBookClosedHtml = "{%ICON%}<span  class=\"wTOCTreeCloseBookText\">{%LINK_NAME%}</span>";
gTocBookOpenHtml = "{%ICON%}<span  class=\"wTOCTreeCloseBookText\">{%LINK_NAME%}</span>";
gTocUrlHtml = "{%ICON%}<span  class=\"wTOCTreeLinkText\">{%LINK_NAME%}</span>";
gTocPageIconSrc = "../../template/Theme1_Standard/TOCTreePage.png";
gTocPageIconHoverSrc = "../../template/Theme1_Standard/TOCTreePageHover.png";
gTocPageIconSelSrc = "../../template/Theme1_Standard/TOCTreePageSelected.png";
gTocPageIconClass = "wTOCTreePageIcon";
gTocPageIconStyle = "";
gTocBookClosedIconSrc = "../../template/Theme1_Standard/TOCTreeCloseBook.png";
gTocBookClosedIconHoverSrc = "../../template/Theme1_Standard/TOCTreeCloseBookHover.png";
gTocBookClosedIconSelSrc = "../../template/Theme1_Standard/TOCTreeCloseBookSelected.png";
gTocBookClosedIconClass = "wTOCTreeCloseBookIcon";
gTocBookClosedIconStyle = "";
gTocBookOpenIconSrc = "../../template/Theme1_Standard/TOCTreeOpenBook.png";
gTocBookOpenIconHoverSrc = "../../template/Theme1_Standard/TOCTreeOpenBookHover.png";
gTocBookOpenIconSelSrc = "../../template/Theme1_Standard/TOCTreeOpenBookSelected.png";
gTocBookOpenIconClass = "wTOCTreeOpenBookIcon";
gTocBookOpenIconStyle = "";
gTocUrlIconSrc = "../../template/Theme1_Standard/TOCTreeLink.png";
gTocUrlIconHoverSrc = "../../template/Theme1_Standard/TOCTreeLinkHover.png";
gTocUrlIconSelSrc = "../../template/Theme1_Standard/TOCTreeLinkSelected.png";
gTocUrlIconClass = "wTOCTreeLinkIcon";
gTocUrlIconStyle = "";
</script>
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
</script>
<script type="text/javascript" >
gIdxKWHtml = "<span  class=\"wIdxKeywordText\">{%LINK_NAME%}</span>";
	gIdxLinkHtml = "<span  class=\"wIdxLinkText\">{%LINK_NAME%}</span>";
	gIdxCategoryHtml = "<span  class=\"wIdxAlphabetText\">{%LINK_NAME%}</span>";
</script>
<script type="text/javascript" >
gTopicId = "1_3";
</script>
<script type="text/javascript" >
gGloTermHtml = "<span  class=\"wGloTermText\">{%LINK_NAME%}</span>";
	gGloDefHtml = "<span  class=\"wGloDefinitionText\">{%LINK_NAME%}</span>";
	gGloCategoryHtml = "<span  class=\"wGloAlphabetText\">{%LINK_NAME%}</span>";
</script>
 <link rel="SHORTCUT ICON" href="../../Responsive HTML5_favicon.ico" />
</head>

<body>
<script type="text/javascript" src="../../ehlpdhtm.js"></script>



<div class="floatholder">
	<div class="phone_scrollarea overthrow">
		<div class="header">
			<table class="headertable">
				<tr>
					<td class="logo"><a href="../HDF5_UG_TitleWithoutSamples/HDF5_UG_TitleWithoutSamples.htm" class="homelink"><img src="../../template/Theme1_Standard/logo.png" alt="Logo" id="wLogoImage" style=" border:none; width:100%; max-width:53px;" border="0" /></a> </td>
					<td class="title"><div>
						<a href="../HDF5_UG_TitleWithoutSamples/HDF5_UG_TitleWithoutSamples.htm" class="homelink"><span>HDF5 User's Guide</span></a> 
						 
					</div></td>
					<td class="brsBack"><a id="browseSeqBack" class="wBSBackButton" href="../10_Datasets.html_150210/HDF5_Datasets.htm"><img alt="" src="../../template/Theme1_Standard/topic_left.png" class="wBSBackButton" border="0" style="width:100%; max-width:19px" /></a> </td>
					<td class="brsNext"><a id="browseSeqNext" class="wBSNextButton" href="../12_Dataspaces.html_150210/HDF5_Dataspaces_and_Partial_I_O.htm"><img alt="" src="../../template/Theme1_Standard/topic_right.png" class="wBSNextButton" border="0" style="width:100%; max-width:19px" /></a> </td>
				</tr>
			</table>
		</div>
		<div class="sidebar">
			<div data-showin="Always" class="wTabbedPanel" id="tabbedpanel">
				<ul class="wTabGroup" id="tab" data-tabid="tocTabButton" style="margin: 0px;">
					<li class="wTab" id="tocTabButton" data-contentid="tocTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/toc.png" class="normal" alt="Table of Contents" title="Table of Contents" id="xmlEditorTOCSidebarButton" style=" border:none; width:100%; max-width:30px;" border="0" /><img src="../../template/Theme1_Standard/toc_hover.png" class="hover" alt="Table of Contents" title="Table of Contents" id="xmlEditorTOCSidebarButtonHover" style=" border:none; width:100%; max-width:30px;" border="0" /></li>
					<li class="wTab" id="idxTabButton" data-contentid="idxTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/index.png" class="normal" alt="Index" title="Index" id="xmlEditorIDXSidebarButton" style=" border:none; width:100%; max-width:30px;" border="0" /><img src="../../template/Theme1_Standard/index_hover.png" class="hover" alt="Index" title="Index" id="xmlEditorIDXSidebarButtonHover" style=" border:none; width:100%; max-width:30px;" border="0" /></li>
					<li class="wTab" id="gloTabButton" data-contentid="gloTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/glo.png" class="normal" alt="Glossary" title="Glossary" id="xmlEditorGLOSidebarButton" style=" border:none; width:100%; max-width:34px;" border="0" /><img src="../../template/Theme1_Standard/glo_hover.png" class="hover" alt="Glossary" title="Glossary" id="xmlEditorGLOSidebarButtonHover" style=" border:none; width:100%; max-width:34px;" border="0" /></li>
				</ul>
				<div class="wTabContentGroup">
					<div id="tocTabPane" class="wTabContent">
						<div id="toc" class="wTOCTree" tabindex="320">
							
							
							
							
						</div>
					</div>
					<div id="idxTabPane" class="wTabContent">
						<div id="idx" class="wIndex">
							<input class="wIdxFilter" id="idxFilterBox" type="text" data-placeholder="Filter Keyword" onkeyup="filterIdx()"></input>
							
							
							
						</div>
					</div>
					<div id="gloTabPane" class="wTabContent">
						<div id="glo" class="wGlossary">
							<input class="wGloFilter" id="gloFilterBox" type="text" data-placeholder="Filter Term" onkeyup="filterGlo()"></input>
							
							
							
						</div>
					</div>
				</div>
			</div>
			<div class="closebutton buttonOpened">
				&#160; 
			</div>
		</div>
		<div class="content">
			<div class="desktop_functionholder">
				<div class="searchholder">
					<div class="wSearchField">
						<input id="searchBox" class="wSearchField" type="search" data-placeholder="-Search-" onkeydown="searchHelp(event, 'searchBox')" data-search="true" /><a class="wSearchLink" onclick="searchHelp(null, 'searchBox')" href="#"><img src="../../template/Theme1_Standard/Search.png" alt="" id="xmlEditwSearchLink" class="wSearchLink" border="0" style="width:100%; max-width:24px" /></a> 
						 
					</div>
				</div>
				<div class="home">
					<a href="../HDF5_UG_TitleWithoutSamples/HDF5_UG_TitleWithoutSamples.htm"><img src="../../template/Theme1_Standard/home.png" alt="" class="homebutton normal" id="xmlEditorHomeButton" border="0" style="width:100%; max-width:27px" /><img src="../../template/Theme1_Standard/home_hover.png" alt="" class="homebutton hover" id="xmlEditorHomeButtonHover" border="0" style="width:100%; max-width:27px" /></a> 
				</div>
				<div class="print">
					<a href="javascript:window.print()" class="wPrintButton"><img src="../../template/Theme1_Standard/Print.png" alt="" class="wPrintButton normal" id="xmlEditorPrintButton" border="0" style="width:100%; max-width:30px" /><img src="../../template/Theme1_Standard/Print_hover.png" alt="" class="wPrintButton hover" id="xmlEditorPrintButtonHover" border="0" style="width:100%; max-width:30px" /></a> 
				</div>
				<div class="brsBack">
					<a id="browseSeqBack0" class="wBSBackButton" href="../10_Datasets.html_150210/HDF5_Datasets.htm"><img alt="" src="../../template/Theme1_Standard/BSBack.png" class="wBSBackButton normal" id="xmlEditorBSBackButton" border="0" style="width:100%; max-width:19px" /><img alt="" src="../../template/Theme1_Standard/BSBack_hover.png" class="wBSBackButton hover" id="xmlEditorBSBackButtonHover" border="0" style="width:100%; max-width:19px" /></a> 
					 
				</div>
				<div class="brsNext">
					<a id="browseSeqNext0" class="wBSNextButton" href="../12_Dataspaces.html_150210/HDF5_Dataspaces_and_Partial_I_O.htm"><img alt="" src="../../template/Theme1_Standard/BSNext.png" class="wBSNextButton normal" id="xmlEditorBSNextButton" border="0" style="width:100%; max-width:19px" /><img alt="" src="../../template/Theme1_Standard/BSNext_hover.png" class="wBSNextButton hover" id="xmlEditorBSNextButtonHover" border="0" style="width:100%; max-width:19px" /></a> 
					 
				</div>
			</div>
			<div class="contentholder">
				<a name="content_top_placeholder"></a> 
				<div class="wTopic" id="rh_default_topic_placeholder_id">


 <p class="FM__Heading_Level1">6. <a name="XREF_DatatypesChapter"></a>HDF5 Datatypes</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;dir&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [</p>
 <p class="FM__Body">&lt;h1 class=editingComment align=center&gt;- - - DRAFT - - -&lt;/h1&gt;</p>
 <p class="FM__Body"> &#160;&lt;p class=&quot;editingComment&quot;&gt;- - - This is an early draft of the Datatypes chapter </p>
 <p class="FM__Body"> &#160;of the new HDF5 User's Guide; much of this material will appear in the published </p>
 <p class="FM__Body">&#160;&#160;version of the new UG, but some will appear in other documents, such as the </p>
 <p class="FM__Body">&#160;&#160;HDF5 Reference Manual or the HDF5 Tutorial. &#160;A PDF version of this draft is </p>
 <p class="FM__Body">&#160;&#160;being made available to HDF5 users prior to publication of the new UG because </p>
 <p class="FM__Body">&#160;&#160;it contains a great deal of information that is not otherwise available. &#160;</p>
 <p class="FM__Body"> &#160;] ] ]&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/dir&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;Intro&quot;&gt;</p>
 <p class="FM__Body">&lt;h3&gt;6.1. Introduction&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;6.1.1. Introduction and Definitions&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;An HDF5 dataset is an array of data elements, arranged according to the </p>
 <p class="FM__Body">&#160;&#160;specifications of the dataspace. &#160;In general, a data element is the smallest </p>
 <p class="FM__Body">&#160;&#160;addressable unit of storage in the HDF5 file. (Compound datatypes are the </p>
 <p class="FM__Body">&#160;&#160;exception to this rule.) The HDF5 datatype defines the storage format for a </p>
 <p class="FM__Body"> &#160;single data element. See the figure below.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The model for HDF5 attributes is extremely similar to datasets: </p>
 <p class="FM__Body">&#160;&#160;an attribute has a dataspace and a datatype, as shown in the figure below. </p>
 <p class="FM__Body"> &#160;The information in this chapter applies to both datasets and attributes.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;500&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig1.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 1. Datatypes, dataspaces, and datasets&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Abstractly, each data element within the dataset is a sequence of bits, </p>
 <p class="FM__Body">&#160;&#160;interpreted as a single value from a set of values (e.g., a number or a </p>
 <p class="FM__Body">&#160;&#160;character). For a given datatype, there is a standard or convention for </p>
 <p class="FM__Body">&#160;&#160;representing the values as bits, and when the bits are represented in </p>
 <p class="FM__Body">&#160;&#160;a particular storage the bits are laid out in a specific storage </p>
 <p class="FM__Body">&#160;&#160;scheme, e.g., as 8-bit bytes, with a specific ordering and alignment </p>
 <p class="FM__Body"> &#160;of bytes within the storage array.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;HDF5 datatypes implement a flexible, extensible, and portable mechanism </p>
 <p class="FM__Body">&#160;&#160;for specifying and discovering the storage layout of the data elements, </p>
 <p class="FM__Body">&#160;&#160;determining how to interpret the elements (e.g., as floating point numbers), </p>
 <p class="FM__Body"> &#160;and for transferring data from different compatible layouts.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;An HDF5 datatype describes one specific layout of bits. A dataset has a </p>
 <p class="FM__Body">&#160;&#160;single datatype which applies to every data element. When a dataset is </p>
 <p class="FM__Body">&#160;&#160;created, the storage datatype is defined. After the dataset or attribute </p>
 <p class="FM__Body"> &#160;is created, the datatype cannot be changed.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;The datatype describes the storage layout of a single data element&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;All elements of the dataset must have the same type&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;The datatype of a dataset is immutable&lt;/li&gt;</p>
 <p class="FM__Body">&lt;/ul&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;When data is transferred (e.g., a read or write), each end point of the </p>
 <p class="FM__Body">&#160;&#160;transfer has a datatype, which describes the correct storage for the elements. </p>
 <p class="FM__Body">&#160;&#160;The source and destination may have different (but compatible) layouts, in which </p>
 <p class="FM__Body"> &#160;case the data elements are automatically transformed during the transfer.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;HDF5 datatypes describe commonly used binary formats for numbers (integers </p>
 <p class="FM__Body">&#160;&#160;and floating point) and characters (ASCII). A given computing architecture and </p>
 <p class="FM__Body">&#160;&#160;programming language supports certain number and character representations. </p>
 <p class="FM__Body">&#160;&#160;For example, a computer may support 8-, 16-, 32-, and 64-bit signed integers, </p>
 <p class="FM__Body">&#160;&#160;stored in memory in little-endian byte order. These would presumably correspond </p>
 <p class="FM__Body">&#160;&#160;to the C programming language types &amp;lsquo;char&amp;rsquo;, &amp;lsquo;short&amp;rsquo;, </p>
 <p class="FM__Body"> &#160;&amp;lsquo;int&amp;rsquo;, and &amp;lsquo;long&amp;rsquo;.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;When reading and writing from memory, the HDF5 library must know the </p>
 <p class="FM__Body">&#160;&#160;appropriate datatype that describes the architecture specific layout. </p>
 <p class="FM__Body">&#160;&#160;The HDF5 library provides the platform independent &amp;lsquo;NATIVE&amp;rsquo; </p>
 <p class="FM__Body">&#160;&#160;types, which are mapped to an appropriate datatype for each platform. So </p>
 <p class="FM__Body"> &#160;the type &amp;lsquo;&lt;code&gt;H5T_NATIVE_INT&lt;/code&gt;&amp;rsquo; is an alias for </p>
 <p class="FM__Body"> &#160;the appropriate descriptor for each platform.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Data in memory has a datatype:&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;The storage layout in memory is architecture-specific&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;The HDF5 &amp;lsquo;NATIVE&amp;rsquo; types are predefined aliases for the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;architecture-specific memory layout&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;The memory datatype need not be the same as the stored datatype of </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;the dataset&lt;/li&gt;</p>
 <p class="FM__Body">&lt;/ul&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In addition to numbers and characters, an HDF5 datatype can describe more </p>
 <p class="FM__Body">&#160;&#160;abstract classes of types, including </p>
 <p class="FM__Body">&#160;&#160;&lt;!-- date-times, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(TIME REFERENCES COMMENTED OUT 6 FEB 2006,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;UNTIL TIME DATATYPE IS PROPERLY SUPPORTED IN THE LIBRARY) --&gt;</p>
 <p class="FM__Body">&#160;&#160;enumerations, strings, bit strings, and references (pointers to objects </p>
 <p class="FM__Body">&#160;&#160;in the HDF5 file). HDF5 supports several classes of composite datatypes </p>
 <p class="FM__Body">&#160;&#160;which are combinations of one or more other datatypes. In addition to </p>
 <p class="FM__Body">&#160;&#160;the standard predefined datatypes, users can define new datatypes </p>
 <p class="FM__Body"> &#160;within the datatype classes.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 datatype model is very general and flexible:&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;For common simple purposes, only predefined types will be needed&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Datatypes can be combined to create complex structured datatypes&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;If needed, users can define custom atomic datatypes&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Committed datatypes can be shared by datasets or attributes&lt;/li&gt;</p>
 <p class="FM__Body">&lt;/ul&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;h4&gt;6.1.2. HDF5 Datatype Model&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 Library implements an object-oriented model of datatypes. </p>
 <p class="FM__Body">&#160;&#160;HDF5 datatypes are organized as a logical set of base types, or datatype </p>
 <p class="FM__Body">&#160;&#160;classes. Each datatype class defines a format for representing logical </p>
 <p class="FM__Body"> &#160;values as a sequence of bits. For example the &lt;code&gt;H5T_INTEGER&lt;/code&gt; </p>
 <p class="FM__Body">&#160;&#160;class is a format for representing twos complement integers of various </p>
 <p class="FM__Body"> &#160;sizes.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A datatype class is defined as a set of one or more datatype properties.  </p>
 <p class="FM__Body">&#160;&#160;A datatype property is a property of the bit string. The datatype properties </p>
 <p class="FM__Body">&#160;&#160;are defined by the logical model of the datatype class. &#160;For example, the </p>
 <p class="FM__Body">&#160;&#160;integer class (twos complement integers) has properties such as </p>
 <p class="FM__Body">&#160;&#160;&amp;ldquo;signed or unsigned&amp;rdquo;, &amp;ldquo;length&amp;rdquo;, and </p>
 <p class="FM__Body">&#160;&#160;&amp;ldquo;byte-order&amp;rdquo;. The float class (IEEE floating point </p>
 <p class="FM__Body">&#160;&#160;numbers) has these properties, plus &amp;ldquo;exponent bits&amp;rdquo;, </p>
 <p class="FM__Body"> &#160;&amp;ldquo;exponent sign&amp;rdquo;, etc.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A datatype is derived from one datatype class: a given datatype has </p>
 <p class="FM__Body">&#160;&#160;a specific value for the datatype properties defined by the class. </p>
 <p class="FM__Body">&#160;&#160;For example, for 32-bit signed integers, stored big-endian, the HDF5 </p>
 <p class="FM__Body">&#160;&#160;datatype is a sub-type of integer with the properties set to </p>
 <p class="FM__Body"> &#160;&lt;code&gt;signed=1&lt;/code&gt;, &lt;code&gt;size=4&lt;/code&gt; (bytes), and </p>
 <p class="FM__Body"> &#160;&lt;code&gt;byte-order=BE&lt;/code&gt;.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 datatype API (H5T functions) provides methods to create </p>
 <p class="FM__Body">&#160;&#160;datatypes of different datatype classes, to set the datatype properties </p>
 <p class="FM__Body">&#160;&#160;of a new datatype, and to discover the datatype properties of an </p>
 <p class="FM__Body"> &#160;existing datatype.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The datatype for a dataset is stored in the HDF5 file as part of </p>
 <p class="FM__Body"> &#160;the metadata for the dataset.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A datatype can be shared by more than one dataset in the file if the </p>
 <p class="FM__Body"> &#160;datatype is saved to the file with a name. This shareable datatype is known</p>
 <p class="FM__Body">&#160;&#160;as a committed datatype. In the past, this kind of datatype was called </p>
 <p class="FM__Body"> &#160;a named datatype. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;When transferring data (e.g., a read or write), the data elements of </p>
 <p class="FM__Body">&#160;&#160;the source and destination storage must have compatible types. &#160;As a </p>
 <p class="FM__Body">&#160;&#160;general rule, data elements with the same datatype class are compatible </p>
 <p class="FM__Body">&#160;&#160;while elements from different datatype classes are not compatible. When </p>
 <p class="FM__Body">&#160;&#160;transferring data of one datatype to another compatible datatype, the </p>
 <p class="FM__Body">&#160;&#160;HDF5 Library uses the datatype properties of the source and </p>
 <p class="FM__Body">&#160;&#160;destination to automatically transform each data element. &#160;For </p>
 <p class="FM__Body">&#160;&#160;example, when reading from data stored as 32-bit signed integers, </p>
 <p class="FM__Body">&#160;&#160;big-endian into 32-bit signed integers, little-endian, the HDF5 </p>
 <p class="FM__Body"> &#160;Library will automatically swap the bytes.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Thus, data transfer operations (&lt;code&gt;H5Dread&lt;/code&gt;, </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Dwrite&lt;/code&gt;, &lt;code&gt;H5Aread&lt;/code&gt;, &lt;code&gt;H5Awrite&lt;/code&gt;) require </p>
 <p class="FM__Body"> &#160;a datatype for both the source and the destination.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;500&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig2.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 2. The datatype model&lt;/b&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 Library defines a set of predefined datatypes, corresponding to </p>
 <p class="FM__Body">&#160;&#160;commonly used storage formats, such as twos complement integers, IEEE Floating </p>
 <p class="FM__Body">&#160;&#160;point numbers, etc., 4- and 8-byte sizes, big-endian and little-endian </p>
 <p class="FM__Body">&#160;&#160;byte orders. &#160;In addition, a user can derive types with custom values </p>
 <p class="FM__Body">&#160;&#160;for the properties. For example, a user program may create a datatype </p>
 <p class="FM__Body"> &#160;to describe a 6-bit integer, or a 600-bit floating point number.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In addition to atomic datatypes, the HDF5 Library supports </p>
 <p class="FM__Body">&#160;&#160;composite datatypes. A composite datatype is an aggregation of one </p>
 <p class="FM__Body">&#160;&#160;or more datatypes. Each class of composite datatypes has properties </p>
 <p class="FM__Body">&#160;&#160;that describe the organization of the composite datatype. See the </p>
 <p class="FM__Body"> &#160;figure below. Composite datatypes include:&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Compound datatypes: structured records&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Array: a multidimensional array of a datatype&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Variable-length: a one-dimensional array of a datatype&lt;/li&gt;</p>
 <p class="FM__Body">&lt;/ul&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;400&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig3.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 3. Composite datatypes&lt;/b&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;&lt;em&gt;6.1.2.1. Datatype Classes and Properties&lt;/em&gt;&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure below shows the HDF5 datatype classes. Each class is </p>
 <p class="FM__Body">&#160;&#160;defined to have a set of properties which describe the layout of the </p>
 <p class="FM__Body">&#160;&#160;data element and the interpretation of the bits. The table below </p>
 <p class="FM__Body"> &#160;lists the properties for the datatype classes.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig4.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 4. Datatype classes&lt;/b&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;7&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 1. Datatype classes and their properties&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;7&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;&lt;b&gt;Class&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;2%&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;18%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;2%&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;28%&quot;&gt;&lt;b&gt;Properties&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;2%&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;28%&quot;&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;7&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Integer&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Twos complement integers&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Size (bytes), precision (bits), offset (bits), </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;pad, byte order, signed/unsigned&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;7&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Float&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Floating Point numbers&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Size (bytes), precision (bits), offset (bits), </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pad, byte order, sign position, exponent position, exponent size (bits), </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;exponent sign, exponent bias, mantissa position, mantissa (size) bits, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;mantissa sign, mantissa normalization, internal padding&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;See IEEE 754 for a definition of these properties. These </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;properties describe non-IEEE 754 floating point formats as well.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;7&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Character&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Array of 1-byte character encoding &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Size (characters), Character set, byte order, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;pad/no pad, pad character&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Currently, ASCII and UTF-8 are supported.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;7&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Bitfield&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;String of bits&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Size (bytes), precision (bits), offset (bits), </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;pad, byte order&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;A sequence of bit values packed into one or more bytes.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;7&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Opaque&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Uninterpreted data&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Size (bytes), precision (bits), offset (bits), </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;pad, byte order, tag&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;A sequence of bytes, stored and retrieved as a block. The </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;lsquo;tag&amp;rsquo; is a string that can be used to label </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;the value.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;7&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Enumeration&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;A list of discrete values, with symbolic names </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;in the form of strings.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Number of elements, element names, element values&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Enumeration is a list of pairs, (name, value). The name is </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;a string, the value is an unsigned integer.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;7&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Reference&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Reference to object or region within the HDF5 file&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt; See the Reference API, H5R&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;7&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Array&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Array (1-4 dimensions) of data elements&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Number of dimensions, dimension sizes, base datatype&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The array is accessed atomically: no selection or sub-setting.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;7&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Variable-length&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;A variable-length 1-dimensional array of data data elements&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Current size, base type&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;7&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Compound&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;A Datatype &#160;of a sequence of Datatypes&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Number of members, member names, member types, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;member offset, member class, member size, byte order &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;7&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;&lt;em&gt;6.1.2.2. Predefined Datatypes&lt;/em&gt;&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 library predefines a modest number of commonly used datatypes. </p>
 <p class="FM__Body">&#160;&#160;These types have standard symbolic names of the form </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5T_&lt;em&gt;arch_base&lt;/em&gt;&lt;/code&gt; where &lt;em&gt;arch&lt;/em&gt; is an architecture </p>
 <p class="FM__Body"> &#160;name and &lt;em&gt;base&lt;/em&gt; is a programming type name (Table 2). New types can </p>
 <p class="FM__Body">&#160;&#160;be derived from the predefined types by copying the predefined type (see </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Tcopy()&lt;/code&gt;) and then modifying the result. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The base name of most types consists of a letter to indicate the class </p>
 <p class="FM__Body"> &#160;(Table 3), a precision in bits, and an indication of the byte order (Table 4).&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Table 5 shows examples of predefined datatypes. </p>
 <p class="FM__Body">&#160;&#160;The full list can be found &#160;in the &amp;ldquo;HDF5 Predefined Datatypes&amp;rdquo; </p>
 <p class="FM__Body"> &#160;section of the &lt;a href=&quot;../RM/RM_H5Front.html&quot;&gt;</p>
 <p class="FM__Body"> &#160;&lt;cite&gt;HDF5 Reference Manual&lt;/cite&gt;&lt;/a&gt;.&lt;/p&gt;</p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [</p>
 <p class="FM__Body"> &#160;Link to ../PredefDTypes.html</p>
 <p class="FM__Body"> &#160;] ] ]&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 2. Architectures used in predefined datatypes&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Architecture&lt;br /&gt;Name&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;80%&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;IEEE&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;IEEE-754 standard floating point types in </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;various byte orders.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;STD&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;This is an architecture that contains semi-standard </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;datatypes like signed two&amp;rsquo;s complement integers, unsigned </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;integers, and bitfields in various byte orders.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;C &lt;br /&gt; FORTRAN&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Types which are specific to the C or Fortran </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;programming languages are defined in these architectures. For instance, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5T_C_S1&lt;/code&gt; defines a base string type with null termination </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;which can be used to derive string types of other lengths.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;NATIVE&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;This architecture contains C-like </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;datatypes for the machine on which the library was compiled. The </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;types were actually defined by running the &lt;code&gt;H5detect&lt;/code&gt; </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;program when the library was compiled. In order to be portable, </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;applications should almost always use this architecture to describe </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;things in memory.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;CRAY&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Cray architectures. These are </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;word-addressable, big-endian systems with non-IEEE floating point.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;INTEL&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;All Intel and compatible CPU&amp;rsquo;s </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;including 80286, 80386, 80486, Pentium, Pentium-Pro, and Pentium-II. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;These are little-endian systems with IEEE floating-point.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;MIPS&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;All MIPS CPU&amp;rsquo;s commonly used in </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;SGI systems. These are big-endian systems with IEEE floating-point.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;ALPHA&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;All DEC Alpha CPU&amp;rsquo;s, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;little-endian systems with IEEE floating-point.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;200&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 3. Base types&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50&quot;&gt;B&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;150&quot;&gt;Bitfield&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;F&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Floating point&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;I&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Signed integer&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;R&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;References&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;S&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Character string&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;U&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Unsigned integer&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;200&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 4. Byte order&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50&quot;&gt;BE&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;150&quot;&gt;Big-endian&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;LE&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Little-endian&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 5. Some predefined datatypes&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;25%&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;75%&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_IEEE_F64LE&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Eight-byte, little-endian, IEEE floating-point&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_IEEE_F32BE&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Four-byte, big-endian, IEEE floating point&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_STD_I32LE&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Four-byte, little-endian, signed two&amp;rsquo;s complement </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;integer&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_STD_U16BE&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Two-byte, big-endian, unsigned integer&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_C_S1&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;One-byte, null-terminated string of eight-bit characters&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_INTEL_B64&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Eight-byte bit field on an Intel CPU&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_CRAY_F64&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Eight-byte Cray floating point&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_STD_ROBJ&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Reference to an entire object in a file&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 Library predefines a set of &lt;code&gt;NATIVE&lt;/code&gt; datatypes which </p>
 <p class="FM__Body">&#160;&#160;are similar to C type names. The native types are set to be an alias for the </p>
 <p class="FM__Body">&#160;&#160;appropriate HDF5 datatype for each platform. For example, </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5T_NATIVE_INT&lt;/code&gt; corresponds to a C &lt;code&gt;int&lt;/code&gt; type. </p>
 <p class="FM__Body"> &#160;On an Intel based PC, this type is the same as &lt;code&gt;H5T_STD_I32LE&lt;/code&gt;, </p>
 <p class="FM__Body"> &#160;while on a MIPS system this would be equivalent to &lt;code&gt;H5T_STD_I32BE&lt;/code&gt;. </p>
 <p class="FM__Body"> &#160;Table 6 shows examples of &lt;code&gt;NATIVE&lt;/code&gt; types and corresponding </p>
 <p class="FM__Body"> &#160;C types for a common 32-bit workstation.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 6. Native and 32-bit C datatypes&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;Example&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;Corresponding C Type&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_CHAR&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;char&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_SCHAR&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;signed char&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_UCHAR&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;unsigned char&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_SHORT&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;short&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_USHORT&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;unsigned short&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_INT&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;int&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_UINT&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;unsigned&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_LONG&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;long&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_ULONG&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;unsigned long&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_LLONG&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;long long&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_ULLONG&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;unsigned long long&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_FLOAT&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;float&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_DOUBLE&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;double&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_LDOUBLE&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;long double&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_HSIZE&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;hsize_t&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_HSSIZE&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;hssize_t&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_HERR&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;herr_t&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_HBOOL&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;hbool_t&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_B8&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;8-bit unsigned integer or 8-bit buffer in memory&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_B16&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;16-bit unsigned integer or 16-bit buffer in memory&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_B32&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;32-bit unsigned integer or 32-bit buffer in memory&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_NATIVE_B64&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;64-bit unsigned integer or 64-bit buffer in memory&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;a name=&quot;DtypesUsed&quot;&gt;</p>
 <p class="FM__Body">&lt;div align=right&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=&quot;-1&quot;&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;DtypesUsed&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=pagebefore&gt;6.2. How Datatypes are Used&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;6.2.1. The Datatype Object and the HDF5 Datatype API&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 Library manages datatypes as objects. The HDF5 datatype API </p>
 <p class="FM__Body">&#160;&#160;manipulates the datatype objects through C function calls. &#160;New datatypes </p>
 <p class="FM__Body">&#160;&#160;can be created from scratch or copied from existing datatypes. When a </p>
 <p class="FM__Body">&#160;&#160;datatype is no longer needed its resources should be released by calling </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Tclose()&lt;/code&gt;. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The datatype object is used in several roles in the HDF5 data model </p>
 <p class="FM__Body">&#160;&#160;and library. Essentially, a datatype is used whenever the format of </p>
 <p class="FM__Body">&#160;&#160;data elements is needed. There are four major uses of datatypes in </p>
 <p class="FM__Body">&#160;&#160;the HDF5 Library: at dataset creation, during data transfers, when </p>
 <p class="FM__Body">&#160;&#160;discovering the contents of a file, and for specifying user-defined </p>
 <p class="FM__Body"> &#160;datatypes. See the table below.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 7. Datatype uses&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Use&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Dataset creation&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The datatype of the data elements must be </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;declared when the dataset is created.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Data transfer&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The datatype (format) of the data elements </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;must be defined for both the source and destination.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Discovery&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The datatype of a dataset can be </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;interrogated to retrieve a complete description of the storage layout.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Creating user-defined datatypes&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Users can define their own datatypes by </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;creating datatype objects and setting their properties.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;6.2.2. Dataset Creation&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;All the data elements of a dataset have the same datatype. When a dataset </p>
 <p class="FM__Body">&#160;&#160;is created, the datatype for the data elements must be specified. The </p>
 <p class="FM__Body">&#160;&#160;datatype of a dataset can never be changed. The example below shows </p>
 <p class="FM__Body">&#160;&#160;the use of a datatype to create a dataset called &amp;ldquo;/dset&amp;rdquo;. &#160;In </p>
 <p class="FM__Body">&#160;&#160;this example, the dataset will be stored as 32-bit signed integers in </p>
 <p class="FM__Body"> &#160;big-endian order.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;hid_t dt;</p>
 <p class="FM__Body"> &#160;dt = H5Tcopy(H5T_STD_I32BE);</p>
 <p class="FM__Body">&#160;&#160;dataset_id = H5Dcreate(file_id, &amp;ldquo;/dset&amp;rdquo;, dt, dataspace_id, &#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 1. Using a datatype to create a dataset &lt;/b&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;6.2.3. Data Transfer (Read and Write)&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Probably the most common use of datatypes is to write or read data from a </p>
 <p class="FM__Body">&#160;&#160;dataset or attribute. In these operations, each data element is transferred </p>
 <p class="FM__Body">&#160;&#160;from the source to the destination (possibly rearranging the order of the </p>
 <p class="FM__Body">&#160;&#160;elements). Since the source and destination do not need to be identical </p>
 <p class="FM__Body">&#160;&#160;(i.e., one is disk and the other is memory) the transfer requires both the </p>
 <p class="FM__Body">&#160;&#160;format of the source element and the destination element. Therefore, data </p>
 <p class="FM__Body"> &#160;transfers use two datatype objects, for the source and destination.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;When data is written, the source is memory and the destination is disk </p>
 <p class="FM__Body">&#160;&#160;(file). The memory datatype describes the format of the data element in the </p>
 <p class="FM__Body">&#160;&#160;machine memory, and the file datatype describes the desired format of the data </p>
 <p class="FM__Body">&#160;&#160;element on disk. Similarly, when reading, the source datatype describes the </p>
 <p class="FM__Body">&#160;&#160;format of the data element on disk, and the destination datatype describes the </p>
 <p class="FM__Body"> &#160;format in memory.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In the most common cases, the file datatype is the datatype specified </p>
 <p class="FM__Body">&#160;&#160;when the dataset was created, and the memory datatype should be the </p>
 <p class="FM__Body"> &#160;appropriate NATIVE type.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The examples below show samples of writing data to and reading data </p>
 <p class="FM__Body">&#160;&#160;from a dataset. The data in memory is declared C type &amp;lsquo;int&amp;rsquo;, </p>
 <p class="FM__Body"> &#160;and the datatype &lt;code&gt;H5T_NATIVE_INT&lt;/code&gt; corresponds to this type. </p>
 <p class="FM__Body">&#160;&#160;The datatype of the dataset should be of datatype class </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5T_INTEGER&lt;/code&gt;.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;int &#160;dset_data[DATA_SIZE];</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;&#160;status = H5Dwrite(dataset_id, H5T_NATIVE_INT, H5S_ALL, H5S_ALL, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, dset_data);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 2. Writing to a dataset&lt;/b&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;int dset_data[DATA_SIZE];</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;status = H5Dread(dataset_id, H5T_NATIVE_INT, H5S_ALL, H5S_ALL, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, &#160;dset_data);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 3. Reading from a dataset&lt;/b&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;6.2.4. Discovery of Data Format&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 Library enables a program to determine the datatype class and </p>
 <p class="FM__Body">&#160;&#160;properties for any datatype. In order to discover the storage format of data </p>
 <p class="FM__Body">&#160;&#160;in a dataset, the datatype is obtained, and the properties are determined </p>
 <p class="FM__Body">&#160;&#160;by queries to the datatype object. The example below shows code that </p>
 <p class="FM__Body">&#160;&#160;analyzes the datatype for an integer and prints out a description of </p>
 <p class="FM__Body"> &#160;its storage properties (byte order, signed, size.)&lt;/p&gt;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;switch (H5Tget_class(type)) {</p>
 <p class="FM__Body"> &#160;case H5T_INTEGER:</p>
 <p class="FM__Body"> &#160;ord = H5Tget_order(type);</p>
 <p class="FM__Body"> &#160;sgn = H5Tget_sign(type);</p>
 <p class="FM__Body"> &#160;printf(&amp;ldquo;Integer ByteOrder= &amp;rdquo;);</p>
 <p class="FM__Body"> &#160;switch (ord) {</p>
 <p class="FM__Body"> &#160;case H5T_ORDER_LE:</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;printf(&amp;ldquo;LE&amp;rdquo;);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;break;</p>
 <p class="FM__Body"> &#160;case H5T_ORDER_BE:</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;printf(&amp;ldquo;BE&amp;rdquo;);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;break;</p>
 <p class="FM__Body"> &#160;}</p>
 <p class="FM__Body"> &#160;printf(&amp;ldquo; Sign= &amp;rdquo;);</p>
 <p class="FM__Body"> &#160;switch (sgn) {</p>
 <p class="FM__Body"> &#160;case H5T_SGN_NONE:</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;printf(&amp;ldquo;false&amp;rdquo;);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;break;</p>
 <p class="FM__Body"> &#160;case H5T_SGN_2:</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;printf(&amp;ldquo;true&amp;rdquo;);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;break;</p>
 <p class="FM__Body"> &#160;}</p>
 <p class="FM__Body"> &#160;printf(&amp;ldquo; Size= &amp;rdquo;);</p>
 <p class="FM__Body"> &#160;sz = H5Tget_size(type);</p>
 <p class="FM__Body"> &#160;printf(&amp;ldquo;%d&amp;rdquo;, sz);</p>
 <p class="FM__Body">  printf(&amp;ldquo;\n&amp;rdquo;);</p>
 <p class="FM__Body"> &#160;break;&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 4. Discovering datatype properties&lt;/b&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;6.2.5. Creating and Using User-defined Datatypes&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Most programs will primarily use the predefined datatypes described above, </p>
 <p class="FM__Body">&#160;&#160;possibly in composite datatypes such as compound or array datatypes. &#160;</p>
 <p class="FM__Body">&#160;&#160;However, the HDF5 datatype model is extremely general; a user program can </p>
 <p class="FM__Body">&#160;&#160;define a great variety of atomic datatypes (storage layouts). In particular, </p>
 <p class="FM__Body">&#160;&#160;the datatype properties can define signed and unsigned integers of any size </p>
 <p class="FM__Body">&#160;&#160;and byte order, and floating point numbers with different formats, size, and </p>
 <p class="FM__Body"> &#160;byte order. The HDF5 datatype API provides methods to set these properties.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;User-defined types can be used to define the layout of data in memory, </p>
 <p class="FM__Body">&#160;&#160;e.g., to match some platform specific number format or application </p>
 <p class="FM__Body">&#160;&#160;defined bit-field. The user-defined type can also describe data in </p>
 <p class="FM__Body">&#160;&#160;the file, e.g., some application-defined format. &#160;The user-defined </p>
 <p class="FM__Body">&#160;&#160;types can be translated to and from standard types of the same class, </p>
 <p class="FM__Body"> &#160;as described above.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;em&gt;{Simple programming example…}&lt;/em&gt;</p>
 <p class="FM__Body"> &#160;] ] ]&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;a name=&quot;FileFunctSums&quot;&gt;</p>
 <p class="FM__Body">&lt;div align=right&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=&quot;-1&quot;&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;FileFunctSums&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=pagebefore&gt;6.3. Datatype (H5T) Function Summaries&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Functions that can be used with datatypes (H5T functions) and property </p>
 <p class="FM__Body">&#160;&#160;list functions that can be used with datatypes (H5P functions) are listed </p>
 <p class="FM__Body"> &#160;below.&lt;/p&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Function Listing 1. General datatype operations</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;&lt;td width=&quot;25%&quot;&gt;&lt;b&gt;C Function&lt;br /&gt;Fortran Function&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;2%&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;73%&quot;&gt;&lt;b&gt;Purpose&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tcreate&lt;br /&gt;h5tcreate_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Creates a new datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Topen&lt;br /&gt;h5topen_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Opens a committed datatype. The C function is a </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;macro: see &lt;a href=&quot;../RM/APICompatMacros.html&quot;&gt;&amp;ldquo;API </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Compatibility Macros in HDF5.&amp;rdquo;&lt;/a&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tcommit&lt;br /&gt;h5tcommit_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Commits a transient datatype to a file. The datatype is now a </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;committed datatype. The C function is a </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;macro: see &lt;a href=&quot;../RM/APICompatMacros.html&quot;&gt;&amp;ldquo;API </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Compatibility Macros in HDF5.&amp;rdquo;&lt;/a&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tcommit_anon&lt;br /&gt;h5tcommit_anon_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Commits a transient datatype to a file. The datatype is now a </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;committed datatype, but it is not linked into the file structure. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tcommitted&lt;br /&gt;h5tcommitted_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Determines whether a datatype is a committed or a transient type.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tcopy&lt;br /&gt;h5tcopy_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Copies an existing datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tequal&lt;br /&gt;h5tequal_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Determines whether two datatype identifiers refer to the same datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tlock&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Locks a datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_class&lt;br /&gt;h5tget_class_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Returns the datatype class identifier.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_create_plist&lt;br /&gt;h5tget_create_plist_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Returns a copy of a datatype creation property list. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_size&lt;br /&gt;h5tget_size_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Returns the size of a datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_super&lt;br /&gt;h5tget_super_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Returns the base datatype from which a datatype is derived.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_native_type&lt;br /&gt;h5tget_native_type_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Returns the native datatype of a specified datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tdetect_class&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Determines whether a datatype is of the given datatype class.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_order&lt;br /&gt;h5tget_order_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Returns the byte order of a datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tset_order&lt;br /&gt;h5tset_order_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Sets the byte ordering of a datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tdecode&lt;br /&gt;h5tdecode_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Decode a binary object description of datatype and return a new </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;object identifier. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tencode&lt;br /&gt;h5tencode&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Encode a datatype object description into a binary buffer. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tclose&lt;br /&gt;h5tclose_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Releases a datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Function Listing 2. Conversion functions</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;C Function&lt;br /&gt;Fortran Function&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Purpose&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tconvert&lt;br /&gt;h5tconvert_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Converts data between specified datatypes. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tcompiler_conv&lt;br /&gt;h5tcompiler_conv_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Check whether the library’s default conversion is hard conversion. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tfind&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Finds a conversion function.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tregister&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Registers a conversion function.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tunregister&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Removes a conversion function from all conversion paths.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Function Listing 3. Atomic datatype properties </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;C Function&lt;br /&gt;Fortran Function&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Purpose&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tset_size&lt;br /&gt;h5tset_size_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Sets the total size for an atomic datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_precision&lt;br /&gt;h5tget_precision_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Returns the precision of an atomic datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tset_precision&lt;br /&gt;h5tset_precision_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Sets the precision of an atomic datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_offset&lt;br /&gt;h5tget_offset_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves the bit offset of the first significant bit.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tset_offset&lt;br /&gt;h5tset_offset_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Sets the bit offset of the first significant bit.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_pad&lt;br /&gt;h5tget_pad_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves the padding type of the least and most-significant bit </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;padding.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tset_pad&lt;br /&gt;h5tset_pad_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Sets the least and most-significant bits padding types.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_sign&lt;br /&gt;h5tget_sign_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves the sign type for an integer type.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tset_sign&lt;br /&gt;h5tset_sign_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Sets the sign property for an integer type.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_fields&lt;br /&gt;h5tget_fields_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves floating point datatype bit field information.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tset_fields&lt;br /&gt;h5tset_fields_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Sets locations and sizes of floating point bit fields.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_ebias&lt;br /&gt;h5tget_ebias_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves the exponent bias of a floating-point type.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tset_ebias&lt;br /&gt;h5tset_ebias_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Sets the exponent bias of a floating-point type.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_norm&lt;br /&gt;h5tget_norm_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves mantissa normalization of a floating-point datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tset_norm&lt;br /&gt;h5tset_norm_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Sets the mantissa normalization of a floating-point datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_inpad&lt;br /&gt;h5tget_inpad_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves the internal padding type for unused bits in floating-point </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;datatypes.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tset_inpad&lt;br /&gt;h5tset_inpad_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Fills unused internal floating point bits.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_cset&lt;br /&gt;h5tget_cset_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves the character set type of a string datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tset_cset&lt;br /&gt;h5tset_cset_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Sets character set to be used.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_strpad&lt;br /&gt;h5tget_strpad_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves the storage mechanism for a string datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tset_strpad&lt;br /&gt;h5tset_strpad_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Defines the storage mechanism for character strings.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Function Listing 4. Enumeration datatypes </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;C Function&lt;br /&gt;Fortran Function&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Purpose&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tenum_create&lt;br /&gt;h5tenum_create_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Creates a new enumeration datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tenum_insert&lt;br /&gt;h5tenum_insert_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Inserts a new enumeration datatype member.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tenum_nameof&lt;br /&gt;h5tenum_nameof_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Returns the symbol name corresponding to a specified member of an </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;enumeration datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tenum_valueof&lt;br /&gt;h5tenum_valueof_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Returns the value corresponding to a specified member of an </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;enumeration datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_member_value&lt;br /&gt;h5tget_member_value_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Returns the value of an enumeration datatype member.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_nmembers&lt;br /&gt;h5tget_nmembers_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves the number of elements in a compound or enumeration datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_member_name&lt;br /&gt;h5tget_member_name_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves the name of a compound or enumeration datatype member.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_member_index&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves the index of a compound or enumeration datatype member.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Function Listing 5. Compound datatype properties </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;C Function&lt;br /&gt;Fortran Function&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Purpose&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_nmembers&lt;br /&gt;h5tget_nmembers_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves the number of elements in a compound or enumeration datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_member_class&lt;br /&gt;h5tget_member_class_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Returns datatype class of compound datatype member.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_member_name&lt;br /&gt;h5tget_member_name_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves the name of a compound or enumeration datatype member.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_member_index&lt;br /&gt;h5tget_member_index_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves the index of a compound or enumeration datatype member.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_member_offset&lt;br /&gt;h5tget_member_offset_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves the offset of a field of a compound datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_member_type&lt;br /&gt;h5tget_member_type_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Returns the datatype of the specified member.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tinsert&lt;br /&gt;h5tinsert_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Adds a new member to a compound datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tpack&lt;br /&gt;h5tpack_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Recursively removes padding from within a compound datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Function Listing 6. Array datatypes </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;C Function&lt;br /&gt;Fortran Function&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Purpose&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tarray_create&lt;br /&gt;h5tarray_create_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Creates an array datatype object. The C function is a </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;macro: see &lt;a href=&quot;../RM/APICompatMacros.html&quot;&gt;&amp;ldquo;API </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Compatibility Macros in HDF5.&amp;rdquo;&lt;/a&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_array_ndims&lt;br /&gt;h5tget_array_ndims_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Returns the rank of an array datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_array_dims&lt;br /&gt;h5tget_array_dims_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Returns sizes of array dimensions and dimension permutations. </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The C function is a </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;macro: see &lt;a href=&quot;../RM/APICompatMacros.html&quot;&gt;&amp;ldquo;API </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Compatibility Macros in HDF5.&amp;rdquo;&lt;/a&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Function Listing 7. Variable-length datatypes </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;C Function&lt;br /&gt;Fortran Function&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Purpose&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tvlen_create&lt;br /&gt;h5tvlen_create_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Creates a new variable-length datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tis_variable_str&lt;br /&gt;h5tis_variable_str_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Determines whether datatype is a variable-length string.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Function Listing 8. Opaque datatypes </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;C Function&lt;br /&gt;Fortran Function&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Purpose&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tset_tag&lt;br /&gt;h5tset_tag_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Tags an opaque datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tget_tag&lt;br /&gt;h5tget_tag_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Gets the tag associated with an opaque datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Function Listing 9. Conversions between datatype and text </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;C Function&lt;br /&gt;Fortran Function&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Purpose&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5LTtext_to_dtype&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Creates a datatype from a text description.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5LTdtype_to_text&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Generates a text description of a datatype.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Function Listing 10. Datatype creation property list </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;functions (H5P)&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;C Function&lt;br /&gt;Fortran Function&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Purpose&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Pset_char_encoding&lt;br /&gt;h5pset_char_encoding_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Sets the character encoding used to encode a string. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Use to set ASCII or UTF-8 character encoding for object names.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Pget_char_encoding&lt;br /&gt;h5pget_char_encoding_f&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Retrieves the character encoding used to create a string. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Function Listing 11. Datatype access property list </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;functions (H5P)&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;C Function&lt;br /&gt;Fortran Function&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Purpose&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Pset_type_conv_cb&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Sets user-defined datatype conversion callback function.</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Pget_type_conv_cb&lt;br /&gt;(none)&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Gets user-defined datatype conversion callback function. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;a name=&quot;Pmodel&quot;&gt;</p>
 <p class="FM__Body">&lt;div align=right&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=&quot;-1&quot;&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;Pmodel&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=pagebefore&gt;6.4. The Programming Model&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&#160;</p>
 <p class="FM__Body">&lt;h4&gt;6.4.1. Introduction&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 Library implements an object-oriented model of datatypes. HDF5 </p>
 <p class="FM__Body">&#160;&#160;datatypes </p>
 <p class="FM__Body">&#160;&#160;are organized as a logical set of base types, or datatype classes. The HDF5 </p>
 <p class="FM__Body">&#160;&#160;Library manages datatypes as objects. The HDF5 datatype API manipulates the </p>
 <p class="FM__Body">&#160;&#160;datatype objects through C function calls. The figure below shows the </p>
 <p class="FM__Body">&#160;&#160;abstract view </p>
 <p class="FM__Body">&#160;&#160;of the datatype object. The table below shows the methods (C functions) </p>
 <p class="FM__Body">&#160;&#160;that operate on datatype objects. New datatypes can be created from </p>
 <p class="FM__Body"> &#160;scratch or copied from existing datatypes.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;550&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table align=&quot;center&quot; border=&quot;1&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Datatype&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;&amp;nbsp;size:int?&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;byteOrder:BOtype&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;&amp;nbsp;open(hid_t loc, char *, name):return hid_t&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;copy(hid_t tid) return hid_t&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;create(hid_class_t&amp;nbsp;clss,&amp;nbsp;size_t&amp;nbsp;size)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;return&amp;nbsp;hid_t&amp;nbsp;&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 5. The datatype object&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 8. General operations on datatype objects&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;API Function&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;hid_t H5Tcreate (H5T_class_t </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;i&gt;class&lt;/i&gt;, size_t &lt;i&gt;size&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Create a new datatype object of </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;datatype class &lt;i&gt;class&lt;/i&gt;. The following datatype classes are </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;supported with this function: </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_COMPOUND&lt;/code&gt;&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_OPAQUE&lt;/code&gt; &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_ENUM &lt;/code&gt;&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Other datatypes are created with &lt;code&gt;H5Tcopy()&lt;/code&gt;.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;hid_t H5Tcopy (hid_t &lt;i&gt;type&lt;/i&gt;)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Obtain a modifiable transient datatype </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;which is a copy of &lt;i&gt;type&lt;/i&gt;. If &lt;i&gt;type&lt;/i&gt; is a dataset </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;identifier then the type returned is a modifiable transient copy </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;of the datatype of the specified dataset. &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;hid_t H5Topen (hid_t &lt;i&gt;location&lt;/i&gt;, &lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;const char *&lt;i&gt;name&lt;/i&gt;, H5P_DEFAULT)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Open a committed datatype. The </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;committed datatype returned by this function is read-only.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;htri_t H5Tequal (hid_t &lt;i&gt;type1&lt;/i&gt;, &lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;hid_t &lt;i&gt;type2&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Determines if two types are equal. &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tclose (hid_t &lt;i&gt;type&lt;/i&gt;)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Releases resources associated with a </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;datatype obtained from &lt;code&gt;H5Tcopy&lt;/code&gt;, &lt;code&gt;H5Topen&lt;/code&gt;, or </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tcreate&lt;/code&gt;. It is illegal to close an </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;immutable transient datatype (e.g., predefined types).&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tcommit (hid_t </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;i&gt;location&lt;/i&gt;, const char *&lt;i&gt;name&lt;/i&gt;, hid_t &lt;i&gt;type&lt;/i&gt;, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, H5P_DEFAULT, &lt;br /&gt;H5P_DEFAULT)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Commit a transient datatype (not immutable) </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;to a file to become a committed datatype. Committed datatypes can be shared.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;htri_t H5Tcommitted (hid_t </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;i&gt;type&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Test whether the datatype is </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;transient or committed (named).&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tlock (hid_t </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;i&gt;type&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Make a transient datatype immutable </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(read-only and not closable). Predefined types are locked.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In order to use a datatype, the object must be created </p>
 <p class="FM__Body"> &#160;(&lt;code&gt;H5Tcreate&lt;/code&gt;), or a reference obtained by cloning from an </p>
 <p class="FM__Body"> &#160;existing type (&lt;code&gt;H5Tcopy&lt;/code&gt;), or opened (&lt;code&gt;H5Topen&lt;/code&gt;). </p>
 <p class="FM__Body">&#160;&#160;In addition, a reference to the datatype of a dataset or attribute </p>
 <p class="FM__Body"> &#160;can be obtained with &lt;code&gt;H5Dget_type&lt;/code&gt; or </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Aget_type&lt;/code&gt;. For composite datatypes a reference </p>
 <p class="FM__Body">&#160;&#160;to the datatype for members or base types can be obtained </p>
 <p class="FM__Body"> &#160;(&lt;code&gt;H5Tget_member_type&lt;/code&gt;, &lt;code&gt;H5Tget_super&lt;/code&gt;). </p>
 <p class="FM__Body">&#160;&#160;When the datatype object is no longer needed, the reference is </p>
 <p class="FM__Body"> &#160;discarded with &lt;code&gt;H5Tclose&lt;/code&gt;. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Two datatype objects can be tested to see if they are the same with </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Tequal&lt;/code&gt;. This function returns true if the two datatype </p>
 <p class="FM__Body">&#160;&#160;references refer to the same datatype object. However, if two datatype </p>
 <p class="FM__Body">&#160;&#160;objects define equivalent datatypes (the same datatype class and </p>
 <p class="FM__Body"> &#160;datatype properties), they will not be considered &amp;lsquo;equal&amp;rsquo;.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A datatype can be written to the file as a first class object </p>
 <p class="FM__Body"> &#160;(&lt;code&gt;H5Tcommit&lt;/code&gt;). This is a committed datatype and can be used </p>
 <p class="FM__Body"> &#160;in the same way as any other datatype.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;6.4.2. Discovery of Datatype Properties&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Any HDF5 datatype object can be queried to discover all of its </p>
 <p class="FM__Body">&#160;&#160;datatype properties. For each datatype class, there are a set of </p>
 <p class="FM__Body"> &#160;API functions to retrieve the datatype properties for this class. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;6.4.2.1. Properties of Atomic Datatypes&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Table 9 lists the functions to discover the properties of atomic </p>
 <p class="FM__Body">&#160;&#160;datatypes. Table 10 lists the queries relevant to specific numeric </p>
 <p class="FM__Body">&#160;&#160;types. Table 11 gives the properties for atomic string datatype, and </p>
 <p class="FM__Body"> &#160;Table 12 gives the property of the opaque datatype.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 9. Functions to discover properties of atomic datatypes&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Functions&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_class_t H5Tget_class (hid_t </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;i&gt;type&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The datatype class: &lt;code&gt;H5T_INTEGER, </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_FLOAT, H5T_STRING, or H5T_BITFIELD, H5T_OPAQUE, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_COMPOUND, H5T_REFERENCE, H5T_ENUM, H5T_VLEN, H5T_ARRAY&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;size_t H5Tget_size </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;i&gt;type&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The total size of the element in bytes, including padding </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;which may appear on either side of the actual value.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_order_t H5Tget_order </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;i&gt;type&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The byte order describes how the bytes of the datatype are </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;laid out in memory. If the lowest memory address contains the </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;least significant byte of the datum then it is </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;said to be &lt;i&gt;little-endian&lt;/i&gt; or &lt;code&gt;H5T_ORDER_LE&lt;/code&gt;. If </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;the bytes are in the opposite order then they are said to be </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;i&gt;big-endian&lt;/i&gt; or &lt;code&gt;H5T_ORDER_BE.&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;size_t H5Tget_precision </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;i&gt;type&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The &lt;code&gt;precision&lt;/code&gt; property identifies the number </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;of significant bits of a datatype and the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;offset&lt;/code&gt; property (defined below) identifies its location. </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Some datatypes occupy more bytes than what is needed to store the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;value. For instance, a &lt;code&gt;short&lt;/code&gt; on a Cray is 32 significant </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;bits in an eight-byte field.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;int H5Tget_offset (hid_t &lt;i&gt;type&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The &lt;code&gt;offset&lt;/code&gt; property defines the bit location </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;of the least significant bit of a bit </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;field whose length is &lt;code&gt;precision&lt;/code&gt;.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tget_pad </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;i&gt;type&lt;/i&gt;, H5T_pad_t &lt;i&gt;*lsb&lt;/i&gt;, H5T_pad_t </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;i&gt;*msb&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Padding is the bits of a data element </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;which are not significant as defined by the &lt;code&gt;precision&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;and &lt;code&gt;offset&lt;/code&gt; properties. Padding in the low-numbered </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;bits is &lt;i&gt;lsb&lt;/i&gt; padding and padding in the high-numbered </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;bits is &lt;i&gt;msb&lt;/i&gt; padding. Padding bits can be set to zero </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(&lt;code&gt;H5T_PAD_ZERO&lt;/code&gt;) or one (&lt;code&gt;H5T_PAD_ONE&lt;/code&gt;).&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 10. Functions to discover properties of atomic </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;numeric datatypes&lt;/b&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Functions&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_sign_t H5Tget_sign </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;i&gt;type&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(INTEGER)&lt;/b&gt; Integer data can be signed two&amp;rsquo;s </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;complement (&lt;code&gt;H5T_SGN_2&lt;/code&gt;) </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;or unsigned (&lt;code&gt;H5T_SGN_NONE&lt;/code&gt;).&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tget_fields </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;i&gt;type&lt;/i&gt;, size_t *&lt;i&gt;spos&lt;/i&gt;, size_t *&lt;i&gt;epos&lt;/i&gt;, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;size_t *&lt;i&gt;esize&lt;/i&gt;, size_t *&lt;i&gt;mpos&lt;/i&gt;, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;size_t *&lt;i&gt;msize&lt;/i&gt;)&lt;/code&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(FLOAT)&lt;/b&gt; A floating-point </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data element has bit fields which are the exponent and mantissa </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as well as a mantissa sign bit. These properties define the </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;location (bit position of least significant bit of the field) </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;and size (in bits) of each field. The sign bit is always of </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;length one and none of the fields are allowed to overlap.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;size_t H5Tget_ebias </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;i&gt;type&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(FLOAT)&lt;/b&gt; The exponent is stored as a non-negative </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;value which is &lt;code&gt;ebias&lt;/code&gt; larger than the true exponent. &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_norm_t H5Tget_norm </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;i&gt;type&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(FLOAT)&lt;/b&gt; This property describes the normalization </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;method of the mantissa. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_NORM_MSBSET&lt;/code&gt;: the mantissa is shifted left </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(if non-zero) until the first bit after the radix point is </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;set and the exponent is adjusted accordingly. All bits of </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;the mantissa after the radix point are stored. &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_NORM_IMPLIED&lt;/code&gt;: the mantissa is shifted left \ </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(if non-zero) until the first bit after the radix point is set </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;and the exponent is adjusted accordingly. The first bit after </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;the radix point is not stored since it&amp;rsquo;s always set. &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_NORM_NONE&lt;/code&gt;: the fractional part of the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mantissa is stored without normalizing it. &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/ul&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_pad_t H5Tget_inpad </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;i&gt;type&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(FLOAT)&lt;/b&gt; If any internal bits (that is, bits between </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;the sign bit, the mantissa field, and the exponent field but </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;within the precision field) are unused, then they will be </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;filled according to the value of this property. The padding can </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;be: &lt;code&gt;H5T_PAD_NONE&lt;/code&gt;, &lt;code&gt;H5T_PAD_ZERO&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;or &lt;code&gt;H5T_PAD_ONE&lt;/code&gt;.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 11. Functions to discover properties of atomic </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;string datatypes&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Functions&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_cset_t H5Tget_cset </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;em&gt;type&lt;/em&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Two character sets are currently </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;supported: ASCII (&lt;code&gt;H5T_CSET_ASCII&lt;/code&gt;) and UTF-8 </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(&lt;code&gt;H5T_CSET_UTF8&lt;/code&gt;).&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_str_t H5Tget_strpad </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;em&gt;type&lt;/em&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The string datatype has a fixed </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;length, but the string may be shorter than the length. This </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;property defines the storage mechanism for the left over bytes. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;The options are: &lt;code&gt;H5T_STR_NULLTERM&lt;/code&gt;, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5T_STR_NULLPAD&lt;/code&gt;, or &lt;code&gt;H5T_STR_SPACEPAD&lt;/code&gt;.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 12. Functions to discover properties of atomic opaque </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;datatypes&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Functions&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td &#160;width=&quot;50%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;char *H5Tget_tag(hid_t type_id)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;A user-defined string.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;&lt;em&gt;6.4.2.2. Properties of Composite Datatypes&lt;/em&gt;&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The composite datatype classes can also be analyzed to discover their </p>
 <p class="FM__Body">&#160;&#160;datatype properties and the datatypes that are members or base types </p>
 <p class="FM__Body">&#160;&#160;of the composite datatype. The member or base type can, in turn, be </p>
 <p class="FM__Body">&#160;&#160;analyzed. The table below lists the functions that can access the </p>
 <p class="FM__Body"> &#160;datatype properties of the different composite datatypes.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 13. Functions to discover properties of composite datatypes&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Functions&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;int H5Tget_nmembers(hid_t type_id)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(COMPOUND)&lt;/b&gt;The number of fields in the compound </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;datatype.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5T_class_t H5Tget_member_class&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t cdtype_id, unsigned member_no)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(COMPOUND)&lt;/b&gt; The datatype class of compound datatype </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;member &lt;code&gt;member_no&lt;/code&gt;.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;char * H5Tget_member_name</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t type_id, unsigned field_idx)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(COMPOUND)&lt;/b&gt; The name of field &lt;code&gt;field_idx&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;of a compound datatype.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;size_t H5Tget_member_offset</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t type_id, unsigned memb_no)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(COMPOUND)&lt;/b&gt; The byte offset </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;of the beginning of a field within a compound datatype.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;hid_t H5Tget_member_type</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t type_id, unsigned field_idx)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(COMPOUND)&lt;/b&gt; The datatype of the specified member.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;int H5Tget_array_ndims</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t adtype_id)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(ARRAY)&lt;/b&gt; The number of dimensions (rank) of the array </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;datatype object.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;int H5Tget_array_dims</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t adtype_id, hsize_t *dims[])&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(ARRAY)&lt;/b&gt; The sizes of the dimensions and the dimension </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;permutations of the array datatype object.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;hid_t H5Tget_super(hid_t type)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(ARRAY, VL, ENUM)&lt;/b&gt;The base datatype from which the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;datatype type is derived.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tenum_nameof(hid_t type &lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;void *value, char *name, size_t size)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(ENUM)&lt;/b&gt; The symbol name </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;that corresponds to the specified value of the enumeration datatype&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tenum_valueof(hid_t type &lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;char *name, void *value)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(ENUM)&lt;/b&gt; The value that corresponds to the specified </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;name of the enumeration datatype&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tget_member_value&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t type unsigned memb_no, &lt;br /&gt;void *value)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(ENUM)&lt;/b&gt; The value of the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;enumeration datatype member &lt;code&gt;memb_no&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;h4&gt;6.4.3. Definition of Datatypes&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 Library enables user programs to create and modify datatypes. The </p>
 <p class="FM__Body">&#160;&#160;essential steps are: </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;ol&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;a) Create a new datatype object of a specific composite datatype class, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;or &lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;b) Copy an existing atomic datatype object&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Set properties of the datatype object&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Use the datatype object&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Close the datatype object&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;/ol&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To create a user-defined atomic datatype, the procedure is to clone </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;a predefined datatype of the appropriate datatype class </p>
 <p class="FM__Body"> &#160;&#160;&#160;(&lt;code&gt;H5Tcopy&lt;/code&gt;), and then set the datatype properties appropriate </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;to the datatype class. The table below shows how to create a datatype </p>
 <p class="FM__Body"> &#160;&#160;&#160;to describe a 1024-bit unsigned integer.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;hid_t new_type = H5Tcopy (H5T_NATIVE_INT);</p>
 <p class="FM__Body"> &#160;H5Tset_precision(new_type, 1024);</p>
 <p class="FM__Body"> &#160;H5Tset_sign(new_type, H5T_SGN_NONE);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 5. Create a new datatype&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Composite datatypes are created with a specific API call for each datatype </p>
 <p class="FM__Body">&#160;&#160;class. The table below shows the creation method for each datatype class. A </p>
 <p class="FM__Body">&#160;&#160;newly created </p>
 <p class="FM__Body">&#160;&#160;datatype cannot be used until the datatype properties are set. For example, </p>
 <p class="FM__Body"> &#160;a newly created compound datatype has no members and cannot be used.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;400&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 14. Functions to create each datatype class&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Datatype Class&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Function to Create&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;COMPOUND&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5Tcreate&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;OPAQUE&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5Tcreate&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;ENUM&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5Tenum_create&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;ARRAY&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5Tarray_create&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;VL&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5Tvlen_create&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Once the datatype is created and the datatype properties set, the datatype </p>
 <p class="FM__Body"> &#160;object can be used. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Predefined datatypes are defined by the library during initialization </p>
 <p class="FM__Body">&#160;&#160;using the same mechanisms as described here. Each predefined datatype is </p>
 <p class="FM__Body"> &#160;locked (&lt;code&gt;H5Tlock&lt;/code&gt;), so that it cannot be changed or destroyed. </p>
 <p class="FM__Body"> &#160;User-defined datatypes may also be locked using &lt;code&gt;H5Tlock&lt;/code&gt;. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;h4&gt;&lt;em&gt;6.4.3.1. User-defined Atomic Datatypes&lt;/em&gt;&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Table 15 summarizes the API methods that set properties of atomic </p>
 <p class="FM__Body">&#160;&#160;types. Table 16 shows properties specific to numeric types, Table 17 </p>
 <p class="FM__Body">&#160;&#160;shows properties specific to the string datatype class. Note that </p>
 <p class="FM__Body">&#160;&#160;offset, pad, etc. do not apply to strings. Table 18 shows the specific </p>
 <p class="FM__Body"> &#160;property of the OPAQUE datatype class.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 15. API methods that set properties of atomic datatypes&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Functions&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tset_size (hid_t &lt;i&gt;type&lt;/i&gt;, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;br /&gt;size_t &lt;i&gt;size&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Set the total size of the element </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;in bytes. This includes padding which may appear on either side of the </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;actual value. If this property is reset to a smaller value which </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;would cause the significant part of the data to extend beyond the </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;edge of the datatype, then the offset property is decremented a </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bit at a time. If the offset reaches zero and the significant </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;part of the data still extends beyond the edge of the datatype </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;then the precision property is decremented a bit at a time. </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Decreasing the size of a datatype may fail if the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5T_FLOAT&lt;/code&gt; bit fields would extend beyond the significant </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;part of the type. &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tset_order </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;i&gt;type&lt;/i&gt;, H5T_order_t &lt;i&gt;order&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Set the byte order to little-endian </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(&lt;code&gt;H5T_ORDER_LE&lt;/code&gt;) or big-endian (&lt;code&gt;H5T_ORDER_BE&lt;/code&gt;).&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tset_precision </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;i&gt;type&lt;/i&gt;, size_t &lt;i&gt;precision&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Set the number of significant bits </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;of a datatype. The &lt;code&gt;offset&lt;/code&gt; property (defined below) </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;identifies its location. The size property defined above represents </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;the entire size (in bytes) of the datatype. If the precision is </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;decreased then padding bits are inserted on the MSB side of the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;significant bits (this will fail for &lt;code&gt;H5T_FLOAT&lt;/code&gt; types </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if it results in the sign, mantissa, or exponent bit field extending </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;beyond the edge of the significant bit field). On the other hand, </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if the precision is increased so that it &amp;ldquo;hangs over&amp;rdquo; </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;the edge of the total size then the offset property is decremented </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a bit at a time. If the offset reaches zero and the significant </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bits still hang over the edge, then the total size is increased </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;a byte at a time. &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tset_offset </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;i&gt;type&lt;/i&gt;, size_t &lt;i&gt;offset&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Set the bit location of the least </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;significant bit of a bit field whose length is &lt;code&gt;precision&lt;/code&gt;. </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The bits of the entire data are numbered beginning at zero at the </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;least significant bit of the least significant byte (the byte at </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;the lowest memory address for a little-endian type or the byte </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;at the highest address for a big-endian type). The offset property </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;defines the bit location of the least significant bit of a bit field </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;whose length is precision. If the offset is increased so the </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;significant bits &amp;ldquo;hang over&amp;rdquo; the edge of the datum, then </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;the size property is automatically incremented.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tset_pad (hid_t </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;i&gt;type&lt;/i&gt;, H5T_pad_t &lt;i&gt;lsb&lt;/i&gt;, H5T_pad_t &lt;i&gt;msb&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Set the padding to zeros </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(&lt;code&gt;H5T_PAD_ZERO&lt;/code&gt;) or ones (&lt;code&gt;H5T_PAD_ONE&lt;/code&gt;). Padding </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;is the bits of a data element which are not significant as defined </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;by the &lt;code&gt;precision&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; properties. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Padding in the low-numbered bits is &lt;code&gt;&lt;i&gt;lsb&lt;/i&gt;&lt;/code&gt; </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;padding and padding in the high-numbered bits is </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;&lt;i&gt;msb&lt;/i&gt;&lt;/code&gt; padding. &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 16. API methods that set properties of numeric datatypes&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Functions&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tset_sign </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;i&gt;type&lt;/i&gt;, H5T_sign_t &lt;i&gt;sign&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(INTEGER)&lt;/b&gt; Integer </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;data can be signed two&amp;rsquo;s complement (&lt;code&gt;H5T_SGN_2&lt;/code&gt;) </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;or unsigned (&lt;code&gt;H5T_SGN_NONE&lt;/code&gt;).&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tset_fields </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;i&gt;type&lt;/i&gt;, size_t &lt;i&gt;spos&lt;/i&gt;, size_t &lt;i&gt;epos&lt;/i&gt;, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;size_t &lt;i&gt;esize&lt;/i&gt;, size_t &lt;i&gt;mpos&lt;/i&gt;, size_t &lt;i&gt;msize&lt;/i&gt;)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(FLOAT)&lt;/b&gt; Set the </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;properties define the location (bit position of least significant </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bit of the field) and size (in bits) of each field. The sign bit </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;is always of length one and none of the fields are allowed to overlap.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tset_ebias (hid_t &lt;i&gt;type&lt;/i&gt;, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;size_t &lt;i&gt;ebias&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(FLOAT)&lt;/b&gt; The exponent </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;is stored as a non-negative value which is &lt;code&gt;ebias&lt;/code&gt; larger </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;than the true exponent.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tset_norm </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;i&gt;type&lt;/i&gt;, H5T_norm_t &lt;i&gt;norm&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(FLOAT)&lt;/b&gt; This </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;property describes the normalization method of the mantissa. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_NORM_MSBSET&lt;/code&gt;: the mantissa is shifted left </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(if non-zero) until the first bit after the radix point is set and </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;the exponent is adjusted accordingly. All bits of the mantissa </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;after the radix point are stored. &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_NORM_IMPLIED&lt;/code&gt;: the mantissa is shifted left </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(if non-zero) until the first bit after the radix point is set and </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;the exponent is adjusted accordingly. The first bit after the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;radix point is not stored since it is always set. &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_NORM_NONE&lt;/code&gt;: the fractional part of the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mantissa is stored without normalizing it. &lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tset_inpad </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;i&gt;type&lt;/i&gt;, H5T_pad_t &lt;i&gt;inpad&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;(FLOAT)&lt;/b&gt; If any </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;internal bits (that is, bits between the sign bit, the mantissa field, </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;and the exponent field but within the precision field) are unused, </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;then they will be filled according to the value of this property. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;The padding can be: &lt;code&gt;H5T_PAD_NONE&lt;/code&gt;, &lt;code&gt;H5T_PAD_ZERO&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;or &lt;code&gt;H5T_PAD_ONE&lt;/code&gt;.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 17. API methods that set properties of string datatypes&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Functions&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tset_size (hid_t &lt;i&gt;type&lt;/i&gt;, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;br /&gt;size_t &lt;i&gt;size&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Set the length of the string, in bytes. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;The precision is automatically set to 8*&lt;code&gt;size&lt;/code&gt;.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tset_precision </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t &lt;i&gt;type&lt;/i&gt;, size_t &lt;i&gt;precision&lt;/i&gt;)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The precision must be a multiple of 8.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tset_cset</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t type_id, H5T_cset_t cset )&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Two character sets are currently </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;supported: ASCII (&lt;code&gt;H5T_CSET_ASCII&lt;/code&gt;) and UTF-8 </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(&lt;code&gt;H5T_CSET_UTF8&lt;/code&gt;).&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tset_strpad</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t type_id, H5T_str_t strpad )&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;The string datatype has a fixed </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;length, but the string may be shorter than the length. This property </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;defines the storage mechanism for the left over bytes. The method </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;used to store character strings differs with the programming language: </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;C usually null terminates strings &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;Fortran left-justifies and space-pads strings&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;p&gt;Valid string padding values, as passed in the parameter strpad, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;are as follows: &lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;dl&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;dt&gt;&lt;code&gt;H5T_STR_NULLTERM&lt;/code&gt; (0) </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;dd&gt;Null terminate (as C does) </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;dt&gt;&lt;code&gt;H5T_STR_NULLPAD&lt;/code&gt; (1) </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;dd&gt;Pad with zeros </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;dt&gt;&lt;code&gt;H5T_STR_SPACEPAD&lt;/code&gt; (2) </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;dd&gt;Pad with spaces (as FORTRAN does).</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/dl&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 18. API methods that set properties of opaque datatypes&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Functions&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tset_tag (hid_t type_id </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;br /&gt;const char *tag )&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Tags the opaque datatype type_id </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;with an ASCII identifier tag.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;h4&gt;Examples&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The example below shows how to create a 128-bit little-endian signed </p>
 <p class="FM__Body">&#160;&#160;integer type. Increasing the precision of a type automatically increases </p>
 <p class="FM__Body">&#160;&#160;the total size. Note that the proper procedure is to begin from a type </p>
 <p class="FM__Body">&#160;&#160;of the intended datatype class which in this case is a </p>
 <p class="FM__Body"> &#160;&lt;code&gt;NATIVE INT&lt;/code&gt;.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;hid_t new_type = H5Tcopy (H5T_NATIVE_INT);</p>
 <p class="FM__Body"> &#160;H5Tset_precision (new_type, 128);</p>
 <p class="FM__Body"> &#160;H5Tset_order (new_type, H5T_ORDER_LE);&lt;/pre&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 6. Create a new 128-bit little-endian signed integer </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;datatype&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure below shows the storage layout as the type is defined. The </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Tcopy&lt;/code&gt; creates a datatype that is the same as </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5T_NATIVE_INT&lt;/code&gt;. In this example, suppose this is a 32-bit </p>
 <p class="FM__Body">&#160;&#160;big-endian number (Figure a). The precision is set to 128 bits, </p>
 <p class="FM__Body">&#160;&#160;which automatically extends the size to 8 bytes (Figure b). Finally, </p>
 <p class="FM__Body"> &#160;the byte order is set to little-endian (Figure c).&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table align=&quot;center&quot; border=&quot;0&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;1&quot; align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 0&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 3&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;01234567&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;89012345&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;67890123&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;45678901&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;0&quot; align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;a) The &lt;code&gt;H5T_NATIVE_INT&lt;/code&gt; datatype&lt;br /&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;1&quot; align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 0&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 3&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 4&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 5&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 6&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 7&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;01234567&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;89012345&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;67890123&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;45678901&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;23456789&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;01234567&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;89012345&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;67890123&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;0&quot; align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;b) Precision is extended to 128-bits, and the size is </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;automatically adjusted.&lt;br /&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;1&quot; align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 0&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 3&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 4&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 5&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 6&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 7&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;01234567&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;89012345&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;67890123&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;45678901&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;23456789&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;01234567&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;89012345&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;67890123&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;0&quot; align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;c) The byte order is switched.&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 6. The storage layout for a new 128-bit little-endian </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;signed integer datatype&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The significant bits of a data element can be offset from the beginning of </p>
 <p class="FM__Body"> &#160;the memory for that element by an amount of padding. The &lt;code&gt;offset&lt;/code&gt; </p>
 <p class="FM__Body">&#160;&#160;property specifies the number of bits of padding that appear to the </p>
 <p class="FM__Body">&#160;&#160;&amp;ldquo;right of&amp;rdquo; the value. The table and figure below show how </p>
 <p class="FM__Body">&#160;&#160;a 32-bit unsigned integer with 16-bits of precision having the value </p>
 <p class="FM__Body"> &#160;&lt;code&gt;0x1122&lt;/code&gt; will be laid out in memory.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;5&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 19. Memory Layout for a 32-bit unsigned integer&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;Byte Position&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;Big-Endian &lt;br /&gt;Offset=0&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;Big-Endian &lt;br /&gt;Offset=16&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;Little-Endian &lt;br /&gt;Offset=0&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;Little-Endian &lt;br /&gt;Offset=16&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;0:&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;[pad]&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;[0x11]&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;[0x22]&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;[pad]&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;1:&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;[pad]&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;[0x22]&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;[0x11]&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;[pad]&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;2:&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;[0x11]&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;[pad]&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;[pad]&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;[0x22]&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;3:&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;[0x22]&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;[pad]&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;[pad]&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;[0x11]&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;400&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;table align=&quot;center&quot; border=&quot;0&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;Big-Endian: Offset = 0&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;1&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 0&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 3&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;01234567&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;89012345&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;67890123&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;45678901&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;em&gt;PPPPPPPP&lt;/em&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;em&gt;PPPPPPPP&lt;/em&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00010001&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00100010&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&amp;nbsp;&lt;br /&gt;Big-Endian: Offset = 16&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;1&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 0&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 3&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;01234567&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;89012345&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;67890123&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;45678901&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00010001&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00100010&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;em&gt;PPPPPPPP&lt;/em&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;em&gt;PPPPPPPP&lt;/em&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&amp;nbsp;&lt;br /&gt;Little-Endian: </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Offset = 0&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;1&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 0&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 3&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;01234567&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;89012345&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;67890123&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;45678901&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00010001&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00100010&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;em&gt;PPPPPPPP&lt;/em&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;em&gt;PPPPPPPP&lt;/em&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&amp;nbsp;&lt;br /&gt;Little-Endian: </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Offset = 16&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;1&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 0&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 3&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;01234567&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;89012345&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;67890123&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;45678901&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;em&gt;PPPPPPPP&lt;/em&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;em&gt;PPPPPPPP&lt;/em&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00010001&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00100010&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;&amp;nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 7. Memory Layout for a 32-bit unsigned integer&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;If the offset is incremented then the total size is incremented also </p>
 <p class="FM__Body">&#160;&#160;if necessary to prevent significant bits of the value from hanging over </p>
 <p class="FM__Body"> &#160;the edge of the datatype. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The bits of the entire data are numbered beginning at zero at the </p>
 <p class="FM__Body">&#160;&#160;least significant bit of the least significant byte (the byte at the </p>
 <p class="FM__Body">&#160;&#160;lowest memory address for a little-endian type or the byte at the </p>
 <p class="FM__Body"> &#160;highest address for a big-endian type). The &lt;code&gt;offset&lt;/code&gt; </p>
 <p class="FM__Body">&#160;&#160;property defines the bit location of the least signficant bit of a </p>
 <p class="FM__Body"> &#160;bit field whose length is &lt;code&gt;precision&lt;/code&gt;. If the offset is </p>
 <p class="FM__Body">&#160;&#160;increased so the significant bits &amp;ldquo;hang over&amp;rdquo; the edge </p>
 <p class="FM__Body"> &#160;of the datum, then the &lt;code&gt;size&lt;/code&gt; property is automatically </p>
 <p class="FM__Body"> &#160;incremented. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To illustrate the properties of the integer datatype class, the example </p>
 <p class="FM__Body">&#160;&#160;below shows how to create a user-defined datatype that describes a </p>
 <p class="FM__Body">&#160;&#160;24-bit signed integer that starts on the third bit of a 32-bit word. </p>
 <p class="FM__Body"> &#160;The datatype is specialized from a 32-bit integer, the &lt;em&gt;precision&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;is set to 24 bits, and the &lt;em&gt;offset&lt;/em&gt; is set to 3.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;hid_t dt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;dt = H5Tcopy(H5T_SDT_I32LE);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;H5Tset_precision(dt, 24);</p>
 <p class="FM__Body"> &#160;H5Tset_offset(dt,3);</p>
 <p class="FM__Body"> &#160;H5Tset_pad(dt, H5T_PAD_ZERO, H5T_PAD_ONE);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 7. A user-defined datatype with a 24-bit signed integer&lt;/b&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure below shows the storage layout for a data element. Note that </p>
 <p class="FM__Body">&#160;&#160;the unused bits in the offset will be set to zero and the unused bits at </p>
 <p class="FM__Body">&#160;&#160;the end will be </p>
 <p class="FM__Body"> &#160;set to one, as specified in the &lt;code&gt;H5Tset_pad&lt;/code&gt; call.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;table border=&quot;1&quot; align=&quot;center&quot; width=&quot;67%&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 0&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 3&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;01234567&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;89012345&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;67890123&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;45678901&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;&lt;em&gt;ooo&lt;/em&gt;&lt;/strong&gt;00000&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00000000&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00000000&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00s&lt;strong&gt;&lt;em&gt;ppppp&lt;/em&gt;&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; colspan=&quot;4&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig14.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 8. A user-defined integer datatype a range of -1,048,583 </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;to 1,048,584&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To illustrate a user-defined floating point number, the example below </p>
 <p class="FM__Body">&#160;&#160;shows how to create a 24-bit floating point number that starts 5 bits </p>
 <p class="FM__Body">&#160;&#160;into a 4 byte word. The floating point number is defined to have a </p>
 <p class="FM__Body">&#160;&#160;mantissa of 19 bits (bits 5-23), an exponent of 3 bits (25-27), and </p>
 <p class="FM__Body">&#160;&#160;the sign bit is bit 28. (Note that this is an illustration of what </p>
 <p class="FM__Body">&#160;&#160;can be done and is not necessarily a floating point format that a </p>
 <p class="FM__Body"> &#160;user would require.)&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;hid_t dt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;dt = H5Tcopy(H5T_IEEE_F32LE);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;H5Tset_precision(dt, 24);</p>
 <p class="FM__Body"> &#160;H5Tset_fields (dt, 28, 25, 3, 5, 19);</p>
 <p class="FM__Body"> &#160;H5Tset_pad(dt, H5T_PAD_ZERO, H5T_PAD_ONE);</p>
 <p class="FM__Body"> &#160;H5Tset_inpad(dt, H5T_PAD_ZERO);&lt;/pre&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 8. A user-defined 24-bit floating point datatype&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;500&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;1&quot; align=&quot;center&quot; width=&quot;67%&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 0&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 3&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;01234567&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;89012345&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;67890123&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;45678901&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;&lt;em&gt;ooooo&lt;/em&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/strong&gt;mmm&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;mmmmmmmm&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;mmmmmmmm&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;i&lt;/strong&gt;eees&lt;strong&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;em&gt;ppp&lt;/em&gt;&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; colspan=&quot;4&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig16.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 9. A user-defined floating point datatype&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure above shows the storage layout of a data element for this </p>
 <p class="FM__Body">&#160;&#160;datatype. Note that there is an unused bit (24) between the mantissa and </p>
 <p class="FM__Body"> &#160;the exponent. This bit is filled with the &lt;em&gt;inpad&lt;/em&gt; value which </p>
 <p class="FM__Body"> &#160;in this case is 0. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The sign bit is always of length one and none of the fields are allowed </p>
 <p class="FM__Body">&#160;&#160;to overlap. When expanding a floating-point type one should set the </p>
 <p class="FM__Body">&#160;&#160;precision first; when decreasing the size one should set the field </p>
 <p class="FM__Body"> &#160;positions and sizes first. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;6.4.3.2. Composite Datatypes&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;All composite datatypes must be user-defined; </p>
 <p class="FM__Body"> &#160;&#160;&#160;there are no predefined composite datatypes. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;6.4.3.2.1. Compound Datatypes&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The subsections below describe how to create a compound datatype </p>
 <p class="FM__Body"> &#160;&#160;&#160;and how to write and read data of a compound datatype.</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;6.4.3.2.1.1. Defining Compound Datatypes&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Compound datatypes are conceptually similar to a C struct or </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;Fortran derived types. The compound datatype defines a contiguous </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;sequence of bytes, which are formatted using one up to 2^16 datatypes </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;(members). A compound datatype may have any number of members, in </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;any order, and the members may have any datatype, including compound. </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;Thus, complex nested compound datatypes can be created. The total </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;size of the compound datatype is greater than or equal to the sum </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;of the size of its members, up to a maximum of 2^32 bytes. HDF5 does </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;not support datatypes with distinguished records or the equivalent </p>
 <p class="FM__Body"> &#160;&#160;&#160;of C unions or Fortran EQUIVALENCE statements.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Usually a C struct or Fortran derived type will be defined to hold </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;a data point in memory, and the offsets of the members in memory will </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;be the offsets of the struct members from the beginning of an instance </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;of the struct. The HDF5 C library provides a macro </p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;code&gt;HOFFSET (s,m)&lt;/code&gt; to calculate the member&amp;rsquo;s offset. The HDF5 </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;Fortran applications have to calculate offsets by using sizes of members </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;datatypes and by taking in consideration the order of members in the </p>
 <p class="FM__Body"> &#160;&#160;&#160;Fortran derived type.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&lt;dl&gt;</p>
 <p class="FM__Body">&lt;dt&gt;&lt;code&gt;HOFFSET(s,m)&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;&lt;dd&gt;This macro computes the offset of member &lt;em&gt;m&lt;/em&gt; within a struct </p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;em&gt;s&lt;/em&gt;&lt;/dd&gt;</p>
 <p class="FM__Body">&lt;dt&gt;&lt;code&gt;offsetof(s,m)&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;&lt;dd&gt;This macro defined in &lt;code&gt;stddef.h&lt;/code&gt; does exactly the same </p>
 <p class="FM__Body"> &#160;&#160;&#160;thing as the &lt;code&gt;HOFFSET()&lt;/code&gt; macro.&lt;/dd&gt;</p>
 <p class="FM__Body">&lt;/dl&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;em&gt;Note for Fortran users&lt;/em&gt;: Offsets of Fortran structure members </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;correspond to the offsets within a packed datatype (see explanation below) </p>
 <p class="FM__Body"> &#160;&#160;&#160;stored in an HDF5 file.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Each member of a compound datatype must have a descriptive name which </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;is the key used to uniquely identify the member within the compound </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;datatype. A member name in an HDF5 datatype does not necessarily have </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;to be the same as the name of the member in the C struct or Fortran </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;derived type, although this is often the case. Nor does one need to </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;define all members of the C struct or Fortran derived type in the HDF5 </p>
 <p class="FM__Body"> &#160;&#160;&#160;compound datatype (or vice versa).&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Unlike atomic datatypes which are derived from other atomic datatypes, </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;compound datatypes are created from scratch. First, one creates an empty </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;compound datatype and specifies its total size. Then members are added to </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;the compound datatype in any order. Each member type is inserted at a </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;designated offset. Each member has a name which is the key used to uniquely </p>
 <p class="FM__Body"> &#160;&#160;&#160;identify the member within the compound datatype.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The example below shows a way of creating an HDF5 C compound datatype to </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;describe a complex number. This is a structure with two components, </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&amp;ldquo;real&amp;rdquo; and &amp;ldquo;imaginary&amp;rdquo;, and each component </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;is a double. An equivalent C struct whose type is defined by the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;code&gt;complex_t&lt;/code&gt; struct is shown.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;typedef struct {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;double re; &#160;&#160;/*real part*/</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;double im; &#160;&#160;/*imaginary part*/</p>
 <p class="FM__Body"> &#160;&#160;} complex_t;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;hid_t complex_id = H5Tcreate (H5T_COMPOUND, sizeof (complex_t));</p>
 <p class="FM__Body"> &#160;&#160;H5Tinsert (complex_id, &amp;ldquo;real&amp;rdquo;, HOFFSET(complex_t,re),</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_DOUBLE);</p>
 <p class="FM__Body"> &#160;&#160;H5Tinsert (complex_id, &amp;ldquo;imaginary&amp;rdquo;, HOFFSET(complex_t,im),</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_DOUBLE);&lt;/pre&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 9. A compound datatype for complex numbers in C&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The example below shows a way of creating an HDF5 Fortran compound </p>
 <p class="FM__Body">&#160;&#160;datatype to describe a complex number. This is a Fortran derived type </p>
 <p class="FM__Body">&#160;&#160;with two components, &amp;ldquo;real&amp;rdquo; and &amp;ldquo;imaginary&amp;rdquo;, </p>
 <p class="FM__Body">&#160;&#160;and each component is DOUBLE PRECISION. An equivalent Fortran TYPE </p>
 <p class="FM__Body"> &#160;&#160;&#160;whose type is defined by the TYPE &lt;code&gt;complex_t&lt;/code&gt; is shown.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;TYPE complex_t</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;DOUBLE PRECISION re &#160;&#160;! real part</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;DOUBLE PRECISION im; &#160;! imaginary part</p>
 <p class="FM__Body"> &#160;END TYPE complex_t</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;CALL h5tget_size_f(H5T_NATIVE_DOUBLE, re_size, error)</p>
 <p class="FM__Body"> &#160;CALL h5tget_size_f(H5T_NATIVE_DOUBLE, im_size, error)</p>
 <p class="FM__Body"> &#160;complex_t_size = re_size + im_size</p>
 <p class="FM__Body"> &#160;CALL h5tcreate_f(H5T_COMPOUND_F, complex_t_size, type_id)</p>
 <p class="FM__Body"> &#160;offset = 0</p>
 <p class="FM__Body"> &#160;CALL h5tinsert_f(type_id, &amp;ldquo;real&amp;rdquo;, offset, H5T_NATIVE_DOUBLE, error)</p>
 <p class="FM__Body"> &#160;offset = offset + re_size</p>
 <p class="FM__Body"> &#160;CALL h5tinsert_f(type_id, &amp;ldquo;imaginary&amp;rdquo;, offset, H5T_NATIVE_DOUBLE, error)&lt;/pre&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 10. A compound datatype for complex numbers in Fortran&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;em&gt;Important Note&lt;/em&gt;: The compound datatype is created with a size </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;sufficient to hold all its members. In the C example above, the size of </p>
 <p class="FM__Body"> &#160;&#160;&#160;the C struct and the &lt;code&gt;HOFFSET&lt;/code&gt; macro are used as a convenient </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;mechanism to determine the appropriate size and offset. Alternatively, the </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;size and offset could be manually determined: the size can be set to </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;16 with &amp;ldquo;real&amp;rdquo; at offset 0 and &amp;ldquo;imaginary&amp;rdquo; at </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;offset 8. However, different platforms and compilers have different </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;sizes for &amp;ldquo;double&amp;rdquo; and may have alignment restrictions </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;which require additional padding within the structure. It is much </p>
 <p class="FM__Body"> &#160;&#160;&#160;more portable to use the &lt;code&gt;HOFFSET&lt;/code&gt; macro which assures </p>
 <p class="FM__Body"> &#160;&#160;&#160;that the values will be correct for any platform.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure below shows how the compound datatype would be laid out </p>
 <p class="FM__Body"> &#160;assuming that &lt;code&gt;NATIVE_DOUBLE&lt;/code&gt; are 64-bit numbers and that </p>
 <p class="FM__Body">&#160;&#160;there are no alignment requirements. The total size of the compound </p>
 <p class="FM__Body">&#160;&#160;datatype will be 16 bytes, the &amp;ldquo;real&amp;rdquo; component will </p>
 <p class="FM__Body"> &#160;start at byte 0, and &amp;ldquo;imaginary&amp;rdquo; will start at byte 8.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;1&quot; align=&quot;center&quot; width=&quot;550&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;top&quot; align=&quot;right&quot; rowspan=&quot;4&quot; width=&quot;150&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig18_a.jpg&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;100&quot;&gt;&lt;code&gt;Byte 0&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;100&quot;&gt;&lt;code&gt;Byte 1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;100&quot;&gt;&lt;code&gt;Byte 2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;100&quot;&gt;&lt;code&gt;Byte 3&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 4&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 5&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 6&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 7&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;top&quot; align=&quot;right&quot; rowspan=&quot;4&quot; width=&quot;150&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig18_b.jpg&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 8&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 9&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 10&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 11&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 12&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 13&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 14&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 15&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table align=&quot;center&quot; border=&quot;0&quot; width=&quot;550&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;top&quot; align=&quot;right&quot; width=&quot;150&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;top&quot; align=&quot;left&quot; colspan=&quot;4&quot;&gt;Total size of </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;compound datatype is 16 bytes&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 10. Layout of a compound datatype&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The members of a compound datatype may be any HDF5 datatype </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;including the compound, array, and variable-length (VL) types. The </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;figure and example below show the memory layout and code </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;which creates a compound datatype composed of two complex </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;values, and each complex value is also a compound datatype as in the </p>
 <p class="FM__Body"> &#160;&#160;&#160;figure above.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table border=&quot;1&quot; align=&quot;center&quot; width=&quot;550&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;top&quot; align=&quot;right&quot; rowspan=&quot;4&quot; width=&quot;150&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;img src=&quot;Images/Dtypes_fig19_a.jpg&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;100&quot;&gt;&lt;code&gt;Byte 0&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;100&quot;&gt;&lt;code&gt;Byte 1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;100&quot;&gt;&lt;code&gt;Byte 2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;100&quot;&gt;&lt;code&gt;Byte 3&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 4&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 5&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 6&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 7&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;top&quot; align=&quot;right&quot; rowspan=&quot;4&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;img src=&quot;Images/Dtypes_fig19_b.jpg&quot; align=&quot;middle&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 8&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 9&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 10&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 11&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 12&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 13&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 14&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 15&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;top&quot; align=&quot;right&quot; rowspan=&quot;4&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;img src=&quot;Images/Dtypes_fig19_c.jpg&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;100&quot;&gt;&lt;code&gt;Byte 16&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;100&quot;&gt;&lt;code&gt;Byte 17&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;100&quot;&gt;&lt;code&gt;Byte 18&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;100&quot;&gt;&lt;code&gt;Byte 19&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 20&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 21&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 22&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 23&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;rrrrrrrr&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;top&quot; align=&quot;right&quot; rowspan=&quot;4&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;img src=&quot;Images/Dtypes_fig19_d.jpg&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 24&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 25&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 26&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 27&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 28&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 29&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 30&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 31&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&lt;strong&gt;iiiiiiii&lt;/strong&gt;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table align=&quot;center&quot; width=&quot;550&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;150&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td&gt;Total size of compound datatype is 32 bytes.&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 11. Layout of a compound datatype nested within a compound </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;datatype&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;typedef struct {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;complex_t x;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;complex_t y;</p>
 <p class="FM__Body"> &#160;} surf_t;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;hid_t complex_id, surf_id; /*hdf5 datatypes*/</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;complex_id = H5Tcreate (H5T_COMPOUND, sizeof(complex_t));</p>
 <p class="FM__Body"> &#160;H5Tinsert (complex_id, &amp;ldquo;re&amp;rdquo;, HOFFSET(complex_t,re),</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_DOUBLE);</p>
 <p class="FM__Body"> &#160;H5Tinsert (complex_id, &amp;ldquo;im&amp;rdquo;, HOFFSET(complex_t,im),</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_DOUBLE);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;surf_id = H5Tcreate (H5T_COMPOUND, sizeof(surf_t));</p>
 <p class="FM__Body"> &#160;H5Tinsert (surf_id, &amp;ldquo;x&amp;rdquo;, HOFFSET(surf_t,x), complex_id);</p>
 <p class="FM__Body"> &#160;H5Tinsert (surf_id, &amp;ldquo;y&amp;rdquo;, HOFFSET(surf_t,y), complex_id);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 11. Code for a compound datatype nested within a compound </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;datatype&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Note that a similar result could be accomplished by creating a </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;compound datatype and inserting four fields. See the figure below. This </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;results in the same layout as the figure above. The difference </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;would be how the fields are addressed. In the first case, the </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;real part of &amp;lsquo;y&amp;rsquo; is called &amp;lsquo;y.re&amp;rsquo;; in the </p>
 <p class="FM__Body"> &#160;&#160;&#160;second case it is &amp;lsquo;y-re&amp;rsquo;.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;typedef struct {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;complex_t x;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;complex_t y;</p>
 <p class="FM__Body"> &#160;&#160;} surf_t;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;hid_t surf_id = H5Tcreate (H5T_COMPOUND, sizeof(surf_t));</p>
 <p class="FM__Body"> &#160;H5Tinsert (surf_id, &amp;ldquo;x-re&amp;rdquo;, HOFFSET(surf_t,x.re),</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_DOUBLE);</p>
 <p class="FM__Body"> &#160;H5Tinsert (surf_id, &amp;ldquo;x-im&amp;rdquo;, HOFFSET(surf_t,x.im),</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_DOUBLE);</p>
 <p class="FM__Body"> &#160;H5Tinsert (surf_id, &amp;ldquo;y-re&amp;rdquo;, HOFFSET(surf_t,y.re),</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_DOUBLE);</p>
 <p class="FM__Body"> &#160;H5Tinsert (surf_id, &amp;ldquo;y-im&amp;rdquo;, HOFFSET(surf_t,y.im),</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_DOUBLE); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 12. Another compound datatype nested within a </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;compound datatype &lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The members of a compound datatype do not always </p>
 <p class="FM__Body"> &#160;&#160;&#160;fill all the bytes. The &lt;code&gt;HOFFSET&lt;/code&gt; macro </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;assures that the members will be laid out according </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;to the requirements of the platform and language. </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;The example below shows an example of a C struct which requires </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;extra bytes of padding on many platforms. The second </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;element, &amp;lsquo;b&amp;rsquo;, is a 1-byte character followed by an 8 </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;byte double, &amp;lsquo;c&amp;rsquo;. On many systems, the 8-byte value must </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;be stored on a 4- or 8-byte boundary. This requires the struct </p>
 <p class="FM__Body"> &#160;&#160;&#160;to be larger than the sum of the size of its elements. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In the example below, &lt;code&gt;sizeof&lt;/code&gt; and </p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;code&gt;HOFFSET&lt;/code&gt; are used to assure that the </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;members are inserted at the correct offset to match the </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;memory conventions of the platform. The figure below shows how </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;this data element would be stored in memory, assuming the </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;double must start on a 4-byte boundary. Notice the extra </p>
 <p class="FM__Body"> &#160;&#160;&#160;bytes between &amp;lsquo;b&amp;rsquo; and &amp;lsquo;c&amp;rsquo;.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&lt;pre&gt;</p>
 <p class="FM__Body">&#160;&#160;typedef struct s1_t { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;int &#160;&#160;&#160;a; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;char &#160;b; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;double c; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;} s1_t;</p>
 <p class="FM__Body">&#160;</p>
 <p class="FM__Body"> &#160;s1_tid = H5Tcreate (H5T_COMPOUND, sizeof(s1_t));</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;a_name&amp;rdquo;, HOFFSET(s1_t, a), H5T_NATIVE_INT);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;b_name&amp;rdquo;, HOFFSET(s1_t, b), H5T_NATIVE_CHAR);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;c_name&amp;rdquo;, HOFFSET(s1_t, c), H5T_NATIVE_DOUBLE);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 13. A compound datatype that requires padding&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig23.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 12. Memory layout of a compound datatype that requires </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;padding &lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;However, data stored on disk does not require </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;alignment, so unaligned versions of compound data </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;structures can be created to improve space efficiency </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;on disk. These unaligned compound datatypes can be </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;created by computing offsets by hand to eliminate </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;inter-member padding, or the members can be packed by </p>
 <p class="FM__Body"> &#160;&#160;&#160;calling &lt;code&gt;H5Tpack&lt;/code&gt; (which modifies a datatype </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;directly, so it is usually preceded by a call to </p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;code&gt;H5Tcopy&lt;/code&gt;). &#160;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The example below shows how to create a disk version of the </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;compound datatype from the figure above in order to store </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;data on disk in as compact a form as possible. </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;Packed compound datatypes should generally not be used to </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;describe memory as they may violate alignment constraints </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;for the architecture being used. Note also that using a </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;packed datatype for disk storage may involve a higher </p>
 <p class="FM__Body"> &#160;&#160;&#160;data conversion cost.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;hid_t s2_tid = H5Tcopy (s1_tid);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5Tpack (s2_tid);&lt;/pre&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 14. Create a packed compound datatype in C&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The example below shows the sequence of Fortran calls to </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;create a packed compound datatype. An HDF5 Fortran </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;compound datatype never describes a compound datatype </p>
 <p class="FM__Body"> &#160;&#160;&#160;in memory and compound data is &lt;em&gt;ALWAYS&lt;/em&gt; written </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;by fields as described in the next section. Therefore </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;packing is not needed unless the offset of each consecutive </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;member is not equal to the sum of the sizes of the </p>
 <p class="FM__Body"> &#160;&#160;&#160;previous members.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;CALL h5tcopy_f(s1_id, s2_id, error)</p>
 <p class="FM__Body"> &#160;CALL h5tpack_f(s2_id, error)&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 15. Create a packed compound datatype in Fortran&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;6.4.3.2.1.2. Creating and Writing Datasets with Compound Datatypes&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Creating datasets with compound datatypes is similar </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;to creating datasets with any other HDF5 datatypes. But </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;writing and reading may be different since datasets that </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;have compound datatypes can be written or read by a field </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;(member) or subsets of fields (members). The compound datatype </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;is the only composite datatype that supports &amp;ldquo;sub-setting&amp;rdquo; by </p>
 <p class="FM__Body"> &#160;&#160;&#160;the elements the datatype is built from.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The example below shows a C example of creating and writing a dataset </p>
 <p class="FM__Body"> &#160;&#160;&#160;with a compound datatype.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;typedef struct s1_t {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;int &#160;&#160;&#160;a;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;float &#160;b;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;double c;</p>
 <p class="FM__Body"> &#160;} s1_t;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;s1_t data[LENGTH];</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/* Initialize data */</p>
 <p class="FM__Body"> &#160;for (i = 0; i &amp;lt; LENGTH; i++) {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;data[i].a = i;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;data[i].b = i*i;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;data[i].c = 1./(i+1);</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body"> &#160;s1_tid = H5Tcreate (H5T_COMPOUND, sizeof(s1_t));</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;a_name&amp;rdquo;, HOFFSET(s1_t, a), H5T_NATIVE_INT);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;b_name&amp;rdquo;, HOFFSET(s1_t, b), H5T_NATIVE_FLOAT);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;c_name&amp;rdquo;, HOFFSET(s1_t, c), H5T_NATIVE_DOUBLE);</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body">&#160;&#160;dataset_id = H5Dcreate(file_id, &amp;ldquo;SDScompound.h5&amp;rdquo;, s1_t, space_id, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);</p>
 <p class="FM__Body"> &#160;H5Dwrite (dataset_id, s1_tid, H5S_ALL, H5S_ALL, H5P_DEFAULT, data);&lt;/pre&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 16. Create and write a dataset with a compound datatype in C&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The example below shows the content of the file written on </p>
 <p class="FM__Body"> &#160;&#160;&#160;a little-endian machine.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;HDF5 &amp;ldquo;SDScompound.h5&amp;rdquo; {</p>
 <p class="FM__Body"> &#160;GROUP &amp;ldquo;/&amp;rdquo; {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;DATASET &amp;ldquo;ArrayOfStructures&amp;rdquo; {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DATATYPE &#160;H5T_COMPOUND {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_STD_I32LE &amp;ldquo;a_name&amp;rdquo;;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_IEEE_F32LE &amp;ldquo;b_name&amp;rdquo;;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_IEEE_F64LE &amp;ldquo;c_name&amp;rdquo;;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DATASPACE &#160;SIMPLE { ( 3 ) / ( 3 ) }</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DATA {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(0): {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;},</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(1): {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.5</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;},</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(2): {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;4,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.333333</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM__Body"> &#160;}</p>
 <p class="FM__Body"> &#160;}&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 17. Create and write a little-endian dataset with a compound </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;datatype in C&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;It is not necessary to write the whole data at once. </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;Datasets with compound datatypes can be written by </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;field or by subsets of fields. In order to do this one </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;has to remember to set the transfer property of the dataset </p>
 <p class="FM__Body"> &#160;&#160;&#160;using the &lt;code&gt;H5Pset_preserve&lt;/code&gt; call and to define the </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;memory datatype that corresponds to a field. The example below </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;shows how float and double fields are &#160;written to the </p>
 <p class="FM__Body"> &#160;&#160;&#160;dataset.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;typedef struct sb_t {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;float &#160;b;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;double c;</p>
 <p class="FM__Body"> &#160;} sb_t;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;typedef struct sc_t {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;float &#160;b;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;double c;</p>
 <p class="FM__Body"> &#160;} sc_t;</p>
 <p class="FM__Body"> &#160;sb_t data1[LENGTH];</p>
 <p class="FM__Body"> &#160;sc_t data2[LENGTH];</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/* Initialize data */</p>
 <p class="FM__Body"> &#160;for (i = 0; i &amp;lt; LENGTH; i++) {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;data1.b = i*i;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;data2.c = 1./(i+1);</p>
 <p class="FM__Body"> &#160;}</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body"> &#160;/* Create dataset as in example 15 */</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body">&#160;&#160;/* Create memory datatypes corresponding to float and </p>
 <p class="FM__Body"> &#160;double datatype fileds */</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;sb_tid = H5Tcreate (H5T_COMPOUND, sizeof(sb_t));</p>
 <p class="FM__Body"> &#160;H5Tinsert(sb_tid, &amp;ldquo;b_name&amp;rdquo;, HOFFSET(sb_t, b), H5T_NATIVE_FLOAT);</p>
 <p class="FM__Body"> &#160;sc_tid = H5Tcreate (H5T_COMPOUND, sizeof(sc_t));</p>
 <p class="FM__Body"> &#160;H5Tinsert(sc_tid, &amp;ldquo;c_name&amp;rdquo;, HOFFSET(sc_t, c), H5T_NATIVE_DOUBLE);</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body"> &#160;/* Set transfer property */</p>
 <p class="FM__Body"> &#160;xfer_id = H5Pcreate(H5P_DATASET_XFER);</p>
 <p class="FM__Body"> &#160;H5Pset_preserve(xfer_id, 1);</p>
 <p class="FM__Body"> &#160;H5Dwrite (dataset_id, sb_tid, H5S_ALL, H5S_ALL, xfer_id, data1);</p>
 <p class="FM__Body"> &#160;H5Dwrite (dataset_id, sc_tid, H5S_ALL, H5S_ALL, xfer_id, data2);&lt;/pre&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 18. Writing floats and doubles to a dataset&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure below shows the content of the file written on a </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;little-endian machine. Only float and double fields are </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;written. The default fill value is used to initialize the </p>
 <p class="FM__Body"> &#160;&#160;&#160;unwritten integer field.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;HDF5 &amp;ldquo;SDScompound.h5&amp;rdquo; {</p>
 <p class="FM__Body"> &#160;GROUP &amp;ldquo;/&amp;rdquo; {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;DATASET &amp;ldquo;ArrayOfStructures&amp;rdquo; {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DATATYPE &#160;H5T_COMPOUND {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_STD_I32LE &amp;ldquo;a_name&amp;rdquo;;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_IEEE_F32LE &amp;ldquo;b_name&amp;rdquo;;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_IEEE_F64LE &amp;ldquo;c_name&amp;rdquo;;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DATASPACE &#160;SIMPLE { ( 3 ) / ( 3 ) }</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DATA {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(0): {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;},</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(1): {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.5</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;},</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(2): {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;4,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.333333</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM__Body"> &#160;}</p>
 <p class="FM__Body"> &#160;}&lt;/pre&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 19. Writing floats and doubles to a dataset on a little-endian </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;system&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The example below contains a Fortran example that creates and writes </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;a dataset with a compound datatype. As this example illustrates, </p>
 <p class="FM__Body"> &#160;&#160;&#160;writing and reading compound datatypes in Fortran is &lt;em&gt;always&lt;/em&gt; </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;done by fields. The content of the written file is the same as </p>
 <p class="FM__Body"> &#160;&#160;&#160;shown in the example above.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;! One cannot write an array of a derived datatype in Fortran.</p>
 <p class="FM__Body"> &#160;TYPE s1_t</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;INTEGER &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;REAL &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;b</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;DOUBLE PRECISION c</p>
 <p class="FM__Body"> &#160;END TYPE s1_t</p>
 <p class="FM__Body"> &#160;TYPE(s1_t) d(LENGTH)</p>
 <p class="FM__Body">&#160;&#160;! Therefore, the following code initializes an array corresponding </p>
 <p class="FM__Body">&#160;&#160;! to each field in the derived datatype and writes those arrays </p>
 <p class="FM__Body"> &#160;! to the dataset</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;INTEGER, DIMENSION(LENGTH) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:: a</p>
 <p class="FM__Body"> &#160;REAL, DIMENSION(LENGTH) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:: b</p>
 <p class="FM__Body"> &#160;DOUBLE PRECISION, DIMENSION(LENGTH) :: c</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;! Initialize data</p>
 <p class="FM__Body"> &#160;&#160;do i = 1, LENGTH</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;a(i) = i-1</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;b(i) = (i-1) * (i-1)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;c(i) = 1./i</p>
 <p class="FM__Body"> &#160;&#160;enddo</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;! Set dataset transfer property to preserve partially initialized fields</p>
 <p class="FM__Body"> &#160;&#160;! during write/read to/from dataset with compound datatype.</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;CALL h5pcreate_f(H5P_DATASET_XFER_F, plist_id, error)</p>
 <p class="FM__Body"> &#160;&#160;CALL h5pset_preserve_f(plist_id, .TRUE., error)</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;! Create compound datatype.</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;! First calculate total size by calculating sizes of each member</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;CALL h5tget_size_f(H5T_NATIVE_INTEGER, type_sizei, error)</p>
 <p class="FM__Body"> &#160;&#160;CALL h5tget_size_f(H5T_NATIVE_REAL, type_sizer, error)</p>
 <p class="FM__Body"> &#160;&#160;CALL h5tget_size_f(H5T_NATIVE_DOUBLE, type_sized, error)</p>
 <p class="FM__Body"> &#160;&#160;type_size = type_sizei + type_sizer + type_sized</p>
 <p class="FM__Body"> &#160;&#160;CALL h5tcreate_f(H5T_COMPOUND_F, type_size, dtype_id, error)</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;! Insert memebers</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;! INTEGER member</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;offset = 0</p>
 <p class="FM__Body"> &#160;&#160;CALL h5tinsert_f(dtype_id, &amp;ldquo;a_name&amp;rdquo;, offset, H5T_NATIVE_INTEGER, error)</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;! REAL member</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;offset = offset + type_sizei</p>
 <p class="FM__Body"> &#160;&#160;CALL h5tinsert_f(dtype_id, &amp;ldquo;b_name&amp;rdquo;, offset, H5T_NATIVE_REAL, error)</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;! DOUBLE PRECISION member</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;offset = offset + type_sizer</p>
 <p class="FM__Body"> &#160;&#160;CALL h5tinsert_f(dtype_id, &amp;ldquo;c_name&amp;rdquo;, offset, H5T_NATIVE_DOUBLE, error)</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;! Create the dataset with compound datatype.</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;CALL h5dcreate_f(file_id, dsetname, dtype_id, dspace_id, &amp;amp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dset_id, error, H5P_DEFAULT_F, H5P_DEFAULT_F, H5P_DEFAULT_F)</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body"> &#160;&#160;! Create memory types. We have to create a compound datatype</p>
 <p class="FM__Body"> &#160;&#160;! for each member we want to write.</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;CALL h5tcreate_f(H5T_COMPOUND_F, type_sizei, dt1_id, error)</p>
 <p class="FM__Body"> &#160;&#160;offset = 0</p>
 <p class="FM__Body"> &#160;&#160;CALL h5tinsert_f(dt1_id, &amp;ldquo;a_name&amp;rdquo;, offset, H5T_NATIVE_INTEGER, error)</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;CALL h5tcreate_f(H5T_COMPOUND_F, type_sizer, dt2_id, error)</p>
 <p class="FM__Body"> &#160;&#160;offset = 0</p>
 <p class="FM__Body"> &#160;&#160;CALL h5tinsert_f(dt2_id, &amp;ldquo;b_name&amp;rdquo;, offset, H5T_NATIVE_REAL, error)</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;CALL h5tcreate_f(H5T_COMPOUND_F, type_sized, dt3_id, error)</p>
 <p class="FM__Body"> &#160;&#160;offset = 0</p>
 <p class="FM__Body"> &#160;&#160;CALL h5tinsert_f(dt3_id, &amp;ldquo;c_name&amp;rdquo;, offset, H5T_NATIVE_DOUBLE, error)</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;! Write data by fields in the datatype. Fields order is not important.</p>
 <p class="FM__Body"> &#160;&#160;!</p>
 <p class="FM__Body"> &#160;&#160;CALL h5dwrite_f(dset_id, dt3_id, c, data_dims, error, xfer_prp = plist_id)</p>
 <p class="FM__Body"> &#160;&#160;CALL h5dwrite_f(dset_id, dt2_id, b, data_dims, error, xfer_prp = plist_id)</p>
 <p class="FM__Body"> &#160;&#160;CALL h5dwrite_f(dset_id, dt1_id, a, data_dims, error, xfer_prp = plist_id)&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 20. Create and write a dataset with a compound datatype in </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Fortran&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;h4&gt;6.4.3.2.1.3. Reading Datasets with Compound Datatypes&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Reading datasets with compound datatypes may be a </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;challenge. For general applications there is no way to </p>
 <p class="FM__Body"> &#160;&#160;&#160;know &lt;em&gt;a priori&lt;/em&gt; the corresponding C structure. </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;Also, C structures cannot be allocated on the fly during discovery </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;of the dataset&amp;rsquo;s datatype. For general C , C++, Fortran </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;and Java application the following steps will be required </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;to read and to interpret data from the dataset with </p>
 <p class="FM__Body"> &#160;&#160;&#160;compound datatype:&lt;/p&gt;</p>
 <p class="FM__Body">&#160;</p>
 <p class="FM__Body"> &#160;&lt;dl&gt;    </p>
 <p class="FM__Body"> &#160;&lt;dt&gt;</p>
 <p class="FM__Body"> &#160;&lt;ol&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Get the identifier of the compound datatype in the file </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;with the &lt;code&gt;H5Dget_type&lt;/code&gt; call&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Find the number of the compound datatype members </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;with the &lt;code&gt;H5Tget_nmembers&lt;/code&gt; call&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;Iterate through compound datatype members&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;/ol&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;dd&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;Get member class with the </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;code&gt;H5Tget_member_class&lt;/code&gt; call&lt;/li&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;li&gt;Get member name with the </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;code&gt;H5Tget_member_name&lt;/code&gt; call&lt;/li&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;li&gt;Check class type against predefined classes&lt;/li&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;ul&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;li&gt;&lt;code&gt;H5T_INTEGER&lt;/code&gt;&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_FLOAT&lt;/code&gt;&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_STRING&lt;/code&gt;&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_BITFIELD&lt;/code&gt;&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_OPAQUE&lt;/code&gt;&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_COMPOUND&lt;/code&gt;&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_REFERENCE&lt;/code&gt;&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_ENUM&lt;/code&gt;&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_VLEN&lt;/code&gt;&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;code&gt;H5T_ARRAY&lt;/code&gt;&lt;/li&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/ul&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;li&gt;If class is &lt;code&gt;H5T_COMPOUND&lt;/code&gt;, </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;then go to step 2 and repeat all steps under </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;step 3. If class is not &lt;code&gt;H5T_COMPOUND&lt;/code&gt;, </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;then a member is of an atomic class and can be </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;read to a corresponding buffer after discovering </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;all necessary information specific to each atomic </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;type (e.g. size of the integer or floats, super </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;class for enumerated and array datatype, </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;and it sizes, etc.)&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/dd&gt;</p>
 <p class="FM__Body"> &#160;&lt;/dl&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The examples below show how to read a dataset with a known </p>
 <p class="FM__Body"> &#160;&#160;&#160;compound datatype.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The first example below shows the steps needed to read data of a </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;known structure. First, build a memory datatype </p>
 <p class="FM__Body"> &#160;&#160;&#160;the same way it was built when the dataset was created, and then</p>
 <p class="FM__Body"> &#160;&#160;&#160;second use the datatype in a &lt;code&gt;H5Dread&lt;/code&gt; call.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;typedef struct s1_t {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;int &#160;&#160;&#160;a;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;float &#160;b;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;double c;</p>
 <p class="FM__Body"> &#160;} s1_t;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;s1_t *data;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body"> &#160;s1_tid = H5Tcreate(H5T_COMPOUND, sizeof(s1_t));</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;a_name&amp;rdquo;, HOFFSET(s1_t, a), H5T_NATIVE_INT);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;b_name&amp;rdquo;, HOFFSET(s1_t, b), H5T_NATIVE_FLOAT);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;c_name&amp;rdquo;, HOFFSET(s1_t, c), H5T_NATIVE_DOUBLE);</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body"> &#160;dataset_id = H5Dopen(file_id, &amp;ldquo;SDScompound.h5&amp;rdquo;, H5P_DEFAULT);</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body"> &#160;data = (s1_t *) malloc (sizeof(s1_t)*LENGTH);</p>
 <p class="FM__Body"> &#160;H5Dread(dataset_id, s1_tid, H5S_ALL, H5S_ALL, H5P_DEFAULT, data);&lt;/pre&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 21. Read a dataset using a memory datatype</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- used to be Figure 25f --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Instead of building a memory datatype, the application could use the </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Tget_native_type&lt;/code&gt; function. See the example below.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;typedef struct s1_t {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;int &#160;&#160;&#160;a;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;float &#160;b;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;double c;</p>
 <p class="FM__Body"> &#160;} s1_t;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;s1_t *data;</p>
 <p class="FM__Body"> &#160;hid_t file_s1_t, mem_s1_t;</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body"> &#160;dataset_id = H5Dopen(file_id, &amp;ldquo;SDScompound.h5&amp;rdquo;, H5P_DEFAULT);</p>
 <p class="FM__Body"> &#160;/* Discover datatype in the file */</p>
 <p class="FM__Body"> &#160;file_s1_t &#160;= H5Dget_type(dataset_id);</p>
 <p class="FM__Body"> &#160;/* Find corresponding memory datatype */</p>
 <p class="FM__Body">&#160;&#160;mem_s1_t &#160;&#160;= H5Tget_native_type(file_s1_t, H5T_DIR_DEFAULT); </p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body"> &#160;data = (s1_t *) malloc (sizeof(s1_t)*LENGTH);</p>
 <p class="FM__Body"> &#160;H5Dread (dataset_id, mem_s1_tid, H5S_ALL, H5S_ALL, H5P_DEFAULT, data);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 22. Read a dataset using &lt;code&gt;H5Tget_native_type&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- used to be Figure 25g --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The example below shows how to read just one float member of a </p>
 <p class="FM__Body"> &#160;compound datatype.&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;!-- used to be Example 25h --&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;typedef struct s1_t {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;float &#160;b;</p>
 <p class="FM__Body"> &#160;} sf_t;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;sf_t *data;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body"> &#160;sf_tid = H5Tcreate(H5T_COMPOUND, sizeof(sf_t));</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;b_name&amp;rdquo;, HOFFSET(sf_t, b), H5T_NATIVE_FLOAT);</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body"> &#160;dataset_id = H5Dopen(file_id, &amp;ldquo;SDScompound.h5&amp;rdquo;, H5P_DEFAULT);</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body"> &#160;data = (sf_t *) malloc (sizeof(sf_t)*LENGTH);</p>
 <p class="FM__Body"> &#160;H5Dread(dataset_id, sf_tid, H5S_ALL, H5S_ALL, H5P_DEFAULT, data);&lt;/pre&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 23. Read one floating point member of a compound datatype</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- used to be Figure 25h --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The example below &lt;!-- used to be Figure 25i --&gt; shows how to read float </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;and </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;double members of a compound datatype into </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;a structure that has those fields in a different </p>
 <p class="FM__Body"> &#160;&#160;&#160;order. Please notice that &lt;code&gt;H5Tinsert&lt;/code&gt; </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;calls can be used in an order different from the </p>
 <p class="FM__Body"> &#160;&#160;&#160;order of the structure’s members.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;typedef struct s1_t {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;double c;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;float &#160;b;</p>
 <p class="FM__Body"> &#160;} sdf_t;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;sdf_t *data;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body"> &#160;sdf_tid = H5Tcreate(H5T_COMPOUND, sizeof(sdf_t));</p>
 <p class="FM__Body"> &#160;H5Tinsert(sdf_tid, &amp;ldquo;b_name&amp;rdquo;, HOFFSET(sdf_t, b), H5T_NATIVE_FLOAT);</p>
 <p class="FM__Body"> &#160;H5Tinsert(sdf_tid, &amp;ldquo;c_name&amp;rdquo;, HOFFSET(sdf_t, c), H5T_NATIVE_DOUBLE);</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body"> &#160;dataset_id = H5Dopen(file_id, &amp;ldquo;SDScompound.h5&amp;rdquo;, H5P_DEFAULT);</p>
 <p class="FM__Body"> &#160;...</p>
 <p class="FM__Body"> &#160;data = (sdf_t *) malloc (sizeof(sdf_t)*LENGTH);</p>
 <p class="FM__Body"> &#160;H5Dread(dataset_id, sdf_tid, H5S_ALL, H5S_ALL, H5P_DEFAULT, data);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 24. Read float and double members of a compound datatype </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- used to be Figure 25i --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;h4&gt;6.4.3.2.2. Array&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Many scientific datasets have multiple measurements for each point </p>
 <p class="FM__Body">&#160;&#160;in a space. There are several natural ways to represent this data, </p>
 <p class="FM__Body">&#160;&#160;depending on the variables and how they are used in computation. </p>
 <p class="FM__Body"> &#160;See the table and the figure below.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 20. Representing data with multiple measurements&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;25%&quot;&gt;&lt;b&gt;Storage Strategy&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;2%&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;25%&quot;&gt;&lt;b&gt;Stored as&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;2%&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;46%&quot;&gt;&lt;b&gt;Remarks&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Mulitple planes&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Several datasets with identical dataspaces&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;This is optimal when variables are </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;accessed individually, or when often uses only selected variables.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Additional dimension&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;One dataset, the last &amp;ldquo;dimension&amp;rdquo; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;is a vector of variables&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;This can give good performance, although </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;selecting only a few variables may be slow. This may not reflect the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;science.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Record with multiple values&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;One dataset with compound datatype&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;This enables the variables to be read all </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;together or selected. Also handles &amp;ldquo;vectors&amp;rdquo; of </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;heterogenous data.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Vector or Tensor value&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;One dataset, each data element is a small </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;array of values.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;This uses the same amount of space as </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;the previous two, and may represent the science model better.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;400&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig26_pic1of4.JPG&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig26_pic2of4.JPG&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig26_pic3of4.JPG&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig26_pic4of4.JPG&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; colspan=&quot;3&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 13. Representing data with multiple measurements&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 &lt;code&gt;H5T_ARRAY&lt;/code&gt; datatype defines </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;the data element to be a homogeneous, multi-dimensional </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;array. See Figure 13d above. The elements of the array </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;can be any HDF5 datatype (including compound and array), and </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;the size of the datatype is the total size of the array. </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;A dataset of array datatype cannot be subdivided for I/O </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;within the data element: the entire array of the data element </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;must be transferred. If the data elements need to be accessed </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;separately, e.g., by plane, then the array datatype should not </p>
 <p class="FM__Body"> &#160;&#160;&#160;be used. The table below &lt;!-- formerly Table 22 --&gt; </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;shows advantages and disadvantages of various </p>
 <p class="FM__Body"> &#160;&#160;&#160;storage methods.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;5&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 21. Storage method advantages and disadvantages&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;20%&quot;&gt;&lt;b&gt;Method&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;2%&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;38%&quot;&gt;&lt;b&gt;Advantages&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;2%&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;38%&quot;&gt;&lt;b&gt;Disadvantages&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;a) Multiple Datasets&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Easy to access each plane, can select any plane(s)&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Less efficient to access a &amp;lsquo;column&amp;rsquo; through the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;planes&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;b) N+1 Dimension&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;All access patterns supported&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Must be homogeneous datatype&lt;br /&gt;&lt;br /&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;The added dimension may not make sense in the scientific </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;model&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;c) Compound Datatype&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Can be heterogenous datatype&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Planes must be named, selection is by plane&lt;br /&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Not a natural representation for a matrix&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;d) Array&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;A natural representation for vector or tensor data&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Cannot access elements separately (no access by plane)&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;An array datatype may be multi-dimensional with 1 to </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5S_MAX_RANK&lt;/code&gt; (the maximum rank of a dataset is currently </p>
 <p class="FM__Body">&#160;&#160;32) dimensions. The dimensions can be any size greater than 0, but </p>
 <p class="FM__Body">&#160;&#160;unlimited dimensions are not supported (although the datatype can be </p>
 <p class="FM__Body"> &#160;a variable-length datatype).&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;An array datatype is created with the &lt;code&gt;H5Tarray_create&lt;/code&gt; </p>
 <p class="FM__Body">&#160;&#160;call, which specifies the number of dimensions, the size of each </p>
 <p class="FM__Body">&#160;&#160;dimension, and the base type of the array. The array datatype can </p>
 <p class="FM__Body">&#160;&#160;then be used in any way that any datatype object is used. The example </p>
 <p class="FM__Body"> &#160;below &lt;!-- formerly Figure 27 --&gt; shows the creation of a datatype </p>
 <p class="FM__Body">&#160;&#160;that is a two-dimensional array of native integers, and this is then </p>
 <p class="FM__Body">&#160;&#160;used to create a dataset. Note that the dataset can be a dataspace </p>
 <p class="FM__Body">&#160;&#160;that is any number and size of dimensions. The figure below </p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Figure 28 --&gt; shows the layout in memory assuming that </p>
 <p class="FM__Body">&#160;&#160;the native integers are 4 bytes. Each data element has 6 elements, </p>
 <p class="FM__Body"> &#160;for a total of 24 bytes.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;hid_t &#160;&#160;&#160;&#160;&#160;&#160;file, dataset;</p>
 <p class="FM__Body"> &#160;hid_t &#160;&#160;&#160;&#160;&#160;&#160;datatype, dataspace;</p>
 <p class="FM__Body">&#160;&#160;hsize_t &#160;&#160;&#160;&#160;adims[] = {3, 2}; </p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;datatype = H5Tarray_create(H5T_NATIVE_INT, 2, adims, NULL);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;dataset = H5Dcreate(file, datasetname, datatype, dataspace,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 25. Create a two-dimensional array datatype</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 27 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig28.JPG&quot; width=&quot;550&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 14. Memory layout of a two-dimensional array datatype</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 28 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;VariableLengthDatatypes&quot;&gt;</p>
 <p class="FM__Body">&lt;h4&gt;6.4.3.2.3. Variable-length Datatypes&lt;/h4&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A variable-length (VL) datatype is a one-dimensional sequence of a </p>
 <p class="FM__Body">&#160;&#160;datatype which are not fixed in length from one dataset location to </p>
 <p class="FM__Body">&#160;&#160;another, i.e., each data element may have a different number of members. </p>
 <p class="FM__Body">&#160;&#160;Variable-length datatypes cannot be divided, the entire data element </p>
 <p class="FM__Body"> &#160;must be transferred.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;VL datatypes are useful to the scientific community in many different </p>
 <p class="FM__Body"> &#160;ways, possibly including: &lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;&lt;em&gt;Ragged arrays&lt;/em&gt;: Multi-dimensional ragged arrays can be </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;implemented with the last (fastest changing) dimension being ragged by </p>
 <p class="FM__Body"> &#160;&#160;&#160;using a VL datatype as the type of the element stored. &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;&lt;em&gt;Fractal arrays&lt;/em&gt;: A nested VL datatype can be used to implement </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;ragged arrays of ragged arrays, to whatever nesting depth is required </p>
 <p class="FM__Body"> &#160;&#160;&#160;for the user. &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;&lt;em&gt;Polygon lists&lt;/em&gt;: A common storage requirement is to </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;efficiently store arrays of polygons with different numbers of </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;vertices. A VL datatypes can be used to efficiently and succinctly </p>
 <p class="FM__Body"> &#160;&#160;&#160;describe an array of polygons with different numbers of vertices. &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;&lt;em&gt;Character strings&lt;/em&gt;: Perhaps the most common use of VL </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;datatypes will be to store C-like VL character strings in dataset </p>
 <p class="FM__Body"> &#160;&#160;&#160;elements or as attributes of objects. &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;&lt;em&gt;Indices, e.g. of objects within the file&lt;/em&gt;: An array of </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;VL object references could be used as an index to all the objects </p>
 <p class="FM__Body"> &#160;&#160;&#160;in a file which contain a particular sequence of dataset values. &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;&lt;em&gt;Object Tracking&lt;/em&gt;: An array of VL dataset region references </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;can be used as a method of tracking objects or features appearing </p>
 <p class="FM__Body"> &#160;&#160;&#160;in a sequence of datasets. &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;/ul&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A VL datatype is created by calling &lt;code&gt;H5Tvlen_create&lt;/code&gt; which </p>
 <p class="FM__Body">&#160;&#160;specifies the base datatype. The first example below &lt;!-- formerly </p>
 <p class="FM__Body"> &#160;Figure 29 --&gt; shows an example of code that creates a VL datatype </p>
 <p class="FM__Body">&#160;&#160;of unsigned integers. Each data element is a one-dimensional array of </p>
 <p class="FM__Body"> &#160;zero or more members and is stored in the &lt;code&gt;hvl_t&lt;/code&gt; structure. </p>
 <p class="FM__Body"> &#160;See the second example below. &lt;!-- formerly Figure 30 --&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;tid1 = H5Tvlen_create (H5T_NATIVE_UINT);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;dataset=H5Dcreate(fid1, &amp;ldquo;Dataset1&amp;rdquo;, tid1, sid1, H5P_DEFAULT, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, H5P_DEFAULT);&lt;/pre&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 26. Create a variable-length datatype of unsigned integers</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 29 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> typedef struct &#160;{</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;size_t len; /* Length of VL data (in base type units) */ &#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;void *p; &#160;&#160;&#160;/* Pointer to VL data */ &#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> } hvl_t;&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 27. Data element storage for members of the VL datatype</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 30 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The first example below &lt;!-- formerly Figure 31 --&gt; shows how the VL </p>
 <p class="FM__Body">&#160;&#160;data is written. For each of the 10 data elements, </p>
 <p class="FM__Body">&#160;&#160;a length and data buffer must be allocated. Below the two examples is a </p>
 <p class="FM__Body"> &#160;figure &lt;!-- formerly Figure 33 --&gt; that shows how the data is </p>
 <p class="FM__Body"> &#160;laid out in memory. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;An analogous procedure must be used to read the data. See the second </p>
 <p class="FM__Body">&#160;&#160;example below. </p>
 <p class="FM__Body"> &#160;An appropriate array of &lt;code&gt;vl_t&lt;/code&gt; must be allocated, </p>
 <p class="FM__Body">&#160;&#160;and the data read. It is then traversed one data element at a time. </p>
 <p class="FM__Body"> &#160;The &lt;code&gt;H5Dvlen_reclaim&lt;/code&gt; call frees the data buffer for the buffer. </p>
 <p class="FM__Body">&#160;&#160;With each element possibly being of different sequence lengths for a </p>
 <p class="FM__Body">&#160;&#160;dataset with a VL datatype, the memory for the VL datatype </p>
 <p class="FM__Body">&#160;&#160;must be dynamically allocated. Currently there are two methods of managing the </p>
 <p class="FM__Body">&#160;&#160;memory for VL datatypes: the standard C malloc/free memory allocation routines </p>
 <p class="FM__Body">&#160;&#160;or a method of calling user-defined memory management routines to allocate or </p>
 <p class="FM__Body"> &#160;free memory (set with &lt;code&gt;H5Pset_vlen_mem_manager&lt;/code&gt;). Since the memory </p>
 <p class="FM__Body">&#160;&#160;allocated when reading (or writing) may be complicated to release, </p>
 <p class="FM__Body"> &#160;the &lt;code&gt;H5Dvlen_reclaim&lt;/code&gt; function</p>
 <p class="FM__Body">&#160;&#160;is provided to traverse a memory buffer and free the VL datatype information </p>
 <p class="FM__Body"> &#160;without leaking memory.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;hvl_t wdata[10]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Information to write */</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;/* Allocate and initialize VL data to write */</p>
 <p class="FM__Body"> &#160;for(i=0; i &amp;lt; 10; i++) {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;wdata[i].p = malloc((i+1)*sizeof(unsigned int));</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;wdata[i].len = i+1;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;for(j=0; j&lt;(i+1); j++)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;((unsigned int *)wdata[i].p)[j]=i*10+j;</p>
 <p class="FM__Body"> &#160;&#160;}</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;ret=H5Dwrite(dataset, tid1, H5S_ALL, H5S_ALL, H5P_DEFAULT, wdata);&lt;/pre&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 28. Write VL data </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 31 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">&#160;&#160;hvl_t rdata[SPACE1_DIM1]; &#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;ret=H5Dread(dataset, tid1, H5S_ALL, H5S_ALL, xfer_pid, rdata);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;for(i=0; i&amp;lt;SPACE1_DIM1; i++) {</p>
 <p class="FM__Body"> &#160;&#160;&#160;printf(&amp;ldquo;%d: len %d &amp;rdquo;,rdata[i].len);</p>
 <p class="FM__Body"> &#160;&#160;&#160;for(j=0; j&amp;lt;rdata[i].len; j++) {</p>
 <p class="FM__Body">       printf(&amp;ldquo; value: %u\n&amp;rdquo;,((unsigned int *)rdata[i].p)[j]);</p>
 <p class="FM__Body"> &#160;&#160;&#160;}</p>
 <p class="FM__Body">&#160;&#160;} </p>
 <p class="FM__Body"> &#160;ret=H5Dvlen_reclaim(tid1, sid1, xfer_pid, rdata);&lt;/pre&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 29. Read VL data </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 32 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig33.JPG&quot; width=&quot;550&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 15. Memory layout of a VL datatype</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 33 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The user program must carefully manage these relatively complex data </p>
 <p class="FM__Body">&#160;&#160;structures. </p>
 <p class="FM__Body"> &#160;The &lt;code&gt;H5Dvlen_reclaim&lt;/code&gt; function performs a standard traversal, </p>
 <p class="FM__Body">&#160;&#160;freeing all the data. This function analyzes the datatype and dataspace </p>
 <p class="FM__Body">&#160;&#160;objects, and visits each VL data element, recursing through nested </p>
 <p class="FM__Body"> &#160;types. By default, the system &lt;code&gt;free&lt;/code&gt; is called for the </p>
 <p class="FM__Body"> &#160;pointer in each &lt;code&gt;vl_t&lt;/code&gt;. Obviously, this call assumes that </p>
 <p class="FM__Body"> &#160;all of this memory was allocated with the system &lt;code&gt;malloc&lt;/code&gt;.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The user program may specify custom memory manager routines, one for </p>
 <p class="FM__Body">&#160;&#160;allocating and one for freeing. These may be set with the </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Pvlen_mem_manager&lt;/code&gt;, and must have the following prototypes: &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;&lt;code&gt;typedef void *(*H5MM_allocate_t)(size_t size, void *info);&lt;/code&gt; &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;&lt;code&gt;typedef void (*H5MM_free_t)(void *mem, void *free_info);&lt;/code&gt; &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;/ul&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The utility function &lt;code&gt;H5Dget_vlen_buf_size&lt;/code&gt; checks the </p>
 <p class="FM__Body">&#160;&#160;number of bytes required to store the VL data from the dataset. This </p>
 <p class="FM__Body">&#160;&#160;function analyzes the datatype and dataspace object to visit all the </p>
 <p class="FM__Body">&#160;&#160;VL data elements, to determine the number of bytes required to store </p>
 <p class="FM__Body">&#160;&#160;the data for the in the destination storage (memory). The </p>
 <p class="FM__Body"> &#160;&lt;code&gt;size&lt;/code&gt; value is adjusted for data conversion and alignment </p>
 <p class="FM__Body"> &#160;in the destination.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;a name=&quot;NonNumDtypes&quot;&gt;</p>
 <p class="FM__Body">&lt;div align=right&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=&quot;-1&quot;&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;NonNumDtypes&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=pagebefore&gt;6.5. Other Non-numeric Datatypes&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Several datatype classes define special types of objects.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;h4&gt;6.5.1. Strings&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Text data is represented by arrays of characters called strings. </p>
 <p class="FM__Body">&#160;&#160;Because C and Fortran terminate strings differently, the library can </p>
 <p class="FM__Body">&#160;&#160;read and write strings in several ways. The important questions that </p>
 <p class="FM__Body">&#160;&#160;an application needs to answer to read strings correctly are the </p>
 <p class="FM__Body"> &#160;following: &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;What is the size of the string?&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;li&gt;How is the string terminated?&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;/ul&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;See the entry for &lt;code&gt;H5Tset_strpad&lt;/code&gt; in the </p>
 <p class="FM__Body"> &#160;&lt;i&gt;HDF5 Reference Manual&lt;/i&gt; for more information on how to specify a </p>
 <p class="FM__Body"> &#160;particular style of string padding and terminating. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In the rest of this section, we will look at some of the common </p>
 <p class="FM__Body"> &#160;ways strings might be stored.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figures below show different ways that the strings &amp;ldquo;Four </p>
 <p class="FM__Body">&#160;&#160;score&amp;rdquo; and &amp;ldquo;seven years ago&amp;rdquo; might be stored </p>
 <p class="FM__Body">&#160;&#160;in a C environment. By C environment, we mean that the disk and memory </p>
 <p class="FM__Body">  versions of the dataset terminate the strings with a NULL, \0. This </p>
 <p class="FM__Body">&#160;&#160;also means that the length of a string </p>
 <p class="FM__Body">&#160;&#160;is one less than the size of the string: the size counts the NULL. </p>
 <p class="FM__Body">&#160;&#160;Note that the single quotation marks have been added for </p>
 <p class="FM__Body">&#160;&#160;clarity in the examples in this section and would not be stored in an </p>
 <p class="FM__Body"> &#160;actual dataset. See &lt;a href=&quot;#stringsInMixedEnvironments&quot;&gt;</p>
 <p class="FM__Body"> &#160;&amp;ldquo;Strings in Mixed Environments&amp;rdquo;&lt;/a&gt; at </p>
 <p class="FM__Body"> &#160;the end of this section for more information. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure below shows a string stored in a dataset in a </p>
 <p class="FM__Body"> &#160;one-dimensional array using 27 elements. The &#160;&lt;code&gt;H5T_NATIVE_CHAR&lt;/code&gt; </p>
 <p class="FM__Body">&#160;&#160;datatype is used. Each character of the string is stored in an element </p>
 <p class="FM__Body">&#160;&#160;of the dataset. The result is a block of text data that </p>
 <p class="FM__Body"> &#160;gives little indication of any structure in the text.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;table align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td colspan=&quot;2&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table align=&quot;center&quot; border=&quot;1&quot; width=&quot;95%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;2&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;3&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;4&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;5&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;6&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;7&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;F&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;o&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;u&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;r&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;&amp;nbsp;&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;s&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;c&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;o&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;table align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td colspan=&quot;2&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table align=&quot;center&quot; border=&quot;1&quot; width=&quot;95%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;8&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;9&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;10&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;11&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;12&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;13&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;14&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;15&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;r&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;e&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;\0&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;s&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;e&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;v&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;e&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;n&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;table align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td colspan=&quot;2&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table align=&quot;center&quot; border=&quot;1&quot; width=&quot;95%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;16&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;17&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;18&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;19&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;20&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;21&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;22&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;23&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;&amp;nbsp;&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;y&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;e&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;a&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;r&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;s&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;&amp;nbsp;&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;a&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;table align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td colspan=&quot;2&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table align=&quot;center&quot; border=&quot;1&quot; width=&quot;95%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;24&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;25&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;26&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;27&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;28&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;29&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;30&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;12.5%&quot; align=&quot;center&quot;&gt;31&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;g&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;o&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;\0&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 16. A string stored as one-character elements in a </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;one-dimensional array</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly part of Figure 34 --&gt;&lt;/b&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;  </p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure below shows how these strings might be stored using </p>
 <p class="FM__Body"> &#160;a &lt;b&gt;fixed-length&lt;/b&gt; datatype. This one-dimensional array uses the </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5T_STRING&lt;/code&gt; datatype. The dataset reserves space for a </p>
 <p class="FM__Body">&#160;&#160;specified number of characters in each string although some strings may </p>
 <p class="FM__Body">&#160;&#160;be shorter. In the figure below, the size is set to 20. This approach </p>
 <p class="FM__Body">&#160;&#160;is simple and usually fast to access, but this approach can waste storage </p>
 <p class="FM__Body">&#160;&#160;space if the lengths of the strings vary. The single quotation marks are </p>
 <p class="FM__Body"> &#160;used to show the 20 characters included in each dataset element.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;table align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td colspan=&quot;2&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table align=&quot;center&quot; border=&quot;1&quot; width=&quot;70%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;50%&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;50%&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;Four&amp;nbsp;score\0</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;seven&amp;nbsp;years&amp;nbsp;ago\0</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 17. Strings stored as fixed-length dataset elements</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly part of Figure 34 --&gt;&lt;/b&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;  </p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure below illustrates how these strings might be stored using </p>
 <p class="FM__Body"> &#160;a &lt;b&gt;variable-length datatype&lt;/b&gt;. This can be done using the mechanisms </p>
 <p class="FM__Body"> &#160;described in the &lt;a href=&quot;#VariableLengthDatatypes&quot;&gt;</p>
 <p class="FM__Body"> &#160;&amp;ldquo;Variable-length Datatypes&amp;rdquo;&lt;/a&gt; section above.</p>
 <p class="FM__Body"> &#160;The program would use &lt;code&gt;vl_t&lt;/code&gt; structures to write and </p>
 <p class="FM__Body">&#160;&#160;read the data. The dataset is a one-dimensional array with two </p>
 <p class="FM__Body">&#160;&#160;elements, and each element is a variable-length string. </p>
 <p class="FM__Body"> &#160;This is the same result as the strings stored in fixed-length elements</p>
 <p class="FM__Body">&#160;&#160;in the figure above except that the first element of the array will </p>
 <p class="FM__Body"> &#160;need only 11 bytes for storage instead of 20, and the second element</p>
 <p class="FM__Body">&#160;&#160;will need only 16 bytes instead of 20. Note that the single </p>
 <p class="FM__Body"> &#160;quotation marks are used to show the characters in each dataset element.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;table align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td colspan=&quot;2&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table align=&quot;center&quot; border=&quot;1&quot; width=&quot;70%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;50%&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;50%&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;Four&amp;nbsp;score\0&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;seven&amp;nbsp;years&amp;nbsp;ago\0&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 18. Strings stored as variable-length dataset elements</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly part of Figure 34 --&gt;&lt;/b&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;  </p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;An alternate way to set up variable-length dataset elements is to set</p>
 <p class="FM__Body"> &#160;the size of the string datatype class to &lt;code&gt;H5T_VARIABLE&lt;/code&gt;. </p>
 <p class="FM__Body"> &#160;The example below &lt;!-- formerly Figure 35 --&gt;</p>
 <p class="FM__Body"> &#160;shows a declaration of a datatype of type &lt;code&gt;H5T_C_S1&lt;/code&gt; </p>
 <p class="FM__Body"> &#160;which is set to &lt;code&gt;H5T_VARIABLE&lt;/code&gt;.  The HDF5 Library automatically </p>
 <p class="FM__Body"> &#160;translates between this and the &lt;code&gt;vl_t&lt;/code&gt; structure. Note that the </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5T_VARIABLE&lt;/code&gt; size can only be used with string datatypes.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">&#160;&#160;tid1 = H5Tcopy (H5T_C_S1); </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;ret = H5Tset_size (tid1, H5T_VARIABLE);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 30. Set the string datatype size to &lt;code&gt;H5T_VARIABLE&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 35 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Variable-length strings can be read into C strings </p>
 <p class="FM__Body">&#160;&#160;(in other words, pointers to zero </p>
 <p class="FM__Body"> &#160;terminated arrays of &lt;code&gt;char&lt;/code&gt;). See the example below. &#160;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;650&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">&#160;&#160;char *rdata[SPACE1_DIM1]; &#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;ret=H5Dread(dataset, tid1, H5S_ALL, H5S_ALL, xfer_pid, rdata);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;for(i=0; i&amp;lt;SPACE1_DIM1; i++) { &#160;&#160;</p>
 <p class="FM__Body">           printf(&amp;ldquo;%d: len: %d, str is: %s\n&amp;rdquo;, i, strlen(rdata[i]),rdata[i]);</p>
 <p class="FM__Body">&#160;&#160;} </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;ret=H5Dvlen_reclaim(tid1, sid1, xfer_pid, rdata);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 31. Read variable-length strings into C strings</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 36 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- </p>
 <p class="FM__Body">3.23.2012. I commented out the &quot;Strings in Mixed Environments&quot; section below. </p>
 <p class="FM__Body">I have spent too many GMQS hours and have to stop charging GMQS for awhile. MEE.</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;stringsInMixedEnvironments&quot;&gt;</p>
 <p class="FM__Body">&lt;b&gt;Strings in Mixed Environments&lt;/b&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In the figures above, the strings are terminated with NULLs. </p>
 <p class="FM__Body">&#160;&#160;Suppose in another scenario that the strings were stored on disk and </p>
 <p class="FM__Body">&#160;&#160;were not terminated with NULLs, and suppose that the users of the data </p>
 <p class="FM__Body">&#160;&#160;would be using applications that expected strings to be terminated with </p>
 <p class="FM__Body">&#160;&#160;NULLs? What APIs might an application use to properly handle the strings? </p>
 <p class="FM__Body"> &#160;&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure below shows the strings &amp;ldquo;Four score&amp;rdquo; and </p>
 <p class="FM__Body">&#160;&#160;&amp;ldquo;seven years ago&amp;rdquo; stored as fixed-length dataset elements </p>
 <p class="FM__Body"> &#160;without NULL terminators.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;table align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td colspan=&quot;2&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table align=&quot;center&quot; border=&quot;1&quot; width=&quot;70%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;50%&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;50%&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;Four&amp;nbsp;score</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;seven&amp;nbsp;years&amp;nbsp;ago</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 17???. Strings stored as fixed-length dataset elements</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;and not terminated with NULLs</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/b&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;  </p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;??????? rewrite for this new example</p>
 <p class="FM__Body">&#160;&#160;The figure below shows how these strings might be stored using </p>
 <p class="FM__Body"> &#160;a &lt;b&gt;fixed-length&lt;/b&gt; datatype. This one-dimensional array uses the </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5T_STRING&lt;/code&gt; datatype. The dataset reserves space for a </p>
 <p class="FM__Body">&#160;&#160;specified number of characters in each string although some strings may </p>
 <p class="FM__Body">&#160;&#160;be shorter. In the example below, the size is set to 20. This approach </p>
 <p class="FM__Body">&#160;&#160;is simple and usually fast to access, but this approach can waste storage </p>
 <p class="FM__Body">&#160;&#160;space if the lengths of the strings vary. The single quotation marks are </p>
 <p class="FM__Body"> &#160;used to show the 20 characters included in each dataset element.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;table align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td colspan=&quot;2&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table align=&quot;center&quot; border=&quot;1&quot; width=&quot;70%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;50%&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;50%&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;Four&amp;nbsp;score\0</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&amp;lsquo;seven&amp;nbsp;years&amp;nbsp;ago\0</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;rsquo;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 17???. Strings stored as fixed-length dataset elements</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/b&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;  </p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Please note that a data element of size 1 might be useful in an </p>
 <p class="FM__Body">&#160;&#160;environment where a NULL is not needed to terminate a string. If a NULL </p>
 <p class="FM__Body">&#160;&#160;is needed to terminate a string, then a data element of size 1 </p>
 <p class="FM__Body"> &#160;would not be useful.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;br /&gt;&lt;br /&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;6.5.2. Reference&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In HDF5, objects (i.e. groups, datasets, and committed datatypes) </p>
 <p class="FM__Body">&#160;&#160;are usually accessed by name. There is another way to access stored </p>
 <p class="FM__Body">&#160;&#160;objects - by reference. There are two reference datatypes: object </p>
 <p class="FM__Body">&#160;&#160;reference and region reference. Object reference objects are created </p>
 <p class="FM__Body"> &#160;with &lt;code&gt;H5Rcreate&lt;/code&gt; and other calls (cross reference). These </p>
 <p class="FM__Body">&#160;&#160;objects can be stored and retrieved in a dataset as elements with </p>
 <p class="FM__Body"> &#160;reference datatype. The first example below &lt;!-- formerly Figure 37 --&gt;</p>
 <p class="FM__Body">&#160;&#160;shows an example of code that creates references to four objects, </p>
 <p class="FM__Body">&#160;&#160;and then writes the array of object references to a dataset. The </p>
 <p class="FM__Body"> &#160;second example below &lt;!-- formerly Figure 38 --&gt;shows a dataset of datatype </p>
 <p class="FM__Body">&#160;&#160;reference being read and one of the reference objects being </p>
 <p class="FM__Body"> &#160;dereferenced to obtain an object pointer.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In order to store references to regions of a dataset, the datatype </p>
 <p class="FM__Body"> &#160;should be &lt;code&gt;H5T_REGION_OBJ&lt;/code&gt;. Note that a data element must </p>
 <p class="FM__Body">&#160;&#160;be either an object reference or a region reference: these are different </p>
 <p class="FM__Body"> &#160;types and cannot be mixed within a single array.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A reference datatype cannot be divided for I/O: an element is read or </p>
 <p class="FM__Body"> &#160;written completely.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;dataset=H5Dcreate(fid1, &amp;ldquo;Dataset3&amp;rdquo;, H5T_STD_REF_OBJ, sid1,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;/* Create reference to dataset */</p>
 <p class="FM__Body"> &#160;&#160;&#160;ret = H5Rcreate(&amp;amp;wbuf[0], fid1,&amp;ldquo;/Group1/Dataset1&amp;rdquo;, H5R_OBJECT, -1);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;/* Create reference to dataset */</p>
 <p class="FM__Body"> &#160;&#160;&#160;ret = H5Rcreate(&amp;amp;wbuf[1], fid1, &amp;ldquo;/Group1/Dataset2&amp;rdquo;, H5R_OBJECT, -1);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;/* Create reference to group */</p>
 <p class="FM__Body"> &#160;&#160;&#160;ret = H5Rcreate(&amp;amp;wbuf[2], fid1, &amp;ldquo;/Group1&amp;rdquo;, H5R_OBJECT, -1);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;/* Create reference to committed datatype */</p>
 <p class="FM__Body"> &#160;&#160;&#160;ret = H5Rcreate(&amp;amp;wbuf[3], fid1, &amp;ldquo;/Group1/Datatype1&amp;rdquo;, H5R_OBJECT, -1);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;/* Write selection to disk */</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;ret=H5Dwrite(dataset, H5T_STD_REF_OBJ, H5S_ALL, H5S_ALL, H5P_DEFAULT, wbuf);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 32. Create object references and write to a dataset</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 37 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;rbuf = malloc(sizeof(hobj_ref_t)*SPACE1_DIM1);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/* Read selection from disk */</p>
 <p class="FM__Body"> &#160;ret=H5Dread(dataset, H5T_STD_REF_OBJ, H5S_ALL, H5S_ALL, H5P_DEFAULT, rbuf);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/* Open dataset object */</p>
 <p class="FM__Body"> &#160;dset2 = H5Rdereference(dataset, H5R_OBJECT, &amp;amp;rbuf[0]);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 33. Read a dataset with a reference datatype</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 38 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;h4&gt;6.5.3. ENUM&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The enum datatype implements a set of (name, value) pairs, similar </p>
 <p class="FM__Body">&#160;&#160;to C/C++ enum. &#160;The values are currently limited to native integer datatypes. &#160;</p>
 <p class="FM__Body">&#160;&#160;Each name can be the name of only one value, and each value can have only </p>
 <p class="FM__Body"> &#160;one name. &#160;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The data elements of the ENUMERATION are stored according to the datatype, </p>
 <p class="FM__Body"> &#160;e.g., as an array of integers. The example below &lt;!-- formerly Figure 39 --&gt;</p>
 <p class="FM__Body">&#160;&#160;shows an example of how to create </p>
 <p class="FM__Body">&#160;&#160;an enumeration with five elements. The elements map symbolic names to </p>
 <p class="FM__Body"> &#160;2-byte integers. See the table below.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">hid_t hdf_en_colors = H5Tcreate(H5T_ENUM, sizeof(short));</p>
 <p class="FM__Body">short val;</p>
 <p class="FM__Body"> &#160;&#160;&#160;H5Tenum_insert(hdf_en_colors, &amp;ldquo;RED&amp;rdquo;, &#160;&#160;(val=0,&amp;amp;val));</p>
 <p class="FM__Body"> &#160;&#160;&#160;H5Tenum_insert(hdf_en_colors, &amp;ldquo;GREEN&amp;rdquo;, (val=1,&amp;amp;val));</p>
 <p class="FM__Body"> &#160;&#160;&#160;H5Tenum_insert(hdf_en_colors, &amp;ldquo;BLUE&amp;rdquo;, &#160;(val=2,&amp;amp;val));</p>
 <p class="FM__Body"> &#160;&#160;&#160;H5Tenum_insert(hdf_en_colors, &amp;ldquo;WHITE&amp;rdquo;, (val=3,&amp;amp;val));</p>
 <p class="FM__Body"> &#160;&#160;&#160;H5Tenum_insert(hdf_en_colors, &amp;ldquo;BLACK&amp;rdquo;, (val=4,&amp;amp;val));</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;H5Dcreate(fileid, datasetname, hdf_en_colors, spaceid, H5P_DEFAULT, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, H5P_DEFAULT);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 34. Create an enumeration with five elements</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 39 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;200&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 22. An enumeration&lt;br /&gt;with five elements&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Table 23 --&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Name&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Value&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;RED&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;0&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;GREEN&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;1&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;BLUE&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;2&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;WHITE&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;3&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;BLACK&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;4&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure below &lt;!-- formerly Figure 40 --&gt;shows how an array of eight </p>
 <p class="FM__Body">&#160;&#160;values might be stored. Conceptually, </p>
 <p class="FM__Body">&#160;&#160;the array is an array of symbolic names [BLACK, RED, WHITE, BLUE, ...]. See </p>
 <p class="FM__Body"> &#160;item a in the figure below. &lt;!-- formerly Figure 40a --&gt; </p>
 <p class="FM__Body">&#160;&#160;These are stored as the values and are short integers. So, the first 2 bytes </p>
 <p class="FM__Body">&#160;&#160;are the value associated with &amp;ldquo;BLACK&amp;rdquo;, which is the number 4, </p>
 <p class="FM__Body"> &#160;and so on. See item b in the figure below. &lt;!-- formerly Figure 40b --&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;table align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;a) Logical data to be written - </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;eight elements&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td width=&quot;50&quot; align=&quot;center&quot;&gt;Index&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;135&quot; align=&quot;center&quot;&gt;Name&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;table border=&quot;1&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td width=&quot;30&quot; align=&quot;center&quot;&gt;0&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;130&quot; align=&quot;left&quot;&gt;:BLACK&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td width=&quot;30&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;130&quot; align=&quot;left&quot;&gt;RED&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td width=&quot;30&quot; align=&quot;center&quot;&gt;2&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;130&quot; align=&quot;left&quot;&gt;WHITE&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td width=&quot;30&quot; align=&quot;center&quot;&gt;3&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;130&quot; align=&quot;left&quot;&gt;BLUE&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td width=&quot;30&quot; align=&quot;center&quot;&gt;4&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;130&quot; align=&quot;left&quot;&gt;RED&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td width=&quot;30&quot; align=&quot;center&quot;&gt;5&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;130&quot; align=&quot;left&quot;&gt;WHITE&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td width=&quot;30&quot; align=&quot;center&quot;&gt;6&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;130&quot; align=&quot;left&quot;&gt;BLUE&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td width=&quot;30&quot; align=&quot;center&quot;&gt;7&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;130&quot; align=&quot;left&quot;&gt;GREEN&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;Images/Dtypes_fig40.JPG&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot;&gt;b) The storage layout. Total size of the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;array is 16 bytes, 2 bytes per element.</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 19. Storing an enum array</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 40 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The order that members are inserted into an enumeration type is </p>
 <p class="FM__Body">&#160;&#160;unimportant; the important part is the associations between the symbol </p>
 <p class="FM__Body">&#160;&#160;names and the values. Thus, two enumeration datatypes will be considered </p>
 <p class="FM__Body">&#160;&#160;equal if and only if both types have the same symbol/value associations </p>
 <p class="FM__Body">&#160;&#160;and both have equal underlying integer datatypes. Type equality is </p>
 <p class="FM__Body"> &#160;tested with the &lt;code&gt;H5Tequal&lt;/code&gt; function.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;If a particular architecture type is required, a little-endian or </p>
 <p class="FM__Body">&#160;&#160;big-endian datatype for example, use a native integer datatype as the </p>
 <p class="FM__Body"> &#160;ENUM base datatype and use &lt;code&gt;H5Tconvert&lt;/code&gt; on values as they </p>
 <p class="FM__Body"> &#160;are read from or written to a dataset. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;h4&gt;6.5.4. Opaque&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In some cases, a user may have data objects that should be stored and </p>
 <p class="FM__Body">&#160;&#160;retrieved as blobs with no attempt to interpret them. &#160;For example, </p>
 <p class="FM__Body">&#160;&#160;an application might wish to store an array of encrypted certificates </p>
 <p class="FM__Body"> &#160;which are 100 bytes long.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;While an arbitrary block of data may always be stored as bytes, </p>
 <p class="FM__Body">&#160;&#160;characters, integers, or whatever, this might mislead programs about </p>
 <p class="FM__Body">&#160;&#160;the meaning of the data. The opaque datatype defines data elements which </p>
 <p class="FM__Body">&#160;&#160;are uninterpreted by HDF5. The opaque data may be labeled with </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Tset_tag&lt;/code&gt; with a string that might be used by an </p>
 <p class="FM__Body">&#160;&#160;application. For example, the encrypted certificates might have </p>
 <p class="FM__Body"> &#160;a tag to indicate the encryption and the certificate standard.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;6.5.5. Bitfield&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Some data is represented as bits, where the number of bits is not an </p>
 <p class="FM__Body">&#160;&#160;integral byte and the bits are not necessarily interpreted as a standard </p>
 <p class="FM__Body">&#160;&#160;type. Some examples might include readings from machine registers (e.g., </p>
 <p class="FM__Body">&#160;&#160;switch positions), a cloud mask, or data structures with several small </p>
 <p class="FM__Body"> &#160;integers that should be store in a single byte.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;This data could be stored as integers, strings, or enumerations.  </p>
 <p class="FM__Body">&#160;&#160;However, these storage methods would likely result in considerable wasted </p>
 <p class="FM__Body">&#160;&#160;space. For example, storing a cloud mask with one byte per value would </p>
 <p class="FM__Body"> &#160;use up to eight times the space of a packed array of bits. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 bitfield datatype class defines a data element that is a </p>
 <p class="FM__Body">&#160;&#160;contiguous sequence of bits, which are stored on disk in a packed array. </p>
 <p class="FM__Body">&#160;&#160;The programming model is the same as for unsigned integers: &#160;the datatype </p>
 <p class="FM__Body">&#160;&#160;object is created by copying a predefined datatype, and then the </p>
 <p class="FM__Body"> &#160;precision, offset, and padding are set.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;While the use of the bitfield datatype will reduce storage space </p>
 <p class="FM__Body">&#160;&#160;substantially, there will still be wasted space if the bitfield as a </p>
 <p class="FM__Body">&#160;&#160;whole does not match the 1-, 2-, 4-, or 8-byte unit in which it is </p>
 <p class="FM__Body">&#160;&#160;written. &#160;The remaining unused space can be removed by applying the </p>
 <p class="FM__Body"> &#160;&lt;a href=&quot;10_Datasets.html#N-Bit&quot;&gt;N-bit filter&lt;/a&gt; to the dataset </p>
 <p class="FM__Body"> &#160;containing the bitfield data. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">&lt;h4&gt;5.6. Time&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 time datatype defines storage layout for various date and </p>
 <p class="FM__Body">&#160;&#160;time standards. Currently, only Unix &quot;time&quot; and &quot;timeval&quot; structs are </p>
 <p class="FM__Body">&#160;&#160;supported. The H5T_UNIX_D32BE (LE) defines storage for 4 bytes </p>
 <p class="FM__Body">&#160;&#160;(sufficient for the time struct), H5T_UNIX_D64BE (LE) is sufficient </p>
 <p class="FM__Body"> &#160;for timeval. &#160;The data is treated as a single opaque value.&lt;/p&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;a name=&quot;Fvalues&quot;&gt;</p>
 <p class="FM__Body">&lt;div align=right&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=&quot;-1&quot;&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;Fvalues&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=pagebefore&gt;6.6. Fill Values&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The &amp;ldquo;fill value&amp;rdquo; for a dataset is the specification of </p>
 <p class="FM__Body">&#160;&#160;the default value assigned to data elements that have not yet been </p>
 <p class="FM__Body">&#160;&#160;written. In the case of a dataset with an atomic datatype, the fill </p>
 <p class="FM__Body">&#160;&#160;value is a single value of the appropriate datatype, such as </p>
 <p class="FM__Body">&#160;&#160;&amp;lsquo;0&amp;rsquo; or &amp;lsquo;-1.0&amp;rsquo;. In the case of a dataset with </p>
 <p class="FM__Body">&#160;&#160;a composite datatype, the fill value is a single data element of the </p>
 <p class="FM__Body">&#160;&#160;appropriate type. For example, for an array or compound datatype, </p>
 <p class="FM__Body">&#160;&#160;the fill value is a single data element with values for all the </p>
 <p class="FM__Body"> &#160;component elements of the array or compound datatype.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The fill value is set (permanently) when the dataset is created. </p>
 <p class="FM__Body">&#160;&#160;The fill value is set in the dataset creation properties </p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [</p>
 <p class="FM__Body">&#160;&#160;(see chapter ??) </p>
 <p class="FM__Body"> &#160;] ] ]&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body"> &#160;in the &lt;code&gt;H5Dcreate&lt;/code&gt; call. Note that the &lt;code&gt;H5Dcreate&lt;/code&gt; </p>
 <p class="FM__Body">&#160;&#160;call must also include the datatype of the dataset, and the value provided </p>
 <p class="FM__Body">&#160;&#160;for the fill value will be interpreted as a single element of this datatype. </p>
 <p class="FM__Body"> &#160;The example below &lt;!-- formerly Figure 41 --&gt;shows code which creates a </p>
 <p class="FM__Body">&#160;&#160;dataset of integers with fill </p>
 <p class="FM__Body"> &#160;value -1. Any unwritten data elements will be set to -1.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">&#160;&#160;hid_t &#160;&#160;&#160;&#160;&#160;&#160;plist_id; &#160;</p>
 <p class="FM__Body"> &#160;int filler;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;filler = -1;</p>
 <p class="FM__Body"> &#160;plist_id = H5Pcreate(H5P_DATASET_CREATE);</p>
 <p class="FM__Body"> &#160;H5Pset_fill_value(plist_id, H5T_NATIVE_INT, &amp;amp;filler);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/* Create the dataset with fill value &amp;lsquo;-1&amp;rsquo;. */</p>
 <p class="FM__Body">&#160;&#160;dataset_id = H5Dcreate(file_id, &amp;ldquo;/dset&amp;rdquo;, H5T_STD_I32BE, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;dataspace_id, H5P_DEFAULT, plist_id, H5P_DEFAULT);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 35. Create a dataset with a fill value of -1</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 41 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;typedef struct s1_t {</p>
 <p class="FM__Body"> &#160;int &#160;&#160;&#160;a;</p>
 <p class="FM__Body"> &#160;char &#160;b;</p>
 <p class="FM__Body">&#160;&#160;double c; </p>
 <p class="FM__Body"> &#160;} s1_t;</p>
 <p class="FM__Body"> &#160;s1_t &#160;&#160;&#160;&#160;&#160;&#160;filler;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;s1_tid = H5Tcreate (H5T_COMPOUND, sizeof(s1_t));</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;a_name&amp;rdquo;, HOFFSET(s1_t, a), H5T_NATIVE_INT);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;b_name&amp;rdquo;, HOFFSET(s1_t, b), H5T_NATIVE_CHAR);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;c_name&amp;rdquo;, HOFFSET(s1_t, c), H5T_NATIVE_DOUBLE);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;filler.a = -1;</p>
 <p class="FM__Body"> &#160;filler.b = &amp;lsquo;*&amp;rsquo;;</p>
 <p class="FM__Body"> &#160;filler.c = -2.0;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;plist_id = H5Pcreate(H5P_DATASET_CREATE);</p>
 <p class="FM__Body"> &#160;H5Pset_fill_value(plist_id, s1_tid, &amp;amp;filler);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/* Create the dataset with fill value (-1, &amp;lsquo;*&amp;rsquo;, -2.0). */</p>
 <p class="FM__Body">&#160;&#160;dataset = H5Dcreate(file, datasetname, s1_tid, space, H5P_DEFAULT, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;plist_id, H5P_DEFAULT);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 36. Create a fill value for a compound datatype</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 42 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure above &lt;!-- formerly Figure 42 --&gt;shows how to create a fill </p>
 <p class="FM__Body">&#160;&#160;value for a compound datatype. The procedure is the same as the previous </p>
 <p class="FM__Body">&#160;&#160;example except the filler must be a structure with the correct fields. </p>
 <p class="FM__Body"> &#160;Each field is initialized to the desired fill value.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The fill value for a dataset can be retrieved by reading the dataset </p>
 <p class="FM__Body">&#160;&#160;creation properties of the dataset and then by reading the fill value with </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Pget_fill_value&lt;/code&gt;. The data will be read into memory using </p>
 <p class="FM__Body">&#160;&#160;the storage layout specified by the datatype. This transfer will convert </p>
 <p class="FM__Body"> &#160;data in the same way as &lt;code&gt;H5Dread&lt;/code&gt;. </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;The figure below &lt;!-- formerly Figure 43 --&gt; shows how to get the fill </p>
 <p class="FM__Body"> &#160;value from the dataset created in Example 33 above.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;hid_t plist2;</p>
 <p class="FM__Body"> &#160;int filler;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;dataset_id = H5Dopen(file_id, &amp;ldquo;/dset&amp;rdquo;, H5P_DEFAULT);</p>
 <p class="FM__Body"> &#160;plist2 = H5Dget_create_plist(dataset_id);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;H5Pget_fill_value(plist2, H5T_NATIVE_INT, &amp;amp;filler);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/* filler has the fill value, &amp;lsquo;-1&amp;rsquo; */&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 37. Retrieve a fill value</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 43 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A similar procedure is followed for any datatype. The example below </p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Figure 45 --&gt;shows how to </p>
 <p class="FM__Body">&#160;&#160;read the fill value for the compound datatype created in an example above </p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Figure 42 --&gt;. Note that the program must pass an </p>
 <p class="FM__Body">&#160;&#160;element large enough to hold a fill value of the datatype indicated by the </p>
 <p class="FM__Body"> &#160;argument to &lt;code&gt;H5Pget_fill_value&lt;/code&gt;.  Also, the program must </p>
 <p class="FM__Body">&#160;&#160;understand the datatype in order to interpret its components. This may </p>
 <p class="FM__Body">&#160;&#160;be difficult to determine without knowledge of the application that </p>
 <p class="FM__Body"> &#160;created the dataset.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;char * &#160;&#160;&#160;&#160;&#160;&#160;fillbuf;</p>
 <p class="FM__Body"> &#160;int sz;</p>
 <p class="FM__Body"> &#160;dataset = H5Dopen( file, DATASETNAME, H5P_DEFAULT);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;s1_tid = H5Dget_type(dataset);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;sz = H5Tget_size(s1_tid);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;fillbuf = (char *)malloc(sz);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;plist_id = H5Dget_create_plist(dataset);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;H5Pget_fill_value(plist_id, s1_tid, fillbuf);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">  printf(&amp;ldquo;filler.a: %d\n&amp;rdquo;,((s1_t *) fillbuf)-&amp;gt;a);</p>
 <p class="FM__Body">  printf(&amp;ldquo;filler.b: %c\n&amp;rdquo;,((s1_t *) fillbuf)-&amp;gt;b);</p>
 <p class="FM__Body"> &#160;printf(&amp;ldquo;filler.c: %f\n&amp;rdquo;,((s1_t *) fillbuf)-&amp;gt;c);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 38. Read the fill value for a compound datatype</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 44 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;a name=&quot;CCDtypes&quot;&gt;</p>
 <p class="FM__Body">&lt;div align=right&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=&quot;-1&quot;&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;CCDtypes&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=pagebefore&gt;6.7. Complex Combinations of Datatypes&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Several composite datatype classes define collections of other datatypes, </p>
 <p class="FM__Body">&#160;&#160;including other composite datatypes. &#160;In general, a datatype can be nested </p>
 <p class="FM__Body"> &#160;to any depth, with any combination of datatypes.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;For example, a compound datatype can have members that are other compound </p>
 <p class="FM__Body">&#160;&#160;datatypes, arrays, VL datatypes. &#160;An array can be an array of array, </p>
 <p class="FM__Body">&#160;&#160;an array of compound, or an array of VL. &#160;And a VL datatype can be a </p>
 <p class="FM__Body"> &#160;variable-length array of compound, array, or VL datatypes.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;These complicated combinations of datatypes form a logical tree, </p>
 <p class="FM__Body">&#160;&#160;with a single root datatype, and leaves which must be atomic datatypes </p>
 <p class="FM__Body"> &#160;(predefined or user-defined). The figure below &lt;!-- formerly Figure 45 --&gt; </p>
 <p class="FM__Body">&#160;&#160;shows an example of a logical </p>
 <p class="FM__Body"> &#160;tree describing a compound datatype constructed from different datatypes.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Recall that the datatype is a description of the layout of storage. </p>
 <p class="FM__Body">&#160;&#160;The complicated compound datatype is constructed from component datatypes, </p>
 <p class="FM__Body">&#160;&#160;each of which describe the layout of part of the storage. Any datatype can </p>
 <p class="FM__Body">&#160;&#160;be used as a component of a compound datatype, with the following </p>
 <p class="FM__Body"> &#160;restrictions:&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;ol&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;No byte can be part of more than one component datatype (i.e., the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fields cannot overlap within the compound datatype)&lt;/li&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;The total size of the components must be less than or equal to the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;total size of the compound datatype&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;/ol&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;These restrictions are essentially the rules for C structures and similar </p>
 <p class="FM__Body">&#160;&#160;record types familiar from programming languages. &#160;Multiple typing, such </p>
 <p class="FM__Body"> &#160;as a C union, is not allowed in HDF5 datatypes.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;500&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig45.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 20. A compound datatype built with </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;different datatypes&lt;!-- formerly Figure 45 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;h4&gt;6.7.1. Creating a Complicated Compound Datatype&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To construct a complicated compound datatype, each component is </p>
 <p class="FM__Body">&#160;&#160;constructed, and then added to the enclosing datatype description. </p>
 <p class="FM__Body"> &#160;The example below &lt;!-- formerly Figure 46 --&gt; shows  </p>
 <p class="FM__Body"> &#160;how to create a compound datatype with four members:&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;&amp;ldquo;T1&amp;rdquo;, a compound datatype with three members&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;&amp;ldquo;T2&amp;rdquo;, a compound datatype with two members&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;&amp;ldquo;T3&amp;rdquo;, a one-dimensional array of integers&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;&amp;ldquo;T4&amp;rdquo;, a string&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;/ul&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Below the example code is a figure that shows this datatype as a logical </p>
 <p class="FM__Body"> &#160;tree. &lt;!-- formerly Figure 47 --&gt; The output of the </p>
 <p class="FM__Body"> &#160;&lt;em&gt;h5dump&lt;/em&gt; utility is shown in the example below the figure. </p>
 <p class="FM__Body"> &#160;&lt;!-- the example was formerly called Figure 48.--&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Each datatype is created as a separate datatype object. Figure 20 below </p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Figure 49 --&gt; shows </p>
 <p class="FM__Body">&#160;&#160;the storage layout for the four individual datatypes. Then the datatypes are </p>
 <p class="FM__Body">&#160;&#160;inserted into the outer datatype at an appropriate offset. Figure 21 below </p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Figure 50 --&gt;shows </p>
 <p class="FM__Body"> &#160;the resulting storage layout. The combined record is 89 bytes long.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The Dataset is created using the combined compound datatype. The dataset </p>
 <p class="FM__Body">&#160;&#160;is declared to be a 4 by 3 array of compound data. &#160;Each data element is an </p>
 <p class="FM__Body">&#160;&#160;instance of the 89-byte compound datatype. Figure 22 below </p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Figure 51 --&gt;shows the layout of </p>
 <p class="FM__Body">&#160;&#160;the dataset, and expands one of the elements to show the relative position </p>
 <p class="FM__Body"> &#160;of the component data elements.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Each data element is a compound datatype, which can be written or read </p>
 <p class="FM__Body">&#160;&#160;as a record, or each field may be read or written individually. The first </p>
 <p class="FM__Body">&#160;&#160;field (&amp;ldquo;T1&amp;rdquo;) is itself a compound datatype with three fields </p>
 <p class="FM__Body">&#160;&#160;(&amp;ldquo;T1.a&amp;rdquo;, &amp;ldquo;T1.b&amp;rdquo;, and &amp;ldquo;T1.c&amp;rdquo;). </p>
 <p class="FM__Body">&#160;&#160;&amp;ldquo;T1&amp;rdquo; can be read or written as a record, or individual </p>
 <p class="FM__Body">&#160;&#160;fields can be accessed. Similarly, the second filed is a compound datatype </p>
 <p class="FM__Body"> &#160;with two fields (&amp;ldquo;T2.f1&amp;rdquo;, &amp;ldquo;T2.f2&amp;rdquo;).&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The third field (&amp;ldquo;T3&amp;rdquo;) is an array datatype.  Thus, </p>
 <p class="FM__Body">&#160;&#160;&amp;ldquo;T3&amp;rdquo; should be accessed as an array of 40 integers. Array </p>
 <p class="FM__Body">&#160;&#160;data can only be read or written as a single element, so all 40 </p>
 <p class="FM__Body">&#160;&#160;integers must be read or written to the third field. The fourth </p>
 <p class="FM__Body"> &#160;field (&amp;ldquo;T4&amp;rdquo;) is a single string of length 25.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;typedef struct s1_t {</p>
 <p class="FM__Body"> &#160;int &#160;&#160;&#160;a;</p>
 <p class="FM__Body"> &#160;char &#160;b;</p>
 <p class="FM__Body">&#160;&#160;double c; </p>
 <p class="FM__Body"> &#160;} s1_t;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;typedef struct s2_t {</p>
 <p class="FM__Body"> &#160;float f1;</p>
 <p class="FM__Body"> &#160;float f2;</p>
 <p class="FM__Body"> &#160;} s2_t;</p>
 <p class="FM__Body"> &#160;hid_t &#160;&#160;&#160;&#160;&#160;s1_tid, s2_tid, s3_tid, s4_tid, s5_tid;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/* Create a datatype for s1 */</p>
 <p class="FM__Body"> &#160;s1_tid = H5Tcreate (H5T_COMPOUND, sizeof(s1_t));</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;a_name&amp;rdquo;, HOFFSET(s1_t, a), H5T_NATIVE_INT);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;b_name&amp;rdquo;, HOFFSET(s1_t, b), H5T_NATIVE_CHAR);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;c_name&amp;rdquo;, HOFFSET(s1_t, c), H5T_NATIVE_DOUBLE);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/* Create a datatype for s2. *.</p>
 <p class="FM__Body"> &#160;s2_tid = H5Tcreate (H5T_COMPOUND, sizeof(s2_t));</p>
 <p class="FM__Body"> &#160;H5Tinsert(s2_tid, &amp;ldquo;f1&amp;rdquo;, HOFFSET(s2_t, f1), H5T_NATIVE_FLOAT);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s2_tid, &amp;ldquo;f2&amp;rdquo;, HOFFSET(s2_t, f2), H5T_NATIVE_FLOAT);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/* Create a datatype for an Array of integers */</p>
 <p class="FM__Body"> &#160;s3_tid = H5Tarray_create(H5T_NATIVE_INT, RANK, dim);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/* Create a datatype for a String of 25 characters */</p>
 <p class="FM__Body"> &#160;s4_tid = H5Tcopy(H5T_C_S1);</p>
 <p class="FM__Body"> &#160;H5Tset_size(s4_tid, 25);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;/* </p>
 <p class="FM__Body"> &#160;&#160;* Create a compound datatype composed of one of each of these</p>
 <p class="FM__Body"> &#160;&#160;* &#160;types.</p>
 <p class="FM__Body"> &#160;&#160;* The total size is the sum of the size of each.</p>
 <p class="FM__Body">&#160;&#160;&#160;*/ </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;sz = H5Tget_size(s1_tid) + H5Tget_size(s2_tid) + H5Tget_size(s3_tid) </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;+ H5Tget_size(s4_tid);</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;s5_tid = H5Tcreate (H5T_COMPOUND, sz);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;/* insert the component types at the appropriate offsets */</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;H5Tinsert(s5_tid, &amp;ldquo;T1&amp;rdquo;, 0, s1_tid);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s5_tid, &amp;ldquo;T2&amp;rdquo;, sizeof(s1_t), s2_tid);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s5_tid, &amp;ldquo;T3&amp;rdquo;, sizeof(s1_t)+sizeof(s2_t), s3_tid);</p>
 <p class="FM__Body">&#160;&#160;H5Tinsert(s5_tid, &amp;ldquo;T4&amp;rdquo;, (sizeof(s1_t) +sizeof(s2_t)+ </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5Tget_size(s3_tid)), s4_tid);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;/* </p>
 <p class="FM__Body"> &#160;&#160;* Create the dataset with this datatype.</p>
 <p class="FM__Body"> &#160;&#160;*/</p>
 <p class="FM__Body">&#160;&#160;dataset = H5Dcreate(file, DATASETNAME, s5_tid, space, H5P_DEFAULT, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, H5P_DEFAULT);&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 39. Create a compound datatype with four members</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 46 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig47.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 21. Logical tree for the compound </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;datatype with four members&lt;!-- formerly Figure 47 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;DATATYPE &#160;H5T_COMPOUND {</p>
 <p class="FM__Body"> &#160;&#160;H5T_COMPOUND {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;H5T_STD_I32LE &amp;ldquo;a_name&amp;rdquo;;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;H5T_STD_I8LE &amp;ldquo;b_name&amp;rdquo;;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;H5T_IEEE_F64LE &amp;ldquo;c_name&amp;rdquo;;</p>
 <p class="FM__Body"> &#160;&#160;} &amp;ldquo;T1&amp;rdquo;;</p>
 <p class="FM__Body"> &#160;&#160;H5T_COMPOUND {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;H5T_IEEE_F32LE &amp;ldquo;f1&amp;rdquo;;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;H5T_IEEE_F32LE &amp;ldquo;f2&amp;rdquo;;</p>
 <p class="FM__Body"> &#160;&#160;} &amp;ldquo;T2&amp;rdquo;;</p>
 <p class="FM__Body"> &#160;&#160;H5T_ARRAY { [10] H5T_STD_I32LE } &amp;ldquo;T3&amp;rdquo;;</p>
 <p class="FM__Body"> &#160;&#160;H5T_STRING {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;STRSIZE 25;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;STRPAD H5T_STR_NULLTERM;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CSET H5T_CSET_ASCII;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;CTYPE H5T_C_S1;</p>
 <p class="FM__Body"> &#160;&#160;} &amp;ldquo;T4&amp;rdquo;;</p>
 <p class="FM__Body"> &#160;}&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 40. Output from h5dump for the compound datatype</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 48 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table align=&quot;center&quot; border=&quot;0&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;left&quot;&gt;a) Compound type &amp;lsquo;s1_t&amp;rsquo;, size 16 bytes.&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;/tr&gt;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;&#160;&#160;&#160;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;&lt;td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table border=&quot;1&quot; align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 0&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 3&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;aaaaaaaa&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;aaaaaaaa&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;aaaaaaaa&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;aaaaaaaa&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 4&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 5&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 6&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 7&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;bbbbbbbb&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&amp;nbsp;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&amp;nbsp;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&amp;nbsp;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table border=&quot;1&quot; align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 8&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 9&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 10&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 11&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;cccccccc&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;cccccccc&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;cccccccc&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;cccccccc&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 12&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 13&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 14&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 15&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;cccccccc&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;cccccccc&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;cccccccc&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;cccccccc&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;left&quot;&gt;&amp;nbsp;&lt;br /&gt;b) Compound type &amp;lsquo;s2_t&amp;rsquo;, size 8 bytes.&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;&lt;td&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table border=&quot;1&quot; align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 0&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 3&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;ffffffff&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;ffffffff&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;ffffffff&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;ffffffff&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 4&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 5&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 6&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 7&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;gggggggg&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;gggggggg&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;gggggggg&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;gggggggg&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;left&quot;&gt;&amp;nbsp;&lt;br /&gt;c) Array type &amp;lsquo;s3_tid&amp;rsquo;, 40 integers, total size 40 bytes.&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;&lt;td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table border=&quot;1&quot; align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 0&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 3&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00000000&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00000000&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00000000&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00000000&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 4&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 5&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 6&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 7&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00000000&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00000000&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00000000&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00000001&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot; colspan=&quot;4&quot;&gt;&amp;nbsp;...&amp;nbsp;&lt;br /&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table border=&quot;1&quot; align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 36&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 37&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 38&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 39&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00000000&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00000000&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00000000&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00001010&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;left&quot;&gt;&amp;nbsp;&lt;br /&gt;d) String type &amp;lsquo;s4_tid&amp;rsquo;, size 25 bytes.&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;&lt;td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table border=&quot;1&quot; align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 0&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 3&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&amp;lsquo;a&amp;rsquo;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&amp;lsquo;b&amp;rsquo;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&amp;lsquo;c&amp;rsquo;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&amp;lsquo;d&amp;rsquo;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;center&quot; colspan=&quot;4&quot;&gt;&amp;nbsp;...&amp;nbsp;&lt;br /&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table border=&quot;1&quot; align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 24&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 25&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 26&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 27&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;00000000&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&amp;nbsp;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&amp;nbsp;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;&amp;nbsp;&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/td&gt;&lt;/tr&gt;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 22. The storage layout for the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;four member datatypes&lt;!-- formerly Figure 49 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig50.JPG&quot; width=&quot;550&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 23. The storage layout of the combined four members</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 50 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;Images/Dtypes_fig51.JPG&quot; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;width=&quot;550&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 24. The layout of the dataset</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 51 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;!-- 9.1.10, the JPG above, Dtypes_fig51.jpg, spells Element incorrectly --&gt;</p>
 <p class="FM__Body">&lt;!-- 9.1.10, the section above has text and many examples and figures. </p>
 <p class="FM__Body">Should the text be interspersed with the examples and figures at some </p>
 <p class="FM__Body">point? --&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;h4&gt;6.7.2. Analyzing and Navigating a Compound Datatype&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A complicated compound datatype can be analyzed piece by piece to </p>
 <p class="FM__Body">&#160;&#160;discover the exact storage layout. In the example above, the outer </p>
 <p class="FM__Body">&#160;&#160;datatype is analyzed to discover that it is a compound datatype with </p>
 <p class="FM__Body">&#160;&#160;four members. Each member is analyzed in turn to construct a complete </p>
 <p class="FM__Body"> &#160;map of the storage layout.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The example below &lt;!-- formerly Figure 52 --&gt;shows an example of code </p>
 <p class="FM__Body">&#160;&#160;that partially analyzes a nested </p>
 <p class="FM__Body">&#160;&#160;compound datatype. The name and overall offset and size of the component </p>
 <p class="FM__Body">&#160;&#160;datatype is discovered, and then its type is analyzed depending on the </p>
 <p class="FM__Body">&#160;&#160;datatype class. Through this method, the complete storage layout can be </p>
 <p class="FM__Body"> &#160;discovered.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;s1_tid = H5Dget_type(dataset);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;if (H5Tget_class(s1_tid) == H5T_COMPOUND) {</p>
 <p class="FM__Body">      printf(&amp;ldquo;COMPOUND DATATYPE {\n&amp;rdquo;);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;sz = H5Tget_size(s1_tid);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;nmemb = H5Tget_nmembers(s1_tid);</p>
 <p class="FM__Body">      printf(&amp;ldquo;  %d bytes\n&amp;rdquo;,sz);</p>
 <p class="FM__Body">      printf(&amp;ldquo;  %d members\n&amp;rdquo;,nmemb);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;for (i =0; i &amp;lt; nmemb; i++) {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;s2_tid = H5Tget_member_type(s1_tid, i);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;if (H5Tget_class(s2_tid) == H5T_COMPOUND) {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* recursively analyze the nested type. */</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;} else if (H5Tget_class(s2_tid) == H5T_ARRAY) {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sz2 = H5Tget_size(s2_tid);</p>
 <p class="FM__Body">            printf(&amp;ldquo;  %s: NESTED ARRAY DATATYPE offset %d size %d  {\n&amp;rdquo;,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5Tget_member_name(s1_tid, i),</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5Tget_member_offset(s1_tid, i),</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sz2);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5Tget_array_dims(s2_tid, dim);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;s3_tid = H5Tget_super(s2_tid);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Etc., analyze the base type of the array */</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;} else {</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* analyze a simple type */</p>
 <p class="FM__Body">                printf(&amp;ldquo;    %s: type code %d offset %d size %d\n&amp;rdquo;,</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5Tget_member_name(s1_tid, i),</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5Tget_class(s2_tid),</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5Tget_member_offset(s1_tid, i),</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5Tget_size(s2_tid));</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;/* and so on…. */&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 41. Analyzing a compound datatype and its members</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 52--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;a name=&quot;LCDtypeObj&quot;&gt;</p>
 <p class="FM__Body">&lt;div align=right&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=&quot;-1&quot;&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;LCDtypeObj&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=pagebefore&gt;6.8. Life Cycle of the Datatype Object&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Application programs access HDF5 datatypes through identifiers. </p>
 <p class="FM__Body">&#160;&#160;Identifiers are obtained by creating a new datatype or by copying </p>
 <p class="FM__Body">&#160;&#160;or opening an existing datatype. The identifier can be used until </p>
 <p class="FM__Body">&#160;&#160;it is closed or until the library shuts down. See items a and b in </p>
 <p class="FM__Body"> &#160;the figure below. &lt;!-- formerly Figure 53a,b --&gt; By default, a </p>
 <p class="FM__Body"> &#160;datatype is &lt;em&gt;transient&lt;/em&gt;, and it disappears when it is closed. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;When a dataset or attribute is created (&lt;code&gt;H5Dcreate&lt;/code&gt; or </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Acreate&lt;/code&gt;), its datatype is stored in the HDF5 </p>
 <p class="FM__Body">&#160;&#160;file as part of the dataset or attribute object. See item c in </p>
 <p class="FM__Body">&#160;&#160;the figure below. Once an object created, its datatype cannot </p>
 <p class="FM__Body">&#160;&#160;be changed or deleted. The datatype can be accessed by calling </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Dget_type&lt;/code&gt;, &lt;code&gt;H5Aget_type&lt;/code&gt;, </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Tget_super&lt;/code&gt;, or &lt;code&gt;H5Tget_member_type&lt;/code&gt;. </p>
 <p class="FM__Body">&#160;&#160;See item d in the figure below. These calls return an identifier to a </p>
 <p class="FM__Body"> &#160;&lt;em&gt;transient&lt;/em&gt; copy of the datatype of the dataset or attribute </p>
 <p class="FM__Body"> &#160;unless the datatype is a committed datatype. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Note that when an object is created, the stored datatype is a copy </p>
 <p class="FM__Body">&#160;&#160;of the transient datatype. If two objects are created with the same </p>
 <p class="FM__Body">&#160;&#160;datatype, the information is stored in each object with the same </p>
 <p class="FM__Body"> &#160;effect as if two different datatypes were created and used. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A transient datatype can be stored using &lt;code&gt;H5Tcommit&lt;/code&gt; in the </p>
 <p class="FM__Body">&#160;&#160;HDF5 file as an independent, named object, called a committed datatype. </p>
 <p class="FM__Body">&#160;&#160;Committed datatypes were formerly known as named datatypes. </p>
 <p class="FM__Body">&#160;&#160;See item e in the figure below. Subsequently, when a committed datatype </p>
 <p class="FM__Body"> &#160;is opened with &lt;code&gt;H5Topen&lt;/code&gt; (item f), or is obtained with </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Tget_type&lt;/code&gt; or similar call (item k), the return </p>
 <p class="FM__Body">&#160;&#160;is an identifier to a transient copy of the stored datatype. The identifier </p>
 <p class="FM__Body">&#160;&#160;can be used in the same way as other datatype identifiers except that </p>
 <p class="FM__Body">&#160;&#160;the committed datatype cannot be modified. When a committed datatype is </p>
 <p class="FM__Body"> &#160;copied with &lt;code&gt;H5Tcopy&lt;/code&gt;, the return is a new, modifiable, </p>
 <p class="FM__Body"> &#160;transient datatype object (item f). &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;When an object is created using a committed datatype (&lt;code&gt;H5Dcreate&lt;/code&gt;, </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Acreate&lt;/code&gt;), the stored datatype is used without copying </p>
 <p class="FM__Body">&#160;&#160;it to the object. See item j in the figure below. In this case, if </p>
 <p class="FM__Body">&#160;&#160;multiple objects are created using the same committed datatype, they </p>
 <p class="FM__Body">&#160;&#160;all share the exact same datatype object. This saves space and makes </p>
 <p class="FM__Body">&#160;&#160;clear that the datatype is shared. Note that a committed datatype can </p>
 <p class="FM__Body">&#160;&#160;be shared by objects within the same HDF5 file, but not by objects </p>
 <p class="FM__Body">&#160;&#160;in other files. For more information on copying committed datatypes to </p>
 <p class="FM__Body">&#160;&#160;other HDF5 files, see the </p>
 <p class="FM__Body">&#160;&#160;&amp;ldquo;Copying Committed Datatypes with H5Ocopy&amp;rdquo; topic in </p>
 <p class="FM__Body"> &#160;the &amp;ldquo;&lt;a href=&quot;17_Additional.html&quot;&gt;Additional Resources&lt;/a&gt;&amp;rdquo; </p>
 <p class="FM__Body"> &#160;chapter.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A committed datatype can be deleted from the file by calling </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Ldelete&lt;/code&gt; which replaces &lt;code&gt;H5Gunlink&lt;/code&gt;. </p>
 <p class="FM__Body">&#160;&#160;See item i in the figure below. &#160;If one or more objects are still using the </p>
 <p class="FM__Body"> &#160;datatype, the committed datatype cannot be accessed with &lt;code&gt;H5Topen&lt;/code&gt;, </p>
 <p class="FM__Body">&#160;&#160;but will not be removed from the file until it is no longer used. </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Tget_type&lt;/code&gt; and similar calls will return a transient </p>
 <p class="FM__Body"> &#160;copy of the datatype.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig53.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 25. Life cycle of a datatype</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 53 --&gt; &lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Transient datatypes are initially modifiable. Note that </p>
 <p class="FM__Body">&#160;&#160;when a datatype is copied or when it is written to the file (when an </p>
 <p class="FM__Body">&#160;&#160;object is created) or the datatype is used to create a composite </p>
 <p class="FM__Body">&#160;&#160;datatype, a copy of the current state of the datatype is used. If </p>
 <p class="FM__Body">&#160;&#160;the datatype is then modified, the changes have no effect on </p>
 <p class="FM__Body">&#160;&#160;datasets, attributes, or datatypes that have already been created. </p>
 <p class="FM__Body"> &#160;See the figure below.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A transient datatype can be made &lt;em&gt;read-only&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;(&lt;code&gt;H5Tlock&lt;/code&gt;). Note that the datatype is still transient, </p>
 <p class="FM__Body"> &#160;and otherwise does not change. A datatype that is &lt;em&gt;immutable&lt;/em&gt; </p>
 <p class="FM__Body"> &#160;is &lt;em&gt;read-only&lt;/em&gt; but cannot be closed except when the entire </p>
 <p class="FM__Body">&#160;&#160;library is closed. The predefined types such as </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5T_NATIVE_INT&lt;/code&gt; are &lt;em&gt;immutable transient&lt;/em&gt; types.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig54.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 26. Transient datatype states: modifiable, read-only, and </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;immutable &lt;!-- formerly Figure 54 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;To create two or more datasets that share a common datatype, </p>
 <p class="FM__Body">&#160;&#160;first commit the datatype, and then use that datatype to create the </p>
 <p class="FM__Body"> &#160;datasets. See the example below.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;hid_t t1 = ...some transient type...;</p>
 <p class="FM__Body">&#160;&#160;H5Tcommit (file, &amp;ldquo;shared_type&amp;rdquo;, t1, H5P_DEFAULT, H5P_DEFAULT, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;H5P_DEFAULT);</p>
 <p class="FM__Body">&#160;&#160;hid_t dset1 = H5Dcreate (file, &amp;ldquo;dset1&amp;rdquo;, t1, space, H5P_DEFAULT, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, H5P_DEFAULT);</p>
 <p class="FM__Body">&#160;&#160;hid_t dset2 = H5Dcreate (file, &amp;ldquo;dset2&amp;rdquo;, t1, space, H5P_DEFAULT, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, H5P_DEFAULT);</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;hid_t dset1 = H5Dopen (file, &amp;ldquo;dset1&amp;rdquo;, H5P_DEFAULT);</p>
 <p class="FM__Body"> &#160;hid_t t2 = H5Dget_type (dset1);</p>
 <p class="FM__Body">&#160;&#160;hid_t dset3 = H5Dcreate (file, &amp;ldquo;dset3&amp;rdquo;, t2, space, H5P_DEFAULT, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, H5P_DEFAULT);</p>
 <p class="FM__Body">&#160;&#160;hid_t dset4 = H5Dcreate (file, &amp;ldquo;dset4&amp;rdquo;, t2, space, H5P_DEFAULT, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;H5P_DEFAULT, H5P_DEFAULT);&lt;/pre&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 42. Create a shareable datatype</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 55 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 23. Datatype APIs&lt;/b&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Table 24 --&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Function&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;50%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;hid_t H5Topen (hid_t location, &lt;br /&gt;const </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;char *name)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;A committed datatype can be opened by </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;calling this function, which returns a datatype identifier. The </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;identifier should eventually be released by calling </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;H5Tclose()&lt;/code&gt; to release resources. The committed </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;datatype returned by this function is read-only or a negative </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;value is returned for failure. The location is either a file or </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;group identifier.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;herr_t H5Tcommit (hid_t location, </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const char *name, hid_t type, H5P_DEFAULT, H5P_DEFAULT, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;br /&gt;H5P_DEFAULT)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;A transient datatype (not immutable) can </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;be written to a file and turned into a committed datatype by calling this </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;function. The location is either a file or group identifier and when </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;combined with name refers to a new committed datatype.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;htri_t H5Tcommitted </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(hid_t type)&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;A type can be queried to determine </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if it is a committed type or a transient type. If this function returns a </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;positive value then the type is committed. Datasets which return committed </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;datatypes with &lt;code&gt;H5Dget_type()&lt;/code&gt; are able to share the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;datatype with other datasets in the same file.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;a name=&quot;Dtransfer&quot;&gt;</p>
 <p class="FM__Body">&lt;div align=right&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=&quot;-1&quot;&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;Dtransfer&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=pagebefore&gt;6.9. Data Transfer: Datatype Conversion and Selection&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;When data is transferred (write or read), the storage layout of the data </p>
 <p class="FM__Body">&#160;&#160;elements may be different. For example, an integer might be stored on disk </p>
 <p class="FM__Body">&#160;&#160;in big-endian byte order and read into memory with little-endian byte order. </p>
 <p class="FM__Body">&#160;&#160;In this case, each data element will be transformed by the HDF5 Library </p>
 <p class="FM__Body"> &#160;during the data transfer.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The conversion of data elements is controlled by specifying the datatype </p>
 <p class="FM__Body">&#160;&#160;of </p>
 <p class="FM__Body">&#160;&#160;the source and specifying the intended datatype of the destination. </p>
 <p class="FM__Body">&#160;&#160;The storage format on disk is the datatype specified when the dataset </p>
 <p class="FM__Body"> &#160;is created. The datatype of memory must be specified in the library call.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In order to be convertible, the datatype of the source and destination </p>
 <p class="FM__Body">&#160;&#160;must have the same datatype class (with the exception of enumeration </p>
 <p class="FM__Body">&#160;&#160;type). Thus, integers can be converted to other integers, and floats to </p>
 <p class="FM__Body">&#160;&#160;other floats, but integers cannot (yet) be converted to floats. For </p>
 <p class="FM__Body">&#160;&#160;each atomic datatype class, the possible conversions are defined. An </p>
 <p class="FM__Body">&#160;&#160;enumeration datatype can be converted to an integer or a </p>
 <p class="FM__Body"> &#160;floating-point number datatype.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Basically, any datatype can be converted to another datatype of the same </p>
 <p class="FM__Body">&#160;&#160;datatype class. The HDF5 Library automatically converts all properties. </p>
 <p class="FM__Body">&#160;&#160;If the destination is too small to hold the source value then an overflow </p>
 <p class="FM__Body">&#160;&#160;or underflow exception occurs. If a handler is defined with the </p>
 <p class="FM__Body"> &#160;&lt;code&gt;H5Pset_type_conv_cb&lt;/code&gt; function, </p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [</p>
 <p class="FM__Body">&#160;&#160;(see Chapter??) </p>
 <p class="FM__Body"> &#160;] ] ]&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&#160;&#160;it will be called. Otherwise, </p>
 <p class="FM__Body"> &#160;a default action will be performed. The table below &lt;!-- formerly Table 25--&gt;</p>
 <p class="FM__Body"> &#160;summarizes the default actions.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 24. Default actions for datatype conversion exceptions&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Table 25 --&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;Datatype Class&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;Possible Exceptions&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;b&gt;Default Action&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Integer&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Size, offset, pad&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Float&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Size, offset, pad, ebits&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;String&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Size&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Truncates, zero terminate if required.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Enumeration&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;No field&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;All bits set&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;For example, when reading data from a dataset, the source datatype is the </p>
 <p class="FM__Body">&#160;&#160;datatype set when the dataset was created, and the destination datatype is </p>
 <p class="FM__Body">&#160;&#160;the description of the storage layout in memory. The destination datatype </p>
 <p class="FM__Body">&#160;&#160;must be specified in </p>
 <p class="FM__Body"> &#160;the &lt;code&gt;H5Dread&lt;/code&gt; call. The example below &lt;!-- formerly Figure 56 --&gt; </p>
 <p class="FM__Body">&#160;&#160;shows an example of reading a dataset </p>
 <p class="FM__Body"> &#160;of 32-bit integers. The figure &lt;!-- formerly Figure 57 --&gt;below the example </p>
 <p class="FM__Body">&#160;&#160;shows the data transformation </p>
 <p class="FM__Body"> &#160;that is performed.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;/* Stored as H5T_STD_BE32 */</p>
 <p class="FM__Body"> &#160;/* Use the native memory order in the destination */</p>
 <p class="FM__Body"> &#160;mem_type_id = H5Tcopy(H5T_NATIVE_INT);</p>
 <p class="FM__Body">&#160;&#160;status = H5Dread(dataset_id, mem_type_id, mem_space_id, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;file_space_id, &#160;xfer_plist_id, &#160;buf );&lt;/pre&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 43. Specify the destination datatype </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;with &lt;code&gt;H5Dread&lt;/code&gt;&lt;!-- formerly Figure 56 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;table align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;&lt;td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;left&quot;&gt;Source Datatype: &lt;code&gt;H5T_STD_BE32&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;&lt;td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table align=&quot;left&quot; border=&quot;1&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 0&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 3&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;aaaaaaaa&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;bbbbbbbb&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;cccccccc&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;dddddddd&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 4&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 5&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 6&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 7&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;wwwwwwww&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;xxxxxxxx&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;yyyyyyyy&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;zzzzzzzz&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td&gt;.&amp;nbsp;.&amp;nbsp;.&amp;nbsp;.&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;&lt;td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table align=&quot;center&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;45%&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;10%&quot; align=&quot;center&quot;&gt;&lt;img src=&quot;Images/Dtypes_fig57_arrow.jpg&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td width=&quot;45%&quot; align=&quot;left&quot;&gt;Automatically byte swapped&lt;br /&gt; during the &lt;code&gt;H5Dread&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;&lt;td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;table align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td align=&quot;left&quot;&gt;Destination Datatype: &lt;code&gt;H5T_STD_LE32&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;&lt;td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;table align=&quot;left&quot; border=&quot;1&quot; width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 0&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot; width=&quot;25%&quot;&gt;&lt;code&gt;Byte 3&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;bbbbbbbb&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;aaaaaaaa&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;dddddddd&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;cccccccc&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 4&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 5&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 6&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;Byte 7&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;xxxxxxxx&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;wwwwwwww&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;zzzzzzzz&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;code&gt;yyyyyyyy&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td&gt;.&amp;nbsp;.&amp;nbsp;.&amp;nbsp;.&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;&lt;td&gt;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;&#160;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/table&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 27. Layout of a datatype conversion</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 57 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;One thing to note in the example above &lt;!-- formerly Figure 56 --&gt;is the </p>
 <p class="FM__Body"> &#160;use of the predefined native datatype &lt;code&gt;H5T_NATIVE_INT&lt;/code&gt;. </p>
 <p class="FM__Body">&#160;&#160;Recall that in this example, the data was stored as a 4-bytes </p>
 <p class="FM__Body">&#160;&#160;in big-endian order. The application wants to read this data into an array </p>
 <p class="FM__Body">&#160;&#160;of integers in memory. Depending on the system, the storage layout of memory </p>
 <p class="FM__Body">&#160;&#160;might be either big or little-endian, so the data may need to be transformed </p>
 <p class="FM__Body"> &#160;on some platforms and not on others. &#160;The &lt;code&gt;H5T_NATIVE_INT&lt;/code&gt; type </p>
 <p class="FM__Body">&#160;&#160;is set by the HDF5 Library to be the correct type to describe the storage </p>
 <p class="FM__Body">&#160;&#160;layout of the memory on the system. Thus, the code in the example above </p>
 <p class="FM__Body"> &#160;&lt;!-- Figure 56 --&gt;will work correctly on any platform, performing a </p>
 <p class="FM__Body"> &#160;transformation when needed.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;There are predefined native types for most atomic datatypes, and </p>
 <p class="FM__Body">&#160;&#160;these can be combined in composite datatypes. In general, the predefined </p>
 <p class="FM__Body"> &#160;native datatypes should always be used for data stored in memory.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table align=&quot;center&quot; width=&quot;300&quot; &gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&lt;tr &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td style=&quot;background-color:#E6F2E6&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Storage Properties &lt;/b&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;p&gt;Predefined native datatypes describe the storage properties </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;of memory.&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;For composite datatypes, the component atomic datatypes will be converted. </p>
 <p class="FM__Body">&#160;&#160;For a variable-length datatype, the source and destination must have </p>
 <p class="FM__Body">&#160;&#160;compatible base datatypes. For a fixed-size string datatype, the length </p>
 <p class="FM__Body">&#160;&#160;and padding of the strings will be converted. Variable-length strings </p>
 <p class="FM__Body"> &#160;are converted as variable-length datatypes.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;For an array datatype, the source and destination must have the same rank </p>
 <p class="FM__Body">&#160;&#160;and dimensions, and the base datatype must be compatible. &#160;For example an </p>
 <p class="FM__Body">&#160;&#160;array datatype of 4 x 3 32-bit big-endian integers can be transferred to an </p>
 <p class="FM__Body"> &#160;array datatype of 4 x 3 little-endian integers, but not to a 3 x 4 array.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;For an enumeration datatype, data elements are converted by matching the </p>
 <p class="FM__Body">&#160;&#160;symbol names of the source and destination datatype. The figure below </p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Figure 58 --&gt;shows an example </p>
 <p class="FM__Body">&#160;&#160;of how two enumerations with the same names and different values would be </p>
 <p class="FM__Body">&#160;&#160;converted. The value &amp;lsquo;2&amp;rsquo; in the source dataset would be converted </p>
 <p class="FM__Body"> &#160;to &amp;lsquo;0x0004&amp;rsquo; in the destination.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;If the source data stream contains values which are not in the domain of </p>
 <p class="FM__Body"> &#160;the conversion map then an overflow exception is raised within the library.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;400&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;table border=&quot;0&quot;&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td width=&quot;%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;RED&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&lt;img src=&quot;Images/Dtypes_fig58_arrow.jpg&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td align=&quot;right&quot; width=&quot;%&quot;&gt;RED&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&amp;nbsp;0x0001&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td width=&quot;%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;GREEN&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&lt;img src=&quot;Images/Dtypes_fig58_arrow.jpg&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td align=&quot;right&quot; width=&quot;%&quot;&gt;&amp;nbsp;&amp;nbsp;GREEN&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&amp;nbsp;0x0002&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td width=&quot;%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;BLUE&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&lt;img src=&quot;Images/Dtypes_fig58_arrow.jpg&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td align=&quot;right&quot; width=&quot;%&quot;&gt;BLUE&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&amp;nbsp;0x0004&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td width=&quot;%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;WHITE&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&lt;img src=&quot;Images/Dtypes_fig58_arrow.jpg&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td align=&quot;right&quot; width=&quot;%&quot;&gt;WHITE&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&amp;nbsp;0x0008&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;&#160;&lt;td width=&quot;%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;BLACK&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&lt;img src=&quot;Images/Dtypes_fig58_arrow.jpg&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td align=&quot;right&quot; width=&quot;%&quot;&gt;&amp;nbsp;&amp;nbsp;BLACK&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td width=&quot;%&quot;&gt;&amp;nbsp;0x0010&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 28. An enum datatype conversion</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 58 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The library also allows conversion from enumeration to a numeric </p>
 <p class="FM__Body">&#160;&#160;datatype. A numeric datatype is either an integer or a floating-point </p>
 <p class="FM__Body">&#160;&#160;number. This conversion can simplify the application program because </p>
 <p class="FM__Body">&#160;&#160;the base type for an enumeration datatype is an integer datatype. The </p>
 <p class="FM__Body">&#160;&#160;application program can read the data from a dataset of enumeration </p>
 <p class="FM__Body">&#160;&#160;datatype in file into a memory buffer of numeric datatype. And it can </p>
 <p class="FM__Body">&#160;&#160;write enumeration data from memory into a dataset of numeric datatype </p>
 <p class="FM__Body"> &#160;in file, too. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;For compound datatypes, each field of the source and destination </p>
 <p class="FM__Body">&#160;&#160;datatype is converted according to its type. The name of the fields </p>
 <p class="FM__Body">&#160;&#160;must be the same in the source and the destination in order for the </p>
 <p class="FM__Body"> &#160;data to be converted. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The example below &lt;!-- formerly Figure 59 --&gt;shows the compound </p>
 <p class="FM__Body">&#160;&#160;datatypes shows sample code to create a </p>
 <p class="FM__Body">&#160;&#160;compound datatype with the fields aligned on word boundaries (s1_tid) </p>
 <p class="FM__Body">&#160;&#160;and with the fields packed (s2_tid). The former is suitable as a description </p>
 <p class="FM__Body">&#160;&#160;of the storage layout in memory, the latter would give a more compact store </p>
 <p class="FM__Body">&#160;&#160;on disk. These types can be used for transferring data, with </p>
 <p class="FM__Body"> &#160;&lt;code&gt;s2_tid&lt;/code&gt; used to create the dataset, and </p>
 <p class="FM__Body"> &#160;&lt;code&gt;s1_tid&lt;/code&gt; used as the memory datatype.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">&#160;&#160;typedef struct s1_t { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;int &#160;&#160;&#160;a; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;char &#160;b; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;double c; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;} s1_t;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;s1_tid = H5Tcreate (H5T_COMPOUND, sizeof(s1_t));</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;a_name&amp;rdquo;, HOFFSET(s1_t, a), H5T_NATIVE_INT);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;b_name&amp;rdquo;, HOFFSET(s1_t, b), H5T_NATIVE_CHAR);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;c_name&amp;rdquo;, HOFFSET(s1_t, c), H5T_NATIVE_DOUBLE);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;s2_tid = H5Tcopy(s1_tid);</p>
 <p class="FM__Body"> &#160;H5Tpack(s2_tid);&lt;/pre&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 44. Create an aligned and packed compound datatype </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 59 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;When the data is transferred, the fields within each data element will be </p>
 <p class="FM__Body">&#160;&#160;aligned according to the datatype specification. The figure below </p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Figure 60 --&gt;shows how one data </p>
 <p class="FM__Body">&#160;&#160;element would be aligned in memory and on disk. Note that the size and byte </p>
 <p class="FM__Body"> &#160;order of the elements might also be converted during the transfer.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;It is also possible to transfer some of the fields of compound datatypes. </p>
 <p class="FM__Body"> &#160;Based on the example above, &lt;!-- formerly Figure 59 --&gt; the example below </p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Figure 61 --&gt;shows a compound datatype </p>
 <p class="FM__Body"> &#160;that selects the first and third fields of the &lt;code&gt;s1_tid&lt;/code&gt;. </p>
 <p class="FM__Body">&#160;&#160;The second datatype can be used as the memory datatype, in which case data </p>
 <p class="FM__Body">&#160;&#160;is read from or written to these two fields, while skipping the middle field. </p>
 <p class="FM__Body"> &#160;The second figure below &lt;!-- formerly Figure 62 --&gt;shows the layout for </p>
 <p class="FM__Body"> &#160;two data elements.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig60.JPG&quot; width=&quot;550&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 29. Alignment of a compound datatype </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 60 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">&#160;&#160;typedef struct s1_t { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;int &#160;&#160;&#160;a; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;char &#160;b; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;double c; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;} s1_t;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;typedef struct s2_t { &#160;&#160;/* two fields from s1_t */ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;int &#160;&#160;&#160;a; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;double c; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;} s2_t;</p>
 <p class="FM__Body">&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;s1_tid = H5Tcreate (H5T_COMPOUND, sizeof(s1_t));</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;a_name&amp;rdquo;, HOFFSET(s1_t, a), H5T_NATIVE_INT);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;b_name&amp;rdquo;, HOFFSET(s1_t, b), H5T_NATIVE_CHAR);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;c_name&amp;rdquo;, HOFFSET(s1_t, c), H5T_NATIVE_DOUBLE);</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;s2_tid = H5Tcreate (H5T_COMPOUND, sizeof(s2_t));</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;a_name&amp;rdquo;, HOFFSET(s2_t, a), H5T_NATIVE_INT);</p>
 <p class="FM__Body"> &#160;H5Tinsert(s1_tid, &amp;ldquo;c_name&amp;rdquo;, HOFFSET(s2_t, c), H5T_NATIVE_DOUBLE);</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/pre&gt; &lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 45. Transfer some fields of a compound datatype</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 61 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dtypes_fig62.JPG&quot; width=&quot;550&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 30. Layout when an element is skipped</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 62 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;TextDescriptions&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=pagebefore&gt;6.10. Text Descriptions of Datatypes: Conversion to </p>
 <p class="FM__Body">and from&lt;/h3&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;HDF5 provides a means for generating a portable and human-readable </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;text descripition of a datatype and </p>
 <p class="FM__Body"> &#160;&#160;&#160;for generating a datatype from such a text description.</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;This capability is particularly useful </p>
 <p class="FM__Body"> &#160;&#160;&#160;for creating complex datatypes in a single step,</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;for creating a text description of a datatype for debugging purposes, </p>
 <p class="FM__Body"> &#160;&#160;&#160;and for creating a portable datatype definition that can then be used</p>
 <p class="FM__Body"> &#160;&#160;&#160;to recreate the datatype on many platforms or in other applications.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;These tasks are handled by two functions provided in the HDF5 high-level </p>
 <p class="FM__Body"> &#160;&#160;&#160;library (&lt;a href=&quot;../HL/RM_H5LT.html&quot; target=&quot;ExtWin&quot;&gt;H5HL&lt;/a&gt;):&lt;/p&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;div align=&quot;left&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&lt;table &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;tr valign=&quot;top&quot; align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;span class=&quot;codeText&quot;&gt;H5LTtext_to_dtype&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td&gt;Creates an HDF5 datatype in a single step.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;&lt;tr valign=&quot;top&quot; align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;span class=&quot;codeText&quot;&gt;H5LTdtype_to_text&lt;/span&gt;&lt;/td&gt;</p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;td&gt;Translates an HDF5 datatype into a text description.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/div&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Note that this functionality requires that the </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;HDF5 High-Level Library (H5LT) be installed. </p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;See </p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;span class=&quot;editingComment&quot;&gt;&amp;lt; &amp;lt; Quick Start &amp;gt; &amp;gt;&lt;/span&gt;.</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;While &lt;span class=&quot;codeText&quot;&gt;H5LTtext_to_dtype&lt;/span&gt; can be used to </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;generate any sort of datatype, it is particularly useful for </p>
 <p class="FM__Body"> &#160;&#160;&#160;complex datatypes. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;span class=&quot;codeText&quot;&gt;H5LTdtype_to_text&lt;/span&gt; is most likely to be</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;used in two sorts of situations: </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;when a datatype must be closely examined for debugging purpose </p>
 <p class="FM__Body"> &#160;&#160;&#160;or to create a portable text description of the datatype</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;that can then be used to recreate the datatype on other platforms </p>
 <p class="FM__Body"> &#160;&#160;&#160;or in other applications.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&lt;p&gt;These two functions work for all valid HDF5 datatypes</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;except time, bitfield, and reference datatypes.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The currently supported text format used by </p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;span class=&quot;codeText&quot;&gt;H5LTtext_to_dtype&lt;/span&gt; and </p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;span class=&quot;codeText&quot;&gt;H5LTdtype_to_text&lt;/span&gt; is the</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;data description language (DDL) and conforms to the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;a href=&quot;../ddl.html&quot; target=&quot;ExtWin&quot;&gt;&lt;cite&gt;HDF5 DDL&lt;/cite&gt;&lt;/a&gt;.  </p>
 <p class="FM__Body"> &#160;&#160;&#160;The portion of the &lt;cite&gt;HDF5 DDL&lt;/cite&gt; that defines HDF5 datatypes  </p>
 <p class="FM__Body"> &#160;&#160;&#160;appears below.</p>
 <p class="FM__Body"> &#160;&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&amp;lt;datatype&amp;gt; ::= &amp;lt;atomic_type&amp;gt; | &amp;lt;compound_type&amp;gt; | &amp;lt;array_type&amp;gt; |</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;lt;variable_length_type&amp;gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&amp;lt;atomic_type&amp;gt; ::= &amp;lt;integer&amp;gt; &#160;| &amp;lt;float&amp;gt; &#160;| &amp;lt;time&amp;gt; &#160;&#160;&#160;&#160;&#160;| &amp;lt;string&amp;gt; |</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;lt;bitfield&amp;gt; | &amp;lt;opaque&amp;gt; | &amp;lt;reference&amp;gt; | &amp;lt;enum&amp;gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&amp;lt;integer&amp;gt; ::= &#160;H5T_STD_I8BE &#160;&#160;&#160;&#160;| H5T_STD_I8LE &#160;&#160;&#160;&#160;&#160;|</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_STD_I16BE &#160;&#160;&#160;| H5T_STD_I16LE &#160;&#160;&#160;&#160;|</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_STD_I32BE &#160;&#160;&#160;| H5T_STD_I32LE &#160;&#160;&#160;&#160;|</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_STD_I64BE &#160;&#160;&#160;| H5T_STD_I64LE &#160;&#160;&#160;&#160;|</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_STD_U8BE &#160;&#160;&#160;&#160;| H5T_STD_U8LE &#160;&#160;&#160;&#160;&#160;|</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_STD_U16BE &#160;&#160;&#160;| H5T_STD_U16LE &#160;&#160;&#160;&#160;|</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_STD_U32BE &#160;&#160;&#160;| H5T_STD_U32LE &#160;&#160;&#160;&#160;|</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_STD_U64BE &#160;&#160;&#160;| H5T_STD_U64LE &#160;&#160;&#160;&#160;|</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_CHAR &#160;| H5T_NATIVE_UCHAR &#160;|</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_SHORT | H5T_NATIVE_USHORT |</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_INT &#160;&#160;| H5T_NATIVE_UINT &#160;&#160;|</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_LONG &#160;| H5T_NATIVE_ULONG &#160;|</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_LLONG | H5T_NATIVE_ULLONG</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&amp;lt;float&amp;gt; ::= H5T_IEEE_F32BE &#160;&#160;| H5T_IEEE_F32LE &#160;&#160;&#160;&#160;|</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_IEEE_F64BE &#160;&#160;| H5T_IEEE_F64LE &#160;&#160;&#160;&#160;|</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_FLOAT | H5T_NATIVE_DOUBLE &#160;|</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_NATIVE_LDOUBLE</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&amp;lt;time&amp;gt; ::= TBD</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&amp;lt;string&amp;gt; ::= H5T_STRING { STRSIZE &amp;lt;strsize&amp;gt; ;</p>
 <p class="FM__Body"> &#160;&#160;&#160;STRPAD &amp;lt;strpad&amp;gt; ;</p>
 <p class="FM__Body"> &#160;&#160;&#160;CSET &amp;lt;cset&amp;gt; ;</p>
 <p class="FM__Body"> &#160;&#160;&#160;CTYPE &amp;lt;ctype&amp;gt; ;}</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&amp;lt;strsize&amp;gt; ::= &amp;lt;int_value&amp;gt; | H5T_VARIABLE</p>
 <p class="FM__Body"> &#160;&amp;lt;strpad&amp;gt; ::= H5T_STR_NULLTERM | H5T_STR_NULLPAD | H5T_STR_SPACEPAD</p>
 <p class="FM__Body"> &#160;&amp;lt;cset&amp;gt; ::= H5T_CSET_ASCII | H5T_CSET_UTF8</p>
 <p class="FM__Body"> &#160;&amp;lt;ctype&amp;gt; ::= H5T_C_S1 | H5T_FORTRAN_S1</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&amp;lt;bitfield&amp;gt; ::= TBD</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&amp;lt;opaque&amp;gt; ::= H5T_OPAQUE { OPQ_SIZE &amp;lt;opq_size&amp;gt;;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;OPQ_TAG &amp;lt;opq_tag&amp;gt;; }</p>
 <p class="FM__Body"> &#160;opq_size ::= &amp;lt;int_value&amp;gt;</p>
 <p class="FM__Body"> &#160;opq_tag ::= &quot;&amp;lt;string&amp;gt;&quot;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&amp;lt;reference&amp;gt; ::= Not supported</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&amp;lt;compound_type&amp;gt; ::= H5T_COMPOUND { &amp;lt;member_type_def&amp;gt;+ }</p>
 <p class="FM__Body"> &#160;&amp;lt;member_type_def&amp;gt; ::= &amp;lt;datatype&amp;gt; &amp;lt;field_name&amp;gt; &amp;lt;offset&amp;gt;&lt;font size=1.7&gt;opt&lt;/font&gt; ;</p>
 <p class="FM__Body"> &#160;&amp;lt;field_name&amp;gt; ::= &quot;&amp;lt;identifier&amp;gt;&quot;</p>
 <p class="FM__Body"> &#160;&amp;lt;offset&amp;gt; ::= : &amp;lt;int_value&amp;gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&amp;lt;variable_length_type&amp;gt; ::= H5T_VLEN { &amp;lt;datatype&amp;gt; }</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&amp;lt;array_type&amp;gt; ::= H5T_ARRAY { &amp;lt;dim_sizes&amp;gt; &amp;lt;datatype&amp;gt; }</p>
 <p class="FM__Body"> &#160;&amp;lt;dim_sizes&amp;gt; ::= [&amp;lt;dimsize&amp;gt;] | [&amp;lt;dimsize&amp;gt;] &amp;lt;dim_sizes&amp;gt;</p>
 <p class="FM__Body"> &#160;&amp;lt;dimsize&amp;gt; ::= &amp;lt;int_value&amp;gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&amp;lt;enum&amp;gt; ::= H5T_ENUM { &amp;lt;enum_base_type&amp;gt;; &amp;lt;enum_def&amp;gt;+ }</p>
 <p class="FM__Body"> &#160;&amp;lt;enum_base_type&amp;gt; ::= &amp;lt;integer&amp;gt;</p>
 <p class="FM__Body">&#160;&#160;// Currently enums can only hold integer type data, but they may be </p>
 <p class="FM__Body"> &#160;//expanded in the future to hold any datatype</p>
 <p class="FM__Body"> &#160;&amp;lt;enum_def&amp;gt; ::= &amp;lt;enum_symbol&amp;gt; &amp;lt;enum_val&amp;gt;;</p>
 <p class="FM__Body"> &#160;&amp;lt;enum_symbol&amp;gt; ::= &quot;&amp;lt;identifier&amp;gt;&quot;</p>
 <p class="FM__Body"> &#160;&amp;lt;enum_val&amp;gt; ::= &amp;lt;int_value&amp;gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 46. The definition of HDF5 datatypes from the </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 63: --&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;a href=&quot;../ddl.html&quot; target=&quot;ExtWin&quot;&gt;&lt;cite&gt;HDF5 DDL&lt;/cite&gt;&lt;/a&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The definitions of opaque and compound datatype above are  </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;revised for HDF5 Release 1.8. &#160;In Release 1.6.5. and earlier, </p>
 <p class="FM__Body"> &#160;&#160;&#160;they were were defined as follows:</p>
 <p class="FM__Body"> &#160;&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;&amp;lt;opaque&amp;gt; ::= H5T_OPAQUE { &amp;lt;identifier&amp;gt; }</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&amp;lt;compound_type&amp;gt; ::= H5T_COMPOUND { &amp;lt;member_type_def&amp;gt;+ }</p>
 <p class="FM__Body"> &#160;&amp;lt;member_type_def&amp;gt; ::= &amp;lt;datatype&amp;gt; &amp;lt;field_name&amp;gt; ;</p>
 <p class="FM__Body"> &#160;&amp;lt;field_name&amp;gt; ::= &amp;lt;identifier&amp;gt;&lt;/pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 47. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 64: --&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Old definitions of the opaque and compound datatypes&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The code sample below illustrates the use of</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;span class=&quot;codeText&quot;&gt;H5LTtext_to_dtype&lt;/span&gt; to generate a</p>
 <p class="FM__Body"> &#160;&#160;&#160;variable-length string datatype.</p>
 <p class="FM__Body"> &#160;&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;hid_t &#160;&#160;dtype;</p>
 <p class="FM__Body">&#160;&#160;if((dtype = H5LTtext_to_dtype(&amp;ldquo;H5T_STRING { </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;STRSIZE H5T_VARIABLE; </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;STRPAD H5T_STR_NULLPAD; </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CSET H5T_CSET_ASCII; </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CTYPE H5T_C_S1; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}&amp;rdquo;, H5LT_DDL))&amp;lt;0)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;goto out;&lt;/pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 48. Creating a variable-length string datatype from </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;a text description&lt;!-- formerly Figure 65: --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The code sample below illustrates the use of</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;span class=&quot;codeText&quot;&gt;H5LTtext_to_dtype&lt;/span&gt; to generate a</p>
 <p class="FM__Body"> &#160;&#160;&#160;complex array datatype.</p>
 <p class="FM__Body"> &#160;&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body"> &#160;hid_t &#160;&#160;dtype;</p>
 <p class="FM__Body">&#160;&#160;if((dtype = H5LTtext_to_dtype(&amp;ldquo;H5T_ARRAY { [5][7][13] H5T_ARRAY </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{ [17][19] H5T_COMPOUND</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_STD_I8BE </p>
 <p class="FM__Body">                                                          \&amp;ldquo;arr_compound_1\&amp;rdquo;; </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;H5T_STD_I32BE </p>
 <p class="FM__Body">                                                          \&amp;ldquo;arr_compound_2\&amp;rdquo;; </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}&amp;rdquo;, H5LT_DDL))&lt;0)</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;goto out;&lt;/pre&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Example 49. &lt;!-- formerly Figure 66: --&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Creating a complex array datatype from a text description&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;/body&gt;</p>
 <p class="FM__Body">&lt;/html&gt; </p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
</div>
				
			</div>
			<div class="content_top_link">
				<span class="desktop"><a>&#160;</a> </span>
			</div>
		</div>
	</div>
</div>
<div class="buttonbar">
	<div class="buttonbarholder topic_page_holder">
		<div class="bar_toc topic_page" id="xmlEditorButtonBarTOC" title="Table of Contents">
			<a href="../../table_of_contents.htm">&#160;</a> 
		</div>
		<div class="bar_index topic_page" id="xmlEditorButtonBarIDX" title="Index">
			<a href="../../index1.htm">&#160;</a> 
		</div>
		<div class="bar_glossary topic_page" id="xmlEditorButtonBarGLO" 
			 title="Glossary">
			<a href="../../glossary.htm">&#160;</a> 
		</div>
		<div class="bar_search topic_page" title="Search">
			<a href="../../searchresults.htm">&#160;</a> 
		</div>
	</div>
</div>
<div id="localisation">
	<p id="localisation_toc"><span>Table of Contents</span></p>
	<p id="localisation_idx"><span>Index</span></p>
	<p id="localisation_glo"><span>Glossary</span></p>
	<p id="localisation_fts"><span>-Search-</span></p>
	<p id="localisation_back"><span>Back</span></p>
</div>
<script type="text/javascript" src="../../template/Theme1_Standard/jquery.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/jqueryui-custom.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/overthrow.min.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/overthrow.sidescroller.min.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/layout.js"></script>
<script type="text/javascript">//<![CDATA[
$(function(){
	addRhLoadCompleteEvent(setTopic);
});
//]]></script>
</body>
</html>
