<!DOCTYPE HTML>
<html>
<head>

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>The HDF5 File</title>

 <meta content="How to fly your personal spaceship" name="search-keywords" />
 <meta name="generator" content="Adobe FrameMaker 12" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\1 MEE\Working\hdf5_trunk\html\UG\FmSource\TheFile.fm" />
 <link rel="stylesheet" href="TheFile.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "3";
</script>
 <meta name="brsprev" value="HDF5_Users_Guide/LibraryAndProgrammingModel/The_HDF5_Library_and_Programming_Model.htm">
 <meta name="brsnext" value="HDF5_Users_Guide/Groups/HDF5_Groups.htm">
</head>

<body>
<script type="text/javascript" src="../../ehlpdhtm.js"></script>

 <p class="FM__Heading_Level1">3. <a name="XREF_TheFileChapter"></a>The HDF5 File</p>
 <p class="FM__Heading_Level2"><a name="TOC_3_1_Introduction"></a>3.1. Introduction</p>
 <p class="FM__Body">The purpose of this chapter is to describe how to work with HDF5 data files. </p>
 <p class="FM__Body">If HDF5 data is to be written to or read from a file, the file must first be explicitly created or opened with the appropriate file driver and access privileges. Once all work with the file is complete, the file must be explicitly closed. </p>
 <p class="FM__Body">This chapter discusses the following:</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>File access modes</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Creating, opening, and closing files</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>The use of file creation property lists</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>The use of file access property lists</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>The use of low-level file drivers</p>
 <p class="FM__Body">This chapter assumes an understanding of the material presented in the data model chapter. <a href="../DataModelAndFileStructure/The_HDF5_Data_Model_and_File_Structure.htm#XREF_DataModelChapter">For more information, see &quot;The HDF5 Data Model and File Structure.&quot;</a></p>
 <p class="FM__Heading_Level2"><a name="TOC_3_2_File_Access_Modes"></a>3.2. <a name="XREF_FileAccessModes"></a>File Access Modes</p>
 <p class="FM__Body">There are two issues regarding file access:</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>What should happen when a new file is created but a file of the same name already exists? Should the create action fail, or should the existing file be overwritten?</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Is a file to be opened with read-only or read-write access?</p>
 <p class="FM__Body">Four access modes address these concerns. Two of these modes can be used with <span class="FM_Code">H5Fcreate</span>, and two modes can be used with <span class="FM_Code">H5Fopen</span>.</p>
 <p class="FM__ListBullets_Level1"><a name="IX_H5F_ACC_TRUNC_2"></a><a name="IX_H5F_ACC_EXCL_1"></a><a name="IX_H5Fcreate_1"></a>•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="FM_Code">H5Fcreate</span>&#160;accepts <span class="FM_Code">H5F_ACC_EXCL</span>&#160;or <span class="FM_Code">H5F_ACC_TRUNC</span>&#160;</p>
 <p class="FM__ListBullets_Level1"><a name="IX_H5F_ACC_RDWR"></a><a name="IX_H5F_ACC_RDONLY"></a><a name="IX_H5Fopen"></a>•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="FM_Code">H5Fopen</span>&#160;accepts <span class="FM_Code">H5F_ACC_RDONLY</span>&#160;or <span class="FM_Code">H5F_ACC_RDWR</span></p>
 <p class="FM__Body">The access modes are described in the table below.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionTable1" x-list-start="1">Table 3-1. Access flags and modes</caption>
  <tr style=" height : 23.00pt;">
  <th style="width : 132.924pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Access Flag</p>
</th>
  <th style="width : 299.076pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Resulting Access Mode</p>
</th>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 132.924pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5F_ACC_EXCL_2"></a><span class="FM_Code">H5F_ACC_EXCL</span></p>
</td>
  <td style="width : 299.076pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">If the file already exists, <span class="FM_Code">H5Fcreate</span>&#160;fails. If the file does not exist, it is created and opened with read-write access. <span class="FM_EI_EmphasisItalic">(Default)</span></p>
</td>
</tr>
  <tr style=" height : 49.00pt;">
  <td style="width : 132.924pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5F_ACC_TRUNC_3"></a><span class="FM_Code">H5F_ACC_TRUNC</span></p>
</td>
  <td style="width : 299.076pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">If the file already exists, the file is opened with read-write access, and new data will overwrite any existing data. If the file does not exist, it is created and opened with read-write access.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 132.924pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5F_ACC_RDONLY_1"></a><span class="FM_Code">H5F_ACC_RDONLY</span></p>
</td>
  <td style="width : 299.076pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">An existing file is opened with read-only access. If the file does not exist, <span class="FM_Code">H5Fopen</span>&#160;fails. <span class="FM_EI_EmphasisItalic">(Default)</span></p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 132.924pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5F_ACC_RDWR_1"></a><span class="FM_Code">H5F_ACC_RDWR</span></p>
</td>
  <td style="width : 299.076pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">An existing file is opened with read-write access. If the file does not exist, <span class="FM_Code">H5Fopen</span> fails.</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"><a name="IX_H5Fopen_1"></a>By default, <span class="FM_Code">H5Fopen</span>&#160;opens a file for read-only access; passing <span class="FM_Code">H5F_ACC_RDWR</span>&#160;allows read-write access to the file. </p>
 <p class="FM__Body"><a name="IX_H5Fcreate_2"></a>By default, <span class="FM_Code">H5Fcreate</span>&#160;fails if the file already exists; only passing <span class="FM_Code">H5F_ACC_TRUNC</span>&#160;allows the truncating of an existing file.</p>
 <p class="FM__Heading_Level2"><a name="TOC_3_3_File_Creation_and"></a>3.3. File Creation and File Access Properti<a name="XREF_FileCreationAndFileAccess"></a>es</p>
 <p class="FM__Body">File creation and file access property lists control the more complex aspects of creating and accessing files. </p>
 <p class="FM__Body"><a name="IX_file_creation_property"></a><span class="FM_EH_EmphasisHeavy">File creation property lists</span> control the characteristics of a file such as the size of the userblock, a user-definable data block; the size of data address parameters; properties of the B-trees that are used to man&#173;age the data in the file; and certain HDF5 library versioning information. </p>
 <p class="FM__Body"><a href="#XREF_FileCreationProperties">For more information, see &quot;File Creation Properties.&quot;</a>This section has a more detailed discus&#173;sion of file creation properties. If you have no special requirements for these file characteristics, you can simply specify <span class="FM_Code">H5P_DEFAULT</span>&#160;for the default file creation property list when a file creation property list is called for.</p>
 <p class="FM__Body"><a name="IX_file_access_property"></a><span class="FM_EH_EmphasisHeavy">File access property lists</span> control properties and means of accessing a file such as data alignment charac&#173;teristics, metadata block and cache sizes, data sieve buffer size, garbage collection settings, and parallel I/O. Data alignment, metadata block and cache sizes, and data sieve buffer size are factors in improving I/O performance.</p>
 <p class="FM__Body"><a href="#XREF_FileAccessProperties">For more information, see &quot;File Access Properties.&quot;</a>This section has a more detailed discussion of file access properties. If you have no special requirements for these file access characteristics, you can simply specify <span class="FM_Code">H5P_DEFAULT</span>&#160;for the default file access property list when a file access property list is called for.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:324.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure1" x-list-start="1" align="bottom">Figure 3-1. UML model for an HDF5 file and its property lists</caption>
  <tr style=" height : 200.66pt;">
  <td style="width : 324.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="UML_FileAndProps.gif" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:250px;" id="image0" src="UML_FileAndProps.gif" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level2"><a name="TOC_3_4_Low_level_File"></a>3.4. Low-level File Drivers</p>
 <p class="FM__Body">The concept of an HDF5 file is actually rather abstract: the address space for what is normally thought of as an HDF5 file might correspond to any of the following at the storage level:</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Single file on a standard file system</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Multiple files on a standard file system</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Multiple files on a parallel file system</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Block of memory within an application’s memory space</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>More abstract situations such as virtual files</p>
 <p class="FM__Body">This HDF5 address space is generally referred to as an <span class="FM_EI_EmphasisItalic">HDF5 file</span> regardless of its organization at the stor&#173;age level. </p>
 <p class="FM__Body">HDF5 accesses a file (the address space) through various types of <span class="FM_EI_EmphasisItalic">low-level file drivers</span>. The default HDF5 file storage layout is as an unbuffered permanent file which is a single, contiguous file on local disk. Alter&#173;native layouts are designed to suit the needs of a variety of systems, environments, and applications.</p>
 <p class="FM__Heading_Level2"><a name="TOC_3_5_Programming_Model"></a>3.5. <a name="XREF_PModel"></a>Programming Model for File<a name="XREF_ProgrammingModelForFiles"></a>s</p>
 <p class="FM__Body">Programming models for creating, opening, and closing HDF5 files are described in the sub-sections below.</p>
 <p class="FM__Heading_Level3"><a name="TOC_3_5_1_Creating_a_New_File"></a>3.5.1. Creating a New File</p>
 <p class="FM__Body">The programming model for creating a new HDF5 file can be summarized as follows:</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Define the file creation property list</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Define the file access property list</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Create the file</p>
 <p class="FM__Body">First, consider the simple case where we use the default values for the property lists. See the example below.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample1" x-list-start="1" align="bottom">Code Example 3-1. Creating an HDF5 file using property list defaults</caption>
  <tr style=" height : 35.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5F_ACC_EXCL_3"></a><a name="IX_H5Fcreate_3"></a>file_id = H5Fcreate (&quot;SampleFile.h5&quot;, H5F_ACC_EXCL,</p>
  <p class="FM__BodyCellCodeIndent">H5P_DEFAULT, H5P_DEFAULT)</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__CaptionNote">Note: The example above specifies that <span class="FM_Code">H5Fcreate</span>&#160;should fail if <span class="FM_Code">SampleFile.h5</span> already exists.</p>
 <p class="FM__Body">A more complex case is shown in the example below. In this example, we define file creation and access property lists (though we do not assign any properties), specify that <span class="FM_Code">H5Fcreate</span>&#160;should fail if <span class="FM_Code">Sample&#173;File.h5</span>&#160;already exists, and create a new file named <span class="FM_Code">SampleFile.h5</span>. The example does not specify a driver, so the default driver, <span class="FM_Code">H5FD_SEC2</span>, will be used.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-2. Creating an HDF5 file using property lists</caption>
  <tr style=" height : 87.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5P_FILE_CREATE_1"></a><a name="IX_H5Pcreate_2"></a>fcplist_id = H5Pcreate (H5P_FILE_CREATE)</p>
  <p class="FM__BodyCellCode">&lt;...<span class="FM_CodeItalic">set desired file creation properties</span>...&gt;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5P_FILE_ACCESS_1"></a><a name="IX_H5Pcreate_3"></a>faplist_id = H5Pcreate (H5P_FILE_ACCESS)</p>
  <p class="FM__BodyCellCode">&lt;...<span class="FM_CodeItalic">set desired file access properties</span>...&gt;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5F_ACC_EXCL_4"></a><a name="IX_H5Fcreate_4"></a>file_id = H5Fcreate (&quot;SampleFile.h5&quot;, H5F_ACC_EXCL, </p>
  <p class="FM__BodyCellCodeIndent">fcplist_id, faplist_id)</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_SubSection">Notes: </p>
 <p class="FM__Body">A root group is automatically created in a file when the file is first created.</p>
 <p class="FM__Body">File property lists, once defined, can be reused when another file is created within the same application.</p>
 <p class="FM__Heading_Level3"><a name="TOC_3_5_2_Opening_an"></a>3.5.2. Opening an Existing File</p>
 <p class="FM__Body">The programming model for opening an existing HDF5 file can be summarized as follows:</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Define or modify the file access property list including a low-level file driver (optional)</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Open the file</p>
 <p class="FM__Body">The code in the example below shows how to open an existing file with read-only access.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-3. Opening an HDF5 file</caption>
  <tr style=" height : 61.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5P_FILE_ACCESS_2"></a><a name="IX_H5Pcreate_4"></a>faplist_id = H5Pcreate (H5P_FILE_ACCESS)</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_stdio"></a>status = H5Pset_fapl_stdio (faplist_id)</p>
  <p class="FM__BodyCellCode"><a name="IX_H5F_ACC_RDONLY_2"></a><a name="IX_H5Fopen_2"></a>file_id = H5Fopen (&quot;SampleFile.h5&quot;, H5F_ACC_RDONLY, </p>
  <p class="FM__BodyCellCodeIndent">faplist_id)</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level3"><a name="TOC_3_5_3_Closing_a_File"></a>3.5.3. Closing a File</p>
 <p class="FM__Body">The programming model for closing an HDF5 file is very simple:</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Close file</p>
 <p class="FM__Body">We close <span class="FM_Code">SampleFile.h5</span> with the code in the example below.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-4. Closing an HDF5 file</caption>
  <tr style=" height : 22.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fclose_2"></a>status = H5Fclose (file_id)</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">Note that <span class="FM_Code">H5Fclose</span>&#160;flushes all unwritten data to storage and that <span class="FM_Code">file_id</span>&#160;is the identifier returned for <span class="FM_Code">SampleFile.h5</span>&#160;by <span class="FM_Code">H5Fopen</span>.</p>
 <p class="FM__Body">More comprehensive discussions regarding all of these steps are provided below.</p>
 <p class="FM__Heading_Level2"><a name="TOC_3_6_Using_h5dump_to_View"></a>3.6. <a name="XREF_H5Dump"></a>Using h5dump to View a File</p>
 <p class="FM__Body"><span class="FM_Code">h5dump</span>&#160;is a command-line utility that is included in the HDF5 distribution. This program provides a straight-forward means of inspecting the contents of an HDF5 file. You can use <span class="FM_Code">h5dump</span>&#160;to verify that a program is generating the intended HDF5 file. <span class="FM_Code">h5dump</span>&#160;displays ASCII output formatted according to the HDF5 DDL grammar.</p>
 <p class="FM__Body">The following <span class="FM_Code">h5dump</span>&#160;command will display the contents of <span class="FM_Code">SampleFile.h5</span>:</p>
 <p class="FM__BodyCodeIndent">h5dump SampleFile.h5 </p>
 <p class="FM__Body">If no datasets or groups have been created in and no data has been written to the file, the output will look something like the following:</p>
 <p class="FM__BodyCellCodeIndent">HDF5 &quot;SampleFile.h5&quot; {</p>
 <p class="FM__BodyCellCodeIndent">GROUP &quot;/&quot; {</p>
 <p class="FM__BodyCellCodeIndent">}</p>
 <p class="FM__BodyCellCodeIndent">}</p>
 <p class="FM__Body">Note that the root group, indicated above by <span class="FM_Code">/</span>, was automatically created when the file was created.</p>
 <p class="FM__Body"><span class="FM_Code">h5dump</span>&#160;is described on the <span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/RM/Tools.html">Tools</a></span>&#160;page of the <span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/RM/RM_H5Front.html">HDF5 Reference Manual</a></span>. The HDF5 DDL grammar is described in the document <span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/ddl.html">DDL in BNF for HDF5</a></span>.</p>
 <p class="FM__Heading_Level2"><a name="TOC_3_7_File_Function"></a>3.7. File <a name="XREF_FuncSumms"></a>Function Summaries</p>
 <p class="FM__Body">General library functions and macros (H5), file functions (H5F), file related property list functions (H5P), and file driver functions (H5P) are listed below.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-bottom:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionFunctionListing1" x-list-start="1">Function Listing 3-1. General library functions and macros (H5)</caption>
  <tr style=" height : 36.00pt;">
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">C Function</p>
  <p class="FM__Heading_Cell">Fortran Function</p>
</th>
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Purpose</p>
</th>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5check_version"></a><span class="FM_Code">H5check_version</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5check_version_f"></a><span class="FM_Code">h5check_version_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Verifies that HDF5 library versions are consis&#173;tent.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5close_1"></a><span class="FM_Code">H5close</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5close_f"></a><span class="FM_Code">h5close_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Flushes all data to disk, closes all open identi&#173;fiers, and cleans up memory.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5dont_atexit"></a><span class="FM_Code">H5dont_atexit</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5dont_atexit_f"></a><span class="FM_Code">h5dont_atexit_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Instructs the library not to install the <span class="FM_Code">atexit</span>&#160;cleanup routine.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5garbage_collect"></a><span class="FM_Code">H5garbage_collect</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5garbage_collect_f"></a><span class="FM_Code">h5garbage_collect_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Garbage collects on all free-lists of all types. </p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5get_libversion"></a><span class="FM_Code">H5get_libversion</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5get_libversion_f"></a><span class="FM_Code">h5get_libversion_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Returns the HDF library release number.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5open"></a><span class="FM_Code">H5open</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5open_f"></a><span class="FM_Code">h5open_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Initializes the HDF5 library.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5set_free_list_limits"></a><span class="FM_Code">H5set_free_list_limits</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5set_free_list_limits_f"></a><span class="FM_Code">h5set_free_list_limits_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets free-list size limits.</p>
</td>
</tr>
  <tr style=" height : 49.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5_VERSION_GE"></a><span class="FM_Code">H5_VERSION_GE</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Determines whether the version of the library being used is greater than or equal to the specified version.</p>
</td>
</tr>
  <tr style=" height : 49.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5_VERSION_LE"></a><span class="FM_Code">H5_VERSION_LE</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Determines whether the version of the library being used is less than or equal to the speci&#173;fied version.</p>
</td>
</tr>
 </table>
</div>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-bottom:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionFunctionListing">Function Listing 3-2. File functions (H5F)</caption>
  <tr style=" height : 36.00pt;">
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">C Function</p>
  <p class="FM__Heading_Cell">Fortran Function</p>
</th>
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Purpose</p>
</th>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fclear_elink_file_cache"></a><span class="FM_Code">H5Fclear_elink_file_cache</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Clears the external link open file cache for a file. </p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fclose_3"></a><span class="FM_Code">H5Fclose</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5fclose_f"></a><span class="FM_Code">h5fclose_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Closes HDF5 file.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fcreate_5"></a><span class="FM_Code">H5Fcreate</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5fcreate_f"></a><span class="FM_Code">h5fcreate_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Creates new HDF5 file.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fflush"></a><span class="FM_Code">H5Fflush</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5fflush_f"></a><span class="FM_Code">h5fflush_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Flushes data to HDF5 file on storage medium.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fget_access_plist"></a><span class="FM_Code">H5Fget_access_plist</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5fget_access_plist_f"></a><span class="FM_Code">h5fget_access_plist_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Returns a file access property list identifier.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fget_create_plist"></a><span class="FM_Code">H5Fget_create_plist</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5fget_create_plist_f"></a><span class="FM_Code">h5fget_create_plist_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Returns a file creation property list identifier.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fget_file_image"></a><span class="FM_Code">H5Fget_file_image</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5fget_file_image_f"></a><span class="FM_Code">h5fget_file_image_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Retrieves a copy of the image of an existing, open file. </p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fget_filesize"></a><span class="FM_Code">H5Fget_filesize</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5fget_filesize_f"></a><span class="FM_Code">h5fget_filesize_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Returns the size of an HDF5 file.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fget_freespace"></a><span class="FM_Code">H5Fget_freespace</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5fget_freespace_f"></a><span class="FM_Code">h5fget_freespace_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Returns the amount of free space in a file.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fget_info"></a><span class="FM_Code">H5Fget_info</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Returns global information for a file.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fget_intent"></a><span class="FM_Code">H5Fget_intent</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Determines the read/write or read-only status of a file.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fget_mdc_config"></a><span class="FM_Code">H5Fget_mdc_config</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Obtain current metadata cache configuration for target file.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fget_mdc_hit_rate"></a><span class="FM_Code">H5Fget_mdc_hit_rate</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Obtain target file’s metadata cache hit rate.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fget_mdc_size"></a><span class="FM_Code">H5Fget_mdc_size</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Obtain current metadata cache size data for specified file.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fget_mpi_atomicity"></a><span class="FM_Code">H5Fget_mpi_atomicity</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5fget_mpi_atomicity_f"></a><span class="FM_Code">h5fget_mpi_atomicity_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Retrieves the atomicity mode in use. </p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fget_name"></a><span class="FM_Code">H5Fget_name</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5fget_name_f"></a><span class="FM_Code">h5fget_name_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Retrieves the name of the file to which the object belongs.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fget_obj_count"></a><span class="FM_Code">H5Fget_obj_count</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5fget_obj_count_f"></a><span class="FM_Code">h5fget_obj_count_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Returns the number of open object identifiers for an open file.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fget_obj_ids"></a><span class="FM_Code">H5Fget_obj_ids</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5fget_obj_ids_f"></a><span class="FM_Code">h5fget_obj_ids_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Returns a list of open object identifiers.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fget_vfd_handle"></a><span class="FM_Code">H5Fget_vfd_handle</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Returns pointer to the file handle from the virtual file driver.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fis_hdf5"></a><span class="FM_Code">H5Fis_hdf5</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5fis_hdf5_f"></a><span class="FM_Code">h5fis_hdf5_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Determines whether a file is in the HDF5 for&#173;mat.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fmount"></a><span class="FM_Code">H5Fmount</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5fmount_f"></a><span class="FM_Code">h5fmount_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Mounts a file.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fopen_3"></a><span class="FM_Code">H5Fopen</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5fopen_f"></a><span class="FM_Code">h5fopen_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Opens existing HDF5 file.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Freopen"></a><span class="FM_Code">H5Freopen</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5freopen_f"></a><span class="FM_Code">h5freopen_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Returns a new identifier for a previously-opened HDF5 file.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Freset_mdc_hit_rate"></a><span class="FM_Code">H5Freset_mdc_hit_rate_stats</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine) </p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Reset hit rate statistics counters for the target file.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fset_mdc_config"></a><span class="FM_Code">H5Fset_mdc_config</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Use to configure metadata cache of target file. </p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fset_mpi_atomicity"></a><span class="FM_Code">H5Fset_mpi_atomicity</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5fset_mpi_atomicity_f"></a><span class="FM_Code">h5fset_mpi_atomicity_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Use to set the MPI atomicity mode. </p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Funmount"></a><span class="FM_Code">H5Funmount</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5funmount_f"></a><span class="FM_Code">h5funmount_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Unmounts a file.</p>
</td>
</tr>
 </table>
</div>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-bottom:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionFunctionListing">Function Listing 3-3. File creation property list function<a name="XREF_FileCreationPropertyListF"></a>s (H5P)</caption>
  <tr style=" height : 36.00pt;">
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">C Function</p>
  <p class="FM__Heading_Cell">Fortran Function</p>
</th>
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Purpose</p>
</th>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_userblock"></a><a name="IX_H5Pset_userblock"></a><span class="FM_Code">H5Pset/get_userblock</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_userblock_f"></a><a name="IX_h5pset_userblock_f"></a><span class="FM_Code">h5pset/get_userblock_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets/retrieves size of userblock.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_sizes"></a><a name="IX_H5Pset_sizes"></a><span class="FM_Code">H5Pset/get_sizes</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_sizes_f"></a><a name="IX_h5pset_sizes_f"></a><span class="FM_Code">h5pset/get_sizes_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets/retrieves byte size of offsets and lengths used to address objects in HDF5 file.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_sym_k"></a><a name="IX_H5Pset_sym_k"></a><span class="FM_Code">H5Pset/get_sym_k</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_sym_k_f"></a><a name="IX_h5pset_sym_k_f"></a><span class="FM_Code">h5pset/get_sym_k_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets/retrieves size of parameters used to con&#173;trol symbol table nodes.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_istore_k"></a><a name="IX_H5Pset_istore_k"></a><span class="FM_Code">H5Pset/get_istore_k</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_istore_k_f"></a><a name="IX_h5pset_istore_k_f"></a><span class="FM_Code">h5pset/get_istore_k_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets/retrieves size of parameter used to con&#173;trol B-trees for indexing chunked datasets.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_file_image"></a><span class="FM_Code">H5Pget_file_image</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_file_image_f"></a><span class="FM_Code">h5pget_file_image_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Retrieves a copy of the file image designated as the initial content and structure of a file. </p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_file_image"></a><span class="FM_Code">H5Pset_file_image</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pset_file_image_f"></a><span class="FM_Code">h5pset_file_image_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets an initial file image in a memory buffer.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_shared_mesg"></a><span class="FM_Code">H5Pset_shared_mesg_nindexes</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pset_shared_mesg_1"></a><span class="FM_Code">h5pset_shared_mesg_nindexes_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets number of shared object header mes&#173;sage indexes.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_shared_mesg"></a><span class="FM_Code">H5Pget_shared_mesg_nindexes</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Retrieves number of shared object header message indexes in file creation property list.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_shared_mesg_index"></a><span class="FM_Code">H5Pset_shared_mesg_index</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pset_shared_mesg_index_1"></a><span class="FM_Code">h5pset_shared_mesg_index_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Configures the specified shared object header message index.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_shared_mesg_index"></a><span class="FM_Code">H5Pget_shared_mesg_index</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Retrieves the configuration settings for a shared message index.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_shared_mesg_phase"></a><span class="FM_Code">H5Pset_shared_mesg_phase_change</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets shared object header message storage phase change thresholds. </p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_shared_mesg_phase"></a><span class="FM_Code">H5Pget_shared_mesg_phase_change</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Retrieves shared object header message phase change information. </p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_version"></a><span class="FM_Code">H5Pget_version</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_version_f"></a><span class="FM_Code">h5pget_version_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Retrieves version information for various objects for file creation property list.</p>
</td>
</tr>
 </table>
</div>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-bottom:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionFunctionListing">Function Listing 3-4. File access property list functio<a name="XREF_FileAccessPropertyListFun"></a>ns (H5P)</caption>
  <tr style=" height : 36.00pt;">
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">C Function</p>
  <p class="FM__Heading_Cell">Fortran Function</p>
</th>
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Purpose</p>
</th>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_alignment"></a><a name="IX_H5Pset_alignment"></a><span class="FM_Code">H5Pset/get_alignment</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_alignment_f"></a><a name="IX_h5pset_alignment_f"></a><span class="FM_Code">h5pset/get_alignment_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets/retrieves alignment properties.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_cache"></a><a name="IX_H5Pset_cache"></a><span class="FM_Code">H5Pset/get_cache</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_cache_f"></a><a name="IX_h5pset_cache_1"></a><span class="FM_Code">h5pset/get_cache_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets/retrieves metadata cache and raw data chunk cache parameters.</p>
</td>
</tr>
  <tr style=" height : 49.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_elink_file_cache"></a><a name="IX_H5Pset_elink_file_cache"></a><span class="FM_Code">H5Pset/get_elink_file_cache_size</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets/retrieves the size of the external link open file cache from the specified file access property list.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_fclose_degree"></a><a name="IX_H5Pset_fclose_degree_1"></a><span class="FM_Code">H5Pset/get_fclose_degree</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_fclose_degree_f"></a><a name="IX_h5pset_fclose_degree_f"></a><span class="FM_Code">h5pset/get_fclose_degree_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets/retrieves file close degree property.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_gc_references"></a><a name="IX_H5Pset_gc_references"></a><span class="FM_Code">H5Pset/get_gc_references</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_gc_references_f"></a><a name="IX_h5pset_gc_references_f"></a><span class="FM_Code">h5pset/get_gc_references_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets/retrieves garbage collecting references flag.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_family_offset"></a><span class="FM_Code">H5Pset_family_offset</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pset_family_offset_f"></a><span class="FM_Code">h5pset_family_offset_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets offset property for low-level access to a file in a family of files.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_family_offset"></a><span class="FM_Code">H5Pget_family_offset</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Retrieves a data offset from the file access property list.</p>
</td>
</tr>
  <tr style=" height : 49.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_meta_block_size"></a><a name="IX_H5Pset_meta_block_size"></a><span class="FM_Code">H5Pset/get_meta_block_size</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_meta_block_size_f"></a><a name="IX_h5pset_meta_block_size_f"></a><span class="FM_Code">h5pset/get_meta_block_size_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets the minimum metadata block size or retrieves the current metadata block size set&#173;ting.</p>
</td>
</tr>
  <tr style=" height : 49.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_mdc_config"></a><span class="FM_Code">H5Pset_mdc_config</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Set the initial metadata cache configuration in the indicated File Access Property List to the supplied value.</p>
</td>
</tr>
  <tr style=" height : 49.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_mdc_config"></a><span class="FM_Code">H5Pget_mdc_config</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Get the current initial metadata cache config&#173;uration from the indicated File Access Prop&#173;erty List.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_sieve_buf_size"></a><a name="IX_H5Pset_sieve_buf_size"></a><span class="FM_Code">H5Pset/get_sieve_buf_size</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_sieve_buf_size_f"></a><a name="IX_h5pset_sieve_buf_size_f"></a><span class="FM_Code">h5pset/get_sieve_buf_size_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets/retrieves maximum size of data sieve buffer.</p>
</td>
</tr>
  <tr style=" height : 49.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_libver_bounds"></a><span class="FM_Code">H5Pset_libver_bounds</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pset_libver_bounds_f"></a><span class="FM_Code">h5pset_libver_bounds_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets bounds on library versions, and indirectly format versions, to be used when creating objects.</p>
</td>
</tr>
  <tr style=" height : 49.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_libver_bounds"></a><span class="FM_Code">H5Pget_libver_bounds</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine) </p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Retrieves library version bounds settings that indirectly control the format versions used when creating objects.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_small_data_block"></a><span class="FM_Code">H5Pset_small_data_block_size</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pset_small_data_block_1"></a><span class="FM_Code">h5pset_small_data_block_size_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets the size of a contiguous block reserved for small data.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_small_data_block"></a><span class="FM_Code">H5Pget_small_data_block_size</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_small_data_block_1"></a><span class="FM_Code">h5pget_small_data_block_size_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Retrieves the current small data block size setting.</p>
</td>
</tr>
 </table>
</div>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-bottom:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionFunctionListing">Function Listing 3-5. File driver function<a name="XREF_FileDriverFunctions"></a>s (H5P)</caption>
  <tr style=" height : 36.00pt;">
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">C Function</p>
  <p class="FM__Heading_Cell">Fortran Function</p>
</th>
  <th style="width : 216.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell"> Purpose</p>
</th>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_driver"></a><span class="FM_Code">H5Pset_driver</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets a file driver.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_driver"></a><span class="FM_Code">H5Pget_driver</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_driver_f"></a><span class="FM_Code">h5pget_driver_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Returns the identifier for the driver used to create a file.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_driver_info"></a><span class="FM_Code">H5Pget_driver_info</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Returns a pointer to file driver information.</p>
</td>
</tr>
  <tr style=" height : 49.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_fapl_core"></a><a name="IX_H5Pset_fapl_core"></a><span class="FM_Code">H5Pset/get_fapl_core</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_fapl_core_f"></a><a name="IX_h5pset_fapl_core_1"></a><span class="FM_Code">h5pset/get_fapl_core_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets the driver for buffered memory files (in RAM) or retrieves information regarding the driver.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_direct"></a><span class="FM_Code">H5Pset_fapl_direct</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pset_fapl_direct_f"></a><span class="FM_Code">h5pset_fapl_direct_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets up use of the direct I/O driver.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_fapl_direct"></a><span class="FM_Code">H5Pget_fapl_direct</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_fapl_direct_f"></a><span class="FM_Code">h5pget_fapl_direct_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Retrieves the direct I/O driver settings.</p>
</td>
</tr>
  <tr style=" height : 62.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_fapl_family"></a><a name="IX_H5Pset_fapl_family"></a><span class="FM_Code">H5Pset/get_fapl_family</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_fapl_family_f"></a><a name="IX_h5pset_fapl_family_1"></a><span class="FM_Code">h5pset/get_fapl_family_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets driver for file families, designed for sys&#173;tems that do not support files larger than 2 gigabytes, or retrieves information regarding driver.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_log"></a><span class="FM_Code">H5Pset_fapl_log</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets logging driver.</p>
</td>
</tr>
  <tr style=" height : 49.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_fapl_mpio"></a><a name="IX_H5Pset_fapl_mpio"></a><span class="FM_Code">H5Pset/get_fapl_mpio</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_fapl_mpio_f"></a><a name="IX_h5pset_fapl_mpio_f"></a><span class="FM_Code">h5pset/get_fapl_mpio_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets driver for files on parallel file systems (MPI I/O) or retrieves information regarding the driver.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_mpiposix"></a><span class="FM_Code">H5Pset_fapl_mpiposix</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pset_fapl_mpiposix_f"></a><span class="FM_Code">h5pset_fapl_mpiposix_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">No longer available.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_fapl_mpiposix"></a><span class="FM_Code">H5Pget_fapl_mpiposix</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_fapl_mpiposix_f"></a><span class="FM_Code">h5pget_fapl_mpiposix_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">No longer available.</p>
</td>
</tr>
  <tr style=" height : 49.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_fapl_multi"></a><a name="IX_H5Pset_fapl_multi"></a><span class="FM_Code">H5Pset/get_fapl_multi</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pget_fapl_multi_f"></a><a name="IX_h5pset_fapl_multi_f"></a><span class="FM_Code">h5pset/get_fapl_multi_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets driver for multiple files, separating cate&#173;gories of metadata and raw data, or retrieves information regarding driver.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_sec2"></a><span class="FM_Code">H5Pset_fapl_sec2</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pset_fapl_sec2_f"></a><span class="FM_Code">h5pset_fapl_sec2_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets driver for unbuffered permanent files or retrieves information regarding driver.</p>
</td>
</tr>
  <tr style=" height : 49.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_split"></a><span class="FM_Code">H5Pset_fapl_split</span></p>
  <p class="FM__BodyCellCode"><a name="IX_h5pset_fapl_split_f"></a><span class="FM_Code">h5pset_fapl_split_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets driver for split files, a limited case of mul&#173;tiple files with one metadata file and one raw data file.</p>
</td>
</tr>
  <tr style=" height : 35.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_stdio_1"></a><span class="FM_Code">H5Pset_fapl_stdio</span></p>
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_stdio_f"></a><span class="FM_Code">H5Pset_fapl_stdio_f</span></p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets driver for buffered permanent files.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_windows"></a><span class="FM_Code">H5Pset_fapl_windows</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Sets the Windows I/O driver.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_multi_type"></a><span class="FM_Code">H5Pset_multi_type</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Specifies type of data to be accessed via the MULTI driver enabling more direct access.</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_multi_type"></a><span class="FM_Code">H5Pget_multi_type</span></p>
  <p class="FM__BodyCell">(no Fortran subroutine)</p>
</td>
  <td style="width : 216.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Retrieves type of data property for MULTI driver.</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level2"><a name="TOC_3_8_Creating_or_Opening"></a>3.8. <a name="XREF_CrOpen"></a>Creating or Opening an HDF5 File</p>
 <p class="FM__Body">This section describes in more detail how to create and how to open files. </p>
 <p class="FM__Body">New HDF5 files are created and opened with <span class="FM_Code">H5Fcreate</span>; existing files are opened with <span class="FM_Code">H5Fopen</span>. Both functions return an object identifier which must eventually be released by calling <span class="FM_Code">H5Fclose</span>.</p>
 <p class="FM__Body"><span class="FM_EH_EmphasisHeavy">To create a new file</span>, call <span class="FM_Code">H5Fcreate</span>:</p>
 <p class="FM__BodyCellCodeIndent"><a name="IX_H5Fcreate_6"></a>hid_t H5Fcreate (const char *<span class="FM_CodeItalic">name</span>, unsigned <span class="FM_CodeItalic">flags</span>, hid_t <span class="FM_CodeItalic">fcpl_id</span>, </p>
 <p class="FM__BodyCellCodeIndent"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>hid_t <span class="FM_CodeItalic">fapl_id</span>)</p>
 <p class="FM__Body"><span class="FM_Code">H5Fcreate</span>&#160;creates a new file named <span class="FM_CodeItalic">name</span>&#160;in the current directory. The file is opened with read and write access; if the <span class="FM_Code">H5F_ACC_TRUNC</span>&#160;flag is set, any pre-existing file of the same name in the same directory is truncated. If <span class="FM_Code">H5F_ACC_TRUNC</span>&#160;is not set or <span class="FM_Code">H5F_ACC_EXCL</span>&#160;is set and if a file of the same name exists, <span class="FM_Code">H5Fcreate</span>&#160;will fail. </p>
 <p class="FM__Body">The new file is created with the properties specified in the property lists <span class="FM_CodeItalic">fcpl_id</span>&#160;and <span class="FM_CodeItalic">fapl_id</span>. <span class="FM_Code">fcpl</span>&#160;is short for file creation property list. <span class="FM_Code">fapl</span>&#160;is short for file access property list. Specifying <span class="FM_Code">H5P_DEFAULT</span>&#160;for either the creation or access property list calls for the library’s default creation or access properties.</p>
 <p class="FM__Body">If <span class="FM_Code">H5Fcreate</span>&#160;successfully creates the file, it returns a file identifier for the new file. This identifier will be used by the application any time an object identifier, an OID, for the file is required. Once the application has finished working with a file, the identifier should be released and the file closed with <span class="FM_Code">H5Fclose</span>. </p>
 <p class="FM__Body"><span class="FM_EH_EmphasisHeavy">To open an existing file</span>, call <span class="FM_Code">H5Fopen</span>:</p>
 <p class="FM__BodyCellCodeIndent"><a name="IX_H5Fopen_4"></a>hid_t H5Fopen (const char *<span class="FM_CodeItalic">name</span>, unsigned <span class="FM_CodeItalic">flags</span>, hid_t <span class="FM_CodeItalic">fapl_id</span>) </p>
 <p class="FM__Body"><a name="IX_H5F_ACC_RDONLY_3"></a><a name="IX_H5F_ACC_RDWR_2"></a><span class="FM_Code">H5Fopen</span>&#160;opens an existing file with read-write access if <span class="FM_Code">H5F_ACC_RDWR</span>&#160;is set and read-only access if <span class="FM_Code">H5F_ACC_RDONLY</span>&#160;is set. </p>
 <p class="FM__Body"><span class="FM_CodeItalic">fapl_id</span>&#160;is the file access property list identifier. Alternatively, <span class="FM_Code">H5P_DEFAULT</span> indicates that the applica&#173;tion relies on the default I/O access parameters. Creating and changing access property lists is docu&#173;mented further below. </p>
 <p class="FM__Body">A file can be opened more than once via multiple <span class="FM_Code">H5Fopen</span> calls. Each such call returns a unique file iden&#173;tifier and the file can be accessed through any of these file identifiers as long as they remain valid. Each of these file identifiers must be released by calling <span class="FM_Code">H5Fclose</span>&#160;when it is no longer needed. </p>
 <p class="FM__Body"><a href="#XREF_FileAccessModes">For more information, see &quot;File Access Modes.&quot;</a></p>
 <p class="FM__Body"><a href="#XREF_PLists">For more information, see &quot;File Property Lists.&quot;</a>&#160;</p>
 <p class="FM__Heading_Level2"><a name="TOC_3_9_Closing_an_HDF5_File"></a>3.9. <a name="XREF_Close"></a>Closing an HDF5 File</p>
 <p class="FM__Body"><span class="FM_Code">H5Fclose</span>&#160;both closes a file and releases the file identifier returned by <span class="FM_Code">H5Fopen</span>&#160;or <span class="FM_Code">H5Fcreate</span>. <span class="FM_Code">H5F&#173;close</span>&#160;must be called when an application is done working with a file; while the HDF5 Library makes every effort to maintain file integrity, failure to call <span class="FM_Code">H5Fclose</span>&#160;may result in the file being abandoned in an incomplete or corrupted state. </p>
 <p class="FM__Body"><span class="FM_EH_EmphasisHeavy">To close a file</span>, call <span class="FM_Code">H5Fclose</span>:</p>
 <p class="FM__BodyCellCodeIndent"><a name="IX_H5Fclose_4"></a>herr_t H5Fclose (hid_t <span class="FM_CodeItalic">file_id</span>)</p>
 <p class="FM__Body">This function releases resources associated with an open file. After closing a file, the file identifier, <span class="FM_CodeItalic">file_id</span>, cannot be used again as it will be undefined.</p>
 <p class="FM__Body"><span class="FM_Code">H5Fclose</span>&#160;fulfills three purposes: to ensure that the file is left in an uncorrupted state, to ensure that all data has been written to the file, and to release resources. Use <span class="FM_LT_LinkTextCode"><a href="http://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-Flush">H5Fflush</a></span>&#160;if you wish to ensure that all data has been written to the file but it is premature to close it.</p>
 <p class="FM__Body"><span class="FM_EI_EmphasisItalic">Note regarding serial mode behavior:</span>&#160;When <span class="FM_Code">H5Fclose</span> is called in serial mode, it closes the file and termi&#173;nates new access to it, but it does not terminate access to objects that remain individually open within the file. That is, if <span class="FM_Code">H5Fclose</span>&#160;is called for a file but one or more objects within the file remain open, those objects will remain accessible until they are individually closed. To illustrate, assume that a file, <span class="FM_Code">fileA</span>, contains a dataset, <span class="FM_Code">data_setA</span>, and that both are open when <span class="FM_Code">H5Fclose</span>&#160;is called for <span class="FM_Code">fileA</span>. <span class="FM_Code">data_setA</span>&#160;will remain open and accessible, including writable, until it is explicitly closed. The file will be automati&#173;cally and finally closed once all objects within it have been closed.</p>
 <p class="FM__Body"><span class="FM_EI_EmphasisItalic">Note regarding parallel mode behavior: </span>Once <span class="FM_Code">H5Fclose</span>&#160;has been called in parallel mode, access is no longer available to any object within the file.</p>
 <p class="FM__Heading_Level2"><a name="TOC_3_10_File_Property_Lists"></a>3.10. <a name="XREF_PLists"></a>File Property Lis<a name="XREF_FilePropertyLists"></a>ts</p>
 <p class="FM__Body">Additional information regarding file structure and access are passed to <span class="FM_Code">H5Fcreate</span>&#160;and <span class="FM_Code">H5Fopen</span>&#160;through property list objects. Property lists provide a portable and extensible method of modifying file properties via simple API functions. There are two kinds of file-related property lists: </p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>File creation property lists</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>File access property lists</p>
 <p class="FM__Body">In the following sub-sections, we discuss only one file creation property, userblock size, in detail as a model for the user. Other file creation and file access properties are mentioned and defined briefly, but the model is not expanded for each; complete syntax, parameter, and usage information for every prop&#173;erty list function is provided in the &quot;<span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html">H5P: Property List Interface</a></span>&quot; section of the <span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/RM/RM_H5Front.html">HDF5 Reference Manual</a></span>. <a href="../PropertyLists/Properties_and_Property_Lists_in_HDF5.htm#XREF_PropertyListsChapter">For more information, see &quot;Properties and Property Lists in HDF5.&quot;</a></p>
 <p class="FM__Heading_Level3"><a name="TOC_3_10_1_Creating_a"></a>3.10.1. Creating a Property List</p>
 <p class="FM__Body">If you do not wish to rely on the default file creation and access properties, you must first create a prop&#173;erty list with <span class="FM_Code">H5Pcreate</span>.</p>
 <p class="FM__BodyCodeIndent"><a name="IX_H5Pcreate_5"></a>hid_t H5Pcreate (hid_t <span class="FM_CodeItalic">cls_id</span>)</p>
 <p class="FM__Body"><a name="IX_H5P_FILE_ACCESS_3"></a><a name="IX_H5P_FILE_CREATE_2"></a><span class="FM_CodeItalic">type</span>&#160;is the type of property list being created. In this case, the appropriate values are <span class="FM_Code">H5P_FILE_CRE&#173;ATE</span>&#160;for a file creation property list and <span class="FM_Code">H5P_FILE_ACCESS</span> for a file access property list.</p>
 <p class="FM__Body">Thus, the following calls create a file creation property list and a file access property list with identifiers <span class="FM_CodeItalic">fcpl_id</span>&#160;and <span class="FM_CodeItalic">fapl_id</span>, respectively:</p>
 <p class="FM__BodyCellCodeIndent">fcpl_id = H5Pcreate (H5P_FILE_CREATE) </p>
 <p class="FM__BodyCellCodeIndent">fapl_id = H5Pcreate (H5P_FILE_ACCESS) </p>
 <p class="FM__Body">Once the property lists have been created, the properties themselves can be modified via the functions described in the following sub-sections.</p>
 <p class="FM__Heading_Level3"><a name="TOC_3_10_2_File_Creation"></a>3.10.2. <a name="XREF_FileCreationProperties"></a>File Creation Properties</p>
 <p class="FM__Body"><a name="IX_superblock"></a>File creation property lists control the file metadata, which is maintained in the superblock of the file. These properties are used only when a file is first created.</p>
 <p class="FM__Heading_SubSection">Userblock Size</p>
 <p class="FM__BodyCellCodeIndent"><a name="IX_H5Pset_userblock_1"></a>herr_t H5Pset_userblock (hid_t <span class="FM_CodeItalic">plist</span>, hsize_t <span class="FM_CodeItalic">size</span>)</p>
 <p class="FM__BodyCellCodeIndent"><a name="IX_H5Pget_userblock_1"></a>herr_t H5Pget_userblock (hid_t <span class="FM_CodeItalic">plist</span>, hsize_t *<span class="FM_CodeItalic">size</span>)</p>
 <p class="FM__Body"><a name="IX_userblock"></a>The <span class="FM_EI_EmphasisItalic">userblock</span>&#160;is a fixed-length block of data located at the beginning of the file and is ignored by the HDF5 Library. This block is specifically set aside for any data or information that developers determine to be use&#173;ful to their applications but that will not be used by the HDF5 Library. The <span class="FM_CodeItalic">size</span>&#160;of the userblock is defined in bytes and may be set to any power of two with a minimum size of 512 bytes. In other words, userblocks might be 512, 1024, or 2048 bytes in size. </p>
 <p class="FM__Body">This property is set with <span class="FM_Code">H5Pset_userblock</span>&#160;and queried via <span class="FM_Code">H5Pget_userblock</span>. For example, if an application needed a 4K userblock, then the following function call could be used:</p>
 <p class="FM__BodyCodeIndent">status = H5Pset_userblock(fcpl_id, 4096)</p>
 <p class="FM__Body">The property list could later be queried with </p>
 <p class="FM__BodyCodeIndent">status = H5Pget_userblock(fcpl_id, size)</p>
 <p class="FM__Body">and the value <span class="FM_Code">4096</span>&#160;would be returned in the parameter <span class="FM_CodeItalic">size</span>.</p>
 <p class="FM__Body">Other properties, described below, are set and queried in exactly the same manner. Syntax and usage are detailed in the &quot;<span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html">H5P: Property List Interface</a></span>&quot; section of the <span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/RM/RM_H5Front.html">HDF5 Reference Manual</a></span>.</p>
 <p class="FM__Heading_SubSection">Offset and Length Sizes</p>
 <p class="FM__Body">This property specifies the number of bytes used to store the offset and length of objects in the HDF5 file. Values of 2, 4, and 8 bytes are currently supported to accommodate 16-bit, 32-bit, and 64-bit file address spaces. </p>
 <p class="FM__Body"><a name="IX_H5Pget_sizes_1"></a><a name="IX_H5Pset_sizes_1"></a>These properties are set and queried via <span class="FM_Code">H5Pset_sizes</span>&#160;and <span class="FM_Code">H5Pget_sizes</span>. </p>
 <p class="FM__Heading_SubSection">Symbol Table Parameters</p>
 <p class="FM__Body">The size of symbol table B-trees can be controlled by setting the 1/2-rank and 1/2-node size parameters of the B-tree. </p>
 <p class="FM__Body"><a name="IX_H5Pget_sym_k_1"></a><a name="IX_H5Pset_sym_k_1"></a>These properties are set and queried via <span class="FM_Code">H5Pset_sym_k</span>&#160;and <span class="FM_Code">H5Pget_sym_k</span>. </p>
 <p class="FM__Heading_SubSection">Indexed Storage Parameters</p>
 <p class="FM__Body">The size of indexed storage B-trees can be controlled by setting the 1/2-rank and 1/2-node size parameters of the B-tree. </p>
 <p class="FM__Body"><a name="IX_H5Pget_istore_k_1"></a><a name="IX_H5Pset_istore_k_1"></a>These properties are set and queried via <span class="FM_Code">H5Pset_istore_k</span>&#160;and <span class="FM_Code">H5Pget_istore_k</span>. </p>
 <p class="FM__Heading_SubSection">Version Information</p>
 <p class="FM__Body">Various objects in an HDF5 file may over time appear in different versions. The HDF5 Library keeps track of the version of each object in the file. </p>
 <p class="FM__Body"><a name="IX_H5Pget_version_1"></a>Version information is retrieved via <span class="FM_Code">H5Pget_version</span>.</p>
 <p class="FM__Heading_Level3"><a name="TOC_3_10_3_File_Access"></a>3.10.3. <a name="XREF_FileAccessProperties"></a>File Access Properties</p>
 <p class="FM__Body">This section discusses file access properties that are not related to the low-level file drivers. File drivers are discussed separately later in this chapter. <a href="#XREF_Drivers">For more information, see &quot;Alternate File Storage Layouts and Low-level File Drivers.&quot;</a></p>
 <p class="FM__Body">File access property lists control various aspects of file I/O and structure. </p>
 <p class="FM__Heading_SubSection">Data Alignment</p>
 <p class="FM__Body"><a name="IX_H5Pset_alignment_1"></a>Sometimes file access is faster if certain data elements are aligned in a specific manner. This can be con&#173;trolled by setting alignment properties via the <span class="FM_Code">H5Pset_alignment</span>&#160;function. There are two values involved:</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>A threshold value</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>An alignment interval</p>
 <p class="FM__Body">Any allocation request at least as large as the threshold will be aligned on an address that is a multiple of the alignment interval. </p>
 <p class="FM__Heading_SubSection">Metadata Block Allocation Size</p>
 <p class="FM__Body">Metadata typically exists as very small chunks of data; storing metadata elements in a file without block&#173;ing them can result in hundreds or thousands of very small data elements in the file. This can result in a highly fragmented file and seriously impede I/O. By blocking metadata elements, these small elements can be grouped in larger sets, thus alleviating both problems. </p>
 <p class="FM__Body"><a name="IX_H5Pget_meta_block_size_1"></a><a name="IX_H5Pset_meta_block_size_1"></a><span class="FM_Code">H5Pset_meta_block_size</span>&#160;sets the minimum size in bytes of metadata block allocations. <span class="FM_Code">H5Pget_meta_block_size</span> retrieves the current minimum metadata block allocation size.</p>
 <p class="FM__Heading_SubSection">Metadata Cache</p>
 <p class="FM__Body">Metadata and raw data I/O speed are often governed by the size and frequency of disk reads and writes. In many cases, the speed can be substantially improved by the use of an appropriate cache.</p>
 <p class="FM__Body"><a name="IX_H5Pget_cache_1"></a><a name="IX_H5Pset_cache_2"></a><span class="FM_Code">H5Pset_cache</span>&#160;sets the minimum cache size for both metadata and raw data and a preemption value for raw data chunks. <span class="FM_Code">H5Pget_cache</span>&#160;retrieves the current values. </p>
 <p class="FM__Heading_SubSection">Data Sieve Buffer Size</p>
 <p class="FM__Body">Data sieve buffering is used by certain file drivers to speed data I/O and is most commonly when working with dataset hyperslabs. For example, using a buffer large enough to hold several pieces of a dataset as it is read in for hyperslab selections will boost performance noticeably.</p>
 <p class="FM__Body"><a name="IX_H5Pget_sieve_buf_size_1"></a><a name="IX_H5Pset_sieve_buf_size_1"></a><span class="FM_Code">H5Pset_sieve_buf_size</span>&#160;sets the maximum size in bytes of the data sieve buffer. <span class="FM_Code">H5Pget_sieve_buf_size</span>&#160;retrieves the current maximum size of the data sieve buffer. </p>
 <p class="FM__Heading_SubSection">Garbage Collection References</p>
 <p class="FM__Body">Dataset region references and other reference types use space in an HDF5 file’s global heap. If garbage collection is on (<span class="FM_Code">1</span>) and the user passes in an uninitialized value in a reference structure, the heap might become corrupted. When garbage collection is off (<span class="FM_Code">0</span>), however, and the user re-uses a reference, the pre&#173;vious heap block will be orphaned and not returned to the free heap space. When garbage collection is on, the user must initialize the reference structures to <span class="FM_Code">0</span> or risk heap corruption.</p>
 <p class="FM__Body"><a name="IX_H5Pset_gc_references_1"></a><span class="FM_Code">H5Pset_gc_references</span>&#160;sets the garbage collecting references flag. </p>
 <p class="FM__Heading_Level2"><a name="TOC_3_11_Alternate_File"></a>3.11. <a name="XREF_Drivers"></a>Alternate File Storage Layouts and Low-level File Drive<a name="XREF_AlternateFileStorageLayou"></a>rs</p>
 <p class="FM__Body">The concept of an HDF5 file is actually rather abstract: the address space for what is normally thought of as an HDF5 file might correspond to any of the following:</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Single file on standard file system</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Multiple files on standard file system</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Multiple files on parallel file system</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Block of memory within application’s memory space</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>More abstract situations such as virtual files </p>
 <p class="FM__Body">This HDF5 address space is generally referred to as an <span class="FM_EI_EmphasisItalic">HDF5 file</span> regardless of its organization at the stor&#173;age level. </p>
 <p class="FM__Body"><a name="IX_VFL"></a><a name="IX_virtual_file_layer_1"></a>HDF5 employs an extremely flexible mechanism called the <span class="FM_EI_EmphasisItalic">virtual file layer</span>, or VFL, for file I/O. A full understanding of the VFL is only necessary if you plan to write your own drivers (see &quot;<span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/TechNotes/VFL.html">Virtual File Layer</a></span>&quot; and &quot;<span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/TechNotes/VFLfunc.html">List of VFL Functions</a></span>&quot; in the <span class="FM_EI_EmphasisItalic">HDF5 Technical Notes</span>). For our purposes here, it is sufficient to know that the low-level drivers used for file I/O reside in the VFL, as illustrated in the following figure. Note that <span class="FM_Code">H5FD_STREAM</span> is not available with 1.8.x and later versions of the library.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:450.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure" align="bottom">Figure 3-2. I/O path from application to VFL and low-level drivers to storage</caption>
  <tr style=" height : 357.22pt;">
  <td style="width : 450.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="VFL_Drivers.jpg" id="image1" src="VFL_Drivers.jpg" style="width:100%; max-width:576px" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"><a name="IX_low_level_file_drivers"></a>As mentioned above, HDF5 applications access HDF5 files through various <span class="FM_EI_EmphasisItalic">low-level file drivers</span>. The default driver for that layout is the POSIX driver (also known as the SEC2 driver), <span class="FM_Code">H5FD_SEC2</span>. Alternative layouts and drivers are designed to suit the needs of a variety of systems, environments, and applications. The drivers are listed in the table below. </p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionTable">Table 3-2. Supported file drivers</caption>
  <tr style=" height : 36.00pt;">
  <th style="width : 72.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Driver Name</p>
</th>
  <th style="width : 100.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Driver </p>
  <p class="FM__Heading_Cell">Identifier</p>
</th>
  <th style="width : 120.600pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Description</p>
</th>
  <th style="width : 138.600pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Related API</p>
</th>
</tr>
  <tr style=" height : 140.00pt;">
  <td style="width : 72.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell"><a name="IX_POSIX"></a>POSIX </p>
</td>
  <td style="width : 100.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5FD_SEC2"></a>H5FD_SEC2</p>
</td>
  <td style="width : 120.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">This driver uses POSIX file-system functions like read and write to perform I/O to a single, permanent file on local disk with no system buffering. This driver is POSIX-compliant and is <span class="FM_EH_EmphasisHeavy">the default file driver for all systems</span>. </p>
</td>
  <td style="width : 138.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_sec2_1"></a><span class="FM_Code">H5Pset_fapl_sec2</span></p>
</td>
</tr>
  <tr style=" height : 88.00pt;">
  <td style="width : 72.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell"><a name="IX_Direct"></a>Direct</p>
</td>
  <td style="width : 100.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5FD_DIRECT"></a>H5FD_DIRECT</p>
</td>
  <td style="width : 120.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">This is the <span class="FM_Code">H5FD_SEC2</span>&#160;driver except data is written to or read from the file synchronously without being cached by the system. </p>
</td>
  <td style="width : 138.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_direct_1"></a><span class="FM_Code">H5Pset_fapl_direct</span></p>
</td>
</tr>
  <tr style=" height : 49.00pt;">
  <td style="width : 72.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Log</p>
</td>
  <td style="width : 100.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5FD_LOG"></a>H5FD_LOG</p>
</td>
  <td style="width : 120.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">This is the <span class="FM_Code">H5FD_SEC2</span>&#160;driver with logging capabilities.</p>
</td>
  <td style="width : 138.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_log_1"></a><span class="FM_Code">H5Pset_fapl_log</span></p>
</td>
</tr>
  <tr style=" height : 88.00pt;">
  <td style="width : 72.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Windows</p>
</td>
  <td style="width : 100.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5FD_WINDOWS"></a>H5FD_WINDOWS</p>
</td>
  <td style="width : 120.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">This driver was modified in HDF5-1.8.8 to be a wrapper of the POSIX driver, <span class="FM_Code">H5FD_SEC2</span>. This change should not affect user applications.</p>
</td>
  <td style="width : 138.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_windows_1"></a><span class="FM_Code">H5Pset_fapl_windows</span></p>
</td>
</tr>
  <tr style=" height : 101.00pt;">
  <td style="width : 72.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">STDIO</p>
</td>
  <td style="width : 100.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5FD_STDIO"></a>H5FD_STDIO</p>
</td>
  <td style="width : 120.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">This driver uses func&#173;tions from the standard C <span class="FM_Code">stdio.h</span>&#160;to perform I/O to a single, perma&#173;nent file on local disk with additional system buffering. </p>
</td>
  <td style="width : 138.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_stdio_2"></a>H5Pset_fapl_stdio</p>
</td>
</tr>
  <tr style=" height : 153.00pt;">
  <td style="width : 72.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Memory</p>
</td>
  <td style="width : 100.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5FD_CORE"></a>H5FD_CORE</p>
</td>
  <td style="width : 120.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">With this driver, an application can work with a file in memory for faster reads and writes. File contents are kept in memory until the file is closed. At clos&#173;ing, the memory version of the file can be writ&#173;ten back to disk or abandoned. </p>
</td>
  <td style="width : 138.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_core_2"></a>H5Pset_fapl_core</p>
</td>
</tr>
  <tr style=" height : 140.00pt;">
  <td style="width : 72.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Family</p>
</td>
  <td style="width : 100.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5FD_FAMILY"></a>H5FD_FAMILY</p>
</td>
  <td style="width : 120.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">With this driver, the HDF5 file’s address space is partitioned into pieces and sent to sepa&#173;rate storage files using an underlying driver of the user’s choice. This driver is for systems that do not support files larger than 2 gigabytes.</p>
</td>
  <td style="width : 138.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_family_2"></a>H5Pset_fapl_family</p>
</td>
</tr>
  <tr style=" height : 140.00pt;">
  <td style="width : 72.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Multi</p>
</td>
  <td style="width : 100.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5FD_MULTI"></a>H5FD_MULTI</p>
</td>
  <td style="width : 120.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">With this driver, data can be stored in multi&#173;ple files according to the type of the data. I/O might work better if data is stored in sepa&#173;rate files based on the type of data. The Split driver is a special case of this driver.</p>
</td>
  <td style="width : 138.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_multi_1"></a>H5Pset_fapl_multi</p>
</td>
</tr>
  <tr style=" height : 114.00pt;">
  <td style="width : 72.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Split</p>
</td>
  <td style="width : 100.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5FD_SPLIT"></a>H5FD_SPLIT</p>
</td>
  <td style="width : 120.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">This file driver splits a file into two parts. One part stores metadata, and the other part stores raw data. This splitting a file into two parts is a limited case of the Multi driver. </p>
</td>
  <td style="width : 138.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_split_1"></a>H5Pset_fapl_split</p>
</td>
</tr>
  <tr style=" height : 88.00pt;">
  <td style="width : 72.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Parallel</p>
</td>
  <td style="width : 100.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5FD_MPIO"></a>H5FD_MPIO</p>
</td>
  <td style="width : 120.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">This is the standard HDF5 file driver for par&#173;allel file systems. This driver uses the MPI standard for both com&#173;munication and file I/O. </p>
</td>
  <td style="width : 138.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_mpio_1"></a>H5Pset_fapl_mpio</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 72.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Parallel POSIX</p>
</td>
  <td style="width : 100.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5FD_MPIPOSIX"></a>H5FD_MPIPOSIX</p>
</td>
  <td style="width : 120.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">This driver is no longer available.</p>
</td>
  <td style="width : 138.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">&nbsp;</p>
</td>
</tr>
  <tr style=" height : 36.00pt;">
  <td style="width : 72.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Stream</p>
</td>
  <td style="width : 100.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5FD_STREAM"></a>H5FD_STREAM</p>
</td>
  <td style="width : 120.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">This driver is no longer available.</p>
</td>
  <td style="width : 138.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">For more information, see the <span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/RM/RM_H5Front.html">HDF5 Reference Manual</a></span>&#160;entries for the function calls shown in the column on the right in the table above. </p>
 <p class="FM__Body"><a name="IX_dataset_storage_layouts"></a><a name="IX_file_storage_layouts"></a>Note that the low-level file drivers manage alternative <span class="FM_EI_EmphasisItalic">file</span> storage layouts. <span class="FM_EI_EmphasisItalic">Dataset</span> storage layouts (chunk&#173;ing, compression, and external dataset storage) are managed independently of file storage layouts. </p>
 <p class="FM__Body">If an application requires a special-purpose low-level driver, the VFL provides a public API for creating one. For more information on how to create a driver, see “<span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/TechNotes/VFL.html">Virtual File Layer”</a></span> and “<span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/TechNotes/VFLfunc.html">List of VFL Functions”</a></span>&#160;in the <span class="FM_EI_EmphasisItalic">HDF5 Technical Notes</span>.</p>
 <p class="FM__Heading_Level3"><a name="TOC_3_11_1_Identifying_the"></a>3.11.1. Identifying the Previously-used File Driver</p>
 <p class="FM__Body">When creating a new HDF5 file, no history exists, so the file driver must be specified if it is to be other than the default.</p>
 <p class="FM__Body">When opening existing files, however, the application may need to determine which low-level driver was used to create the file. The function <span class="FM_Code">H5Pget_driver</span> is used for this purpose. See the example below.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-5. Identifying a driver</caption>
  <tr style=" height : 22.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_driver_1"></a>hid_t H5Pget_driver (hid_t <span class="FM_CodeItalic">fapl_id</span>)</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"><span class="FM_Code">H5Pget_driver</span>&#160;returns a constant identifying the low-level driver for the access property list <span class="FM_CodeItalic">fapl_id</span>. For example, if the file was created with the POSIX (aka SEC2) driver, <span class="FM_Code">H5Pget_driver</span>&#160;returns <span class="FM_Code">H5F&#173;D_SEC2</span>.</p>
 <p class="FM__Body">If the application opens an HDF5 file without both determining the driver used to create the file and set&#173;ting up the use of that driver, the HDF5 Library will examine the superblock and the driver definition block to identify the driver. See the <span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/H5.format.html">HDF5 File Format Specification</a></span>&#160;for detailed descriptions of the superblock and the driver definition block.</p>
 <p class="FM__Heading_Level3"><a name="TOC_3_11_2_The_POSIX_aka"></a>3.11.2. The POSIX (aka SEC2) Driver</p>
 <p class="FM__Body">The POSIX driver, <span class="FM_Code">H5FD_SEC2</span>, uses functions from section 2 of the POSIX manual to access unbuffered files stored on a local file system. This driver is also known as the SEC2 driver. The HDF5 Library buffers metadata regardless of the low-level driver, but using this driver prevents data from being buffered again by the lowest layers of the library.</p>
 <p class="FM__Body">The function <span class="FM_Code">H5Pset_fapl_sec2</span>&#160;sets the file access properties to use the POSIX driver. See the example below.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-6. Using the POSIX, aka SEC2, driver</caption>
  <tr style=" height : 22.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_sec2_2"></a>herr_t H5Pset_fapl_sec2 (hid_t <span class="FM_CodeItalic">fapl_id</span>)</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">Any previously-defined driver properties are erased from the property list.</p>
 <p class="FM__Body">Additional parameters may be added to this function in the future. Since there are no additional variable settings associated with the POSIX driver, there is no <span class="FM_Code">H5Pget_fapl_sec2</span> function.</p>
 <p class="FM__Heading_Level3"><a name="TOC_3_11_3_The_Direct_Driver"></a>3.11.3. The Direct Driver</p>
 <p class="FM__Body">The Direct driver, <span class="FM_Code">H5FD_DIRECT</span>, functions like the POSIX driver except that data is written to or read from the file synchronously without being cached by the system.</p>
 <p class="FM__Body">The functions <span class="FM_Code">H5Pset_fapl_direct</span>&#160;and <span class="FM_Code">H5Pget_fapl_direct</span> are used to manage file access prop&#173;erties. See the example below.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-7. Using the Direct driver</caption>
  <tr style=" height : 74.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_direct_2"></a>herr_t H5Pset_fapl_direct( hid_t <span class="FM_CodeItalic">fapl_id</span>, size_t <span class="FM_CodeItalic">alignment</span>, </p>
  <p class="FM__BodyCellCodeIndent">size_t <span class="FM_CodeItalic">block_size</span>, size_t <span class="FM_CodeItalic">cbuf_size</span> )</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_fapl_direct_1"></a>herr_t H5Pget_fapl_direct( hid_t <span class="FM_CodeItalic">fapl_id</span>, size_t <span class="FM_CodeItalic">*alignment</span>, </p>
  <p class="FM__BodyCellCodeIndent">size_t <span class="FM_CodeItalic">*block_size</span>, size_t <span class="FM_CodeItalic">*cbuf_size</span> )</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"><span class="FM_Code">H5Pset_fapl_direct</span>&#160;sets the file access properties to use the Direct driver; any previously defined driver properties are erased from the property list. <span class="FM_Code">H5Pget_fapl_direct</span> retrieves the file access prop&#173;erties used with the Direct driver. <span class="FM_Code">fapl_id</span>&#160;is the file access property list identifier. <span class="FM_Code">alignment</span>&#160;is the memory alignment boundary. <span class="FM_Code">block_size</span>&#160;is the file system block size. <span class="FM_Code">cbuf_size</span>&#160;is the copy buffer size.</p>
 <p class="FM__Body">Additional parameters may be added to this function in the future. </p>
 <p class="FM__Heading_Level3"><a name="TOC_3_11_4_The_Log_Driver"></a>3.11.4. The Log Driver</p>
 <p class="FM__Body">The Log driver, <span class="FM_Code">H5FD_LOG</span>, is designed for situations where it is necessary to log file access activity.</p>
 <p class="FM__Body">The function <span class="FM_Code">H5Pset_fapl_log</span> is used to manage logging properties. See the example below.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-8. Logging file access</caption>
  <tr style=" height : 35.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_log_2"></a>herr_t H5Pset_fapl_log (hid_t <span class="FM_CodeItalic">fapl_id</span>, const char <span class="FM_CodeItalic">*logfile</span>,</p>
  <p class="FM__BodyCellCodeIndent">unsigned int <span class="FM_CodeItalic">flags</span>, size_t <span class="FM_CodeItalic">buf_size</span>)</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"><span class="FM_Code">H5Pset_fapl_log</span>&#160;sets the file access property list to use the Log driver. File access characteristics are identical to access via the POSIX driver. Any previously defined driver properties are erased from the prop&#173;erty list. </p>
 <p class="FM__Body">Log records are written to the file <span class="FM_CodeItalic">logfile</span>.</p>
 <p class="FM__Body">The logging levels set with the <span class="FM_CodeItalic">verbosity</span>&#160;parameter are shown in the table below. </p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionTable">Table 3-3. Logging levels</caption>
  <tr style=" height : 23.00pt;">
  <th style="width : 66.463pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Level</p>
</th>
  <th style="width : 365.537pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__Heading_Cell">Comments</p>
</th>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 66.463pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">0</p>
</td>
  <td style="width : 365.537pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Performs no logging.</p>
</td>
</tr>
  <tr style=" height : 23.00pt;">
  <td style="width : 66.463pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">1</p>
</td>
  <td style="width : 365.537pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Records where writes and reads occur in the file.</p>
</td>
</tr>
  <tr style=" height : 49.00pt;">
  <td style="width : 66.463pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">2</p>
</td>
  <td style="width : 365.537pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCell">Records where writes and reads occur in the file and what kind of data is writ&#173;ten at each location. This includes raw data or any of several types of metadata (object headers, superblock, B-tree data, local headers, or global headers).</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"><a name="IX_H5Pget_fapl_log"></a>There is no <span class="FM_Code">H5Pget_fapl_log</span> function.</p>
 <p class="FM__Body">Additional parameters may be added to this function in the future. </p>
 <p class="FM__Heading_Level3"><a name="TOC_3_11_5_The_Windows_Driver"></a>3.11.5. The Windows Driver</p>
 <p class="FM__Body">The Windows driver, <span class="FM_Code">H5FD_WINDOWS</span>, was modified in HDF5-1.8.8 to be a wrapper of the POSIX driver, <span class="FM_Code">H5FD_SEC2</span>. In other words, if the Windows drivers is used, any file I/O will instead use the functionality of the POSIX driver. This change should be transparent to all user applications. The Windows driver used to be the default driver for Windows systems. The POSIX driver is now the default. </p>
 <p class="FM__Body">The function <span class="FM_Code">H5Pset_fapl_windows</span>&#160;sets the file access properties to use the Windows driver. See the example below.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-9. Using the Windows driver</caption>
  <tr style=" height : 22.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_windows_2"></a>herr_t H5Pset_fapl_windows (hid_t <span class="FM_CodeItalic">fapl_id</span>)</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">Any previously-defined driver properties are erased from the property list.</p>
 <p class="FM__Body">Additional parameters may be added to this function in the future. Since there are no additional variable settings associated with the POSIX driver, there is no <span class="FM_Code">H5Pget_fapl_windows</span> function.</p>
 <p class="FM__Heading_Level3"><a name="TOC_3_11_6_The_STDIO_Driver"></a>3.11.6. The STDIO Driver</p>
 <p class="FM__Body"><a name="IX_H5FD_STDIO_1"></a>The STDIO driver, <span class="FM_Code">H5FD_STDIO</span>, accesses permanent files in a local file system like the POSIX driver does. The STDIO driver also has an additional layer of buffering beneath the HDF5 Library. </p>
 <p class="FM__Body"><a name="IX_H5Pset_fapl_stdio_3"></a>The function <span class="FM_Code">H5Pset_fapl_stdio</span> sets the file access properties to use the STDIO driver. See the exam&#173;ple below.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-10. Using the STDIO driver</caption>
  <tr style=" height : 22.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_stdio_4"></a>herr_t H5Pset_fapl_stdio (hid_t <span class="FM_CodeItalic">fapl_id</span>)</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">Any previously defined driver properties are erased from the property list.</p>
 <p class="FM__Body">Additional parameters may be added to this function in the future. Since there are no additional variable settings associated with the STDIO driver, there is no <span class="FM_Code">H5Pget_fapl_stdio</span>&#160;function. </p>
 <p class="FM__Heading_Level3"><a name="TOC_3_11_7_The_Memory_aka"></a>3.11.7. The Memory (aka Core) Driver</p>
 <p class="FM__Body">There are several situations in which it is reasonable, sometimes even required, to maintain a file entirely in system memory. You might want to do so if, for example, either of the following conditions apply:</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Performance requirements are so stringent that disk latency is a limiting factor</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>You are working with small, temporary files that will not be retained and, thus, need not be writ&#173;ten to storage media</p>
 <p class="FM__Body">The Memory driver, <span class="FM_Code">H5FD_CORE</span>, provides a mechanism for creating and managing such in-memory files. The functions <span class="FM_Code">H5Pset_fapl_core</span>&#160;and <span class="FM_Code">H5Pget_fapl_core</span>&#160;manage file access properties. See the example below.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-11. Managing file access for in-memory files</caption>
  <tr style=" height : 61.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_core_3"></a>herr_t H5Pset_fapl_core (hid_t <span class="FM_CodeItalic">access_properties</span>, </p>
  <p class="FM__BodyCellCodeIndent">size_t <span class="FM_CodeItalic">block_size</span>, hbool_t <span class="FM_CodeItalic">backing_store</span>)</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_fapl_core_1"></a>herr_t H5Pget_fapl_core (hid_t <span class="FM_CodeItalic">access_properties</span>, </p>
  <p class="FM__BodyCellCodeIndent">size_t <span class="FM_CodeItalic">*block_size</span>), hbool_t <span class="FM_CodeItalic">*backing_store</span>)</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"><span class="FM_Code">H5Pset_fapl_core</span>&#160;sets the file access property list to use the Memory driver; any previously defined driver properties are erased from the property list. </p>
 <p class="FM__Body">Memory for the file will always be allocated in units of the specified <span class="FM_CodeItalic">block_size</span>. </p>
 <p class="FM__Body"><a name="IX_backing_store"></a>The <span class="FM_CodeItalic">backing_store</span>&#160;Boolean flag is set when the in-memory file is created. <span class="FM_CodeItalic">backing_store</span>&#160;indicates whether to write the file contents to disk when the file is closed. If <span class="FM_CodeItalic">backing_store</span>&#160;is set to 1 (TRUE), the file contents are flushed to a file with the same name as the in-memory file when the file is closed or access to the file is terminated in memory. If <span class="FM_CodeItalic">backing_store</span> is set to 0 (FALSE), the file is not saved.</p>
 <p class="FM__Body"><a name="IX_H5F_ACC_RDONLY_4"></a><a name="IX_H5F_ACC_RDWR_4"></a><a name="IX_H5F_ACC_RDWR_3"></a><a name="IX_H5Fopen_5"></a>The application is allowed to open an existing file with the <span class="FM_CodeItalic">H5FD_CORE</span>&#160;driver. While using <span class="FM_CodeItalic">H5Fopen</span>&#160;to open an existing file, if <span class="FM_CodeItalic">backing_store</span>&#160;is set to <span class="FM_CodeItalic">1</span>&#160;and the <span class="FM_CodeItalic">flag</span>&#160;for <span class="FM_CodeItalic">H5Fopen</span>&#160;is set to <span class="FM_CodeItalic">H5F_ACC_RDWR</span>, changes to the file contents will be saved to the file when the file is closed. If <span class="FM_CodeItalic">backing_store</span>&#160;is set to <span class="FM_CodeItalic">0</span>&#160;and the <span class="FM_CodeItalic">flag</span>&#160;for <span class="FM_CodeItalic">H5Fopen</span>&#160;is set to <span class="FM_CodeItalic">H5F_ACC_RDWR</span>, changes to the file contents will be lost when the file is closed. If the <span class="FM_CodeItalic">flag</span>&#160;for <span class="FM_CodeItalic">H5Fopen</span>&#160;is set to <span class="FM_CodeItalic">H5F_ACC_RDONLY</span>, no change to the file will be allowed either in memory or on file.</p>
 <p class="FM__Body">If the file access property list is set to use the Memory driver, <span class="FM_Code">H5Pget_fapl_core</span>&#160;will return <span class="FM_CodeItalic">block_&#173;size</span>&#160;and <span class="FM_CodeItalic">backing_store</span> with the relevant file access property settings.</p>
 <p class="FM__Body">Note the following important points regarding in-memory files:</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Local temporary files are created and accessed directly from memory without ever being written to disk</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Total file size must not exceed the available virtual memory</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Only one HDF5 file identifier can be opened for the file, the identifier returned by <span class="FM_Code">H5Fcreate</span>&#160;or <span class="FM_Code">H5Fopen</span></p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>The changes to the file will be discarded when access is terminated unless <span class="FM_CodeItalic">backing_store</span>&#160;is set to <span class="FM_Code">1</span></p>
 <p class="FM__Body">Additional parameters may be added to these functions in the future. </p>
 <p class="FM__Body">See the &quot;<span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/Advanced/FileImageOperations/HDF5FileImageOperations.pdf">HDF5 File Image Operations</a></span>&quot; section for information on more advanced usage of the Memory file driver, and see the &quot;<span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/Advanced/ModifiedRegionWrites/ModifiedRegionWrites.pdf">Modified Region Writes</a></span>&quot; section for information on how to set write operations so that only modified regions are written to storage.</p>
 <p class="FM__Heading_Level3"><a name="TOC_3_11_8_The_Family_Driver"></a>3.11.8. The Family Driver</p>
 <p class="FM__Body">HDF5 files can become quite large, and this can create problems on systems that do not support files larger than 2 gigabytes. The HDF5 <span class="FM_EIH_EmphasisItalicHeavy">file family</span>&#160;mechanism is designed to solve the problems this creates by splitting the HDF5 file address space across several smaller files. This structure does not affect how meta&#173;data and raw data are stored: they are mixed in the address space just as they would be in a single, contig&#173;uous file.</p>
 <p class="FM__Body">HDF5 applications access a family of files via the Family driver, <span class="FM_Code">H5FD_FAMILY</span>. The functions <span class="FM_Code">H5Pset_&#173;fapl_family</span>&#160;and <span class="FM_Code">H5Pget_fapl_family</span>&#160;are used to manage file family properties. See the example below.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-12. Managing file family properties</caption>
  <tr style=" height : 74.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_family_3"></a>herr_t H5Pset_fapl_family (hid_t <span class="FM_CodeItalic">fapl_id</span>, </p>
  <p class="FM__BodyCellCodeIndent">hsize_t <span class="FM_CodeItalic">memb_size</span>, hid_t <span class="FM_CodeItalic">member_properties</span>)</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_fapl_family_1"></a>herr_t H5Pget_fapl_family (hid_t <span class="FM_CodeItalic">fapl_id</span>, </p>
  <p class="FM__BodyCellCodeIndent">hsize_t <span class="FM_CodeItalic">*memb_size</span>, hid_t <span class="FM_CodeItalic">*member_properties</span>)</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">Each member of the family is the same <span class="FM_EI_EmphasisItalic">logical</span>&#160;size though the size and disk storage reported by file system listing tools may be substantially smaller. Examples of file system listing tools are <span class="FM_Code">’ls -l’</span> on a Unix sys&#173;tem or the detailed folder listing on an Apple Macintosh or Microsoft Windows system. The name passed to <span class="FM_Code">H5Fcreate</span>&#160;or <span class="FM_Code">H5Fopen</span>&#160;should include a <span class="FM_Code">printf(3c)</span>-style integer format specifier which will be replaced with the family member number. The first family member is numbered zero (<span class="FM_Code">0</span>). </p>
 <p class="FM__Body"><span class="FM_Code">H5Pset_fapl_family</span>&#160;sets the access properties to use the Family driver; any previously defined driver properties are erased from the property list. <span class="FM_CodeItalic">member_properties</span>&#160;will serve as the file access property list for each member of the file family. <span class="FM_CodeItalic">memb_size</span> specifies the logical size, in bytes, of each family mem&#173;ber. <span class="FM_CodeItalic">memb_size</span> is used only when creating a new file or truncating an existing file; otherwise the mem&#173;ber size is determined by the size of the first member of the family being opened. Note: If the size of the <span class="FM_Code">off_t</span>&#160;type is four bytes, the maximum family member size is usually 2^31-1 because the byte at offset 2,147,483,647 is generally inaccessible. </p>
 <p class="FM__Body"><span class="FM_Code">H5Pget_fapl_family</span>&#160;is used to retrieve file family properties. If the file access property list is set to use the Family driver, <span class="FM_CodeItalic">member_properties</span>&#160;will be returned with a pointer to a copy of the appropriate member access property list. If <span class="FM_CodeItalic">memb_size</span>&#160;is non-null, it will contain the logical size, in bytes, of family members. </p>
 <p class="FM__Body">Additional parameters may be added to these functions in the future. </p>
 <p class="FM__Heading_Level4">3.11.8.1. Unix Tools and an HDF5 Utility</p>
 <p class="FM__Body"><a name="IX_repartition"></a>It occasionally becomes necessary to <span class="FM_EH_EmphasisHeavy">repartition</span>&#160;a file family. A command-line utility for this purpose, <span class="FM_Code">h5repart</span>, is distributed with the HDF5 Library.</p>
 <p class="FM__BodyCellCodeIndent"><a name="IX_h5repart"></a>h5repart [-v] [-b <span class="FM_CodeItalic">block_size</span>[<span class="FM_CodeItalic">suffix</span>]] [-m <span class="FM_CodeItalic">member_size</span>[<span class="FM_CodeItalic">suffix</span>]] <span class="FM_CodeItalic">source destination</span></p>
 <p class="FM__Body"><span class="FM_Code">h5repart</span>&#160;repartitions an HDF5 file by copying the source file or file family to the destination file or file family, preserving holes in the underlying UNIX files. Families are used for the source and/or destination if the name includes a <span class="FM_Code">printf</span>-style integer format such as <span class="FM_Code">%d</span>. The <span class="FM_Code">-v</span>&#160;switch prints input and output file names on the standard error stream for progress monitoring, <span class="FM_Code">-b</span>&#160;sets the I/O block size (the default is 1KB), and <span class="FM_Code">-m</span>&#160;sets the output member size if the destination is a family name (the default is 1GB). <span class="FM_CodeItalic">block_size</span>&#160;and <span class="FM_CodeItalic">member_size</span>&#160;may be suffixed with the letters <span class="FM_Code">g</span>, <span class="FM_Code">m</span>, or <span class="FM_Code">k</span>&#160;for GB, MB, or KB respectively. </p>
 <p class="FM__Body">The <span class="FM_Code">h5repart</span>&#160;utility is described on the <span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/RM/Tools.html">Tools</a></span>&#160;page of the <span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/RM/RM_H5Front.html">HDF5 Reference Manual</a></span>.</p>
 <p class="FM__Body">An existing HDF5 file can be split into a family of files by running the file through <span class="FM_Code">split(1)</span> on a UNIX sys&#173;tem and numbering the output files. However, the HDF5 Library is lazy about extending the size of family members, so a valid file cannot generally be created by concatenation of the family members. </p>
 <p class="FM__Body">Splitting the file and rejoining the segments by concatenation (<span class="FM_Code">split(1)</span>&#160;and <span class="FM_Code">cat(1)</span>&#160;on UNIX systems) does not generate files with holes; holes are preserved only through the use of <span class="FM_Code">h5repart</span>. </p>
 <p class="FM__Heading_Level3"><a name="TOC_3_11_9_The_Multi_Driver"></a>3.11.9. The Multi Driver</p>
 <p class="FM__Body">In some circumstances, it is useful to separate metadata from raw data and some types of metadata from other types of metadata. Situations that would benefit from use of the Multi driver include the following:</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>In networked situations where the small metadata files can be kept on local disks but larger raw data files must be stored on remote media</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>In cases where the raw data is extremely large</p>
 <p class="FM__ListBullets_Level1">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> In situations requiring frequent access to metadata held in RAM while the raw data can be effi&#173;ciently held on disk</p>
 <p class="FM__Body">In either case, access to the metadata is substantially easier with the smaller, and possibly more localized, metadata files. This often results in improved application performance.</p>
 <p class="FM__Body"><a name="IX_H5FD_MULTI_1"></a>The Multi driver, <span class="FM_Code">H5FD_MULTI</span>, provides a mechanism for segregating raw data and different types of metadata into multiple files. The functions <span class="FM_Code">H5Pset_fapl_multi</span>&#160;and <span class="FM_Code">H5Pget_fapl_multi</span>&#160;are used to manage access properties for these multiple files. See the example below.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-13. Managing access properties for multiple files</caption>
  <tr style=" height : 165.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_multi_2"></a>herr_t H5Pset_fapl_multi (hid_t <span class="FM_CodeItalic">fapl_id</span>, </p>
  <p class="FM__BodyCellCodeIndent">const H5FD_mem_t <span class="FM_CodeItalic">*memb_map</span>,</p>
  <p class="FM__BodyCellCodeIndent">const hid_t <span class="FM_CodeItalic">*memb_fapl</span>, </p>
  <p class="FM__BodyCellCodeIndent">const char * const <span class="FM_CodeItalic">*memb_name</span>,</p>
  <p class="FM__BodyCellCodeIndent">const haddr_t <span class="FM_CodeItalic">*memb_addr</span>, </p>
  <p class="FM__BodyCellCodeIndent">hbool_t <span class="FM_CodeItalic">relax</span>)</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_fapl_multi_1"></a>herr_t H5Pget_fapl_multi (hid_t <span class="FM_CodeItalic">fapl_id</span>, </p>
  <p class="FM__BodyCellCodeIndent">const H5FD_mem_t <span class="FM_CodeItalic">*memb_map</span>,</p>
  <p class="FM__BodyCellCodeIndent">const hid_t <span class="FM_CodeItalic">*memb_fapl</span>, </p>
  <p class="FM__BodyCellCodeIndent">const char <span class="FM_CodeItalic">**memb_name</span>,</p>
  <p class="FM__BodyCellCodeIndent">const haddr_t <span class="FM_CodeItalic">*memb_addr</span>, </p>
  <p class="FM__BodyCellCodeIndent">hbool_t <span class="FM_CodeItalic">*relax</span>)</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"><span class="FM_Code">H5Pset_fapl_multi</span>&#160;sets the file access properties to use the Multi driver; any previously defined driver properties are erased from the property list. With the Multi driver invoked, the application will provide a base name to <span class="FM_Code">H5Fopen</span>&#160;or <span class="FM_Code">H5Fcreate</span>. The files will be named by that base name as modified by the rule indicated in <span class="FM_CodeItalic">memb_name</span>. File access will be governed by the file access property list <span class="FM_CodeItalic">memb_properties</span>. </p>
 <p class="FM__Body">See <span class="FM_LT_LinkTextCode"><a href="http://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-SetFaplMulti">H5Pset_fapl_multi</a></span>&#160;and <span class="FM_LT_LinkTextCode"><a href="http://www.hdfgroup.org/HDF5/doc/RM/RM_H5P.html#Property-GetFaplMulti">H5Pget_fapl_multi</a></span>&#160;in the <span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/RM/RM_H5Front.html">HDF5 Reference Manual</a></span>&#160;for descriptions of these functions and their usage.</p>
 <p class="FM__Body">Additional parameters may be added to these functions in the future. </p>
 <p class="FM__Heading_Level3"><a name="TOC_3_11_10_The_Split_Driver"></a>3.11.10. The Split Driver</p>
 <p class="FM__Body"><a name="IX_H5FD_SPLIT_1"></a>The Split driver, <span class="FM_Code">H5FD_SPLIT</span>, is a limited case of the Multi driver where only two files are created. One file holds metadata, and the other file holds raw data. </p>
 <p class="FM__Body">The function <span class="FM_Code">H5Pset_fapl_split</span> is used to manage Split file access properties. See the example below.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-14. Managing access properties for split files</caption>
  <tr style=" height : 48.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_split_2"></a>herr_t H5Pset_fapl_split (hid_t <span class="FM_CodeItalic">access_properties</span>, </p>
  <p class="FM__BodyCellCodeIndent">const char <span class="FM_CodeItalic">*meta_extension</span>, hid_t <span class="FM_CodeItalic">meta_properties</span>, </p>
  <p class="FM__BodyCellCodeIndent">const char <span class="FM_CodeItalic">*raw_extension</span>, hid_t <span class="FM_CodeItalic">raw_properties</span></p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"><span class="FM_Code">H5Pset_fapl_split</span>&#160;sets the file access properties to use the Split driver; any previously defined driver properties are erased from the property list. </p>
 <p class="FM__Body">With the Split driver invoked, the application will provide a base file name such as <span class="FM_CodeItalic">file_name</span>&#160;to <span class="FM_Code">H5F&#173;create</span>&#160;or <span class="FM_Code">H5Fopen</span>. The metadata and raw data files in storage will then be named <span class="FM_CodeItalic">file_name.meta_extension</span>&#160;and <span class="FM_CodeItalic">file_name.raw_extension</span>, respectively. For example, if <span class="FM_CodeItalic">meta_extension</span>&#160;is defined as <span class="FM_Code">.meta</span>&#160;and <span class="FM_CodeItalic">raw_extension</span>&#160;is defined as <span class="FM_Code">.raw</span>, the final filenames will be <span class="FM_CodeItalic">file_name</span><span class="FM_Code">.meta</span>&#160;and <span class="FM_CodeItalic">file_name</span><span class="FM_Code">.raw</span>.</p>
 <p class="FM__Body">Each file can have its own file access property list. This allows the creative use of other low-level file driv&#173;ers. For instance, the metadata file can be held in RAM and accessed via the Memory driver while the raw data file is stored on disk and accessed via the POSIX driver. Metadata file access will be governed by the file access property list in <span class="FM_CodeItalic">meta_properties</span>. Raw data file access will be governed by the file access property list in <span class="FM_CodeItalic">raw_properties</span>. </p>
 <p class="FM__Body">Additional parameters may be added to these functions in the future. Since there are no additional vari&#173;able settings associated with the Split driver, there is no <span class="FM_Code">H5Pget_fapl_split</span> function.</p>
 <p class="FM__Heading_Level3"><a name="TOC_3_11_11_The_Parallel"></a>3.11.11. The Parallel Driver</p>
 <p class="FM__Body"><a name="IX_H5FD_MPIO_1"></a>Parallel environments require a parallel low-level driver. HDF5’s default driver for parallel systems is called the Parallel driver, <span class="FM_Code">H5FD_MPIO</span>. This driver uses the MPI standard for both communication and file I/O.</p>
 <p class="FM__Body">The functions <span class="FM_Code">H5Pset_fapl_mpio</span>&#160;and <span class="FM_Code">H5Pget_fapl_mpio</span>&#160;are used to manage file access properties for the <span class="FM_Code">H5FD_MPIO</span> driver. See the example below.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-15. Managing parallel file access properties</caption>
  <tr style=" height : 61.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_fapl_mpio_2"></a>herr_t H5Pset_fapl_mpio (hid_t <span class="FM_CodeItalic">fapl_id</span>, MPI_Comm <span class="FM_CodeItalic">comm</span>, </p>
  <p class="FM__BodyCellCodeIndent">MPI_info <span class="FM_CodeItalic">info</span>)</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Pget_fapl_mpio_1"></a>herr_t H5Pget_fapl_mpio (hid_t <span class="FM_CodeItalic">fapl_id</span>, MPI_Comm <span class="FM_CodeItalic">*comm</span>, </p>
  <p class="FM__BodyCellCodeIndent">MPI_info <span class="FM_CodeItalic">*info</span>)</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">The file access properties managed by <span class="FM_Code">H5Pset_fapl_mpio</span>&#160;and retrieved by <span class="FM_Code">H5Pget_fapl_mpio</span>&#160;are the MPI communicator, <span class="FM_CodeItalic">comm</span>, and the MPI info object, <span class="FM_CodeItalic">info</span>. <span class="FM_Code">comm</span>&#160;and <span class="FM_Code">info</span>&#160;are used for file open. <span class="FM_Code">info</span>&#160;is an information object much like an HDF5 property list. Both are defined in <span class="FM_Code">MPI_FILE_OPEN</span>&#160;of MPI-2. </p>
 <p class="FM__Body">The communicator and the info object are saved in the file access property list <span class="FM_CodeItalic">fapl_id</span>. <span class="FM_CodeItalic">fapl_id</span>&#160;can then be passed to <span class="FM_Code">MPI_FILE_OPEN</span>&#160;to create and/or open the file. </p>
 <p class="FM__Body"><span class="FM_Code">H5Pset_fapl_mpio</span>&#160;and <span class="FM_Code">H5Pget_fapl_mpio</span>&#160;are available only in the parallel HDF5 Library and are not collective functions. The Parallel driver is available only in the parallel HDF5 Library.</p>
 <p class="FM__Body">Additional parameters may be added to these functions in the future. </p>
 <p class="FM__Heading_Level2"><a name="TOC_3_12_Code_Examples_for"></a>3.12. <a name="XREF_Examples"></a>Code Examples for Opening and Closing Files</p>
 <p class="FM__Heading_Level3"><a name="TOC_3_12_1_Example_Using_the"></a>3.12.1. Example Using the H5F_ACC_TRUNC Flag</p>
 <p class="FM__Body">The following example uses the <span class="FM_Code">H5F_ACC_TRUNC</span>&#160;flag when it creates a new file. The default file creation and file access properties are also used. Using <span class="FM_Code">H5F_ACC_TRUNC</span> means the function will look for an exist&#173;ing file with the name specified by the function. In this case, that name is <span class="FM_Code">FILE</span>. If the function does not find an existing file, it will create one. If it does find an existing file, it will empty the file in preparation for a new set of data. The identifier for the &quot;new&quot; file will be passed back to the application program. <a href="#XREF_FileAccessModes">For more information, see &quot;File Access Modes.&quot;</a></p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-16. Creating a file with default creation and access properties</caption>
  <tr style=" height : 139.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">hid_t file; /* identifier */</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode">/* Create a new file using H5F_ACC_TRUNC access, default </p>
  <p class="FM__BodyCellCode">* file creation properties, and default file access </p>
  <p class="FM__BodyCellCode">*/ properties. </p>
  <p class="FM__BodyCellCode"><a name="IX_H5F_ACC_TRUNC_4"></a><a name="IX_H5Fcreate_7"></a>file = H5Fcreate(FILE, H5F_ACC_TRUNC, H5P_DEFAULT, </p>
  <p class="FM__BodyCellCodeIndent">H5P_DEFAULT);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode">/* Close the file. */</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Fclose_5"></a>status = H5Fclose(file);</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level3"><a name="TOC_3_12_2_Example_with_the"></a>3.12.2. Example with the File Creation Property Lis<a name="XREF_ExampleWithTheFileCreatio"></a>t</p>
 <p class="FM__Body">The example below shows how to create a file with 64-bit object offsets and lengths.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-17. Creating a file with 64-bit offsets</caption>
  <tr style=" height : 139.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">hid_t create_plist;</p>
  <p class="FM__BodyCellCode">hid_t file_id;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5P_FILE_CREATE_3"></a><a name="IX_H5Pcreate_6"></a>create_plist = H5Pcreate(H5P_FILE_CREATE);</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Pset_sizes_2"></a>H5Pset_sizes(create_plist, 8, 8);</p>
  <p class="FM__BodyCellCode"><a name="IX_H5F_ACC_TRUNC_5"></a><a name="IX_H5Fcreate_8"></a>file_id = H5Fcreate(“test.h5”, H5F_ACC_TRUNC, </p>
  <p class="FM__BodyCellCodeIndent">create_plist, H5P_DEFAULT);</p>
  <p class="FM__BodyCellCodeIndent">.</p>
  <p class="FM__BodyCellCodeIndent">.</p>
  <p class="FM__BodyCellCodeIndent">.</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Fclose_6"></a>H5Fclose(file_id);</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level3"><a name="TOC_3_12_3_Example_with_the"></a>3.12.3. Example with the File Access Property Li<a name="XREF_ExampleWithTheFileAccessP"></a>st</p>
 <p class="FM__Body">This example shows how to open an existing file for independent datasets access by MPI parallel I/O:</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-18. Opening an existing file for parallel I/O</caption>
  <tr style=" height : 178.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode">hid_t access_plist;</p>
  <p class="FM__BodyCellCode">hid_t file_id;</p>
  <p class="FM__BodyCellCode"><a name="IX_H5P_FILE_ACCESS_4"></a><a name="IX_H5Pcreate_7"></a>access_plist = H5Pcreate(H5P_FILE_ACCESS);</p>
  <p class="FM__BodyCellCode"><a name="IX_MPI_COMM_WORLD"></a><a name="IX_H5Pset_fapl_mpi"></a>H5Pset_fapl_mpi(access_plist, MPI_COMM_WORLD, </p>
  <p class="FM__BodyCellCodeIndent">MPI_INFO_NULL);</p>
  <p class="FM__BodyCellCode">&nbsp;</p>
  <p class="FM__BodyCellCode">/* H5Fopen must be called collectively */</p>
  <p class="FM__BodyCellCode"><a name="IX_H5F_ACC_RDWR_5"></a><a name="IX_H5Fopen_6"></a>file_id = H5Fopen(“test.h5”, H5F_ACC_RDWR, access_plist); </p>
  <p class="FM__BodyCellCodeIndent">.</p>
  <p class="FM__BodyCellCodeIndent">.</p>
  <p class="FM__BodyCellCodeIndent">.</p>
  <p class="FM__BodyCellCode">/* H5Fclose must be called collectively */</p>
  <p class="FM__BodyCellCode"><a name="IX_H5Fclose_7"></a>H5Fclose(file_id);</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Heading_Level2"><a name="TOC_3_13_Working_with"></a>3.13. <a name="XREF_MountingFiles"></a>Working with Multiple HDF5 Files</p>
 <p class="FM__Body">Multiple HDF5 files can be associated so that the files can be worked with as though all the information is in a single HDF5 file. A temporary association can be set up by means of the <span class="FM_Code">H5Fmount</span> function. A perma&#173;nent association can be set up by means of the external link function <span class="FM_Code">H5Lcreate_external</span>. </p>
 <p class="FM__Body">The purpose of this section is to describe what happens when the <span class="FM_Code">H5Fmount</span>&#160;function is used to mount one file on another. </p>
 <p class="FM__Body">When a file is mounted on another, the mounted file is mounted at a group, and the root group of the mounted file takes the place of that group until the mounted file is unmounted or until the files are closed. </p>
 <p class="FM__Body">The figure below shows two files before one is mounted on the other. File1 has two groups and three datasets. The group that is the target of the A link has links, Z and Y, to two of the datasets. The group that is the target of the B link has a link, W, to the other dataset. File2 has three groups and three datasets. The groups in File2 are the targets of the AA, BB, and CC links. The datasets in File2 are the targets of the ZZ, YY, and WW links. </p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure" align="bottom">Figure 3-3. Two separate files</caption>
  <tr style=" height : 229.18pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="Files_fig3.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:0.750pt; width:100%; max-width:514px;" id="image2" src="Files_fig3.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">The figure below shows the two files after File2 has been mounted File1 at the group that is the target of the B link.</p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:2.00pt; padding-top:2.00pt; padding-right:2.00pt; padding-bottom:2.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionFigure" align="bottom">Figure 3-4. File2 mounted on File1</caption>
  <tr style=" height : 228.82pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; ">
  <div align="center"><img alt="Files_fig4.JPG" style=" margin-left:0.750pt; margin-top:0.750pt; margin-right:0.750pt; margin-bottom:1.500pt; width:100%; max-width:401px;" id="image3" src="Files_fig4.JPG" />
  </div>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
  <p class="FM__BodyFigureSmall">&nbsp;</p>
</td>
</tr>
 </table>
</div>
 <p class="FM__CaptionNote">Note: In the figure above, the dataset that is the target of the W link is not shown. That dataset is masked by the mounted file.</p>
 <p class="FM__Body">If a file is mounted on a group that has members, those members are hidden until the mounted file is unmounted. There are two ways around this if you need to work with a group member. One is to mount the file on an empty group. Another is to open the group member before you mount the file. Opening the group member will return an identifier that you can use to locate the group member. </p>
 <p class="FM__Body">The example below shows how <span class="FM_Code">H5Fmount</span>&#160;might be used to mount File2 onto File1. </p>
<div width="100%" align="center">
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:aligncenter; margin-top:12.00pt; width:100%; max-width:432.00pt;" cellspacing="0">
  <caption class="FM__CaptionCodeExample" align="bottom">Code Example 3-19. Using H5Fmount</caption>
  <tr style=" height : 22.00pt;">
  <td style="width : 432.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #228a22; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #228a22; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM__BodyCellCode"><a name="IX_H5Fmount_1"></a>status = H5Fmount(loc_id, &quot;/B&quot;, child_id, plist_id) </p>
</td>
</tr>
 </table>
</div>
 <p class="FM__CaptionNote">Note: In the code example above, loc_id is the file identifier for File1, /B is the link path to the group where File2 is mounted, child_id is the file identifier for File2, and plist_id is a property list identifier.</p>
 <p class="FM__Body"><a href="../Groups/HDF5_Groups.htm#XREF_GroupsChapter">For more information, see &quot;HDF5 Groups.&quot;</a>&#160;See the entries for <span class="FM_LT_LinkTextCode"><a href="http://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-Mount">H5Fmount</a></span>, <span class="FM_LT_LinkTextCode"><a href="http://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-Unmount">H5Funmount</a></span>, and <span class="FM_LT_LinkTextCode"><a href="http://www.hdfgroup.org/HDF5/doc/RM/RM_H5L.html#Link-CreateExternal">H5Lcreate_external</a></span>&#160;in the <span class="FM_LT_LinkText"><a href="http://www.hdfgroup.org/HDF5/doc/RM/RM_H5Front.html">HDF5 Reference Manual</a></span>.</p>
 <p class="FM__Body">&nbsp;</p>
</body>
</html>