
<!DOCTYPE HTML>
<html>
<head>
 <meta http-equiv="X-UA-Compatible" content="IE=edge" />
 <meta name="OriginalFile" content="C:\1 MEE\Working\hdf5_trunk\html\UG\03_DataModel.html_150210.fm" />
 <meta name="Originator" content="ImportMif" />
 <meta content="How to fly your personal spaceship" name="search-keywords" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="viewport" content="width=100%, initial-scale=1" />
<meta name="generator" content="Adobe FrameMaker 12" />
<title>HDF5 User's Guide - The HDF5 Data Model and File Structure</title>
<link href="../../template/Theme1_Standard/main.css" type="text/css" rel="stylesheet" />
<link href="../../template/Theme1_Standard/jqueryui-custom.css" type="text/css" rel="stylesheet" />
 <link rel="stylesheet" href="03_DataModel.html_150210.css" type="text/css" /><script type="text/javascript" language="JavaScript">//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]></script><style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadcsh.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/showhidecontrols.js"></script>
<script type="text/javascript" src="../../template/scripts/pageloader.js"></script>
<script type="text/javascript" src="../../template/scripts/toctree.js"></script>
<script type="text/javascript" src="../../template/scripts/toctreeloader.js"></script>
<script type="text/javascript" src="../../template/scripts/indextree.js"></script>
<script type="text/javascript" src="../../template/scripts/indextreeloader.js"></script>
<script type="text/javascript" src="../../template/scripts/glossarylist.js"></script>
<script type="text/javascript" src="../../template/scripts/glossarylistloader.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
<script type="text/javascript" src="../../template/scripts/searchfield.js"></script>
<script type="text/javascript" src="../../template/scripts/tabpanels.js"></script>
<script type="text/javascript" >
gTocPageHtml = "{%ICON%}<span  class=\"wTOCTreePageText\">{%LINK_NAME%}</span>";
gTocBookClosedHtml = "{%ICON%}<span  class=\"wTOCTreeCloseBookText\">{%LINK_NAME%}</span>";
gTocBookOpenHtml = "{%ICON%}<span  class=\"wTOCTreeCloseBookText\">{%LINK_NAME%}</span>";
gTocUrlHtml = "{%ICON%}<span  class=\"wTOCTreeLinkText\">{%LINK_NAME%}</span>";
gTocPageIconSrc = "../../template/Theme1_Standard/TOCTreePage.png";
gTocPageIconHoverSrc = "../../template/Theme1_Standard/TOCTreePageHover.png";
gTocPageIconSelSrc = "../../template/Theme1_Standard/TOCTreePageSelected.png";
gTocPageIconClass = "wTOCTreePageIcon";
gTocPageIconStyle = "";
gTocBookClosedIconSrc = "../../template/Theme1_Standard/TOCTreeCloseBook.png";
gTocBookClosedIconHoverSrc = "../../template/Theme1_Standard/TOCTreeCloseBookHover.png";
gTocBookClosedIconSelSrc = "../../template/Theme1_Standard/TOCTreeCloseBookSelected.png";
gTocBookClosedIconClass = "wTOCTreeCloseBookIcon";
gTocBookClosedIconStyle = "";
gTocBookOpenIconSrc = "../../template/Theme1_Standard/TOCTreeOpenBook.png";
gTocBookOpenIconHoverSrc = "../../template/Theme1_Standard/TOCTreeOpenBookHover.png";
gTocBookOpenIconSelSrc = "../../template/Theme1_Standard/TOCTreeOpenBookSelected.png";
gTocBookOpenIconClass = "wTOCTreeOpenBookIcon";
gTocBookOpenIconStyle = "";
gTocUrlIconSrc = "../../template/Theme1_Standard/TOCTreeLink.png";
gTocUrlIconHoverSrc = "../../template/Theme1_Standard/TOCTreeLinkHover.png";
gTocUrlIconSelSrc = "../../template/Theme1_Standard/TOCTreeLinkSelected.png";
gTocUrlIconClass = "wTOCTreeLinkIcon";
gTocUrlIconStyle = "";
</script>
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
</script>
<script type="text/javascript" >
gIdxKWHtml = "<span  class=\"wIdxKeywordText\">{%LINK_NAME%}</span>";
	gIdxLinkHtml = "<span  class=\"wIdxLinkText\">{%LINK_NAME%}</span>";
	gIdxCategoryHtml = "<span  class=\"wIdxAlphabetText\">{%LINK_NAME%}</span>";
</script>
<script type="text/javascript" >
gTopicId = "0_4";
</script>
<script type="text/javascript" >
gGloTermHtml = "<span  class=\"wGloTermText\">{%LINK_NAME%}</span>";
	gGloDefHtml = "<span  class=\"wGloDefinitionText\">{%LINK_NAME%}</span>";
	gGloCategoryHtml = "<span  class=\"wGloAlphabetText\">{%LINK_NAME%}</span>";
</script>
 <link rel="SHORTCUT ICON" href="../../Responsive HTML5_favicon.ico" />
</head>

<body>
<script type="text/javascript" src="../../ehlpdhtm.js"></script>



<div class="floatholder">
	<div class="phone_scrollarea overthrow">
		<div class="header">
			<table class="headertable">
				<tr>
					<td class="logo"><a href="../HDF5_UG_TitleWithoutSamples/HDF5_UG_TitleWithoutSamples.htm" class="homelink"><img src="../../template/Theme1_Standard/logo.png" alt="Logo" id="wLogoImage" style=" border:none; width:100%; max-width:53px;" border="0" /></a> </td>
					<td class="title"><div>
						<a href="../HDF5_UG_TitleWithoutSamples/HDF5_UG_TitleWithoutSamples.htm" class="homelink"><span>HDF5 User's Guide</span></a> 
						 
					</div></td>
					<td class="brsBack"><a id="browseSeqBack" class="wBSBackButton" href="../UpdateStatus_150210/UpdateStatus_150210.htm"><img alt="" src="../../template/Theme1_Standard/topic_left.png" class="wBSBackButton" border="0" style="width:100%; max-width:19px" /></a> </td>
					<td class="brsNext"><a id="browseSeqNext" class="wBSNextButton" href="../04_ProgModel.html_150210/The_HDF5_Library_and_Programming_Model.htm"><img alt="" src="../../template/Theme1_Standard/topic_right.png" class="wBSNextButton" border="0" style="width:100%; max-width:19px" /></a> </td>
				</tr>
			</table>
		</div>
		<div class="sidebar">
			<div data-showin="Always" class="wTabbedPanel" id="tabbedpanel">
				<ul class="wTabGroup" id="tab" data-tabid="tocTabButton" style="margin: 0px;">
					<li class="wTab" id="tocTabButton" data-contentid="tocTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/toc.png" class="normal" alt="Table of Contents" title="Table of Contents" id="xmlEditorTOCSidebarButton" style=" border:none; width:100%; max-width:30px;" border="0" /><img src="../../template/Theme1_Standard/toc_hover.png" class="hover" alt="Table of Contents" title="Table of Contents" id="xmlEditorTOCSidebarButtonHover" style=" border:none; width:100%; max-width:30px;" border="0" /></li>
					<li class="wTab" id="idxTabButton" data-contentid="idxTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/index.png" class="normal" alt="Index" title="Index" id="xmlEditorIDXSidebarButton" style=" border:none; width:100%; max-width:30px;" border="0" /><img src="../../template/Theme1_Standard/index_hover.png" class="hover" alt="Index" title="Index" id="xmlEditorIDXSidebarButtonHover" style=" border:none; width:100%; max-width:30px;" border="0" /></li>
					<li class="wTab" id="gloTabButton" data-contentid="gloTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/glo.png" class="normal" alt="Glossary" title="Glossary" id="xmlEditorGLOSidebarButton" style=" border:none; width:100%; max-width:34px;" border="0" /><img src="../../template/Theme1_Standard/glo_hover.png" class="hover" alt="Glossary" title="Glossary" id="xmlEditorGLOSidebarButtonHover" style=" border:none; width:100%; max-width:34px;" border="0" /></li>
				</ul>
				<div class="wTabContentGroup">
					<div id="tocTabPane" class="wTabContent">
						<div id="toc" class="wTOCTree" tabindex="104">
							
							
							
							
						</div>
					</div>
					<div id="idxTabPane" class="wTabContent">
						<div id="idx" class="wIndex">
							<input class="wIdxFilter" id="idxFilterBox" type="text" data-placeholder="Filter Keyword" onkeyup="filterIdx()"></input>
							
							
							
						</div>
					</div>
					<div id="gloTabPane" class="wTabContent">
						<div id="glo" class="wGlossary">
							<input class="wGloFilter" id="gloFilterBox" type="text" data-placeholder="Filter Term" onkeyup="filterGlo()"></input>
							
							
							
						</div>
					</div>
				</div>
			</div>
			<div class="closebutton buttonOpened">
				&#160; 
			</div>
		</div>
		<div class="content">
			<div class="desktop_functionholder">
				<div class="searchholder">
					<div class="wSearchField">
						<input id="searchBox" class="wSearchField" type="search" data-placeholder="-Search-" onkeydown="searchHelp(event, 'searchBox')" data-search="true" /><a class="wSearchLink" onclick="searchHelp(null, 'searchBox')" href="#"><img src="../../template/Theme1_Standard/Search.png" alt="" id="xmlEditwSearchLink" class="wSearchLink" border="0" style="width:100%; max-width:24px" /></a> 
						 
					</div>
				</div>
				<div class="home">
					<a href="../HDF5_UG_TitleWithoutSamples/HDF5_UG_TitleWithoutSamples.htm"><img src="../../template/Theme1_Standard/home.png" alt="" class="homebutton normal" id="xmlEditorHomeButton" border="0" style="width:100%; max-width:27px" /><img src="../../template/Theme1_Standard/home_hover.png" alt="" class="homebutton hover" id="xmlEditorHomeButtonHover" border="0" style="width:100%; max-width:27px" /></a> 
				</div>
				<div class="print">
					<a href="javascript:window.print()" class="wPrintButton"><img src="../../template/Theme1_Standard/Print.png" alt="" class="wPrintButton normal" id="xmlEditorPrintButton" border="0" style="width:100%; max-width:30px" /><img src="../../template/Theme1_Standard/Print_hover.png" alt="" class="wPrintButton hover" id="xmlEditorPrintButtonHover" border="0" style="width:100%; max-width:30px" /></a> 
				</div>
				<div class="brsBack">
					<a id="browseSeqBack0" class="wBSBackButton" href="../UpdateStatus_150210/UpdateStatus_150210.htm"><img alt="" src="../../template/Theme1_Standard/BSBack.png" class="wBSBackButton normal" id="xmlEditorBSBackButton" border="0" style="width:100%; max-width:19px" /><img alt="" src="../../template/Theme1_Standard/BSBack_hover.png" class="wBSBackButton hover" id="xmlEditorBSBackButtonHover" border="0" style="width:100%; max-width:19px" /></a> 
					 
				</div>
				<div class="brsNext">
					<a id="browseSeqNext0" class="wBSNextButton" href="../04_ProgModel.html_150210/The_HDF5_Library_and_Programming_Model.htm"><img alt="" src="../../template/Theme1_Standard/BSNext.png" class="wBSNextButton normal" id="xmlEditorBSNextButton" border="0" style="width:100%; max-width:19px" /><img alt="" src="../../template/Theme1_Standard/BSNext_hover.png" class="wBSNextButton hover" id="xmlEditorBSNextButtonHover" border="0" style="width:100%; max-width:19px" /></a> 
					 
				</div>
			</div>
			<div class="contentholder">
				<a name="content_top_placeholder"></a> 
				<div class="wTopic" id="rh_default_topic_placeholder_id">


 <p class="FM__Heading_Level1">1. <a name="XREF_DataModelChapter"></a>The HDF5 Data Model and File Structure</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [</p>
 <p class="FM__Body"> &#160;] ] ]&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- HEADER LEFT &quot; &quot; --&gt;</p>
 <p class="FM__Body">&lt;!-- HEADER RIGHT &quot; &quot; --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- HEADER LEFT &quot;HDF5 User's Guide&quot; --&gt;</p>
 <p class="FM__Body">&lt;!-- HEADER RIGHT &quot;HDF5 Data Model&quot; --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;Intro&quot;&gt;</p>
 <p class="FM__Body">&lt;h3&gt;1.1. Introduction&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The Hierarchical Data Format (HDF) implements a model for managing </p>
 <p class="FM__Body">&#160;&#160;and storing data. The model includes an abstract data model and an </p>
 <p class="FM__Body">&#160;&#160;abstract storage model (the data format), and libraries to implement the </p>
 <p class="FM__Body">&#160;&#160;abstract model and to map the storage model to different storage </p>
 <p class="FM__Body">&#160;&#160;mechanisms. The HDF5 library provides a programming interface to a </p>
 <p class="FM__Body">&#160;&#160;concrete implementation of the abstract models. The library also </p>
 <p class="FM__Body">&#160;&#160;implements a model of data transfer, i.e., efficient movement of data </p>
 <p class="FM__Body">&#160;&#160;from one stored representation to another stored representation. The </p>
 <p class="FM__Body">&#160;&#160;figure below illustrates the relationships between the models and </p>
 <p class="FM__Body"> &#160;implementations. This chapter explains these models in detail.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width = 600 cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dmodel_fig1.JPG&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 1. HDF5 models and implementations&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The &lt;em&gt;Abstract Data Model&lt;/em&gt; is a conceptual model of data, data types, </p>
 <p class="FM__Body">&#160;&#160;and data organization. The abstract data model is independent of storage </p>
 <p class="FM__Body"> &#160;medium or programming environment. The &lt;em&gt;Storage Model&lt;/em&gt; is a </p>
 <p class="FM__Body">&#160;&#160;standard representation for the objects of the abstract data model. </p>
 <p class="FM__Body"> &#160;The &lt;a href=&quot;../H5.format.html&quot; target=&quot;H5DocWin&quot;&gt;&lt;cite&gt;HDF5 File Format </p>
 <p class="FM__Body"> &#160;Specification&lt;/cite&gt;&lt;/a&gt; defines the storage model.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The &lt;em&gt;Programming Model&lt;/em&gt; is a model of the computing environment</p>
 <p class="FM__Body">&#160;&#160;and includes platforms from small single systems to large multiprocessors </p>
 <p class="FM__Body">&#160;&#160;and clusters. The programming model manipulates (instantiates, populates, </p>
 <p class="FM__Body"> &#160;and retrieves) objects from the abstract data model.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The &lt;em&gt;Library&lt;/em&gt; is the concrete implementation of the programming </p>
 <p class="FM__Body">&#160;&#160;model. The Library exports the HDF5 APIs as its interface. </p>
 <p class="FM__Body">&#160;&#160;In addition to implementing the objects of the abstract data model, </p>
 <p class="FM__Body">&#160;&#160;the Library manages data transfers from one stored form to another. </p>
 <p class="FM__Body">&#160;&#160;Data transfer examples include reading from disk to memory and writing </p>
 <p class="FM__Body"> &#160;from memory to disk. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;em&gt;Stored Data&lt;/em&gt; is the concrete implementation of the storage </p>
 <p class="FM__Body">&#160;&#160;model. The storage model is mapped to several storage </p>
 <p class="FM__Body">&#160;&#160;mechanisms including single disk files, multiple files (family of files), </p>
 <p class="FM__Body"> &#160;and memory representations.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 Library is a C module that implements the programming model </p>
 <p class="FM__Body">&#160;&#160;and abstract data model. The HDF5 Library calls the operating system </p>
 <p class="FM__Body">&#160;&#160;or other storage management software (e.g., the MPI/IO Library) to store and </p>
 <p class="FM__Body">&#160;&#160;retrieve persistent data. The HDF5 Library may also link to other software </p>
 <p class="FM__Body">&#160;&#160;such as filters for compression. The HDF5 Library is linked to an application </p>
 <p class="FM__Body">&#160;&#160;program which may be written in C, C++, Fortran, or Java. The application </p>
 <p class="FM__Body">&#160;&#160;program implements problem specific algorithms and data structures and calls </p>
 <p class="FM__Body">&#160;&#160;the HDF5 Library to store and retrieve data. The figure below shows the </p>
 <p class="FM__Body"> &#160;dependencies of these modules.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width = 600 cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dmodel_fig2.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 2. The library, the application </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;program, and other modules&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;It is important to realize that each of the software components manages </p>
 <p class="FM__Body">&#160;&#160;data using models and data structures that are appropriate to the </p>
 <p class="FM__Body">&#160;&#160;component. When data is passed between layers (during storage or </p>
 <p class="FM__Body">&#160;&#160;retrieval), it is transformed from one representation to another. The </p>
 <p class="FM__Body"> &#160;figure below &lt;!-- Figure 3 --&gt; suggests some of the kinds of data </p>
 <p class="FM__Body"> &#160;structures used in the different layers.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The &lt;em&gt;Application Program&lt;/em&gt; uses data structures that represent </p>
 <p class="FM__Body">&#160;&#160;the problem and algorithms including variables, tables, arrays, and </p>
 <p class="FM__Body">&#160;&#160;meshes among other data structures. Depending on its design and function, </p>
 <p class="FM__Body">&#160;&#160;an application may have quite a few different kinds of data structures </p>
 <p class="FM__Body"> &#160;and different numbers and sizes of objects.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 Library implements the objects of the HDF5 abstract </p>
 <p class="FM__Body">&#160;&#160;data model. Some of these objects include groups, datasets, and </p>
 <p class="FM__Body">&#160;&#160;attributes. The application program maps the application data </p>
 <p class="FM__Body">&#160;&#160;structures to a hierarchy of HDF5 objects. Each application will create a </p>
 <p class="FM__Body"> &#160;mapping best suited to its purposes. &#160;&lt;/p&gt;</p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;For suggestions and examples, see ???. </p>
 <p class="FM__Body"> &#160;[ [ [ Do we have such a document? ] ] ]&lt;/em&gt;&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The objects of the HDF5 abstract data model are mapped to the objects </p>
 <p class="FM__Body">&#160;&#160;of the HDF5 storage model, and stored in a storage medium. </p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body">&#160;&#160;(Section ?? below) </p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&#160;&#160;The stored objects include header blocks, free lists, data blocks, </p>
 <p class="FM__Body">&#160;&#160;B-trees, and other objects. Each group or dataset is stored as one or </p>
 <p class="FM__Body">&#160;&#160;more header and data blocks. See the </p>
 <p class="FM__Body"> &#160;&lt;a href=&quot;../H5.format.html&quot; target=&quot;H5DocWin&quot;&gt;&lt;cite&gt;HDF5 File Format </p>
 <p class="FM__Body"> &#160;Specification&lt;/cite&gt;&lt;/a&gt; for more information on how these objects are </p>
 <p class="FM__Body"> &#160;organized.</p>
 <p class="FM__Body">&#160;&#160;The HDF5 Library can also use other </p>
 <p class="FM__Body"> &#160;libraries and modules such as compression.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width = 600 cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dmodel_fig3_a.JPG&quot;&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dmodel_fig3_b.JPG&quot;&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dmodel_fig3_c.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 3. Data structures in different layers&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The important point to note is that there is not necessarily any simple </p>
 <p class="FM__Body">&#160;&#160;correspondence between the &#160;objects of the application program, </p>
 <p class="FM__Body"> &#160;the abstract data model, and those of the &lt;em&gt;Format Specification&lt;/em&gt;. </p>
 <p class="FM__Body">&#160;&#160;The organization of the data of application program, and how it is mapped </p>
 <p class="FM__Body">&#160;&#160;to the HDF5 abstract data model is up to the application developer. </p>
 <p class="FM__Body">&#160;&#160;The application program only needs to deal with the library and the </p>
 <p class="FM__Body">&#160;&#160;abstract data model. Most applications need not consider any details of </p>
 <p class="FM__Body"> &#160;the &lt;a href=&quot;../H5.format.html&quot; target=&quot;H5DocWin&quot;&gt;&lt;cite&gt;HDF5 File Format </p>
 <p class="FM__Body"> &#160;Specification&lt;/cite&gt;&lt;/a&gt; </p>
 <p class="FM__Body">&#160;&#160;or the details of how objects of abstract data model </p>
 <p class="FM__Body"> &#160;are translated to and from storage.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;div align=&quot;right&quot;&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=&quot;-1&quot;&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;a name=&quot;AbstractDMod&quot;&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h3 class=&quot;pagebefore&quot;&gt;1.2. The Abstract Data Model&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [ Note:  In this section some of the figures </p>
 <p class="FM__Body">&#160;&#160;are included twice. &#160;These are alternative versions of the same diagram, </p>
 <p class="FM__Body"> &#160;included for comparison and selection. ] ] ]&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The abstract data model (ADM) defines concepts for defining and </p>
 <p class="FM__Body">&#160;&#160;describing complex data stored in files. The ADM is a very general model </p>
 <p class="FM__Body">&#160;&#160;which is designed to conceptually cover many specific models. Many different </p>
 <p class="FM__Body">&#160;&#160;kinds of data can be mapped to objects of the ADM, and therefore stored and </p>
 <p class="FM__Body">&#160;&#160;retrieved using HDF5. The ADM is not, however, a model of any particular problem or </p>
 <p class="FM__Body"> &#160;application domain. Users need to map their data to the concepts of the ADM.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The key concepts include:&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;em&gt;File&lt;/em&gt; - a contiguous string of bytes in a computer </p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;store (memory, disk, etc.), and </p>
 <p class="FM__Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;the bytes represent zero or more objects of the model&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;em&gt;Group&lt;/em&gt; - a collection of objects (including groups)&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;em&gt;Dataset&lt;/em&gt; - a multidimensional array of data elements </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;with attributes and other metadata &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;em&gt;Dataspace&lt;/em&gt; - a description of the dimensions of a </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;multidimensional array&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;em&gt;Datatype&lt;/em&gt; - a description of a specific class of data </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;element including its storage layout as a pattern of bits&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;em&gt;Attribute&lt;/em&gt; - a named data value associated with a group, </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dataset, or named datatype&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;em&gt;Property List&lt;/em&gt; - a collection of parameters (some permanent </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;and some transient) controlling options in the library &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;em&gt;Link&lt;/em&gt; - the way objects are connected &lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;/ul&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;These key concepts are described in more detail below.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;1.2.1. File&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Abstractly, an HDF5 file is a container for an organized </p>
 <p class="FM__Body">&#160;&#160;collection of objects. </p>
 <p class="FM__Body">&#160;&#160;The objects are groups, datasets, and other objects as defined below. </p>
 <p class="FM__Body">&#160;&#160;The objects are organized as a rooted, directed graph. Every HDF5 file has at </p>
 <p class="FM__Body">&#160;&#160;least one object, the root group. See the figure below. All objects are </p>
 <p class="FM__Body">&#160;&#160;members of the </p>
 <p class="FM__Body"> &#160;root group or descendents of the root group.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width = 600 cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table align=&quot;center&quot; border=&quot;1&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;top&quot; align=&quot;center&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;top&quot; align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;superblock_vers:int&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;global_freelist_vers:int&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;symtable_vers:int&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sharedobjectheader_vers:int&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;userblock:size_t&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sizeof_addr:size_t&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sizeof_size:size_t&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;symtable_tree_rank:int&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;symtable_node_size:int&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;btree_istore_size:int</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;top&quot; align=&quot;center&quot;&gt;&lt;img src=&quot;Images/Dmodel_fig4_a.JPG&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 4. The HDF5 file&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;HDF5 objects have a unique identity &lt;em&gt;within a single HDF5 file&lt;/em&gt; and </p>
 <p class="FM__Body">&#160;&#160;can be accessed only by its names within the hierarchy of the file. HDF5 </p>
 <p class="FM__Body">&#160;&#160;objects in different files do not necessarily have unique identities, and </p>
 <p class="FM__Body">&#160;&#160;it is not possible to access a permanent HDF5 object except through a file. </p>
 <p class="FM__Body"> &#160;See the section &lt;a href=&quot;#Structure&quot;&gt;&amp;ldquo;The Structure of an HDF5 </p>
 <p class="FM__Body"> &#160;File&amp;rdquo;&lt;/a&gt; below for an explanation of the structure of the HDF5 file.</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;When the file is created, the &lt;em&gt;file creation properties&lt;/em&gt; specify </p>
 <p class="FM__Body">&#160;&#160;settings for the file. The file creation properties include version information </p>
 <p class="FM__Body">&#160;&#160;and parameters of global data structures. When the file is opened, </p>
 <p class="FM__Body"> &#160;the &lt;em&gt;file access properties&lt;/em&gt; specify settings for the current access to </p>
 <p class="FM__Body">&#160;&#160;the file. File access properties include parameters for storage drivers </p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;(see section ?? &#160;below)&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&#160;&#160;and parameters for caching and garbage collection. </p>
 <p class="FM__Body">&#160;&#160;The file creation properties are set permanently for the life </p>
 <p class="FM__Body">&#160;&#160;of the file, and </p>
 <p class="FM__Body">&#160;&#160;the file access properties can be changed by closing and reopening </p>
 <p class="FM__Body">&#160;&#160;the file. </p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;See PPP for more information about Property Lists and properties. </p>
 <p class="FM__Body"> &#160;&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;An HDF5 file can be &amp;ldquo;mounted&amp;rdquo; as part of another HDF5 file. </p>
 <p class="FM__Body">&#160;&#160;This is analogous to Unix file system mounts. The root of the mounted file </p>
 <p class="FM__Body">&#160;&#160;is attached to a group in the mounting file, and all the contents can be </p>
 <p class="FM__Body">&#160;&#160;accessed as if the mounted file were part of the mounting file. &#160;&#160;</p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;</p>
 <p class="FM__Body"> &#160;See XXX for an explanation of mounted files.</p>
 <p class="FM__Body"> &#160;&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;1.2.2. Group&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;An HDF5 group is analogous to a file system directory. Abstractly, </p>
 <p class="FM__Body">&#160;&#160;a group contains zero or more objects, and every object must be a member of at </p>
 <p class="FM__Body">&#160;&#160;least one group. The root group is a special case; it may not be a member </p>
 <p class="FM__Body"> &#160;of any group.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Group membership is actually implemented via link objects. See the </p>
 <p class="FM__Body">&#160;&#160;figure below. A link object is owned by a group and points to a </p>
 <p class="FM__Body"> &#160;&lt;em&gt;named object&lt;/em&gt;. Each link has a &lt;em&gt;name&lt;/em&gt;, and each link </p>
 <p class="FM__Body">&#160;&#160;points to exactly one object. Each named object has at least one and </p>
 <p class="FM__Body"> &#160;possibly many links to it.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width = 600 cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dmodel_fig5.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 5. Group membership via link objects&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;There are three classes of named objects: group, dataset, and named </p>
 <p class="FM__Body">&#160;&#160;datatype. See the figure below. &#160;Each of these objects is the member of </p>
 <p class="FM__Body"> &#160;at least one group, and this means there is at least one link to it.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width = 600 cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dmodel_fig6.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 6. Classes of named objects&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;1.2.3. Dataset&lt;/h4&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;An HDF5 dataset is a multidimensional (rectangular) array </p>
 <p class="FM__Body">&#160;&#160;of data elements. See the figure below. The shape of the array </p>
 <p class="FM__Body">&#160;&#160;(number of dimensions, size of </p>
 <p class="FM__Body">&#160;&#160;each dimension) is described by the dataspace object (described </p>
 <p class="FM__Body"> &#160;in the next section below).&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A data element is a single unit of data which may be a number, a character, </p>
 <p class="FM__Body">&#160;&#160;an array of numbers or characters, or a record of heterogeneous data elements. &#160;</p>
 <p class="FM__Body">&#160;&#160;A data element is a set of bits. The layout of the bits is described by the </p>
 <p class="FM__Body"> &#160;datatype (see below).&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The dataspace and datatype are set when the </p>
 <p class="FM__Body">&#160;&#160;dataset is created, and they cannot be changed for the life </p>
 <p class="FM__Body"> &#160;of the dataset. The &lt;em&gt;dataset creation properties&lt;/em&gt; are set when the </p>
 <p class="FM__Body">&#160;&#160;dataset is created. The dataset creation properties include the fill </p>
 <p class="FM__Body">&#160;&#160;value and storage properties such as chunking and compression. &#160;These </p>
 <p class="FM__Body"> &#160;properties cannot be changed after the dataset is created.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The dataset object manages the storage and access to the data. While </p>
 <p class="FM__Body">&#160;&#160;the data </p>
 <p class="FM__Body">&#160;&#160;is conceptually a contiguous rectangular array, it is physically stored </p>
 <p class="FM__Body">&#160;&#160;and </p>
 <p class="FM__Body">&#160;&#160;transferred in different ways depending on the storage properties and </p>
 <p class="FM__Body">&#160;&#160;the storage </p>
 <p class="FM__Body">&#160;&#160;mechanism used. The actual storage may be a set of compressed chunks, </p>
 <p class="FM__Body">&#160;&#160;and the access may be through different storage mechanisms and caches. </p>
 <p class="FM__Body">&#160;&#160;The dataset </p>
 <p class="FM__Body"> &#160;maps between the conceptual array of elements and the actual stored data.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width = 600 cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;img src=&quot;Images/Dmodel_fig7_b.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 7. The dataset&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;1.2.4. Dataspace&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 dataspace describes the layout of the elements of a </p>
 <p class="FM__Body">&#160;&#160;multidimensional </p>
 <p class="FM__Body">&#160;&#160;array. Conceptually, the array is a hyper-rectangle with one to 32 dimensions. </p>
 <p class="FM__Body">&#160;&#160;HDF5 dataspaces can be extendable. Therefore, each dimension has a current </p>
 <p class="FM__Body">&#160;&#160;size and a </p>
 <p class="FM__Body">&#160;&#160;maximum size, and the maximum may be unlimited. The dataspace describes </p>
 <p class="FM__Body">&#160;&#160;this hyper-rectangle: it is a list of dimensions with the current and maximum </p>
 <p class="FM__Body"> &#160;(or unlimited) sizes. See the figure below.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width = 600 cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;1&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;Dataspace&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;&amp;nbsp;rank:int&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;&amp;nbsp;current_size:hsize_t[ rank ]&amp;nbsp;&amp;nbsp;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;&amp;nbsp;maximum_size:hsize_t[ rank ]</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 8. The dataspace&lt;/b&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Dataspace objects are also used to describe hyperslab selections </p>
 <p class="FM__Body">&#160;&#160;from a dataset. Any subset of the elements of a dastaset can be selected </p>
 <p class="FM__Body">&#160;&#160;for read or write by specifying a set of hyperslabs. A non-rectangular </p>
 <p class="FM__Body"> &#160;region can be selected by the union of several (rectangular) dataspaces.&lt;/p&gt;</p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;See SSS for more </p>
 <p class="FM__Body"> &#160;information about data selection and hyperslabs.</p>
 <p class="FM__Body"> &#160;&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;1.2.5. Datatype&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 datatype object describes the layout of a single data element. </p>
 <p class="FM__Body">&#160;&#160;A data element is a single element of the array; it may be a single number, </p>
 <p class="FM__Body">&#160;&#160;a character, an array of numbers or carriers, or other data. The datatype </p>
 <p class="FM__Body"> &#160;object describes the storage layout of this data. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Data types are categorized into 11 classes of datatype. Each class is </p>
 <p class="FM__Body">&#160;&#160;interpreted according to a set of rules and has a specific set of properties </p>
 <p class="FM__Body">&#160;&#160;to describe its storage. For instance, floating point numbers have exponent </p>
 <p class="FM__Body">&#160;&#160;position and sizes which are interpreted according to appropriate standards </p>
 <p class="FM__Body">&#160;&#160;for number representation. Thus, the datatype class tells what the element </p>
 <p class="FM__Body"> &#160;means, and the datatype describes how it is stored.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure below &lt;!-- formerly Figure 9 --&gt; shows the classification </p>
 <p class="FM__Body">&#160;&#160;of datatypes. Atomic datatypes are </p>
 <p class="FM__Body">&#160;&#160;indivisible. each may be a single object; a number, a string, or some other </p>
 <p class="FM__Body">&#160;&#160;objects. Composite datatypes are composed of multiple elements of atomic </p>
 <p class="FM__Body">&#160;&#160;datatypes. In addition to the standard types, users can define additional </p>
 <p class="FM__Body"> &#160;datatypes such as a 24-bit integer or a 16-bit float.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A dataset or attribute has a single datatype object associated with </p>
 <p class="FM__Body">&#160;&#160;it. See Figure 7 above. The datatype object may be used in the definition </p>
 <p class="FM__Body">&#160;&#160;of several objects, but by default, a copy of the datatype object will </p>
 <p class="FM__Body"> &#160;be private to the dataset. &lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Optionally, a datatype object can be stored in the HDF5 file. The </p>
 <p class="FM__Body">&#160;&#160;datatype is linked into a group, and therefore given a name. A </p>
 <p class="FM__Body"> &#160;&lt;em&gt;named datatype&lt;/em&gt; can be opened and used in any way that a datatype </p>
 <p class="FM__Body"> &#160;object can be used.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The details of datatypes, their properties, and how they are used are </p>
 <p class="FM__Body">&#160;&#160;explained in the </p>
 <p class="FM__Body"> &#160;&amp;ldquo;&lt;a href=&quot;11_Datatypes.html&quot;&gt;HDF5 Datatypes&lt;/a&gt;&amp;rdquo; chapter.&lt;/p&gt;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;table width = 600 cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dmodel_fig9.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 9. Datatype classifications&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;1.2.6. Attribute&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Any HDF5 named data object (group, dataset, or named datatype) may </p>
 <p class="FM__Body">&#160;&#160;have zero or more user defined attributes. Attributes are used to document </p>
 <p class="FM__Body"> &#160;the object. The attributes of an object are stored with the object.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;An HDF5 attribute has a name and data. The data portion is similar </p>
 <p class="FM__Body">&#160;&#160;in structure to a dataset: a dataspace defines the layout of an array of </p>
 <p class="FM__Body">&#160;&#160;data elements, and a datatype defines the storage layout and interpretation </p>
 <p class="FM__Body"> &#160;of the elements See the figure below &lt;!-- formerly Figure 10--&gt;.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width = 600 cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dmodel_fig10.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 10. Attribute data elements&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;In fact, an attribute is very similar to a dataset with </p>
 <p class="FM__Body"> &#160;the following limitations:&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;ul&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;An attribute can only be accessed via the object&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;Attribute names are significant only within the object&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;An attribute should be a small object</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;The data of an attribute must be read or written in a single access </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(partial reading or writing is not allowed)&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;Attributes do not have attributes&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&lt;/ul&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Note that the value of an attribute can be an &lt;em&gt;object reference&lt;/em&gt;.  </p>
 <p class="FM__Body">&#160;&#160;A shared attribute or an attribute that is a large array can be implemented </p>
 <p class="FM__Body"> &#160;as a reference to a dataset.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The name, dataspace, and datatype of an attribute are specified when it </p>
 <p class="FM__Body">&#160;&#160;is created and cannot be changed over the life of the attribute. &#160;An </p>
 <p class="FM__Body">&#160;&#160;attribute can be opened by name, by index, or by iterating through all </p>
 <p class="FM__Body"> &#160;the attributes of the object.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;1.2.7. Property List&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;HDF5 has a generic property list object. Each list is a collection of </p>
 <p class="FM__Body"> &#160;&lt;em&gt;name-value&lt;/em&gt; pairs.  Each class of property list has a specific set </p>
 <p class="FM__Body">&#160;&#160;of properties. &#160;</p>
 <p class="FM__Body">&#160;&#160;Each property has an implicit name, a datatype, and a value. See the figure </p>
 <p class="FM__Body"> &#160;below. &lt;!-- formerly Figure 11 --&gt;</p>
 <p class="FM__Body">&#160;&#160;A property list object is created and used in ways similar to the other </p>
 <p class="FM__Body"> &#160;objects of the HDF5 library.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Property Lists are attached to the object in the library, they can be </p>
 <p class="FM__Body">&#160;&#160;used by any part of the library. Some properties are permanent (e.g., the </p>
 <p class="FM__Body">&#160;&#160;chunking strategy for a dataset), others are transient (e.g., buffer sizes </p>
 <p class="FM__Body">&#160;&#160;for data transfer). A common use of a Property List is to pass parameters </p>
 <p class="FM__Body"> &#160;from the calling program to a VFL driver or a module of the pipeline.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Property lists are conceptually similar to attributes. Property lists are </p>
 <p class="FM__Body">&#160;&#160;information relevant to the behavior of the library while attributes are </p>
 <p class="FM__Body"> &#160;relevant to the user&amp;rsquo;s data and application.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width = 600 cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;table width=&quot;95%&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;1&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;Property List&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;class:H5P_class_t&amp;nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;create(class)&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;get_class()</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/code&gt;      </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td valign=&quot;top&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dmodel_fig11_a.jpg&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table border=&quot;1&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;Property&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;name:string&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;value:H5TDatatype&amp;nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td align=&quot;left&quot; valign=&quot;middle&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;nbsp;&lt;br /&gt;&amp;nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/code&gt;      </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;&amp;nbsp;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 11. The property list&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/span&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Property lists are used to control optional behavior for file creation, </p>
 <p class="FM__Body">&#160;&#160;file access, dataset creation, dataset transfer (read, write), and file </p>
 <p class="FM__Body"> &#160;mounting. Some property list classes are shown in the table below.</p>
 <p class="FM__Body"> &#160;&lt;!-- Table 1--&gt; Details of the different property lists are explained in </p>
 <p class="FM__Body"> &#160;the relevant sections of this document.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Table 1. Property list classes and their usage</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;34%&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Property List Class&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;33%&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Used&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;33%&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Examples&lt;/b&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5P_FILE_CREATE&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Properties for file creation.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Set size of user block.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5P_FILE_ACCESS&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Properties for file access.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Set parameters for VFL driver. An example is MPI I/O.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5P_DATASET_CREATE&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Properties for dataset creation.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Set chunking, compression, or fill </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;value.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5P_DATASET_XFER&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Properties for raw data transfer </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(read and write).&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Tune buffer sizes or memory management.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&lt;code&gt;H5P_FILE_MOUNT&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;Properties for file mounting.&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;a name=&quot;SModel&quot;&gt;</p>
 <p class="FM__Body">&lt;div align=&quot;right&quot;&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=&quot;-1&quot;&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;h4&gt;1.2.8. Link&lt;/h4&gt;</p>
 <p class="FM__Body">&lt;p&gt;This section is under construction.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;SModel&quot;&gt;</p>
 <p class="FM__Body">&lt;h3 class=&quot;pagebefore&quot;&gt;1.3. The HDF5 Storage Model&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;1.3.1. The Abstract Storage Model: the HDF5 Format Specification&lt;/h4&gt; </p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The &lt;a name=&quot;SupScript1&quot; href=&quot;../H5.format.html&quot;&gt;</p>
 <p class="FM__Body"> &#160;&lt;em&gt;HDF5 File Format Specification&lt;/em&gt;&lt;/a&gt; </p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [</p>
 <p class="FM__Body">&#160;&#160;[cite it] </p>
 <p class="FM__Body"> &#160;] ] ]&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&#160;&#160;defines how HDF5 objects </p>
 <p class="FM__Body"> &#160;and data are mapped to a &lt;em&gt;linear address space&lt;/em&gt;. The address space is </p>
 <p class="FM__Body">&#160;&#160;assumed to be a contiguous array of bytes stored on some random access </p>
 <p class="FM__Body"> &#160;medium.&lt;a href=&quot;#FootNote&quot;&gt;&lt;sup&gt;&lt;font size=&quot;-1&quot;&gt;1&lt;/font&gt;&lt;/sup&gt;&lt;/a&gt; </p>
 <p class="FM__Body">&#160;&#160;The format defines the standard for how the objects of the </p>
 <p class="FM__Body">&#160;&#160;abstract data model are mapped to linear addresses. The stored </p>
 <p class="FM__Body">&#160;&#160;representation is self-describing in the sense that the format defines all </p>
 <p class="FM__Body">&#160;&#160;the information necessary to read and reconstruct the original </p>
 <p class="FM__Body"> &#160;objects of the abstract data model.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The &lt;em&gt;HDF5 File Format Specification&lt;/em&gt; is organized in three parts:</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;ol&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;strong&gt;Level 0&lt;/strong&gt;: File signature and super block&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;strong&gt;Level 1&lt;/strong&gt;: File infrastructure&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;ol type=&quot;a&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;strong&gt;Level 1A&lt;/strong&gt;: B-link trees and B-tree nodes&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;strong&gt;Level 1B&lt;/strong&gt;: Group&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;strong&gt;Level 1C&lt;/strong&gt;: Group entry&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;strong&gt;Level 1D&lt;/strong&gt;: Local heaps&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;strong&gt;Level 1E&lt;/strong&gt;: Global heap&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;strong&gt;Level 1F&lt;/strong&gt;: &#160;Free-space index&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/ol&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;strong&gt;Level 2&lt;/strong&gt;: Data object&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;ol type=&quot;a&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;strong&gt;Level 2A&lt;/strong&gt;: Data object headers&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;strong&gt;Level 2B&lt;/strong&gt;: Shared data object headers&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;li&gt;&lt;strong&gt;Level 2C&lt;/strong&gt;: Data object data storage&lt;/li&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/ol&gt;</p>
 <p class="FM__Body"> &#160;&lt;/ol&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The &lt;strong&gt;Level 0&lt;/strong&gt; specification defines the header block for </p>
 <p class="FM__Body">&#160;&#160;the file. Header block elements include a signature, version information, </p>
 <p class="FM__Body">&#160;&#160;key parameters of the file </p>
 <p class="FM__Body">&#160;&#160;layout (such as which VFL file drivers are needed), and pointers to the rest of </p>
 <p class="FM__Body"> &#160;the file. &lt;strong&gt;Level 1&lt;/strong&gt; defines the data structures used throughout </p>
 <p class="FM__Body"> &#160;the file: the B-trees, heaps, and groups. &lt;strong&gt;Level 2&lt;/strong&gt; defines the </p>
 <p class="FM__Body">&#160;&#160;data structure for storing the data objects and data. In all cases, the data </p>
 <p class="FM__Body">&#160;&#160;structures are completely specified so that every bit in the file can be </p>
 <p class="FM__Body"> &#160;faithfully interpreted.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;It is important to realize that the structures defined in the HDF5 file </p>
 <p class="FM__Body">&#160;&#160;format are not the same as the abstract data model: the object headers, heaps, </p>
 <p class="FM__Body">&#160;&#160;and B-trees of the file specification are not represented in the abstract </p>
 <p class="FM__Body">&#160;&#160;data model. The format defines a number of objects for managing the storage </p>
 <p class="FM__Body"> &#160;including header blocks, B-trees, and heaps. The &lt;em&gt;HDF5 File Format </p>
 <p class="FM__Body"> &#160;Specification&lt;/em&gt; </p>
 <p class="FM__Body">&#160;&#160;defines how the abstract objects (for example, groups and datasets) are </p>
 <p class="FM__Body"> &#160;represented as headers, B-tree blocks, and other elements.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 Library implements operations to write HDF5 objects to the linear </p>
 <p class="FM__Body">&#160;&#160;format and to read from the linear format to create HDF5 objects. It is </p>
 <p class="FM__Body">&#160;&#160;important to realize that a single HDF5 abstract object is usually stored </p>
 <p class="FM__Body">&#160;&#160;as several objects. A dataset, for example, might be stored in a header </p>
 <p class="FM__Body"> &#160;and in one or more data blocks, and these objects</p>
 <p class="FM__Body"> &#160;might not be contiguous on the hard disk.&lt;/p&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;h4&gt;1.3.2. Concrete Storage Model&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The HDF5 file format defines an abstract linear address space. This </p>
 <p class="FM__Body">&#160;&#160;can be implemented in different storage media such as a single file or </p>
 <p class="FM__Body">&#160;&#160;multiple files on disk or in memory. </p>
 <p class="FM__Body"> &#160;The HDF5 Library defines an open interface called the &lt;em&gt;Virtual File </p>
 <p class="FM__Body"> &#160;Layer&lt;/em&gt; (VFL). The VFL allows different concrete storage models to be </p>
 <p class="FM__Body"> &#160;selected. &lt;/p&gt;</p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;</p>
 <p class="FM__Body"> &#160;See Ch. XXX and the VFL document [cite].</p>
 <p class="FM__Body"> &#160;&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The VFL defines an abstract model, an API for random access storage, </p>
 <p class="FM__Body">&#160;&#160;and an API to plug in alternative VFL driver modules. The model defines </p>
 <p class="FM__Body">&#160;&#160;the operations that the VFL driver must and may support, and the plug-in </p>
 <p class="FM__Body">&#160;&#160;API enables the HDF5 Library to recognize the driver and pass it control </p>
 <p class="FM__Body"> &#160;and data.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;A number of VFL drivers have been defined in the HDF5 Library. Some </p>
 <p class="FM__Body">&#160;&#160;work with a single file, and some work with multiple files split in </p>
 <p class="FM__Body">&#160;&#160;various ways. Some work in serial computing environments, and some </p>
 <p class="FM__Body">&#160;&#160;work in parallel computing environments. Most work with disk copies of </p>
 <p class="FM__Body">&#160;&#160;HDF5 files, but one works with a memory copy. These drivers are listed </p>
 <p class="FM__Body"> &#160;in the table in the &lt;a href=&quot;08_TheFile.html#Drivers&quot;&gt;&amp;ldquo;Alternate </p>
 <p class="FM__Body"> &#160;File Storage Layouts and Low-level File Drivers&amp;rdquo;&lt;/a&gt; </p>
 <p class="FM__Body"> &#160;section in &amp;ldquo;The File&amp;rdquo; chapter. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- </p>
 <p class="FM__Body">&lt;table width = 600 cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dmodel_fig12.JPG&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 12. Conceptual hierarchy of VFL drivers&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">9.28.2011. I removed the figure above. Drivers have changed a lot since</p>
 <p class="FM__Body">the figure was created. MEE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;Each driver isolates the details of reading and writing storage so </p>
 <p class="FM__Body">&#160;&#160;that the rest of the HDF5 Library and user program can be almost the same </p>
 <p class="FM__Body">&#160;&#160;for different storage methods. The exception to this rule is that some VFL </p>
 <p class="FM__Body">&#160;&#160;drivers need information from the calling application. This information is </p>
 <p class="FM__Body">&#160;&#160;passed using property lists. For example, the Parallel driver requires </p>
 <p class="FM__Body"> &#160;certain control information that must be provided by the application.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</p>
 <p class="FM__Body">&lt;!--</p>
 <p class="FM__Body">document.writeln (&quot;</p>
 <p class="FM__Body">&lt;div align=&quot;right&quot;&gt;</p>
 <p class="FM__Body">&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=&quot;-1&quot;&gt;(Top)&lt;/font&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&lt;/div&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&quot;);</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&lt;/SCRIPT&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;Structure&quot;&gt;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&lt;h3 class=&quot;pagebefore&quot;&gt;1.4. The Structure of an HDF5 File&lt;/h3&gt;</p>
 <p class="FM__Body">&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;1.4.1. Overall File Structure&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;An HDF5 file is organized as a rooted, directed graph. Named data </p>
 <p class="FM__Body">&#160;&#160;objects are the nodes of the graph, and links are the directed arcs. Each </p>
 <p class="FM__Body">&#160;&#160;arc of the graph has a name, and the root group has the name &amp;ldquo;/&amp;rdquo;. </p>
 <p class="FM__Body">&#160;&#160;Objects are created and then inserted into the graph with the link operation </p>
 <p class="FM__Body">&#160;&#160;which creates a named link from a group to the object. For example, the </p>
 <p class="FM__Body"> &#160;figure below &lt;!-- formerly Figure 38 --&gt;illustrates the structure of an HDF5 </p>
 <p class="FM__Body">&#160;&#160;file when one dataset is created. An object can be the </p>
 <p class="FM__Body"> &#160;target of more than one link. &lt;a name=&quot;SupScript2&quot;&gt;The names on the links </p>
 <p class="FM__Body">&#160;&#160;must be unique within each group, but there may be many links with the </p>
 <p class="FM__Body">&#160;&#160;same name in different groups. Link names are unambiguous: some ancestor </p>
 <p class="FM__Body">&#160;&#160;will have a different name, or they are the same object. The graph is </p>
 <p class="FM__Body"> &#160;navigated with path names similar to Unix file systems.</p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;[ [ [</p>
 <p class="FM__Body"> &#160;[cite something]</p>
 <p class="FM__Body"> &#160;] ] ]&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&#160;&#160;An object can be opened with a full path starting at the root group or </p>
 <p class="FM__Body">&#160;&#160;with a relative path and a starting node (group). Note that all paths are </p>
 <p class="FM__Body">&#160;&#160;relative to a single HDF5 file. In this sense, an HDF5 file is analogous </p>
 <p class="FM__Body"> &#160;to a single Unix file system.&lt;/a&gt;</p>
 <p class="FM__Body"> &#160;&lt;a href=&quot;#FootNote&quot;&gt;&lt;sup&gt;&lt;font size=&quot;-1&quot;&gt;2&lt;/font&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width = 300 cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dmodel_fig38_a.JPG&quot;&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;a) Newly created file: one group, &lt;code&gt;/&lt;/code&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;img src=&quot;Images/Dmodel_fig38_b.JPG&quot;&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;b) Create a dataset called &lt;code&gt;/dset1&lt;/code&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;(&lt;code&gt;HDcreate(..., &amp;ldquo;/dset2&amp;rdquo;, ...&lt;/code&gt;)&lt;br /&gt;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 12. An HDF5 file with one dataset</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 38 --&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;It is important to note that, just like the Unix file system, HDF5 </p>
 <p class="FM__Body"> &#160;objects do not have &lt;em&gt;names&lt;/em&gt;. The names are associated with </p>
 <p class="FM__Body"> &#160;&lt;em&gt;paths&lt;/em&gt;. An object has a unique (within the file) &lt;em&gt;object </p>
 <p class="FM__Body"> &#160;ID&lt;/em&gt;, but a single object may have many names because there </p>
 <p class="FM__Body">&#160;&#160;may be many paths to the same object. An object can be renamed (moved to </p>
 <p class="FM__Body">&#160;&#160;another group) by adding and deleting links. In this case, the object </p>
 <p class="FM__Body">&#160;&#160;itself never moves. For that matter, membership in a group has no </p>
 <p class="FM__Body"> &#160;implication for the physical location of the stored object.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;&lt;a name=&quot;SupScript3&quot;&gt;Deleting a link to an object does not necessarily </p>
 <p class="FM__Body">&#160;&#160;delete the object. The object remains available as long as there is at </p>
 <p class="FM__Body">&#160;&#160;least one link to it. &#160;After all the links to an object are deleted, it </p>
 <p class="FM__Body">&#160;&#160;can no longer be opened although the storage may or may not be </p>
 <p class="FM__Body"> &#160;reclaimed.&lt;/a&gt;&lt;a href=&quot;#FootNote&quot;&gt;&lt;sup&gt;&lt;font size=&quot;-1&quot;&gt;3&lt;/font&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;It is important to realize that the linking mechanism can be used to </p>
 <p class="FM__Body">&#160;&#160;construct very complex graphs of objects. For example, it is possible for </p>
 <p class="FM__Body">&#160;&#160;an object to be shared between several groups and even to have more than </p>
 <p class="FM__Body">&#160;&#160;one name in the same group. It is also possible for a group to be a </p>
 <p class="FM__Body"> &#160;member of itself or to be in a &amp;ldquo;cycle&amp;rdquo; in the graph. An example of a cycle</p>
 <p class="FM__Body"> &#160;is where a child is the parent of one of its own ancestors. &lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;!-- move the following paragraph to the Links chapter when it is written:</p>
 <p class="FM__Body"> &#160;&lt;p&gt;HDF5 also has &lt;em&gt;soft links&lt;/em&gt; similar to Unix soft links. </p>
 <p class="FM__Body">&#160;&#160;A soft link is an object that contains a name and a path name for the </p>
 <p class="FM__Body">&#160;&#160;target object. The soft link can be followed to open the target of the link </p>
 <p class="FM__Body">&#160;&#160;just like a regular (hard) link. Unlike hard links, the target of a soft </p>
 <p class="FM__Body">&#160;&#160;link has no count of the soft link to it. &#160;The reference count of an object </p>
 <p class="FM__Body">&#160;&#160;is the number of hard Links (which must be &gt;= 1). A second difference is </p>
 <p class="FM__Body">&#160;&#160;that the hard link cannot be created if the target object does not exist, </p>
 <p class="FM__Body">&#160;&#160;and always points to the same object. A Soft Link can be created with any </p>
 <p class="FM__Body">&#160;&#160;path name, whether or not the object exists. Therefore, it may or may not </p>
 <p class="FM__Body">&#160;&#160;be possible to follow a Soft Link, or the target object </p>
 <p class="FM__Body"> &#160;may change from one access to another access of the same Soft Link. &lt;/p&gt;--&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;1.4.2. HDF5 Path Names and Navigation&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The structure of the file constitutes the name space for the objects </p>
 <p class="FM__Body">&#160;&#160;in the file. A path name is a string of components separated by </p>
 <p class="FM__Body">&#160;&#160;&amp;lsquo;/&amp;rsquo;. Each component is the name of a link or the special </p>
 <p class="FM__Body">&#160;&#160;character &amp;ldquo;.&amp;rdquo; for the current group. Link names (components) </p>
 <p class="FM__Body">&#160;&#160;can be any string of ASCII characters not containing &amp;lsquo;/&amp;rsquo; </p>
 <p class="FM__Body">&#160;&#160;(except the string &amp;ldquo;.&amp;rdquo; which is reserved). However, users </p>
 <p class="FM__Body">&#160;&#160;are advised to avoid the use of punctuation and non-printing characters </p>
 <p class="FM__Body">&#160;&#160;because they may create problems for other software. The figure below </p>
 <p class="FM__Body"> &#160;&lt;!-- formerly Figure 39 --&gt;gives a BNF grammar for HDF5 path names.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width = 600 cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;td align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;pre&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;PathName ::= AbsolutePathName | RelativePathName</p>
 <p class="FM__Body"> &#160;Separator ::= &quot;/&quot; [&quot;/&quot;]*</p>
 <p class="FM__Body"> &#160;AbsolutePathName ::= Separator [ RelativePathName ]</p>
 <p class="FM__Body"> &#160;RelativePathName ::= Component [ Separator RelativePathName ]*</p>
 <p class="FM__Body"> &#160;Component ::= &#160;&quot;.&quot; | &#160;Name</p>
 <p class="FM__Body"> &#160;Name ::= Character+ &#160;- &#160;{&quot;.&quot;}</p>
 <p class="FM__Body"> &#160;Character ::= {&lt;em&gt;c&lt;/em&gt;: &#160;&lt;em&gt;c&lt;/em&gt; in {{ &lt;em&gt;legal ASCII characters&lt;/em&gt; } &#160;- &#160;{'/'}}</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;/pre&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 13. A BNF grammar for path names</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 39--&gt;&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;An object can always be addressed by a &lt;em&gt;full or absolute path&lt;/em&gt;</p>
 <p class="FM__Body">&#160;&#160;which would start at the root group. &#160;As already noted, a given object </p>
 <p class="FM__Body">&#160;&#160;can have more than one full path name. An object can also be addressed </p>
 <p class="FM__Body">&#160;&#160;by a relative path which would start at a group and include the path </p>
 <p class="FM__Body"> &#160;to the object.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The structure of an HDF5 file is &amp;ldquo;self-describing.&amp;rdquo; This </p>
 <p class="FM__Body">&#160;&#160;means that it is possible to navigate the file to discover all the </p>
 <p class="FM__Body">&#160;&#160;objects in the file. Basically, the structure is traversed as a graph </p>
 <p class="FM__Body"> &#160;starting at one node and recursively visiting the nodes of the graph.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;!-- move the following paragraph to the Links chapter when it is written:</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The members of a group can be discovered with the H5Giterate function, </p>
 <p class="FM__Body">&#160;&#160;and a description of the object can be retrieved with the H5Gget_obj_info </p>
 <p class="FM__Body">&#160;&#160;function. In this way, all the members of a given group can be determined, </p>
 <p class="FM__Body">&#160;&#160;and each can be opened to retrieve a description, or the data and </p>
 <p class="FM__Body"> &#160;attributes of the object.&lt;/p&gt; --&gt; </p>
 <p class="FM__Body">&lt;!-- editingComment</p>
 <p class="FM__Body"> &#160;&lt;span class=&quot;editingComment&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;See ??? for more information about navigating and discovering the contents </p>
 <p class="FM__Body"> &#160;of and HDF5 file.</p>
 <p class="FM__Body"> &#160;&lt;/span&gt;</p>
 <p class="FM__Body">--&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;h4&gt;1.4.3. Examples of HDF5 File Structures&lt;/h4&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;p&gt;The figure below &lt;!-- formerly Figure 40 --&gt;shows some possible HDF5 </p>
 <p class="FM__Body">&#160;&#160;file structures with groups and datasets. Part a of the figure shows the </p>
 <p class="FM__Body">&#160;&#160;structure of a file with three groups. </p>
 <p class="FM__Body">&#160;&#160;Part b of the figure shows a dataset created in &amp;ldquo;/group1&amp;rdquo;. Part </p>
 <p class="FM__Body">&#160;&#160;c shows the structure after a dataset called dset2 has been added to the </p>
 <p class="FM__Body">&#160;&#160;root group. Part d the structure after another group and dataset have been </p>
 <p class="FM__Body"> &#160;added.&lt;/p&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;!-- NEW PAGE --&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;table width = 600 cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;table width=&quot;100%&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr valign=&quot;top&quot; align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;48%&quot;&gt;a) Three groups; two are members of the root </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group,&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;/group1&lt;/code&gt; and &lt;code&gt;/group2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;4%&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;48%&quot;&gt;b) Create a dataset in &lt;code&gt;/group1&lt;/code&gt;: </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;br /&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;/group1/dset1&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr valign=&quot;middle&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;48%&quot;&gt;&lt;img src=&quot;Images/Dmodel_fig40_a.JPG&quot; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;width=&quot;230&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;4%&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;48%&quot;&gt;&lt;img src=&quot;Images/Dmodel_fig40_b.JPG&quot; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;width=&quot;230&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr valign=&quot;top&quot; align=&quot;left&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;48%&quot;&gt;c) Another dataset, a member of the root </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group: &lt;br /&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;/dset2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;4%&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;48%&quot;&gt;d) And another group and dataset, reusing </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;object names: &lt;br /&gt; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;code&gt;/group2/group2/dset2&lt;/code&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;tr valign=&quot;middle&quot; align=&quot;center&quot;&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;48%&quot;&gt;&lt;img src=&quot;Images/Dmodel_fig40_c.JPG&quot; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;width=&quot;230&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;4%&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td width=&quot;48%&quot;&gt;&lt;img src=&quot;Images/Dmodel_fig40_d.JPG&quot; </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;width=&quot;282&quot;&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/table&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&lt;tr valign=&quot;top&quot;&gt;</p>
 <p class="FM__Body">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;td align=&quot;left&quot; &gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;b&gt;Figure 14. </p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- formerly Figure 40: --&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;Examples of HDF5 file structures with groups and datasets&lt;/b&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</p>
 <p class="FM__Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/tr&gt;</p>
 <p class="FM__Body">&lt;/table&gt;</p>
 <p class="FM__Body">&lt;br /&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;!-- FOR USE WITH ELECTRONIC VERSION -----------------------------------&gt;</p>
 <p class="FM__Body">&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</p>
 <p class="FM__Body">&lt;!-- FOR USE WITH ELECTRONIC VERSION -----------------------------------&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body">&lt;p&gt;&amp;nbsp;&lt;/p&gt;</p>
 <p class="FM__Body">&lt;a name=&quot;FootNote&quot;&gt;&lt;hr width=&quot;200px&quot; align=&quot;left&quot;&gt;&lt;/a&gt;</p>
 <p class="FM__Body">&nbsp;</p>
 <p class="FM__Body"> &#160;&lt;font size=&quot;-1&quot;&gt;&lt;sup&gt;&lt;a href=&quot;#SupScript1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;HDF5 requires random </p>
 <p class="FM__Body">&#160;&#160;access to the linear address space. For this reason it is not well suited for </p>
 <p class="FM__Body"> &#160;some data media such as streams.&lt;/font&gt;</p>
 <p class="FM__Body"> &#160;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&lt;font size=&quot;-1&quot;&gt;&lt;sup&gt;&lt;a href=&quot;#SupScript2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;It could be said that </p>
 <p class="FM__Body">&#160;&#160;HDF5 extends the organizing concepts of a file system to the internal </p>
 <p class="FM__Body"> &#160;structure of a single file.&lt;/font&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body"> &#160;&lt;br /&gt;</p>
 <p class="FM__Body"> &#160;&lt;font size=&quot;-1&quot;&gt;&lt;sup&gt;&lt;a href=&quot;#SupScript3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;As of HDF5-1.4, the </p>
 <p class="FM__Body">&#160;&#160;storage used for an object is reclaimed, even if all links </p>
 <p class="FM__Body"> &#160;are deleted.&lt;/font&gt;</p>
 <p class="FM__Body">&#160;&#160;</p>
 <p class="FM__Body">&lt;/body&gt;</p>
 <p class="FM__Body">&lt;/html&gt;</p>
 <p class="FM__Body">&nbsp;</p>
</div>
				
			</div>
			<div class="content_top_link">
				<span class="desktop"><a>&#160;</a> </span>
			</div>
		</div>
	</div>
</div>
<div class="buttonbar">
	<div class="buttonbarholder topic_page_holder">
		<div class="bar_toc topic_page" id="xmlEditorButtonBarTOC" title="Table of Contents">
			<a href="../../table_of_contents.htm">&#160;</a> 
		</div>
		<div class="bar_index topic_page" id="xmlEditorButtonBarIDX" title="Index">
			<a href="../../index1.htm">&#160;</a> 
		</div>
		<div class="bar_glossary topic_page" id="xmlEditorButtonBarGLO" 
			 title="Glossary">
			<a href="../../glossary.htm">&#160;</a> 
		</div>
		<div class="bar_search topic_page" title="Search">
			<a href="../../searchresults.htm">&#160;</a> 
		</div>
	</div>
</div>
<div id="localisation">
	<p id="localisation_toc"><span>Table of Contents</span></p>
	<p id="localisation_idx"><span>Index</span></p>
	<p id="localisation_glo"><span>Glossary</span></p>
	<p id="localisation_fts"><span>-Search-</span></p>
	<p id="localisation_back"><span>Back</span></p>
</div>
<script type="text/javascript" src="../../template/Theme1_Standard/jquery.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/jqueryui-custom.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/overthrow.min.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/overthrow.sidescroller.min.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/layout.js"></script>
<script type="text/javascript">//<![CDATA[
$(function(){
	addRhLoadCompleteEvent(setTopic);
});
//]]></script>
</body>
</html>
