gXMLBuffer ="<?xml version=\"1.0\" encoding=\"utf-8\" ?><data>   <entry name=\"no-op datatypes\" value=\"At present, the n-bit filter supports all datatypes. For datatypes of class time, string, opaque, reference, ENUM, and variable-length, the n-bit filter acts as a no-op which is short for no operation. For conve­nience, the rest of this section refers to such datatypes as no-op datatypes.\" />   <entry name=\"null dataspace\" value=\"A null dataspace, H5S_NULL, contains no data elements. Note that no selections can be applied to a null dataset as there is nothing to select.\" />   <entry name=\"primary data object\" value=\"An HDF5 attribute&#160;is a small metadata object describing the nature and/or intended usage of a primary data object. A primary data object may be a dataset, group, or committed datatype.\" />   <entry name=\"releasing the object’s identifier\" value=\"An application should close an object such as a datatype, dataspace, or dataset once the object is no lon­ger needed. Since each is an independent object, each must be released (or closed) separately. This action is frequently referred to as releasing the object’s identifier. The code in the example below closes the datatype, dataspace, and dataset that were created in the preceding section.\" />   <entry name=\"scalar dataspace\" value=\"A scalar dataspace, H5S_SCALAR, represents just one element, a scalar. Note that the datatype of this one element may be very complex; example would be a compound structure with members being of any allowed HDF5 datatype, including multidimensional arrays, strings, and nested compound structures. By convention, the rank of a scalar dataspace is always 0 (zero); think of it geometrically as a single, dimen­sionless point, though that point may be complex.\" />   <entry name=\"selections\" value=\"The previous section described writing or reading an entire dataset. HDF5 also supports access to portions of a dataset. These parts of datasets are known as selections.\" />   <entry name=\"self-describing\" value=\"The structure of an HDF5 file is self-describing, meaning that an application can navigate an HDF5 file to discover and understand all the objects it contains. This is an iterative process wherein the structure is tra­versed as a graph, starting at one node and recursively visiting linked nodes. To explore the entire file, the traversal should start at the root group.\" />   <entry name=\"simple dataspace\" value=\"A simple dataspace, H5S_SIMPLE, is a multidimensional array of elements. The dimensionality of the dataspace (or the rank of the array) is fixed and is defined at creation time. The size of each dimension can grow during the life time of the dataspace from the current size&#160;up to the maximum size. Both the current size and the maximum size are specified at creation time. The sizes of dimensions at any particular time in the life of a dataspace are called the current dimensions, or the dataspace extent. They can be queried along with the maximum sizes.\" />   <entry name=\"simple hyperslab\" value=\"The simplest type of selection is a simple hyperslab. This is an n-dimensional rectangular sub-set of a dataset where n is equal to the dataset’s rank. Other available selections include a more complex hyper­slab with user-defined stride and block size, a list of independent points, or the union of any of these.\" />   <entry name=\"Storage Properties\" value=\"Storage Properties\" />   <entry name=\"symbolic links\" value=\"There are two kinds of links, hard links&#160;and symbolic links. Hard links are reference counted; symbolic links are not. When an object is created, a hard link is automatically created. An object can be deleted from the file by removing all the hard links to it.\" />  </data>";