<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 12.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="HDF5_Users_Guide.css" CHARSET="UTF-8" TYPE="text/css">
<TITLE> 5. HDF5 Datasets</TITLE></HEAD>
<BODY>
<H1 CLASS="FM-Heading-Level1">
<A NAME="50475017_pgfId-1192746"></A>5. <A NAME="50475017_DatasetsChapter"></A>HDF5 Datasets</H1>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192747"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192748"></A>&lt;/div&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192749"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192750"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192751"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192752"></A>  Original title.  Which is proper?</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192753"></A>  &lt;h2&gt;10. Datasets I/O&lt;/h2&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192754"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192755"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192756"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192757"></A>&lt;a name=&quot;Intro&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192758"></A>&lt;h3&gt;5.1. Introduction&lt;/h3&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192759"></A>&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192760"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192761"></A>  &lt;p&gt;An HDF5 dataset is an object composed of a collection of data elements, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192762"></A>  or raw data, and metadata that stores a description of the data elements, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192763"></A>  data layout, and all other information necessary to write, read, and interpret </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192764"></A>  the stored data. From the viewpoint of the application the raw data is stored </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192765"></A>  as a one-dimensional or multi-dimensional array of elements (the &lt;em&gt;raw </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192766"></A>  data&lt;/em&gt;), those elements can be any of several numerical or character </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192767"></A>  types, small arrays, or even compound types similar to C structs. The </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192768"></A>  dataset object may have attribute objects. See the figure below.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192769"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192770"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192771"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192772"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192773"></A>        &lt;td align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192774"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192775"></A>        &lt;img src=&quot;Images/Dsets_fig1.JPG&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192776"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192777"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192778"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192779"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192780"></A>        &lt;td align=&quot;left&quot; &gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192781"></A>        &lt;b&gt;Figure 1. Application view of a dataset&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192782"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192783"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192784"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192785"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192786"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192787"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192788"></A>  &lt;span class=&quot;editingComment&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192789"></A>  &lt;p&gt;Datatypes are described in  [ [ [ &quot;Datatypes&quot; ] ] ]. and in the [ [ [ &quot;HDF5 </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192790"></A>  Datatypes&quot; chapter in this guide ] ] ], Dataspace objects are described in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192791"></A>  [ [ [ Dataspace ] ] ], and Attributes are described in [ [ [ Attributes ] ] ].</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192792"></A>  &lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192793"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192794"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192795"></A>  &lt;p&gt;A dataset object is stored in a file in two parts: a header and a data </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192796"></A>  array. The header contains information that is needed to interpret the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192797"></A>  array portion of the dataset, as well as metadata (or pointers to metadata) </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192798"></A>  that describes or annotates the dataset. Header information includes the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192799"></A>  name of the object, its dimensionality, its number-type, information about </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192800"></A>  how the data itself is stored on disk (the &lt;em&gt;storage layout&lt;/em&gt;), and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192801"></A>  other information used by the library to speed up access to the dataset </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192802"></A>  or maintain the file&amp;rsquo;s integrity. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192803"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192804"></A>  &lt;p&gt;The HDF5 dataset interface, comprising the H5D functions, provides a </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192805"></A>  mechanism for managing HDF5 datasets including the transfer of data </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192806"></A>  between memory and disk and the description of dataset properties. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192807"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192808"></A>  &lt;p&gt;A dataset is used by other HDF5 APIs, either by name or by an </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192809"></A>  identifier (e.g., returned by &lt;code&gt;H5Dopen&lt;/code&gt;).&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192810"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192811"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192812"></A>&lt;h4&gt;&lt;em&gt;Link/Unlink&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192813"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192814"></A>  &lt;p&gt;A dataset can be added to a group with one of the &lt;code&gt;H5Lcreate&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192815"></A>  calls, and deleted from a group with &lt;code&gt;H5Ldelete&lt;/code&gt;. The link and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192816"></A>  unlink operations use the name of an object, which may be a dataset. The </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192817"></A>  dataset does not have to open to be linked or unlinked.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192818"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192819"></A>&lt;h4&gt;&lt;em&gt;Object reference&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192820"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192821"></A>  &lt;p&gt;A dataset may be the target of an object reference.  The object </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192822"></A>  reference is created by &lt;code&gt;H5Rcreate&lt;/code&gt; with the name of an object </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192823"></A>  which may be a dataset and the reference type &lt;code&gt;H5R_OBJECT&lt;/code&gt;. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192824"></A>  The dataset does not have to be open to create a reference to it.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192825"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192826"></A>  &lt;p&gt;An object reference may also refer to a region (selection) of a dataset. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192827"></A>  The reference is created with &lt;code&gt;H5Rcreate&lt;/code&gt; and a reference type of </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192828"></A>  &lt;code&gt;H5R_DATASET_REGION&lt;/code&gt;.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192829"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192830"></A>  &lt;p&gt;An object reference can be accessed by a call to &lt;code&gt;H5Rdereference&lt;/code&gt;. When the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192831"></A>  reference is to a dataset or dataset region, the &lt;code&gt;H5Rdeference&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192832"></A>  call returns an identifier to the dataset just as if &lt;code&gt;H5Dopen&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192833"></A>  has been called.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192834"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192835"></A>&lt;h4&gt;&lt;em&gt;Adding attributes&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192836"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192837"></A>  &lt;p&gt;A dataset may have user-defined attributes which are created with </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192838"></A>  &lt;code&gt;H5Acreate&lt;/code&gt; and accessed through the H5A API. To create an </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192839"></A>  attribute for a dataset, the dataset must be open, and the identifier is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192840"></A>  passed to &lt;code&gt;H5Acreate&lt;/code&gt;. The attributes of a dataset are </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192841"></A>  discovered and opened using &lt;code&gt;H5Aopen_name&lt;/code&gt;, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192842"></A>  &lt;code&gt;H5Aopen_idx&lt;/code&gt;, or &lt;code&gt;H5Aiterate&lt;/code&gt;; these functions </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192843"></A>  use the identifier of the dataset. An attribute can be deleted with </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192844"></A>  &lt;code&gt;H5Adelete&lt;/code&gt; which also uses the identifier of the dataset.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192845"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192846"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192847"></A>  &lt;span class=&quot;editingComment&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192848"></A>  &lt;p&gt;The remaining sections of this chapter discuss... [To be written last.]&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192849"></A>  &lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192850"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192851"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192852"></A>&lt;br&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192853"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192854"></A>&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192855"></A>&lt;!--</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192856"></A>document.writeln (&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192857"></A>&lt;a name=&quot;FileFunctSums&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192858"></A>&lt;div align=right&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192859"></A>&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=&quot;-1&quot;&gt;(Top)&lt;/font&gt;&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192860"></A>&lt;/div&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192861"></A>&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192862"></A>&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192863"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192864"></A>&lt;/SCRIPT&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192865"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192866"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192867"></A>&lt;a name=&quot;FileFunctSums&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192868"></A>&lt;h3 class=pagebefore&gt;5.2. Dataset Function Summaries&lt;/h3&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192869"></A>&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192870"></A>&lt;p&gt;Functions that can be used with datasets (H5D functions) and property </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192871"></A>list functions that can used with datasets (H5P functions) are listed below.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192872"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192873"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192874"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192875"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192876"></A>        &lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192877"></A>        &lt;b&gt;Function Listing 1. Dataset functions (H5D)</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192878"></A>        &lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192879"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192880"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192881"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192882"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192883"></A>        &lt;b&gt;C Function&lt;br&gt;Fortran Function&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192884"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192885"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192886"></A>        &lt;b&gt;Purpose&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192887"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192888"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192889"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192890"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192891"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192892"></A>        &lt;code&gt;H5Dcreate&lt;br&gt;h5dcreate_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192893"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192894"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192895"></A>        Creates a dataset at the specified location. The C function is a </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192896"></A>        macro: see &lt;a href=&quot;../RM/APICompatMacros.html&quot;&gt;&amp;ldquo;API </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192897"></A>        Compatibility Macros in HDF5.&amp;rdquo;&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192898"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192899"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192900"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192901"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192902"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192903"></A>        &lt;code&gt;H5Dcreate_anon&lt;br&gt;h5dcreate_anon_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192904"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192905"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192906"></A>        Creates a dataset in a file without linking it into the file structure. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192907"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192908"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192909"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192910"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192911"></A>        &lt;code&gt;H5Dopen&lt;br&gt;h5dopen_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192912"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192913"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192914"></A>        Opens an existing dataset. The C function is a </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192915"></A>        macro: see &lt;a href=&quot;../RM/APICompatMacros.html&quot;&gt;&amp;ldquo;API </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192916"></A>        Compatibility Macros in HDF5.&amp;rdquo;&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192917"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192918"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192919"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192920"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192921"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192922"></A>        &lt;code&gt;H5Dclose&lt;br&gt;h5dclose_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192923"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192924"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192925"></A>        Closes the specified dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192926"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192927"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192928"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192929"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192930"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192931"></A>        &lt;code&gt;H5Dget_space&lt;br&gt;h5dget_space_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192932"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192933"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192934"></A>        Returns an identifier for a copy of the dataspace for a dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192935"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192936"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192937"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192938"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192939"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192940"></A>        &lt;code&gt;H5Dget_space_status&lt;br&gt;h5dget_space_status_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192941"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192942"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192943"></A>        Determines whether space has been allocated for a dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192944"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192945"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192946"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192947"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192948"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192949"></A>        &lt;code&gt;H5Dget_type&lt;br&gt;h5dget_type_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192950"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192951"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192952"></A>        Returns an identifier for a copy of the datatype for a dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192953"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192954"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192955"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192956"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192957"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192958"></A>        &lt;code&gt;H5Dget_create_plist&lt;br&gt;h5dget_create_plist_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192959"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192960"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192961"></A>        Returns an identifier for a copy of the dataset creation property </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192962"></A>        list for a dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192963"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192964"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192965"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192966"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192967"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192968"></A>        &lt;code&gt;H5Dget_access_plist&lt;br&gt;(none)&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192969"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192970"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192971"></A>        Returns the dataset access property list associated with a dataset. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192972"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192973"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192974"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192975"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192976"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192977"></A>        &lt;code&gt;H5Dget_offset&lt;br&gt;h5dget_offset_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192978"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192979"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192980"></A>        Returns the dataset address in a file.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192981"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192982"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192983"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192984"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192985"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192986"></A>        &lt;code&gt;H5Dget_storage_size&lt;br&gt;h5dget_storage_size_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192987"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192988"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192989"></A>        Returns the amount of storage required for a dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192990"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192991"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192992"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192993"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192994"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192995"></A>        &lt;code&gt;H5Dvlen_get_buf_size&lt;br&gt;h5dvlen_get_max_len_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192996"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192997"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192998"></A>        Determines the number of bytes required to store variable-length (VL) </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1192999"></A>        data.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193000"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193001"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193002"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193003"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193004"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193005"></A>        &lt;code&gt;H5Dvlen_reclaim&lt;br&gt;h5dvlen_reclaim_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193006"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193007"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193008"></A>        Reclaims VL datatype memory buffers.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193009"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193010"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193011"></A>    &lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193012"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193013"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193014"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193015"></A>        &lt;code&gt;H5Dread&lt;br&gt;h5dread_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193016"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193017"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193018"></A>        Reads raw data from a dataset into a buffer.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193019"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193020"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193021"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193022"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193023"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193024"></A>        &lt;code&gt;H5Dwrite&lt;br&gt;h5dwrite_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193025"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193026"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193027"></A>        Writes raw data from a buffer to a dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193028"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193029"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193030"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193031"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193032"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193033"></A>        &lt;code&gt;H5Diterate&lt;br&gt;(none)&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193034"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193035"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193036"></A>        Iterates over all selected elements in a dataspace.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193037"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193038"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193039"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193040"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193041"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193042"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193043"></A>        &lt;code&gt;H5Dgather&lt;br&gt;(none)&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193044"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193045"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193046"></A>        Gathers data from a selection within a memory buffer. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193047"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193048"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193049"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193050"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193051"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193052"></A>        &lt;code&gt;H5Dscatter&lt;br&gt;(none)&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193053"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193054"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193055"></A>        Scatters data into a selection within a memory buffer. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193056"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193057"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193058"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193059"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193060"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193061"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193062"></A>        &lt;code&gt;H5Dfill&lt;br&gt;h5dfill_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193063"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193064"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193065"></A>        Fills dataspace elements with a fill value in a memory buffer.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193066"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193067"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193068"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193069"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193070"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193071"></A>        &lt;code&gt;H5Dset_extent&lt;br&gt;h5dset_extent_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193072"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193073"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193074"></A>        Changes the sizes of a dataset&amp;rsquo;s dimensions. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193075"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193076"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193077"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193078"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193079"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193080"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193081"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193082"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193083"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193084"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193085"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193086"></A>        &lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193087"></A>        &lt;b&gt;Function Listing 2. Dataset creation property list functions (H5P)</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193088"></A>        &lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193089"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193090"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193091"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193092"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193093"></A>        &lt;b&gt;C Function&lt;br&gt;Fortran Function&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193094"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193095"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193096"></A>        &lt;b&gt;Purpose&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193097"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193098"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193099"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193100"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193101"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193102"></A>        &lt;code&gt;H5Pset_layout&lt;br&gt;h5pset_layout_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193103"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193104"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193105"></A>        Sets the type of storage used to store the raw data for a dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193106"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193107"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193108"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193109"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193110"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193111"></A>        &lt;code&gt;H5Pget_layout&lt;br&gt;h5pget_layout_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193112"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193113"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193114"></A>        Returns the layout of the raw data for a dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193115"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193116"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193117"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193118"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193119"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193120"></A>        &lt;code&gt;H5Pset_chunk&lt;br&gt;h5pset_chunk_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193121"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193122"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193123"></A>        Sets the size of the chunks used to store a chunked layout dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193124"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193125"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193126"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193127"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193128"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193129"></A>        &lt;code&gt;H5Pget_chunk&lt;br&gt;h5pget_chunk_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193130"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193131"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193132"></A>        Retrieves the size of chunks for the raw data of a chunked layout </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193133"></A>        dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193134"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193135"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193136"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193137"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193138"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193139"></A>        &lt;code&gt;H5Pset_deflate&lt;br&gt;h5pset_deflate_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193140"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193141"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193142"></A>        Sets compression method and compression level.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193143"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193144"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193145"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193146"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193147"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193148"></A>        &lt;code&gt;H5Pset_fill_value&lt;br&gt;h5pset_fill_value_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193149"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193150"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193151"></A>        Sets the fill value for a dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193152"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193153"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193154"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193155"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193156"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193157"></A>        &lt;code&gt;H5Pget_fill_value&lt;br&gt;h5pget_fill_value_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193158"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193159"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193160"></A>        Retrieves a dataset fill value.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193161"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193162"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193163"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193164"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193165"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193166"></A>        &lt;code&gt;H5Pfill_value_defined&lt;br&gt;(none)&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193167"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193168"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193169"></A>        Determines whether the fill value is defined.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193170"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193171"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193172"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193173"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193174"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193175"></A>        &lt;code&gt;H5Pset_fill_time&lt;br&gt;h5pset_fill_time_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193176"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193177"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193178"></A>        Sets the time when fill values are written to a dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193179"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193180"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193181"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193182"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193183"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193184"></A>        &lt;code&gt;H5Pget_fill_time&lt;br&gt;h5pget_fill_time_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193185"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193186"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193187"></A>        Retrieves the time when fill value are written to a dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193188"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193189"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193190"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193191"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193192"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193193"></A>        &lt;code&gt;H5Pset_alloc_time&lt;br&gt;h5pset_alloc_time_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193194"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193195"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193196"></A>        Sets the timing for storage space allocation.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193197"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193198"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193199"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193200"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193201"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193202"></A>        &lt;code&gt;H5Pget_alloc_time&lt;br&gt;h5pget_alloc_time_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193203"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193204"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193205"></A>        Retrieves the timing for storage space allocation.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193206"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193207"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193208"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193209"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193210"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193211"></A>        &lt;code&gt;H5Pset_filter&lt;br&gt;h5pset_filter_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193212"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193213"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193214"></A>        Adds a filter to the filter pipeline.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193215"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193216"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193217"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193218"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193219"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193220"></A>        &lt;code&gt;H5Pall_filters_avail&lt;br&gt;(none)&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193221"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193222"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193223"></A>        Verifies that all required filters are available.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193224"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193225"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193226"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193227"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193228"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193229"></A>        &lt;code&gt;H5Pget_nfilters&lt;br&gt;h5pget_nfilters_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193230"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193231"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193232"></A>        Returns the number of filters in the pipeline.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193233"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193234"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193235"></A>    &lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193236"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193237"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193238"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193239"></A>        &lt;code&gt;H5Pget_filter&lt;br&gt;h5pget_filter_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193240"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193241"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193242"></A>        Returns information about a filter in a pipeline. The C function is a </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193243"></A>        macro: see &lt;a href=&quot;../RM/APICompatMacros.html&quot;&gt;&amp;ldquo;API </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193244"></A>        Compatibility Macros in HDF5.&amp;rdquo;&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193245"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193246"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193247"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193248"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193249"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193250"></A>        &lt;code&gt;H5Pget_filter_by_id&lt;br&gt;h5pget_filter_by_id_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193251"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193252"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193253"></A>        Returns information about the specified filter. The C function is a </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193254"></A>        macro: see &lt;a href=&quot;../RM/APICompatMacros.html&quot;&gt;&amp;ldquo;API </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193255"></A>        Compatibility Macros in HDF5.&amp;rdquo;&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193256"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193257"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193258"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193259"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193260"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193261"></A>        &lt;code&gt;H5Pmodify_filter&lt;br&gt;h5pmodify_filter_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193262"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193263"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193264"></A>        Modifies a filter in the filter pipeline.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193265"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193266"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193267"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193268"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193269"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193270"></A>        &lt;code&gt;H5Premove_filter&lt;br&gt;h5premove_filter_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193271"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193272"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193273"></A>        Deletes one or more filters in the filter pipeline.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193274"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193275"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193276"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193277"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193278"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193279"></A>        &lt;code&gt;H5Pset_fletcher32&lt;br&gt;h5pset_fletcher32_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193280"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193281"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193282"></A>        Sets up use of the Fletcher32 checksum filter.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193283"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193284"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193285"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193286"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193287"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193288"></A>        &lt;code&gt;H5Pset_nbit&lt;br&gt;h5pset_nbit_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193289"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193290"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193291"></A>        Sets up use of the n-bit filter.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193292"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193293"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193294"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193295"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193296"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193297"></A>        &lt;code&gt;H5Pset_scaleoffset&lt;br&gt;h5pset_scaleoffset_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193298"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193299"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193300"></A>        Sets up use of the scale-offset filter.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193301"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193302"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193303"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193304"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193305"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193306"></A>        &lt;code&gt;H5Pset_shuffle&lt;br&gt;h5pset_shuffle_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193307"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193308"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193309"></A>        Sets up use of the shuffle filter.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193310"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193311"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193312"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193313"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193314"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193315"></A>        &lt;code&gt;H5Pset_szip&lt;br&gt;h5pset_szip_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193316"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193317"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193318"></A>        Sets up use of the Szip compression filter.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193319"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193320"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193321"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193322"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193323"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193324"></A>        &lt;code&gt;H5Pset_external&lt;br&gt;h5pset_external_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193325"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193326"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193327"></A>        Adds an external file to the list of external files.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193328"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193329"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193330"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193331"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193332"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193333"></A>        &lt;code&gt;H5Pget_external_count&lt;br&gt;h5pget_external_count_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193334"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193335"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193336"></A>        Returns the number of external files for a dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193337"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193338"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193339"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193340"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193341"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193342"></A>        &lt;code&gt;H5Pget_external&lt;br&gt;h5pget_external_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193343"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193344"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193345"></A>        Returns information about an external file.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193346"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193347"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193348"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193349"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193350"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193351"></A>        &lt;code&gt;H5Pset_char_encoding&lt;br&gt;h5pset_char_encoding_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193352"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193353"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193354"></A>        Sets the character encoding used to encode a string. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193355"></A>        Use to set ASCII or UTF-8 character encoding for object names.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193356"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193357"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193358"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193359"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193360"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193361"></A>        &lt;code&gt;H5Pget_char_encoding&lt;br&gt;h5pget_char_encoding_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193362"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193363"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193364"></A>        Retrieves the character encoding used to create a string. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193365"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193366"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193367"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193368"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193369"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193370"></A>&lt;br/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193371"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193372"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193373"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193374"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193375"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193376"></A>        &lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193377"></A>        &lt;b&gt;Function Listing 3. Dataset access property list functions (H5P)</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193378"></A>        &lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193379"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193380"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193381"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193382"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193383"></A>        &lt;b&gt;C Function&lt;br&gt;Fortran Function&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193384"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193385"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193386"></A>        &lt;b&gt;Purpose&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193387"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193388"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193389"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193390"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193391"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193392"></A>        &lt;code&gt;H5Pset_buffer&lt;br&gt;h5pset_buffer_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193393"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193394"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193395"></A>        Sets type conversion and background buffers.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193396"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193397"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193398"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193399"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193400"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193401"></A>        &lt;code&gt;H5Pget_buffer&lt;br&gt;h5pget_buffer_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193402"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193403"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193404"></A>        Reads buffer settings.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193405"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193406"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193407"></A>&lt;!-- 8.10.10, MEE: I removed two dataset access property list functions: </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193408"></A>                   H5Pset_preserve and H5Pget_preserve. --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193409"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193410"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193411"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193412"></A>        &lt;code&gt;H5Pset_chunk_cache&lt;br&gt;h5pset_chunk_cache_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193413"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193414"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193415"></A>        Sets the raw data chunk cache parameters.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193416"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193417"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193418"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193419"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193420"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193421"></A>        &lt;code&gt;H5Pget_chunk_cache&lt;br&gt;h5pget_chunk_cache_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193422"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193423"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193424"></A>        Retrieves the raw data chunk cache parameters. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193425"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193426"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193427"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193428"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193429"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193430"></A>        &lt;code&gt;H5Pset_edc_check&lt;br&gt;h5pset_edc_check_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193431"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193432"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193433"></A>        Sets whether to enable error-detection when reading a dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193434"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193435"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193436"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193437"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193438"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193439"></A>        &lt;code&gt;H5Pget_edc_check&lt;br&gt;h5pget_edc_check_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193440"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193441"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193442"></A>        Determines whether error-detection is enabled for dataset reads.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193443"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193444"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193445"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193446"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193447"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193448"></A>        &lt;code&gt;H5Pset_filter_callback&lt;br&gt;(none)&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193449"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193450"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193451"></A>        Sets user-defined filter callback function.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193452"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193453"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193454"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193455"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193456"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193457"></A>        &lt;code&gt;H5Pset_data_transform&lt;br&gt;h5pset_data_transform_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193458"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193459"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193460"></A>        Sets a data transform expression.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193461"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193462"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193463"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193464"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193465"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193466"></A>        &lt;code&gt;H5Pget_data_transform&lt;br&gt;h5pget_data_transform_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193467"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193468"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193469"></A>        Retrieves a data transform expression.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193470"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193471"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193472"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193473"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193474"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193475"></A>        &lt;code&gt;H5Pset_type_conv_cb&lt;br&gt;(none)&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193476"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193477"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193478"></A>        Sets user-defined datatype conversion callback function.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193479"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193480"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193481"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193482"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193483"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193484"></A>        &lt;code&gt;H5Pget_type_conv_cb&lt;br&gt;(none)&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193485"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193486"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193487"></A>        Gets user-defined datatype conversion callback function.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193488"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193489"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193490"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193491"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193492"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193493"></A>        &lt;code&gt;H5Pset_hyper_vector_size&lt;br&gt;h5pset_hyper_vector_size_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193494"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193495"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193496"></A>        Sets number of I/O vectors to be read/written in hyperslab I/O.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193497"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193498"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193499"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193500"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193501"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193502"></A>        &lt;code&gt;H5Pget_hyper_vector_size&lt;br&gt;h5pget_hyper_vector_size_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193503"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193504"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193505"></A>        Retrieves number of I/O vectors to be read/written in hyperslab I/O.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193506"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193507"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193508"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193509"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193510"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193511"></A>        &lt;code&gt;H5Pset_btree_ratios&lt;br&gt;h5pset_btree_ratios_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193512"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193513"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193514"></A>        Sets B-tree split ratios for a dataset transfer property list.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193515"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193516"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193517"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193518"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193519"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193520"></A>        &lt;code&gt;H5Pget_btree_ratios&lt;br&gt;h5pget_btree_ratios_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193521"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193522"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193523"></A>        Gets B-tree split ratios for a dataset transfer property list.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193524"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193525"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193526"></A>    &lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193527"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193528"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193529"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193530"></A>        &lt;code&gt;H5Pset_vlen_mem_manager&lt;br&gt;(none)&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193531"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193532"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193533"></A>        Sets the memory manager for variable-length datatype allocation in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193534"></A>        &lt;code&gt;H5Dread&lt;/code&gt; and &lt;code&gt;H5Dvlen_reclaim&lt;/code&gt;.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193535"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193536"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193537"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193538"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193539"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193540"></A>        &lt;code&gt;H5Pget_vlen_mem_manager&lt;br&gt;(none)&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193541"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193542"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193543"></A>        Gets the memory manager for variable-length datatype allocation in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193544"></A>        &lt;code&gt;H5Dread&lt;/code&gt; and &lt;code&gt;H5Dvlen_reclaim&lt;/code&gt;.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193545"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193546"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193547"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193548"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193549"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193550"></A>        &lt;code&gt;H5Pset_dxpl_mpio&lt;br&gt;h5pset_dxpl_mpio_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193551"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193552"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193553"></A>        Sets data transfer mode.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193554"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193555"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193556"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193557"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193558"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193559"></A>        &lt;code&gt;H5Pget_dxpl_mpio&lt;br&gt;h5pget_dxpl_mpio_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193560"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193561"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193562"></A>        Returns the data transfer mode.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193563"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193564"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193565"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193566"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193567"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193568"></A>        &lt;code&gt;H5Pset_dxpl_mpio_chunk_opt&lt;br&gt;(none)&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193569"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193570"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193571"></A>        Sets a flag specifying linked-chunk I/O or multi-chunk I/O.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193572"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193573"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193574"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193575"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193576"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193577"></A>        &lt;code&gt;H5Pset_dxpl_mpio_chunk_opt_num&lt;br&gt;(none)&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193578"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193579"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193580"></A>        Sets a numeric threshold for linked-chunk I/O.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193581"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193582"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193583"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193584"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193585"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193586"></A>        &lt;code&gt;H5Pset_dxpl_mpio_chunk_opt_ratio&lt;br&gt;(none)&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193587"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193588"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193589"></A>        Sets a ratio threshold for collective I/O.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193590"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193591"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193592"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193593"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193594"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193595"></A>        &lt;code&gt;H5Pset_dxpl_mpio_collective_opt&lt;br&gt;(none)&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193596"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193597"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193598"></A>        Sets a flag governing the use of independent versus collective I/O. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193599"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193600"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193601"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193602"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193603"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193604"></A>        &lt;code&gt;H5Pset_multi_type&lt;br&gt;(none)&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193605"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193606"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193607"></A>        Sets the type of data property for the MULTI driver.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193608"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193609"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193610"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193611"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193612"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193613"></A>        &lt;code&gt;H5Pget_multi_type&lt;br&gt;(none)&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193614"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193615"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193616"></A>        Retrieves the type of data property for the MULTI driver.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193617"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193618"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193619"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193620"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193621"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193622"></A>        &lt;code&gt;H5Pset_small_data_block_size&lt;br&gt;h5pset_small_data_block_size_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193623"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193624"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193625"></A>        Sets the size of a contiguous block reserved for small data.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193626"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193627"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193628"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193629"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193630"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193631"></A>        &lt;code&gt;H5Pget_small_data_block_size&lt;br&gt;h5pget_small_data_block_size_f&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193632"></A>        &lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193633"></A>        &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193634"></A>        Retrieves the current small data block size setting.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193635"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193636"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193637"></A>        &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193638"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193639"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193640"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193641"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193642"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193643"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193644"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193645"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193646"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193647"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193648"></A>&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193649"></A>&lt;!--</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193650"></A>document.writeln (&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193651"></A>&lt;a name=&quot;PModel&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193652"></A>&lt;div align=right&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193653"></A>&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=&quot;-1&quot;&gt;(Top)&lt;/font&gt;&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193654"></A>&lt;/div&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193655"></A>&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193656"></A>&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193657"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193658"></A>&lt;/SCRIPT&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193659"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193660"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193661"></A>&lt;a name=&quot;PModel&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193662"></A>&lt;h3 class=pagebefore&gt;5.3. Programming Model&lt;/h3&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193663"></A>&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193664"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193665"></A>  &lt;p&gt;This section explains the programming model for datasets.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193666"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193667"></A>&lt;h4&gt;5.3.1. General Model&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193668"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193669"></A>  &lt;p&gt;The programming model for using a dataset has three main phases:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193670"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193671"></A>  &lt;ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193672"></A>    &lt;li&gt;Obtain access to the dataset &lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193673"></A>    &lt;li&gt;Operate on the dataset using the dataset identifier returned </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193674"></A>    at access &lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193675"></A>    &lt;li&gt;Release the dataset&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193676"></A>  &lt;/ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193677"></A>  &lt;p&gt;These three phases or steps are described in more detail below the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193678"></A>  figure.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193679"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193680"></A>  &lt;p&gt;A dataset may be opened several times and operations performed </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193681"></A>  with several different identifiers to the same dataset. All the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193682"></A>  operations affect the dataset although the calling program must </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193683"></A>  synchronize if necessary to serialize accesses.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193684"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193685"></A>  &lt;p&gt;Note that the dataset remains open until every identifier is closed. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193686"></A>  The figure below shows the basic sequence of operations.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193687"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193688"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193689"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193690"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193691"></A>        &lt;td align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193692"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193693"></A>        &lt;img src=&quot;Images/Dsets_fig2.JPG&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193694"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193695"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193696"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193697"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193698"></A>        &lt;td align=&quot;left&quot; &gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193699"></A>        &lt;b&gt;Figure 2. Dataset programming sequence&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193700"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193701"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193702"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193703"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193704"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193705"></A>  &lt;p&gt;Creation and data access operations may have optional parameters </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193706"></A>  which are set with property lists.  The general programming model is:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193707"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193708"></A>  &lt;ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193709"></A>      &lt;li&gt;Create property list of appropriate class (dataset create, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193710"></A>          dataset transfer)&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193711"></A>      &lt;li&gt;Set properties as needed; each type of property has its own </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193712"></A>          format and datatype&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193713"></A>      &lt;li&gt;Pass the property list as a parameter of the API call&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193714"></A>  &lt;/ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193715"></A>  &lt;p&gt;The steps below describe the programming phases or steps for using a </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193716"></A>  dataset.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193717"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193718"></A>&lt;h4&gt;&lt;em&gt;Step 1. Obtain Access&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193719"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193720"></A>  &lt;p&gt;A new dataset is created by a call to &lt;code&gt;H5Dcreate&lt;/code&gt;. If </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193721"></A>  successful, the call returns an identifier for the newly created dataset.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193722"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193723"></A>  &lt;p&gt;Access to an existing dataset is obtained by a call to &lt;code&gt;H5Dopen&lt;/code&gt;. This call </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193724"></A>  returns an identifier for the existing dataset.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193725"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193726"></A>  &lt;p&gt;An object reference </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193727"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193728"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193729"></A>  (Chapter ???) </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193730"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193731"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193732"></A>  may be dereferenced to obtain an identifier to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193733"></A>  the dataset it points to.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193734"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193735"></A>  &lt;p&gt;In each of these cases, the successful call returns an identifier </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193736"></A>  to the dataset. The identifier is used in subsequent operations until </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193737"></A>  the dataset is closed.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193738"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193739"></A>&lt;h4&gt;&lt;em&gt;Step 2. Operate on the Dataset&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193740"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193741"></A>  &lt;p&gt;The dataset identifier can be used to write and read data to the dataset, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193742"></A>  to query and set properties, and to perform other operations such as </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193743"></A>  adding attributes, linking in groups, and creating references.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193744"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193745"></A>  &lt;p&gt;The dataset identifier can be used for any number of </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193746"></A>  operations until the dataset is closed.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193747"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193748"></A>&lt;h4&gt;&lt;em&gt;Step 3. Close the Dataset&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193749"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193750"></A>  &lt;p&gt;When all operations are completed, the dataset identifier should </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193751"></A>  be closed. This releases the dataset. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193752"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193753"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193754"></A>  { and writes all metadata to the file? }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193755"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193756"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193757"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193758"></A>  &lt;p&gt;After the identifier is closed, it cannot be used for further operations.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193759"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193760"></A>&lt;h4&gt;5.3.2. Create Dataset&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193761"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193762"></A>  &lt;p&gt;A dataset is created and initialized with a call to &lt;code&gt;H5Dcreate&lt;/code&gt;. The dataset </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193763"></A>  create operation sets permanent properties of the dataset:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193764"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193765"></A>  &lt;ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193766"></A>      &lt;li&gt;Name&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193767"></A>      &lt;li&gt;Dataspace&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193768"></A>      &lt;li&gt;Datatype&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193769"></A>      &lt;li&gt;Storage properties&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193770"></A>  &lt;/ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193771"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193772"></A>  &lt;p&gt;These properties cannot be changed for the life of the dataset, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193773"></A>  although the dataspace may be expanded up to its maximum dimensions.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193774"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193775"></A>&lt;h4&gt;&lt;em&gt;Name&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193776"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193777"></A>  &lt;p&gt;A dataset name is a sequence of alphanumeric ASCII characters. The </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193778"></A>  full name would include a tracing of the group hierarchy from the root </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193779"></A>  group of the file, e.g., /rootGroup/groupA/subgroup23/dataset1. The </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193780"></A>  local name or relative name within the lowest-level group containing </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193781"></A>  the dataset would include none of the group hierarchy. e.g., Dataset1.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193782"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193783"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193784"></A>&lt;h4&gt;&lt;em&gt;Dataspace&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193785"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193786"></A>  &lt;p&gt;The dataspace of a dataset defines the number of dimensions and the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193787"></A>  size of each dimension. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193788"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193789"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193790"></A>  [[Dataspace]]. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193791"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193792"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193793"></A>  The dataspace defines the number of dimensions, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193794"></A>  and the maximum dimension sizes and current size of each dimension. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193795"></A>  The maximum dimension size can be a fixed value or the constant </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193796"></A>  &lt;code&gt;H5D_UNLIMITED&lt;/code&gt;, in which case the actual dimension size </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193797"></A>  can be changed with calls to &lt;code&gt;H5Dset_extent&lt;/code&gt;, up to the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193798"></A>  maximum set with the &lt;code&gt;maxdims&lt;/code&gt; parameter in the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193799"></A>  &lt;a href=&quot;../RM/RM_H5S.html#Dataspace-CreateSimple&quot; target=RMwindow&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193800"></A>  &lt;code&gt;H5Screate_simple&lt;/code&gt;&lt;/a&gt; call that established the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193801"></A>  dataset&amp;rsquo;s original dimensions. The maximum dimension size is set </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193802"></A>  when the dataset is created and cannot be changed.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193803"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193804"></A>&lt;h4&gt;&lt;em&gt;Datatype&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193805"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193806"></A>  &lt;p&gt;Raw data has a datatype which describes the layout of the raw data </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193807"></A>  stored in the file. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193808"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193809"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193810"></A>  (See [[Datatype]]. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193811"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193812"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193813"></A>  The datatype is set when the dataset is created </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193814"></A>  and can never be changed. When data is transferred to and from the dataset, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193815"></A>  the HDF5 Library will assure that the data is transformed to and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193816"></A>  from the stored format.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193817"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193818"></A>&lt;h4&gt;&lt;em&gt;Storage Properties&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193819"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193820"></A>  &lt;p&gt;Storage properties of the dataset are set when it is created. The </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193821"></A>  required inputs table </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193822"></A>  below shows the categories of storage properties. The storage properties </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193823"></A>  cannot be changed after the dataset is created. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193824"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193825"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193826"></A>  in [[storage properties]]</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193827"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193828"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193829"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193830"></A>&lt;h4&gt;&lt;em&gt;Filters&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193831"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193832"></A>  &lt;p&gt;When a dataset is created, optional filters are specified. The </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193833"></A>  filters are added to the data transfer pipeline when data is read or </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193834"></A>  written. The standard library includes filters to implement compression, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193835"></A>  data shuffling, and error detection code.  Additional user-defined </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193836"></A>  filters may also be used. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193837"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193838"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193839"></A>  See [[[filter]]].</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193840"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193841"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193842"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193843"></A>  &lt;p&gt;The required filters are stored as part of the dataset, and the list may </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193844"></A>  not be changed after the dataset is created. The HDF5 Library automatically </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193845"></A>  applies the filters whenever data is transferred.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193846"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193847"></A>&lt;h4&gt;&lt;em&gt;Summary&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193848"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193849"></A>  &lt;p&gt;A newly created dataset has no attributes and no data values. The </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193850"></A>  dimensions, datatype, storage properties, and selected filters are set. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193851"></A>  The table below lists the required inputs, and the second table below lists </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193852"></A>  the optional inputs.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193853"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193854"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193855"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193856"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193857"></A>        &lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193858"></A>        &lt;b&gt;Table 1. Required inputs&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193859"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193860"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193861"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193862"></A>        &lt;td width=&quot;25%&quot;&gt;&lt;b&gt;Required Inputs&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193863"></A>        &lt;td width=&quot;75%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193864"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193865"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193866"></A>        &lt;td&gt;Dataspace&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193867"></A>        &lt;td&gt;The shape of the array.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193868"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193869"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193870"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193871"></A>        &lt;td&gt;Datatype&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193872"></A>        &lt;td&gt;The layout of the stored elements.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193873"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193874"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193875"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193876"></A>        &lt;td&gt;Name&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193877"></A>        &lt;td&gt;The name of the dataset in the group.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193878"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193879"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193880"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193881"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193882"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193883"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193884"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193885"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193886"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193887"></A>        &lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193888"></A>        &lt;b&gt;Table 2. Optional inputs&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193889"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193890"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193891"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193892"></A>        &lt;td width=&quot;25%&quot;&gt;&lt;b&gt;Optional Inputs&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193893"></A>        &lt;td width=&quot;75%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193894"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193895"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193896"></A>        &lt;td&gt;Storage Layout&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193897"></A>        &lt;td&gt;How the data is organized in the file including chunking.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193898"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193899"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193900"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193901"></A>        &lt;td&gt; Fill Value&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193902"></A>        &lt;td&gt;The behavior and value for uninitialized data.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193903"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193904"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193905"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193906"></A>        &lt;td&gt; External Storage&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193907"></A>        &lt;td&gt;Option to store the raw data in an external file.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193908"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193909"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193910"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193911"></A>        &lt;td&gt; Filters&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193912"></A>        &lt;td&gt;Select optional filters to be applied. One of the filters </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193913"></A>        that might be applied is compression.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193914"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193915"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193916"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193917"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193918"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193919"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193920"></A>&lt;h4&gt;&lt;em&gt;Example&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193921"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193922"></A>&lt;p&gt;To create a new dataset, go through the following general steps:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193923"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193924"></A>&lt;ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193925"></A>    &lt;li&gt;Set dataset characteristics (optional where default settings are </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193926"></A>    acceptable)&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193927"></A>    &lt;ul&gt;               </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193928"></A>        &lt;li&gt;Datatype&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193929"></A>        &lt;li&gt;Dataspace&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193930"></A>        &lt;li&gt;Dataset creation property list&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193931"></A>    &lt;/ul&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193932"></A>    &lt;li&gt;Create the dataset&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193933"></A>    &lt;li&gt;Close the datatype, dataspace, and property list (as necessary)&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193934"></A>    &lt;li&gt;Close the dataset&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193935"></A>    &lt;/ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193936"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193937"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193938"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193939"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193940"></A>  &lt;p&gt;Example 1 below shows example code to create an empty dataset. The </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193941"></A>  dataspace is 7 x 8, and the datatype is a big-endian integer. The dataset </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193942"></A>  is created with the name &amp;ldquo;dset1&amp;rdquo; and is a member of the root </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193943"></A>  group, &amp;ldquo;/&amp;rdquo;.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193944"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193945"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193946"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193947"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193948"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193949"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193950"></A>    &lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193951"></A>  hid_t    dataset, datatype, dataspace;   </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193952"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193953"></A>  /* </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193954"></A>   * Create dataspace: Describe the size of the array and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193955"></A>   * create the dataspace for fixed-size dataset. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193956"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193957"></A>  dimsf[0] = 7;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193958"></A>  dimsf[1] = 8;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193959"></A>  dataspace = H5Screate_simple(2, dimsf, NULL); </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193960"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193961"></A>   * Define datatype for the data in the file.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193962"></A>   * For this example, store little-endian integer numbers.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193963"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193964"></A>  datatype = H5Tcopy(H5T_NATIVE_INT);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193965"></A>  status = H5Tset_order(datatype, H5T_ORDER_LE);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193966"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193967"></A>   * Create a new dataset within the file using defined </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193968"></A>   * dataspace and datatype. No properties are set.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193969"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193970"></A>  dataset = H5Dcreate(file, &quot;/dset&quot;, datatype, dataspace, H5P_DEFAULT, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193971"></A>            H5P_DEFAULT, H5P_DEFAULT);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193972"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193973"></A>  H5Dclose(dataset);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193974"></A>  H5Sclose(dataspace);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193975"></A>  H5Tclose(datatype);&lt;/pre&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193976"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193977"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193978"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193979"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193980"></A>        &lt;b&gt;Example 1. Create an empty dataset&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193981"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193982"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193983"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193984"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193985"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193986"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193987"></A>  &lt;p&gt;Example 2 below shows example code to create a similar dataset with a </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193988"></A>  fill value of &amp;lsquo;-1&amp;rsquo;. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193989"></A>  This code has the same steps as in the example above, but uses a non-default </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193990"></A>  property list. A file creation property list is created, and then the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193991"></A>  fill value is set to the desired value. Then the property list is passed </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193992"></A>  to the &lt;code&gt;H5Dcreate&lt;/code&gt; call.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193993"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193994"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193995"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193996"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193997"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193998"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1193999"></A>    &lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194000"></A>  hid_t    dataset, datatype, dataspace;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194001"></A>  hid_t plist;  /* property list */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194002"></A>  int fillval = -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194003"></A>  dimsf[0] = 7;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194004"></A>  dimsf[1] = 8;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194005"></A>  dataspace = H5Screate_simple(2, dimsf, NULL); </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194006"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194007"></A>  datatype = H5Tcopy(H5T_NATIVE_INT);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194008"></A>  status = H5Tset_order(datatype, H5T_ORDER_LE);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194009"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194010"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194011"></A>   * Example of Dataset Creation property list: set fill value to '-1'</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194012"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194013"></A>  plist = H5Pcreate(H5P_DATASET_CREATE);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194014"></A>  status = H5Pset_fill_value(plist, datatype, &amp;amp;fillval);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194015"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194016"></A>  /* Same as above, but use the property list */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194017"></A>  dataset = H5Dcreate(file, &quot;/dset&quot;, datatype, dataspace, H5P_DEFAULT, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194018"></A>            plist, H5P_DEFAULT);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194019"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194020"></A>  H5Dclose(dataset);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194021"></A>  H5Sclose(dataspace);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194022"></A>  H5Tclose(datatype);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194023"></A>  H5Pclose(plist);&lt;/pre&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194024"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194025"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194026"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194027"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194028"></A>        &lt;b&gt;Example 2. Create a dataset with fill value set&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194029"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194030"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194031"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194032"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194033"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194034"></A>  &lt;p&gt;After this code is executed, the dataset has been created and written to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194035"></A>  the file. The data array is uninitialized.  Depending on the storage </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194036"></A>  strategy and fill value options that have been selected, some or all of the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194037"></A>  space may be allocated in the file, and fill values may be written in the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194038"></A>  file.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194039"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194040"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194041"></A>  See &amp;lt;&amp;lt;below&amp;gt;&amp;gt;.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194042"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194043"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194044"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194045"></A>&lt;h4&gt;5.3.3. Data Transfer Operations on a Dataset&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194046"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194047"></A>  &lt;p&gt;Data is transferred between memory and the raw data array of the dataset </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194048"></A>  through &lt;code&gt;H5Dwrite&lt;/code&gt; and &lt;code&gt;H5Dread&lt;/code&gt; operations. A data </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194049"></A>  transfer has the following basic steps:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194050"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194051"></A>  &lt;ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194052"></A>      &lt;li&gt;Allocate and initialize memory space as needed&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194053"></A>      &lt;li&gt;Define the datatype of the memory elements&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194054"></A>      &lt;li&gt;Define the elements to be transferred (a selection, or all the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194055"></A>      elements)&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194056"></A>      &lt;li&gt;Set data transfer properties (including parameters for filters or </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194057"></A>          file drivers) as needed&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194058"></A>      &lt;li&gt;Call the H5D API&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194059"></A>  &lt;/ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194060"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194061"></A>  &lt;p&gt;Note that the location of the data in the file, the datatype of the data in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194062"></A>  the file, the storage properties, and the filters do not need to be specified </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194063"></A>  because these are stored as a permanent part of the dataset. A selection of </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194064"></A>  elements from the dataspace is specified; the selected elements may be the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194065"></A>  whole dataspace.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194066"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194067"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194068"></A>  &lt;p&gt;The figure below shows a diagram of a write operation which transfers a </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194069"></A>  data array from memory to a dataset in the file (usually on disk). A read </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194070"></A>  operation has similar parameters with the data flowing the other direction.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194071"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194072"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194073"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194074"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194075"></A>        &lt;td align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194076"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194077"></A>        &lt;img src=&quot;Images/Dsets_fig5.JPG&quot; width=&quot;670&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194078"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194079"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194080"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194081"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194082"></A>        &lt;td align=&quot;left&quot; &gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194083"></A>        &lt;b&gt;Figure 3. A write operation&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194084"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194085"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194086"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194087"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194088"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194089"></A>&lt;h4&gt;&lt;em&gt;Memory Space&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194090"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194091"></A>  &lt;p&gt;The calling program must allocate sufficient memory to store the data </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194092"></A>  elements to be transferred. For a write (from memory to the file), the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194093"></A>  memory must be initialized with the data to be written to the file. For </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194094"></A>  a read, the memory must be large enough to store the elements that </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194095"></A>  will be read. The amount of storage needed can be computed from the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194096"></A>  memory datatype (which defines the size of each data element) and the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194097"></A>  number of elements in the selection.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194098"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194099"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194100"></A>&lt;h4&gt;&lt;em&gt;Memory Datatype&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194101"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194102"></A>  &lt;p&gt;The memory layout of a single data element is specified by the memory </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194103"></A>  datatype. This specifies the size, alignment, and byte order of the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194104"></A>  element as well as the datatype class. Note that the memory datatype </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194105"></A>  must be the same datatype class as the file, but may have different byte </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194106"></A>  order and other properties.  The HDF5 Library automatically transforms </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194107"></A>  data elements between the source and destination layouts. See the chapter </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194108"></A>  &amp;ldquo;&lt;a href=&quot;11_Datatypes.html&quot;&gt;HDF5 Datatypes&lt;/a&gt;&amp;rdquo; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194109"></A>  for more details.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194110"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194111"></A>  &lt;p&gt;For a write, the memory datatype defines the layout of the data to be </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194112"></A>  written; an example is IEEE floating-point numbers in native byte order. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194113"></A>  If the file datatype (defined when the dataset is created) is different </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194114"></A>  but compatible, the HDF5 Library will transform each data element when </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194115"></A>  it is written. For example, if the file byte order is different than </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194116"></A>  the native byte order, the HDF5 Library will swap the bytes.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194117"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194118"></A>  &lt;p&gt;For a read, the memory datatype defines the desired layout of the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194119"></A>  data to be read. This must be compatible with the file datatype, but </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194120"></A>  should generally use native formats, e.g., byte orders. The HDF5 Library </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194121"></A>  will transform each data element as it is read.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194122"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194123"></A>&lt;h4&gt;&lt;em&gt;Selection&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194124"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194125"></A>  &lt;p&gt;The data transfer will transfer some or all of the elements of the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194126"></A>  dataset depending on the dataspace selection. The selection has two </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194127"></A>  dataspace objects: one for the source, and one for the destination. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194128"></A>  These objects describe which elements of the dataspace to be transferred. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194129"></A>  Some (partial I/O) or all of the data may be transferred. Partial I/O </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194130"></A>  is defined by defining hyperslabs or lists of elements in a dataspace </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194131"></A>  object.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194132"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194133"></A>  &lt;p&gt;The dataspace selection for the source defines the indices of the elements </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194134"></A>  to be read or written. The two selections must define the same number of </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194135"></A>  points, but the order and layout may be different.  The HDF5 Library </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194136"></A>  automatically selects and distributes the elements according to the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194137"></A>  selections. It might, for example, perform a scatter-gather or </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194138"></A>  sub-set of the data. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194139"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194140"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194141"></A>  See [[Selections]].</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194142"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194143"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194144"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194145"></A>&lt;h4&gt;&lt;em&gt;Data Transfer Properties&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194146"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194147"></A>  &lt;p&gt;For some data transfers, additional parameters should be set using the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194148"></A>  transfer property list. The table below lists the categories of transfer </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194149"></A>  properties. These properties set parameters for the HDF5 Library and may </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194150"></A>  be used to pass parameters for optional filters and file drivers. For </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194151"></A>  example, transfer properties are used to select independent or collective </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194152"></A>  operation when using MPI-I/O.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194153"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194154"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194155"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194156"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194157"></A>        &lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194158"></A>        &lt;b&gt;Table 3. Categories of transfer properties&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194159"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194160"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194161"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194162"></A>        &lt;td&gt;&lt;b&gt;Properties&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194163"></A>        &lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194164"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194165"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194166"></A>        &lt;td&gt;Library parameters&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194167"></A>        &lt;td&gt;Internal caches, buffers, B-Trees, etc.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194168"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194169"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194170"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194171"></A>        &lt;td&gt;Memory management&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194172"></A>        &lt;td&gt;Variable-length memory management, data overwrite&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194173"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194174"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194175"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194176"></A>        &lt;td&gt;File driver management&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194177"></A>        &lt;td&gt;Parameters for file drivers&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194178"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194179"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194180"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194181"></A>        &lt;td&gt;Filter management&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194182"></A>        &lt;td&gt;Parameters for filters&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194183"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194184"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194185"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194186"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194187"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194188"></A>&lt;h4&gt;&lt;em&gt;Data Transfer Operation (Read or Write)&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194189"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194190"></A>  &lt;p&gt;The data transfer is done by calling &lt;code&gt;H5Dread&lt;/code&gt; or </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194191"></A>  &lt;code&gt;H5Dwrite&lt;/code&gt; with the parameters described above. The HDF5 </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194192"></A>  Library constructs the required pipeline, which will scatter-gather, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194193"></A>  transform datatypes, apply the requested filters, and use the correct </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194194"></A>  file driver.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194195"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194196"></A>  &lt;p&gt;During the data transfer, the transformations and filters are applied to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194197"></A>  each element of the data in the required order until all the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194198"></A>  data is transferred.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194199"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194200"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194201"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194202"></A>  &lt;p&gt;[[See Data Transfer Below]]</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194203"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194204"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194205"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194206"></A>&lt;h4&gt;&lt;em&gt;Summary&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194207"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194208"></A>  &lt;p&gt;To perform a data transfer, it is necessary to allocate and initialize </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194209"></A>  memory, describe the source and destination, set required and optional </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194210"></A>  transfer properties, and call the H5D API. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194211"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194212"></A>&lt;h4&gt;&lt;em&gt;Examples&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194213"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194214"></A>  &lt;p&gt;The basic procedure to &lt;b&gt;write&lt;/b&gt; to a dataset is the following:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194215"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194216"></A>&lt;dir&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194217"></A>  Open the dataset.&lt;br&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194218"></A>  Set the dataset dataspace for the write (optional if dataspace is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194219"></A>  &lt;code&gt;H5S_SELECT_ALL&lt;/code&gt;).&lt;br&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194220"></A>  Write data.&lt;br&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194221"></A>  Close the datatype, dataspace, and property list (as necessary).&lt;br&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194222"></A>  Close the dataset.&lt;br&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194223"></A>&lt;/dir&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194224"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194225"></A>  &lt;p&gt;Example 3 below shows example code to write a 4 x 6 array of integers. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194226"></A>  In the example, the data is initialized in the memory array dset_data.  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194227"></A>  The dataset has already been created in the file, so it is opened </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194228"></A>  with &lt;code&gt;H5Dopen&lt;/code&gt;.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194229"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194230"></A>  &lt;p&gt;The data is written with &lt;code&gt;H5Dwrite&lt;/code&gt;. The arguments are the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194231"></A>  dataset identifier, the memory datatype (&lt;code&gt;H5T_NATIVE_INT&lt;/code&gt;), the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194232"></A>  memory and file selections (&lt;code&gt;H5S_ALL&lt;/code&gt; in this case: </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194233"></A>  the whole array), and the default (empty) property list. The last argument </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194234"></A>  is the data to be transferred.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194235"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194236"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194237"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194238"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194239"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194240"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194241"></A>    &lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194242"></A>  hid_t       file_id, dataset_id;  /* identifiers */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194243"></A>  herr_t      status;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194244"></A>  int         i, j, dset_data[4][6];</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194245"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194246"></A>  /* Initialize the dataset. */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194247"></A>  for (i = 0; i &amp;lt; 4; i++)</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194248"></A>     for (j = 0; j &amp;lt; 6; j++)</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194249"></A>        dset_data[i][j] = i * 6 + j + 1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194250"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194251"></A>  /* Open an existing file. */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194252"></A>  file_id = H5Fopen(&quot;dset.h5&quot;, H5F_ACC_RDWR, H5P_DEFAULT);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194253"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194254"></A>  /* Open an existing dataset. */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194255"></A>  dataset_id = H5Dopen(file_id, &quot;/dset&quot;, H5P_DEFAULT);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194256"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194257"></A>  /* Write the entire dataset, using 'dset_data': </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194258"></A>        memory type is 'native int'</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194259"></A>        write the entire dataspace to the entire dataspace,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194260"></A>        no transfer properties,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194261"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194262"></A>  status = H5Dwrite(dataset_id, H5T_NATIVE_INT, H5S_ALL, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194263"></A>          H5S_ALL, H5P_DEFAULT, dset_data);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194264"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194265"></A>  status = H5Dclose(dataset_id);&lt;/pre&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194266"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194267"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194268"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194269"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194270"></A>        &lt;b&gt;Example 3. Write an array of integers&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194271"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194272"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194273"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194274"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194275"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194276"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194277"></A>  &lt;p&gt;Example 4 below shows a similar write except for setting a non-default </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194278"></A>  value for the transfer buffer. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194279"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194280"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194281"></A>  &amp;lt;&amp;lt;explain what this does&amp;gt;&amp;gt;.  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194282"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194283"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194284"></A>  The code is the same as Example 3, but a transfer </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194285"></A>  property list is created, and the desired buffer size is set. The </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194286"></A>  &lt;code&gt;H5Dwrite&lt;/code&gt; function has the same arguments, but uses the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194287"></A>  property list to set the buffer.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194288"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194289"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194290"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194291"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194292"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194293"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194294"></A>    &lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194295"></A>  hid_t       file_id, dataset_id;  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194296"></A>  hid_t       xferplist;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194297"></A>  herr_t      status;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194298"></A>  int         i, j, dset_data[4][6];</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194299"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194300"></A>  file_id = H5Fopen(&quot;dset.h5&quot;, H5F_ACC_RDWR, H5P_DEFAULT);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194301"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194302"></A>  dataset_id = H5Dopen(file_id, &quot;/dset&quot;, H5P_DEFAULT);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194303"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194304"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194305"></A>   * Example: set type conversion buffer to 64MB</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194306"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194307"></A>  xferplist = H5Pcreate(H5P_DATASET_XFER);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194308"></A>  status = H5Pset_buffer( xferplist, 64 * 1024 *1024, NULL, NULL);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194309"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194310"></A>  /* Write the entire dataset, using 'dset_data': </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194311"></A>        memory type is 'native int'</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194312"></A>        write the entire dataspace to the entire dataspace,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194313"></A>        set the buffer size with the property list,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194314"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194315"></A>  status = H5Dwrite(dataset_id, H5T_NATIVE_INT, H5S_ALL, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194316"></A>        H5S_ALL, xferplist, dset_data);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194317"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194318"></A>  status = H5Dclose(dataset_id);&lt;/pre&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194319"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194320"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194321"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194322"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194323"></A>        &lt;b&gt;Example 4. Write an array using a property list&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194324"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194325"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194326"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194327"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194328"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194329"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194330"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194331"></A>  &lt;p&gt;Partial writes (i.e., of selected data elements, such as a hyperslab) </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194332"></A>  are explained below [[partial I/O]]</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194333"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194334"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194335"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194336"></A>  &lt;p&gt;The basic procedure to &lt;b&gt;read&lt;/b&gt; from a dataset is the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194337"></A>  following:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194338"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194339"></A>&lt;dir&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194340"></A>  Define the memory dataspace of the read (optional if dataspace is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194341"></A>  &lt;code&gt;H5S_SELECT_ALL&lt;/code&gt;).&lt;br&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194342"></A>  Open the dataset.&lt;br&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194343"></A>  Get the dataset dataspace (if using &lt;code&gt;H5S_SELECT_ALL&lt;/code&gt; above).&lt;br&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194344"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194345"></A>&lt;dir&gt;Else define dataset dataspace of read.&lt;/dir&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194346"></A>  Define the memory datatype (optional).&lt;br&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194347"></A>  Define the memory buffer.&lt;br&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194348"></A>  Open the dataset.&lt;br&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194349"></A>  Read data.&lt;br&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194350"></A>  Close the datatype, dataspace, and property list (as necessary).&lt;br&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194351"></A>  Close the dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194352"></A>&lt;/dir&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194353"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194354"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194355"></A>  &lt;p&gt;The example below shows code that reads a 4 x 6 array of integers from </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194356"></A>  a dataset called &amp;ldquo;dset1&amp;rdquo;. First, the dataset is opened. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194357"></A>  The &lt;code&gt;H5Dread&lt;/code&gt; call has parameters:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194358"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194359"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194360"></A>  &lt;ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194361"></A>      &lt;li&gt;The dataset identifier (from &lt;code&gt;H5Dopen&lt;/code&gt;)&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194362"></A>      &lt;li&gt;The memory datatype (&lt;code&gt;H5T_NATVE_INT&lt;/code&gt;)&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194363"></A>      &lt;li&gt;The memory and file dataspace (&lt;code&gt;H5S_ALL&lt;/code&gt;, the whole array)&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194364"></A>      &lt;li&gt;A default (empty) property list&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194365"></A>      &lt;li&gt;The memory to be filled&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194366"></A>  &lt;/ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194367"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194368"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194369"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194370"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194371"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194372"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194373"></A>    &lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194374"></A>  hid_t       file_id, dataset_id;  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194375"></A>  herr_t      status;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194376"></A>  int         i, j, dset_data[4][6];</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194377"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194378"></A>  /* Open an existing file. */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194379"></A>  file_id = H5Fopen(&quot;dset.h5&quot;, H5F_ACC_RDWR, H5P_DEFAULT);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194380"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194381"></A>  /* Open an existing dataset. */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194382"></A>  dataset_id = H5Dopen(file_id, &quot;/dset&quot;, H5P_DEFAULT);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194383"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194384"></A>  /* read the entire dataset, into 'dset_data': </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194385"></A>        memory type is 'native int'</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194386"></A>        read the entire dataspace to the entire dataspace,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194387"></A>        no transfer properties,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194388"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194389"></A>  status = H5Dread(dataset_id, H5T_NATIVE_INT, H5S_ALL, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194390"></A>        H5S_ALL, H5P_DEFAULT, dset_data);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194391"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194392"></A>  status = H5Dclose(dataset_id);&lt;/pre&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194393"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194394"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194395"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194396"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194397"></A>        &lt;b&gt;Example 5. Read an array from a dataset&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194398"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194399"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194400"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194401"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194402"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194403"></A>&lt;h4&gt;5.3.4. Retrieve the Properties of a Dataset&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194404"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194405"></A>  &lt;p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194406"></A>  The functions listed below allow the user to retrieve </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194407"></A>  information regarding a dataset including the datatype, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194408"></A>  the dataspace, the dataset creation property list, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194409"></A>  and the total stored size of the data.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194410"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194411"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194412"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194413"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194414"></A>        &lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194415"></A>        &lt;b&gt;Function Listing 4. Retrieve dataset information</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194416"></A>        &lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194417"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194418"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194419"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194420"></A>        &lt;td&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194421"></A>        &lt;b&gt;Query Function&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194422"></A>        &lt;td&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194423"></A>        &lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194424"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194425"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194426"></A>        &lt;td&gt; &lt;code&gt;H5Dget_space&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194427"></A>        &lt;td&gt; Retrieve the dataspace of the dataset </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194428"></A>        as stored in the file.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194429"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194430"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194431"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194432"></A>        &lt;td&gt; &lt;code&gt;H5Dget_type&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194433"></A>        &lt;td&gt; Retrieve the datatype of the dataset </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194434"></A>        as stored in the file.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194435"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194436"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194437"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194438"></A>        &lt;td&gt; &lt;code&gt;H5Dget_create_plist&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194439"></A>        &lt;td&gt; Retrieve the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194440"></A>        dataset creation properties.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194441"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194442"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194443"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194444"></A>        &lt;td&gt; &lt;code&gt;H5Dget_storage_size&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194445"></A>        &lt;td&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194446"></A>        Retrieve the total bytes for all the data of the dataset.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194447"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194448"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194449"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194450"></A>        &lt;td&gt; &lt;code&gt;H5Dvlen_get_buf_size&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194451"></A>        &lt;td&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194452"></A>        Retrieve the total bytes for all the variable-length </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194453"></A>        data of the dataset.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194454"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194455"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194456"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194457"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194458"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194459"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194460"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194461"></A>&lt;p&gt;The example below illustrates how to retrieve dataset information.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194462"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194463"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194464"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194465"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194466"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194467"></A>    &lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194468"></A>  hid_t       file_id, dataset_id;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194469"></A>  hid_t       dspace_id, dtype_id, plist_id; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194470"></A>  herr_t      status;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194471"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194472"></A>  /* Open an existing file. */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194473"></A>  file_id = H5Fopen(&quot;dset.h5&quot;, H5F_ACC_RDWR, H5P_DEFAULT);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194474"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194475"></A>  /* Open an existing dataset. */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194476"></A>  dataset_id = H5Dopen(file_id, &quot;/dset&quot;, H5P_DEFAULT);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194477"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194478"></A>  dspace_id = H5Dget_space(dataset_id);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194479"></A>  dtype_id = H5Dget_type(dataset_id);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194480"></A>  plist_id = H5Dget_create_plist(dataset_id);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194481"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194482"></A>  /* use the objects to discover the properties of the dataset */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194483"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194484"></A>  status = H5Dclose(dataset_id);&lt;/pre&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194485"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194486"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194487"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194488"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194489"></A>        &lt;b&gt;Example 6. Retrieve dataset&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194490"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194491"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194492"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194493"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194494"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194495"></A>&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194496"></A>&lt;!--</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194497"></A>document.writeln (&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194498"></A>&lt;a name=&quot;DTransfer&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194499"></A>&lt;div align=right&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194500"></A>&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=&quot;-1&quot;&gt;(Top)&lt;/font&gt;&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194501"></A>&lt;/div&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194502"></A>&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194503"></A>&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194504"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194505"></A>&lt;/SCRIPT&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194506"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194507"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194508"></A>&lt;a name=&quot;DTransfer&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194509"></A>&lt;h3 class=pagebefore&gt;5.4. Data Transfer&lt;/h3&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194510"></A>&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194511"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194512"></A>  &lt;p&gt;The HDF5 Library implements data transfers through a pipeline which </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194513"></A>  implements data transformations (according to the datatype and selections), </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194514"></A>  chunking (as requested), and I/O operations using different mechanisms </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194515"></A>  (file drivers). The pipeline is automatically configured by the HDF5 </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194516"></A>  Library. Metadata is stored in the file so that the correct pipeline </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194517"></A>  can be constructed to retrieve the data. In addition, optional filters </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194518"></A>  such as compression may be added to the standard pipeline. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194519"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194520"></A>  &lt;p&gt;The figure below illustrates data layouts for different layers of an </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194521"></A>  application using HDF5. The application data is organized as a </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194522"></A>  multidimensional array of elements. The HDF5 format specification</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194523"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194524"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194525"></A>   [[cite it]] </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194526"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194527"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194528"></A>  defines the stored layout of the data and metadata.  The storage layout </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194529"></A>  properties define the organization of the abstract data. This data is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194530"></A>  written and read to and from some storage medium.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194531"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194532"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194533"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194534"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194535"></A>        &lt;td align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194536"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194537"></A>        &lt;img src=&quot;Images/Dsets_fig9.JPG&quot; width=&quot;95%&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194538"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194539"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194540"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194541"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194542"></A>        &lt;td align=&quot;left&quot; &gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194543"></A>        &lt;b&gt;Figure 4. Data layouts in an application &lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194544"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194545"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194546"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194547"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194548"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194549"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194550"></A>  &lt;p&gt;The last stage of a write (and first stage of a read) is managed by </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194551"></A>  an HDF5 file driver module.  The virtual file layer of the HDF5 Library </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194552"></A>  implements a standard interface to alternative I/O methods, including </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194553"></A>  memory (AKA &amp;ldquo;core&amp;rdquo;) files, single serial file I/O, multiple </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194554"></A>  file I/O, and parallel I/O. The file driver maps a simple abstract HDF5 </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194555"></A>  file to the specific access methods.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194556"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194557"></A>  &lt;p&gt;The raw data of an HDF5 dataset is conceived to be a multidimensional </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194558"></A>  array of data elements. This array may be stored in the file according to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194559"></A>  several storage strategies:&lt;/p&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194560"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194561"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194562"></A>  &lt;ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194563"></A>      &lt;li&gt;Contiguous&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194564"></A>      &lt;li&gt;Chunked&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194565"></A>      &lt;li&gt;Compact&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194566"></A>  &lt;/ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194567"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194568"></A>  &lt;p&gt;The storage strategy does not affect data access methods except that </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194569"></A>  certain operations may be more or less efficient depending on the storage </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194570"></A>  strategy and the access patterns.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194571"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194572"></A>  &lt;p&gt;Overall, the data transfer operations (&lt;code&gt;H5Dread&lt;/code&gt; and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194573"></A>  &lt;code&gt;H5Dwrite&lt;/code&gt;) work identically for any storage method, for any </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194574"></A>  file driver, and for any filters and transformations. The HDF5 Library </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194575"></A>  automatically manages the data transfer process. In some cases, transfer </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194576"></A>  properties should or must be used to pass additional parameters such as </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194577"></A>  MPI/IO directives when used the parallel file driver.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194578"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194579"></A>&lt;h4&gt;5.4.1. The Data Pipeline&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194580"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194581"></A>  &lt;p&gt;When data is written or read to or from an HDF5 file, the HDF5 </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194582"></A>  Library passes the data through a sequence of processing steps which </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194583"></A>  are known as the HDF5 data pipeline. This data pipeline performs </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194584"></A>  operations on the data in memory such as byte swapping, alignment, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194585"></A>  scatter-gather, and hyperslab selections. The HDF5 Library automatically </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194586"></A>  determines which operations are needed and manages the organization </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194587"></A>  of memory operations such as extracting selected elements from a </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194588"></A>  data block. The data pipeline modules operate on data buffers: each </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194589"></A>  module processes a buffer and passes the transformed buffer to the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194590"></A>  next stage.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194591"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194592"></A>  &lt;p&gt;The table below lists the stages of the data pipeline. The figure below </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194593"></A>  the table shows the order of processing </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194594"></A>  during a read or write.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194595"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194596"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194597"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194598"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194599"></A>        &lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194600"></A>        &lt;b&gt;Table 4. Stages of the data pipeline&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194601"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194602"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194603"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194604"></A>        &lt;td width=&quot;35%&quot;&gt;&lt;b&gt;Layers&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194605"></A>        &lt;td width=&quot;65%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194606"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194607"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194608"></A>        &lt;td&gt;I/O initiation&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194609"></A>        &lt;td&gt;Initiation of HDF5 I/O activities (&lt;code&gt;H5Dwrite&lt;/code&gt; and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194610"></A>        &lt;code&gt;H5Dread&lt;/code&gt;) in a user&amp;rsquo;s application program. &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194611"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194612"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194613"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194614"></A>        &lt;td&gt;Memory hyperslab operation&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194615"></A>        &lt;td&gt;Data is scattered to (for read), or gathered from (for write) </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194616"></A>        the application&amp;rsquo;s memory buffer (bypassed if no datatype </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194617"></A>        conversion is needed).&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194618"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194619"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194620"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194621"></A>        &lt;td&gt;Datatype conversion&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194622"></A>        &lt;td&gt;Datatype is converted if it is different between memory and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194623"></A>        storage (bypassed if no datatype conversion is needed).&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194624"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194625"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194626"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194627"></A>        &lt;td&gt;File hyperslab operation&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194628"></A>        &lt;td&gt;Data is gathered from (for read), or scattered to (for write) to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194629"></A>        file space in memory (bypassed if no datatype conversion is needed).&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194630"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194631"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194632"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194633"></A>        &lt;td&gt;Filter pipeline&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194634"></A>        &lt;td&gt;Data is processed by filters when it passes.  Data can be </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194635"></A>        modified and restored here (bypassed if no datatype conversion </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194636"></A>        is needed, no filter is enabled, or dataset is not chunked).&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194637"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194638"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194639"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194640"></A>        &lt;td&gt;Virtual File Layer&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194641"></A>        &lt;td&gt;Facilitate easy plug-in file drivers such as MPIO or </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194642"></A>        POSIX I/O.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194643"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194644"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194645"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194646"></A>        &lt;td&gt;Actual I/O&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194647"></A>        &lt;td&gt;Actual file driver used by the library such as MPIO or STDIO.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194648"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194649"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194650"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194651"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194652"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194653"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194654"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194655"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194656"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194657"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194658"></A>        &lt;td align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194659"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194660"></A>        &lt;img src=&quot;Images/Dsets_fig10.JPG&quot;&gt;&lt;br&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194661"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194662"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194663"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194664"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194665"></A>        &lt;td align=&quot;left&quot; &gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194666"></A>        &lt;b&gt;Figure 5. The processing order in the data pipeline&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194667"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194668"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194669"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194670"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194671"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194672"></A>  &lt;p&gt;The HDF5 Library automatically applies the stages as needed. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194673"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194674"></A>  &lt;p&gt;When the memory dataspace selection is other than the whole dataspace, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194675"></A>  the memory hyperslab stage scatters/gathers the data elements between </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194676"></A>  the application memory (described by the selection) and a contiguous </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194677"></A>  memory buffer for the pipeline. On a write, this is a gather operation; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194678"></A>  on a read, this is a scatter operation.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194679"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194680"></A>  &lt;p&gt;When the memory datatype is different from the file datatype, the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194681"></A>  datatype conversion stage transforms each data element. For example, if </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194682"></A>  data is written from 32-bit big-endian memory, and the file datatype is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194683"></A>  32-bit little-endian, the datatype conversion stage will swap the bytes </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194684"></A>  of every elements.  Similarly, when data is read from the file to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194685"></A>  native memory, byte swapping will be applied automatically when needed.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194686"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194687"></A>  &lt;p&gt;The file hyperslab stage is similar to the memory hyperslab stage, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194688"></A>  but is managing the arrangement of the elements according to the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194689"></A>  dataspace selection. When data is read, data elements are gathered from </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194690"></A>  the data blocks from the file to fill the contiguous buffers which are then </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194691"></A>  processed by the pipeline. When data is read, the elements from a buffer </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194692"></A>  are scattered to the data blocks of the file.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194693"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194694"></A>&lt;h4&gt;5.4.2. Data Pipeline Filters&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194695"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194696"></A>  &lt;p&gt;In addition to the standard pipeline, optional stages, called filters, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194697"></A>  can be inserted in the pipeline. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194698"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194699"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194700"></A>  see [[chunked]]) </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194701"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194702"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194703"></A>  The standard distribution includes optional filters to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194704"></A>  implement compression and error checking. User applications may </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194705"></A>  add custom filters as well.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194706"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194707"></A>  &lt;p&gt;The HDF5 Library distribution includes or employs </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194708"></A>  several optional filters. These are listed in the table below. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194709"></A>  The filters are applied in the pipeline between the virtual file layer and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194710"></A>  the file hyperslab operation. See the figure above. The application can </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194711"></A>  use any number of filters in any order.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194712"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194713"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194714"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194715"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194716"></A>        &lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194717"></A>        &lt;b&gt;Table 5. Data pipeline filters&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194718"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194719"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194720"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194721"></A>        &lt;td width=&quot;35%&quot;&gt;&lt;b&gt;Filter&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194722"></A>        &lt;td width=&quot;65%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194723"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194724"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194725"></A>        &lt;td&gt;gzip compression&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194726"></A>        &lt;td&gt;Data compression using &lt;code&gt;zlib&lt;/code&gt;.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194727"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194728"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194729"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194730"></A>        &lt;td&gt;Szip compression&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194731"></A>        &lt;td&gt;Data compression using the Szip library. See The HDF Group </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194732"></A>        website for more information regarding the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194733"></A>        &lt;a href=&quot;http://www.hdfgroup.org/doc_resource/SZIP/&quot; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194734"></A>        target=&quot;Ext1&quot;&gt;Szip&lt;/a&gt; filter.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194735"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194736"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194737"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194738"></A>        &lt;td&gt;N-bit compression&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194739"></A>        &lt;td&gt;Data compression using an algorithm specialized for </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194740"></A>        n-bit datatypes.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194741"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194742"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194743"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194744"></A>        &lt;td&gt;Scale-offset compression&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194745"></A>        &lt;td&gt;Data compression using using a &amp;ldquo;scale and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194746"></A>        offset&amp;rdquo; algorithm.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194747"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194748"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194749"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194750"></A>        &lt;td&gt;Shuffling&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194751"></A>        &lt;td&gt;To improve compression performance, data is regrouped by </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194752"></A>        its byte position in the data unit. In other words, the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194753"></A>        1&lt;sup&gt;&lt;font size=&quot;-1&quot;&gt;st&lt;/font&gt;&lt;/sup&gt;, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194754"></A>        2&lt;sup&gt;&lt;font size=&quot;-1&quot;&gt;nd&lt;/font&gt;&lt;/sup&gt;, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194755"></A>        3&lt;sup&gt;&lt;font size=&quot;-1&quot;&gt;rd&lt;/font&gt;&lt;/sup&gt;, and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194756"></A>        4&lt;sup&gt;&lt;font size=&quot;-1&quot;&gt;th&lt;/font&gt;&lt;/sup&gt; bytes of integers are </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194757"></A>        stored together respectively.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194758"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194759"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194760"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194761"></A>        &lt;td&gt;Fletcher32&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194762"></A>        &lt;td&gt;Fletcher32 checksum for error-detection.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194763"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194764"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194765"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194766"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194767"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194768"></A>  &lt;p&gt;Filters may be used only for chunked data and are applied to chunks of </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194769"></A>  data between the file hyperslab stage and the virtual file layer. At this </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194770"></A>  stage in the pipeline, the data is organized as fixed-size blocks of </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194771"></A>  elements, and the filter stage processes each chunk separately.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194772"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194773"></A>  &lt;p&gt;Filters are selected by dataset creation properties, and some behavior may </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194774"></A>  be controlled by data transfer properties. The library determines what </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194775"></A>  filters must be applied and applies them in the order in which they were</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194776"></A>  set by the application. That is, if an application calls</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194777"></A>  &lt;code&gt;H5Pset_shuffle&lt;/code&gt; and then &lt;code&gt;H5Pset_deflate&lt;/code&gt; when </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194778"></A>  creating</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194779"></A>  a dataset&amp;rsquo;s creation property list, the library will apply the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194780"></A>  shuffle filter first and then the deflate filter.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194781"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194782"></A>  &lt;p&gt;Information regarding the n-bit and scale-offset filters </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194783"></A>  can be found in the &amp;ldquo;&lt;a href=&quot;#N-Bit&quot;&gt;Using the N-bit Filter&lt;/a&gt;&amp;rdquo;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194784"></A>  and &amp;ldquo;&lt;a href=&quot;#ScaleOffset&quot;&gt;Using the Scale-offset Filter&lt;/a&gt;&amp;rdquo; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194785"></A>  sections, respectively.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194786"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194787"></A>&lt;h4&gt;5.4.3. File Drivers&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194788"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194789"></A>  &lt;p&gt;I/O is performed by the HDF5 virtual file layer. The file driver </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194790"></A>  interface writes and reads blocks of data; each driver module implements </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194791"></A>  the interface using different I/O mechanisms. The table below lists the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194792"></A>  file drivers currently supported. Note that the I/O mechanisms are </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194793"></A>  separated from the pipeline processing: the pipeline and filter </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194794"></A>  operations are identical no matter what data access mechanism is used.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194795"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194796"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194797"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194798"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194799"></A>        &lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194800"></A>        &lt;b&gt;Table 6. I/O file drivers&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194801"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194802"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194803"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194804"></A>        &lt;td&gt;&lt;b&gt;File Driver&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194805"></A>        &lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194806"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194807"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194808"></A>        &lt;td&gt;&lt;code&gt;H5FD_CORE&lt;/code&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194809"></A>        &lt;td&gt;Store in memory (optional backing store to disk file).&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194810"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194811"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194812"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194813"></A>        &lt;td&gt;&lt;code&gt;H5FD_FAMILY&lt;/code&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194814"></A>        &lt;td&gt;Store in a set of files.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194815"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194816"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194817"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194818"></A>        &lt;td&gt;&lt;code&gt;H5FD_LOG&lt;/code&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194819"></A>        &lt;td&gt;Store in logging file.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194820"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194821"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194822"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194823"></A>        &lt;td&gt;&lt;code&gt;H5FD_MPIO&lt;/code&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194824"></A>        &lt;td&gt;Store using MPI/IO.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194825"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194826"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194827"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194828"></A>        &lt;td&gt;&lt;code&gt;H5FD_MULTI&lt;/code&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194829"></A>        &lt;td&gt;Store in multiple files. There are several options to control </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194830"></A>        layout.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194831"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194832"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194833"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194834"></A>        &lt;td&gt;&lt;code&gt;H5FD_SEC2&lt;/code&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194835"></A>        &lt;td&gt;Serial I/O to file using Unix &amp;ldquo;section 2&amp;rdquo; functions.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194836"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194837"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194838"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194839"></A>        &lt;td&gt;&lt;code&gt;H5FD_STDIO&lt;/code&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194840"></A>        &lt;td&gt;Serial I/O to file using Unix &amp;ldquo;stdio&amp;rdquo; functions.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194841"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194842"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194843"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194844"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194845"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194846"></A>  &lt;p&gt;Each file driver writes/reads contiguous blocks of bytes from a logically </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194847"></A>  contiguous address space. The file driver is responsible for managing the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194848"></A>  details of the different physical storage methods.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194849"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194850"></A>  &lt;p&gt;In serial environments, everything above the virtual file layer tends </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194851"></A>  to work identically no matter what storage method is used. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194852"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194853"></A>  &lt;p&gt;Some options may have substantially different performance depending </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194854"></A>  on the file driver that is used. In particular, multi-file and parallel </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194855"></A>  I/O may perform considerably differently from serial drivers depending </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194856"></A>  on chunking and other settings.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194857"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194858"></A>&lt;h4&gt;5.4.4. Data Transfer Properties to Manage the Pipeline&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194859"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194860"></A>  &lt;p&gt;Data transfer properties set optional parameters that control parts of the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194861"></A>  data pipeline. The function listing below shows transfer properties </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194862"></A>  that control the behavior of the library.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194863"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194864"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194865"></A>  &amp;lt;&amp;lt;Developers: explain what these do!&amp;gt;&amp;gt;&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194866"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194867"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194868"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194869"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194870"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194871"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194872"></A>        &lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194873"></A>        &lt;b&gt;Function Listing 5. Data transfer property list functions</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194874"></A>        &lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194875"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194876"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194877"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194878"></A>        &lt;td&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194879"></A>        &lt;b&gt;Property&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194880"></A>        &lt;td&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194881"></A>        &lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194882"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194883"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194884"></A>        &lt;td&gt; &lt;code&gt;H5Pset_buffer&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194885"></A>        &lt;td&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194886"></A>        Maximum size for the type conversion buffer and the background </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194887"></A>        buffer. May also  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194888"></A>        supply pointers to application-allocated buffers.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194889"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194890"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194891"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194892"></A>        &lt;td&gt; &lt;code&gt;H5Pset_hyper_cache&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194893"></A>        &lt;td&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194894"></A>        Whether to cache hyperslab blocks during I/O.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194895"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194896"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194897"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194898"></A>        &lt;td&gt; &lt;code&gt;H5Pset_btree_ratios&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194899"></A>        &lt;td&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194900"></A>        Set the B-tree split ratios for a dataset transfer property list. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194901"></A>        The split ratios determine what percent of children go in the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194902"></A>        first node when a node splits.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194903"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194904"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194905"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194906"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194907"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194908"></A>  &lt;p&gt;Some filters and file drivers require or use additional parameters </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194909"></A>  from the application program. These can be passed in the data transfer </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194910"></A>  property list. The table below shows file driver property list functions.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194911"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194912"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194913"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194914"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194915"></A>        &lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194916"></A>        &lt;b&gt;Function Listing 6. File driver property list functions</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194917"></A>        &lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194918"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194919"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194920"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194921"></A>        &lt;td&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194922"></A>        &lt;b&gt;Property&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194923"></A>        &lt;td&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194924"></A>        &lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194925"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194926"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194927"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194928"></A>        &lt;td&gt; &lt;code&gt;H5Pset_dxpl_mpio&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194929"></A>        &lt;td&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194930"></A>        Control the MPI I/O transfer mode (independent or collective) </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194931"></A>        during data I/O operations.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194932"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194933"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194934"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194935"></A>        &lt;td&gt; &lt;code&gt;H5Pset_small_data_block_size&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194936"></A>        &lt;td&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194937"></A>        Reserves blocks of size bytes for the contiguous storage of the raw </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194938"></A>        data portion of small datasets. The HDF5 Library then writes the raw data </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194939"></A>        from small datasets to this reserved space which reduces unnecessary </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194940"></A>        discontinuities within blocks of metadata and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194941"></A>        improves I/O performance.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194942"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194943"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194944"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194945"></A>        &lt;td&gt; &lt;code&gt;H5Pset_edc_check&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194946"></A>        &lt;td&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194947"></A>        Disable/enable EDC checking for read. When selected, EDC </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194948"></A>        is always written.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194949"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194950"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194951"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194952"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194953"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194954"></A>  &lt;p&gt;The transfer properties are set in a property list which is passed as a </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194955"></A>  parameter of the &lt;code&gt;H5Dread&lt;/code&gt; or &lt;code&gt;H5Dwrite&lt;/code&gt; call.  The </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194956"></A>  transfer properties are passed to each pipeline stage. Each stage may use </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194957"></A>  or ignore any property in the list. In short, there is one property list </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194958"></A>  that contains all the properties.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194959"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194960"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194961"></A>&lt;h4&gt;5.4.5. Storage Strategies&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194962"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194963"></A>  &lt;p&gt;The raw data is conceptually a multi-dimensional array of elements that </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194964"></A>  is stored as a contiguous array of bytes. The data may be physically stored </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194965"></A>  in the file in several ways. The table below lists the storage strategies </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194966"></A>  for a dataset.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194967"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194968"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194969"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194970"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194971"></A>        &lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194972"></A>        &lt;b&gt;Table 7. Dataset storage strategies&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194973"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194974"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194975"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194976"></A>        &lt;td&gt;&lt;b&gt;Storage Strategy&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194977"></A>        &lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194978"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194979"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194980"></A>        &lt;td&gt;Contiguous&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194981"></A>        &lt;td&gt;The dataset is stored as one continuous array of bytes.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194982"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194983"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194984"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194985"></A>        &lt;td&gt;Chunked&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194986"></A>        &lt;td&gt;The dataset is stored as fixed-size chunks.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194987"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194988"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194989"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194990"></A>        &lt;td&gt;Compact&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194991"></A>        &lt;td&gt;A small dataset is stored in the metadata header.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194992"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194993"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194994"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194995"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194996"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194997"></A>  &lt;p&gt;The different storage strategies do not affect the data transfer </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194998"></A>  operations of the dataset: reads and writes work the same for any </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1194999"></A>  storage strategy.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195000"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195001"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195002"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195003"></A>  &lt;p&gt;&amp;lt;&amp;lt;Relationship between storage strategies, and pipeline, filters, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195004"></A>  and file drivers.??&amp;gt;&amp;gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195005"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195006"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195007"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195008"></A>  &lt;p&gt;These strategies are described in the following sections.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195009"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195010"></A>&lt;h4&gt;&lt;em&gt;Contiguous&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195011"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195012"></A>  &lt;p&gt;A contiguous dataset is stored in the file as a header and a single </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195013"></A>  continuous array of bytes. See the figure below. In the case of a </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195014"></A>  multi-dimensional array, the data is serialized in row major order. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195015"></A>  By default, data is stored contiguously.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195016"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195017"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195018"></A>&lt;table width=&quot;400&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195019"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195020"></A>        &lt;td align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195021"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195022"></A>        &lt;img src=&quot;Images/Dsets_fig12.JPG&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195023"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195024"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195025"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195026"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195027"></A>        &lt;td align=&quot;left&quot; &gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195028"></A>        &lt;b&gt;Figure 6. Contiguous data storage&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195029"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195030"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195031"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195032"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195033"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195034"></A>  &lt;p&gt;Contiguous storage is the simplest model. It has several limitations. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195035"></A>  First, the dataset must be a fixed-size: it is not possible to extend </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195036"></A>  the limit of the dataset or to have unlimited dimensions. In other </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195037"></A>  words, if the number of dimensions of the array might change over </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195038"></A>  time, then chunking storage must be used instead of contiguous. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195039"></A>  Second, because data is passed through the pipeline as fixed-size </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195040"></A>  blocks, compression and other filters cannot be used with contiguous </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195041"></A>  data.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195042"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195043"></A>  &lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195044"></A>&lt;h4&gt;&lt;em&gt;Chunked&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195045"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195046"></A>  &lt;p&gt;The data of a dataset may be stored as fixed-size chunks. See the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195047"></A>  figure below. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195048"></A>  A chunk is a hyper-rectangle of any shape. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195049"></A>  When a dataset is chunked, each chunk is read or written as a single I/O </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195050"></A>  operation, and individually passed from stage to stage of the data pipeline. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195051"></A>  &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195052"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195053"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195054"></A>&lt;table width=&quot;400&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195055"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195056"></A>        &lt;td align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195057"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195058"></A>        &lt;img src=&quot;Images/Dsets_fig13.JPG&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195059"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195060"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195061"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195062"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195063"></A>        &lt;td align=&quot;left&quot; &gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195064"></A>        &lt;b&gt;Figure 7. Chunked data storage&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195065"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195066"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195067"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195068"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195069"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195070"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195071"></A>  &lt;p&gt;Chunks may be any size and shape that fits in the dataspace of the dataset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195072"></A>  For example, a three dimensional dataspace can be chunked as 3-D cubes, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195073"></A>  2-D planes, or 1-D lines. The chunks may extend beyond the size of the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195074"></A>  dataspace. For example, a 3 x 3 dataset might by chunked in 2 x 2 chunks. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195075"></A>  Sufficient chunks will be allocated to store the array, and any extra space </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195076"></A>  will not be accessible. So, to store the 3 x 3 array, four 2 x 2 chunks would </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195077"></A>  be allocated with 5 unused elements stored.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195078"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195079"></A>  &lt;p&gt;Chunked datasets can be unlimited in any direction </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195080"></A>  and can be compressed or filtered.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195081"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195082"></A>  &lt;p&gt;Since the data is read or written by chunks, chunking can have a dramatic </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195083"></A>  effect on performance by optimizing what is read and written.  Note, too, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195084"></A>  that for specific access patterns such as parallel I/O, decomposition into </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195085"></A>  chunks can have a large impact on performance.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195086"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195087"></A>  &lt;p&gt;Two restrictions have been placed on chunk shape and size:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195088"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195089"></A>  &lt;ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195090"></A>    &lt;li&gt;The rank of a chunk must be less than or equal to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195091"></A>        the rank of the dataset&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195092"></A>    &lt;li&gt;Chunk size cannot exceed the size of a fixed-size dataset; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195093"></A>        for example, a dataset consisting of a 5 x 4 fixed-size array </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195094"></A>        cannot be defined with 10 x 10 chunks&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195095"></A>    &lt;/ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195096"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195097"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195098"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195099"></A>&lt;h4&gt;&lt;em&gt;Compact&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195100"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195101"></A>  &lt;p&gt;For contiguous and chunked storage, the dataset header information and data </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195102"></A>  are stored in two (or more) blocks. Therefore, at least two I/O operations </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195103"></A>  are required to access the data: one to access the header, and one (or more) </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195104"></A>  to access data. For a small dataset, this is considerable overhead.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195105"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195106"></A>  &lt;p&gt;A small dataset may be stored in a continuous array of bytes in the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195107"></A>  header block using the compact storage option. This dataset can be read </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195108"></A>  entirely in one operation which retrieves the header and data.  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195109"></A>  The dataset must fit in the header. This may vary depending on the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195110"></A>  metadata that is stored. In general, a compact dataset should be </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195111"></A>  approximately 30 KB or less total size.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195112"></A>  See the figure below.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195113"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195114"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195115"></A>&lt;table width=&quot;400&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195116"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195117"></A>        &lt;td align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195118"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195119"></A>        &lt;img src=&quot;Images/Dsets_fig14.JPG&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195120"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195121"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195122"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195123"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195124"></A>        &lt;td align=&quot;left&quot; &gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195125"></A>        &lt;b&gt;Figure 8. Compact data storage&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195126"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195127"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195128"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195129"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195130"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195131"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195132"></A>&lt;h4&gt;5.4.6. Partial I/O Sub-setting and Hyperslabs&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195133"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195134"></A>  &lt;p&gt;Data transfers can write or read some of the data elements of the dataset. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195135"></A>  This is controlled by specifying two selections: one for the source and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195136"></A>  one for the destination. Selections are specified by creating a dataspace </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195137"></A>  with selections. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195138"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195139"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195140"></A>  (see [[dataspace chapter]])</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195141"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195142"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195143"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195144"></A>  &lt;p&gt;Selections may be a union of hyperslabs or a list of points.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195145"></A>  A hyperslab is a contiguous hyper-rectangle from the dataspace. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195146"></A>  Selected fields of a compound datatype may be read or written. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195147"></A>  In this case, the selection is controlled by the memory and file </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195148"></A>  datatypes.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195149"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195150"></A>  &lt;p&gt;Summary of procedure:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195151"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195152"></A>  &lt;ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195153"></A>      &lt;li&gt;Open the dataset&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195154"></A>      &lt;li&gt;Define the memory datatype&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195155"></A>      &lt;li&gt;Define the memory dataspace selection and file dataspace </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195156"></A>      selection&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195157"></A>      &lt;li&gt;Transfer data (&lt;code&gt;H5Dread&lt;/code&gt; or &lt;code&gt;H5Dwrite&lt;/code&gt;)&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195158"></A>  &lt;/ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195159"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195160"></A>  &lt;p&gt;For a detailed explanation of selections, see the chapter</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195161"></A>  &amp;ldquo;&lt;a href=&quot;12_Dataspaces.html&quot;&gt;HDF5 Dataspaces and Partial I/O&lt;/a&gt;.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195162"></A>  &amp;rdquo;&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195163"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195164"></A>&lt;SCRIPT language=&quot;JavaScript&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195165"></A>&lt;!--</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195166"></A>document.writeln (&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195167"></A>&lt;a name=&quot;Allocation&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195168"></A>&lt;div align=right&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195169"></A>&lt;a href=&quot;#TOP&quot;&gt;&lt;font size=&quot;-1&quot;&gt;(Top)&lt;/font&gt;&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195170"></A>&lt;/div&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195171"></A>&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195172"></A>&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195173"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195174"></A>&lt;/SCRIPT&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195175"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195176"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195177"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195178"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195179"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195180"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195181"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195182"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195183"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195184"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195185"></A>&lt;a name=&quot;Allocation&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195186"></A>&lt;h3 class=pagebefore&gt;5.5. Allocation of Space in the File&lt;/h3&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195187"></A>&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195188"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195189"></A>  &lt;p&gt;When a dataset is created, space is allocated in the file for its </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195190"></A>  header and initial data. The amount of space allocated when the dataset </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195191"></A>  is created depends on the storage properties. When the dataset is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195192"></A>  modified (data is written, attributes added, or other changes), </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195193"></A>  additional storage may be allocated if necessary.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195194"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195195"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195196"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195197"></A>        &lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195198"></A>        &lt;b&gt;Table 8. Initial dataset size&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195199"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195200"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195201"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195202"></A>        &lt;td width=&quot;15%&quot;&gt;&lt;b&gt;Object&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195203"></A>        &lt;td width=&quot;85%&quot;&gt;&lt;b&gt;Size&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195204"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195205"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195206"></A>        &lt;td&gt;Header&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195207"></A>        &lt;td&gt;Variable, but typically around 256 bytes at the creation of </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195208"></A>        a simple dataset with a simple datatype.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195209"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195210"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195211"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195212"></A>        &lt;td&gt;Data&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195213"></A>        &lt;td&gt;Size of the data array (number of elements x size of element). </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195214"></A>        Space allocated in the file depends on the storage strategy </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195215"></A>        and the allocation strategy.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195216"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195217"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195218"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195219"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195220"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195221"></A>&lt;h4&gt;&lt;em&gt;Header&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195222"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195223"></A>  &lt;p&gt;A dataset header consists of one or more header messages containing </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195224"></A>  persistent metadata describing various aspects of the dataset. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195225"></A>  These records are defined in the &lt;a href=&quot;../H5.format.html&quot;&gt;&lt;i&gt;HDF5 File </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195226"></A>  Format Specification&lt;/i&gt;&lt;/a&gt;. The amount of storage required for the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195227"></A>  metadata depends on the metadata to be stored. The table below </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195228"></A>  summarizes the metadata.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195229"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195230"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195231"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195232"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195233"></A>        &lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195234"></A>        &lt;b&gt;Table 9. Metadata storage sizes&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195235"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195236"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195237"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195238"></A>        &lt;td width=&quot;25%&quot;&gt;&lt;b&gt;Header Information&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195239"></A>        &lt;td width=&quot;70%&quot;&gt;&lt;b&gt;Approximate Storage Size&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195240"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195241"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195242"></A>        &lt;td&gt;Datatype (required)&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195243"></A>        &lt;td&gt;Bytes  or more. Depends on type.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195244"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195245"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195246"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195247"></A>        &lt;td&gt;Dataspace (required)&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195248"></A>        &lt;td&gt;Bytes or more. Depends on number of dimensions and hsize_t.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195249"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195250"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195251"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195252"></A>        &lt;td&gt;Layout (required)&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195253"></A>        &lt;td&gt;Points to the stored data. Bytes or more. Depends on hsize_t and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195254"></A>        number of dimensions.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195255"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195256"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195257"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195258"></A>        &lt;td&gt;Filters&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195259"></A>        &lt;td&gt;Depends on the number of filters. The size of the filter message </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195260"></A>        depends on the name and data that will be passed.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195261"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195262"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195263"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195264"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195265"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195266"></A>  &lt;p&gt;The header blocks also store the name and values of attributes, so </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195267"></A>  the total storage depends on the number and size of the attributes.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195268"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195269"></A>  &lt;p&gt;In addition, the dataset must have at least one link, including a name, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195270"></A>  which is stored in the file and in the group it is linked from.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195271"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195272"></A>  &lt;p&gt;The different storage strategies determine when and how much space is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195273"></A>  allocated for the data array. See the discussion of fill values below</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195274"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195275"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195276"></A>  Link</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195277"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195278"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195279"></A>  for a detailed explanation of the storage allocation.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195280"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195281"></A>  &lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195282"></A>&lt;h4&gt;&lt;em&gt;Contiguous Storage&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195283"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195284"></A>  &lt;p&gt;For a continuous storage option, the data is stored in a single, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195285"></A>  contiguous block in the file.  The data is nominally a fixed-size, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195286"></A>  (number of elements x size of element). The figure below shows an example </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195287"></A>  of a two dimensional array stored as a contiguous dataset.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195288"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195289"></A>  &lt;p&gt;Depending on the fill value properties, the space may be allocated </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195290"></A>  when the dataset is created or when first written (default), and filled </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195291"></A>  with fill values if specified. For parallel I/O, by default the space </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195292"></A>  is allocated when the dataset is created.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195293"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195294"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195295"></A>&lt;table width=&quot;400&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195296"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195297"></A>        &lt;td align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195298"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195299"></A>        &lt;img src=&quot;Images/Dsets_fig15.JPG&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195300"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195301"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195302"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195303"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195304"></A>        &lt;td align=&quot;left&quot; &gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195305"></A>        &lt;b&gt;Figure 9. A two dimensional array stored as a contiguous dataset&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195306"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195307"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195308"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195309"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195310"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195311"></A>&lt;h4&gt;&lt;em&gt;Chunked&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195312"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195313"></A>  &lt;p&gt;For chunked storage, the data is stored in one or more chunks.  Each chunk </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195314"></A>  is a continuous block in the file, but chunks are not necessarily stored </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195315"></A>  contiguously. Each chunk has the same size.  The data array has the same </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195316"></A>  nominal size as a contiguous array (number of elements x size of element), </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195317"></A>  but the storage is allocated in chunks, so the total size in the file can </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195318"></A>  be larger that the nominal size of the array. See the figure below.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195319"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195320"></A>  &lt;p&gt;If a fill value is defined, each chunk will be filled with the fill value. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195321"></A>  Chunks must be allocated when data is written, but they may be allocated when </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195322"></A>  the file is created, as the file expands, or when data is written. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195323"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195324"></A>  &lt;p&gt;For serial I/O, by default chunks are allocated incrementally, as data is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195325"></A>  written to the chunk. For a sparse dataset, chunks are allocated only for the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195326"></A>  parts of the dataset that are written. In this case, if the dataset is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195327"></A>  extended, no storage is allocated.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195328"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195329"></A>  &lt;p&gt;For parallel I/O, by default chunks are allocated when the dataset is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195330"></A>  created or extended with fill values written to the chunk.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195331"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195332"></A>  &lt;p&gt;In either case, the default can be changed using fill value properties.  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195333"></A>  For example, using serial I/O, the properties can select to allocate </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195334"></A>  chunks when the dataset is created.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195335"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195336"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195337"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195338"></A>&lt;table width=&quot;400&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195339"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195340"></A>        &lt;td align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195341"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195342"></A>        &lt;img src=&quot;Images/Dsets_fig16.JPG&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195343"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195344"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195345"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195346"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195347"></A>        &lt;td align=&quot;left&quot; &gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195348"></A>        &lt;b&gt;Figure 10. A two dimensional array stored in chunks&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195349"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195350"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195351"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195352"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195353"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195354"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195355"></A>&lt;h4&gt;&lt;em&gt;Changing Dataset Dimensions&lt;/em&gt;&lt;/h4&gt;  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195356"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195357"></A>  &lt;p&gt;&lt;code&gt;H5Dset_extent&lt;/code&gt; is used to change the current dimensions </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195358"></A>  of the dataset within the limits of the dataspace.  Each dimension can </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195359"></A>  be extended up to its maximum or unlimited. Extending the dataspace may </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195360"></A>  or may not allocate space in the file and may or may not write fill </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195361"></A>  values, if they are defined. See the example code below.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195362"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195363"></A>  &lt;p&gt;The dimensions of the dataset can also reduced. If the sizes specified </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195364"></A>  are smaller than the dataset’s current dimension sizes, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195365"></A>  &lt;code&gt;H5Dset_extent&lt;/code&gt; will reduce the dataset’s dimension sizes to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195366"></A>  the specified values. It is the user’s responsibility to ensure that </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195367"></A>  valuable data is not lost; &lt;code&gt;H5Dset_extent&lt;/code&gt; does not check.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195368"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195369"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195370"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195371"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195372"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195373"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195374"></A>    &lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195375"></A>  hid_t       file_id, dataset_id;  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195376"></A>  Herr_t      status;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195377"></A>  size_t      newdims[2];</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195378"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195379"></A>  /* Open an existing file. */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195380"></A>  file_id = H5Fopen(&quot;dset.h5&quot;, H5F_ACC_RDWR, H5P_DEFAULT);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195381"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195382"></A>  /* Open an existing dataset. */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195383"></A>  dataset_id = H5Dopen(file_id, &quot;/dset&quot;, H5P_DEFAULT);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195384"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195385"></A>  /* Example:  dataset is 2 x 3, each dimension is UNLIMITED */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195386"></A>  /* extend to 2 x 7 */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195387"></A>  newdims[0] = 2;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195388"></A>  newdims[1] = 7;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195389"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195390"></A>  status = H5Dset_extent(dataset_id, newdims);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195391"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195392"></A>  /* dataset is now 2 x 7 */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195393"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195394"></A>  status = H5Dclose(dataset_id);&lt;/pre&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195395"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195396"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195397"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195398"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195399"></A>        &lt;b&gt;Example 7. Using &lt;code&gt;H5Dset_extent&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195400"></A>        to increase the size of a dataset&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195401"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195402"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195403"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195404"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195405"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195406"></A>&lt;h4&gt;5.5.1. Storage Allocation in the File: Early, Incremental, Late&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195407"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195408"></A>  &lt;p&gt;The HDF5 Library implements several strategies for when storage is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195409"></A>  allocated if and when it is filled with fill values for elements not </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195410"></A>  yet written by the user. Different strategies are recommended for </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195411"></A>  different storage layouts and file drivers. In particular, a parallel </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195412"></A>  program needs storage allocated during a collective call (for example, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195413"></A>  create or extend) while serial programs may benefit from delaying the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195414"></A>  allocation until the data is written.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195415"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195416"></A>  &lt;p&gt;Two file creation properties control when to allocate space, when to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195417"></A>  write the fill value, and the actual fill value to write. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195418"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195419"></A> &nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195420"></A>  &lt;h4&gt;&lt;em&gt;When to Allocate Space&lt;/em&gt;&lt;/h4&gt;  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195421"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195422"></A>  &lt;p&gt;The table below shows the options for when data is allocated in the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195423"></A>  file. &amp;ldquo;Early&amp;rdquo; allocation is done during the dataset create </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195424"></A>  call. Certain file drivers (especially MPI-I/O and MPI-POSIX) require </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195425"></A>  space to be allocated when a dataset is created, so all processors will </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195426"></A>  have the correct view of the data.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195427"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195428"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195429"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195430"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195431"></A>        &lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195432"></A>        &lt;b&gt;Table 10. File storage allocation options&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195433"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195434"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195435"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195436"></A>        &lt;td width=&quot;20%&quot;&gt;&lt;b&gt;Strategy&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195437"></A>        &lt;td width=&quot;80%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195438"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195439"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195440"></A>        &lt;td&gt;Early&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195441"></A>        &lt;td&gt;Allocate storage for the dataset immediately when the dataset </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195442"></A>        is created. &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195443"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195444"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195445"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195446"></A>        &lt;td&gt;Late&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195447"></A>        &lt;td&gt;Defer allocating space for storing the dataset until the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195448"></A>        dataset is written.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195449"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195450"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195451"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195452"></A>        &lt;td&gt;Incremental&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195453"></A>        &lt;td&gt;Defer allocating space for storing each chunk until </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195454"></A>        the chunk is written.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195455"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195456"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195457"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195458"></A>        &lt;td&gt;Default&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195459"></A>        &lt;td&gt;Use the strategy (Early, Late, or Incremental) for the storage method </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195460"></A>        and access method. This is the recommended strategy.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195461"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195462"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195463"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195464"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195465"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195466"></A>  &lt;p&gt;&amp;ldquo;Late&amp;rdquo; allocation is done at the time of the first write to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195467"></A>  dataset. Space for the whole dataset is allocated at the first write.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195468"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195469"></A>  &lt;p&gt;&amp;ldquo;Incremental&amp;rdquo; allocation (chunks only) is done at the time </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195470"></A>  of the first write to the chunk. Chunks that have never been written are </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195471"></A>  not allocated in the file. In a sparsely populated dataset, this option </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195472"></A>  allocates chunks only where data is actually written.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195473"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195474"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195475"></A>  &lt;p&gt;The &amp;ldquo;Default&amp;rdquo; property selects the option recommended as </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195476"></A>  appropriate for the storage method and access method. The defaults are </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195477"></A>  shown in the table below. Note that &amp;ldquo;Early&amp;rdquo; allocation is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195478"></A>  recommended for all Parallel I/O, while other options are recommended </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195479"></A>  as the default for serial I/O cases.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195480"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195481"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195482"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195483"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195484"></A>        &lt;td colspan=&quot;3&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195485"></A>        &lt;b&gt;Table 11. Default storage options&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195486"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195487"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195488"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195489"></A>        &lt;td width=&quot;33%&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195490"></A>        &lt;b&gt;&amp;nbsp;&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195491"></A>        &lt;td width=&quot;34%&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195492"></A>        &lt;b&gt;Serial I/O&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195493"></A>        &lt;td width=&quot;33%&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195494"></A>        &lt;b&gt;Parallel I/O&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195495"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195496"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195497"></A>        &lt;td&gt;Contiguous Storage&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195498"></A>        &lt;td&gt;Late&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195499"></A>        &lt;td&gt;Early&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195500"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195501"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195502"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195503"></A>        &lt;td&gt;Chunked Storage&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195504"></A>        &lt;td&gt;Incremental&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195505"></A>        &lt;td&gt;Early&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195506"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195507"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195508"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195509"></A>        &lt;td&gt;Compact Storage&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195510"></A>        &lt;td&gt;Early&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195511"></A>        &lt;td&gt;Early&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195512"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195513"></A>    &lt;tr&gt;&lt;td colspan=&quot;3&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195514"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195515"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195516"></A> &nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195517"></A>&lt;h4&gt;&lt;em&gt;When to Write the Fill Value&lt;/em&gt;&lt;/h4&gt;  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195518"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195519"></A>  &lt;p&gt;The second property is when to write the fill value. The possible values </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195520"></A>  are &amp;ldquo;Never&amp;rdquo; and &amp;ldquo;Allocation&amp;rdquo;. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195521"></A>  The table below shows these options.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195522"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195523"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195524"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195525"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195526"></A>        &lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195527"></A>        &lt;b&gt;Table 12. When to write fill values&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195528"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195529"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195530"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195531"></A>        &lt;td width=&quot;15%&quot;&gt;&lt;b&gt;When&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195532"></A>        &lt;td width=&quot;85%&quot;&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195533"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195534"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195535"></A>        &lt;td&gt;Never&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195536"></A>        &lt;td&gt;Fill value will never be written.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195537"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195538"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195539"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195540"></A>        &lt;td&gt;Allocation&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195541"></A>        &lt;td&gt;Fill value is written when space is allocated. (Default for </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195542"></A>        chunked and contiguous data storage.)&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195543"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195544"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195545"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195546"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195547"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195548"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195549"></A>&lt;h4&gt;&lt;em&gt;Fill Values&lt;/em&gt;&lt;/h4&gt;  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195550"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195551"></A>  &lt;p&gt;The third property is the fill value to write. The table below shows the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195552"></A>  values. By default, the data is filled with zeroes. The application may </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195553"></A>  choose no fill value (Undefined). In this case, uninitialized data may have </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195554"></A>  random values. The application may define a fill value of an </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195555"></A>  appropriate type. See the chapter &amp;ldquo;&lt;a href=&quot;11_Datatypes.html&quot;&gt;HDF5 </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195556"></A>  Datatypes&lt;/a&gt;&amp;rdquo; for more information regarding fill values.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195557"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195558"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195559"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195560"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195561"></A>        &lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195562"></A>        &lt;b&gt;Table 13. Fill values&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195563"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195564"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195565"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195566"></A>        &lt;td&gt;&lt;b&gt;What to Write&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195567"></A>        &lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195568"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195569"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195570"></A>        &lt;td&gt;Default&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195571"></A>        &lt;td&gt;By default, the library fills allocated space with zeroes.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195572"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195573"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195574"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195575"></A>        &lt;td&gt;Undefined&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195576"></A>        &lt;td&gt;Allocated space is filled with random values.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195577"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195578"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195579"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195580"></A>        &lt;td&gt;User-defined&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195581"></A>        &lt;td&gt;The application specifies the fill value.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195582"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195583"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195584"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195585"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195586"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195587"></A>  &lt;p&gt;Together these three properties control the library&amp;rsquo;s behavior. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195588"></A>  The table below summarizes the possibilities during the dataset </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195589"></A>  create-write-close cycle.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195590"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195591"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195592"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195593"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195594"></A>        &lt;td colspan=&quot;4&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195595"></A>        &lt;b&gt;Table 14. Storage allocation and fill summary&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195596"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195597"></A>    &lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195598"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195599"></A>        &lt;td width=&quot;17%&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195600"></A>        &lt;b&gt;When to&lt;br /&gt;allocate&lt;br /&gt;space&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195601"></A>        &lt;td width=&quot;17%&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195602"></A>        &lt;b&gt;When to&lt;br /&gt;write fill&lt;br /&gt;value&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195603"></A>        &lt;td width=&quot;17%&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195604"></A>        &lt;b&gt;What fill&lt;br /&gt;value to&lt;br /&gt;write&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195605"></A>        &lt;td width=&quot;49%&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195606"></A>        &lt;b&gt;Library create-write-close behavior&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195607"></A>    &lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195608"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195609"></A>        &lt;td&gt;Early&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195610"></A>        &lt;td&gt;Never&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195611"></A>        &lt;td&gt;-&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195612"></A>        &lt;td&gt;Library allocates space when dataset is created, but never </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195613"></A>        writes a fill value to dataset. A read of unwritten data returns </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195614"></A>        undefined values.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195615"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195616"></A>    &lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195617"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195618"></A>        &lt;td&gt;Late&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195619"></A>        &lt;td&gt;Never&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195620"></A>        &lt;td&gt;-&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195621"></A>        &lt;td&gt;Library allocates space when dataset is written to, but never </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195622"></A>        writes a fill value to the dataset. A read of unwritten data </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195623"></A>        returns undefined values.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195624"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195625"></A>    &lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195626"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195627"></A>        &lt;td&gt;Incremental&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195628"></A>        &lt;td&gt;Never&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195629"></A>        &lt;td&gt;-&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195630"></A>        &lt;td&gt;Library allocates space when a dataset or chunk (whichever </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195631"></A>        is the smallest unit of space) is written to, but it never writes </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195632"></A>        a fill value to a dataset or a chunk. A read of unwritten data </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195633"></A>        returns undefined values.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195634"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195635"></A>    &lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195636"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195637"></A>        &lt;td&gt;-&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195638"></A>        &lt;td&gt;Allocation&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195639"></A>        &lt;td&gt;Undefined&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195640"></A>        &lt;td&gt;&lt;b&gt;Error&lt;/b&gt; on creating the dataset. The dataset is not </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195641"></A>        created.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195642"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195643"></A>    &lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195644"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195645"></A>        &lt;td&gt;Early&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195646"></A>        &lt;td&gt;Allocation&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195647"></A>        &lt;td&gt;Default or User-defined&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195648"></A>        &lt;td&gt;Allocate space for the dataset when the dataset is created. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195649"></A>        Write the fill value (default or user-defined) to the entire </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195650"></A>        dataset when the dataset is created.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195651"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195652"></A>    &lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195653"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195654"></A>        &lt;td&gt;Late&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195655"></A>        &lt;td&gt;Allocation&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195656"></A>        &lt;td&gt;Default or User-defined&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195657"></A>        &lt;td&gt;Allocate space for the dataset when the application first </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195658"></A>        writes data values to the dataset. Write the fill value to the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195659"></A>        entire dataset before writing application data values.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195660"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195661"></A>    &lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195662"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195663"></A>        &lt;td&gt;Incremental&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195664"></A>        &lt;td&gt;Allocation&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195665"></A>        &lt;td&gt;Default or User-defined&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195666"></A>        &lt;td&gt;Allocate space for the dataset when the application first </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195667"></A>        writes data values to the dataset or chunk (whichever is the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195668"></A>        smallest unit of space). Write the fill value to the entire dataset </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195669"></A>        or chunk before writing application data values. &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195670"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195671"></A>    &lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195672"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195673"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195674"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195675"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195676"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195677"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195678"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195679"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195680"></A>  &lt;p&gt;During the &lt;code&gt;H5Dread&lt;/code&gt; function call, the library behavior </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195681"></A>  depends on whether space has been allocated, whether the fill value has </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195682"></A>  been written to storage, how the fill value is defined, and when to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195683"></A>  write the fill value. The table below summarizes the different behaviors.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195684"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195685"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195686"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195687"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195688"></A>        &lt;td colspan=&quot;4&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195689"></A>        &lt;b&gt;Table 15. &lt;code&gt;H5Dread&lt;/code&gt; summary&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195690"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195691"></A>    &lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195692"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195693"></A>        &lt;td width=&quot;17%&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195694"></A>        &lt;b&gt;Is space&lt;br /&gt;allocated&lt;br /&gt;in the file?&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195695"></A>        &lt;td width=&quot;17%&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195696"></A>        &lt;b&gt;What is the&lt;br /&gt;fill value?&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195697"></A>        &lt;td width=&quot;17%&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195698"></A>        &lt;b&gt;When to&lt;br /&gt;write the&lt;br /&gt;fill value?&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195699"></A>        &lt;td width=&quot;49%&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195700"></A>        &lt;b&gt;Library read behavior&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195701"></A>    &lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195702"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195703"></A>        &lt;td&gt;No&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195704"></A>        &lt;td&gt;Undefined&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195705"></A>        &lt;td&gt;&amp;lt;&amp;lt;any&amp;gt;&amp;gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195706"></A>        &lt;td&gt;&lt;b&gt;Error&lt;/b&gt;. Cannot create this dataset.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195707"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195708"></A>    &lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195709"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195710"></A>        &lt;td&gt;No&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195711"></A>        &lt;td&gt;Default or User-defined&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195712"></A>        &lt;td&gt;&amp;lt;&amp;lt;any&amp;gt;&amp;gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195713"></A>        &lt;td&gt;Fill the memory buffer with the fill value.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195714"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195715"></A>    &lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195716"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195717"></A>        &lt;td&gt;Yes&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195718"></A>        &lt;td&gt;Undefined&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195719"></A>        &lt;td&gt;&amp;lt;&amp;lt;any&amp;gt;&amp;gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195720"></A>        &lt;td&gt;Return data from storage (dataset). Trash is possible if </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195721"></A>        the application has not written data to the portion of the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195722"></A>        dataset being read.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195723"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195724"></A>    &lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195725"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195726"></A>        &lt;td&gt;Yes&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195727"></A>        &lt;td&gt;Default or User-defined&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195728"></A>        &lt;td&gt;Never&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195729"></A>        &lt;td&gt;Return data from storage (dataset). Trash is possible if the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195730"></A>        application has not written data to the portion of the dataset being </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195731"></A>        read.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195732"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195733"></A>    &lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195734"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195735"></A>        &lt;td&gt;Yes&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195736"></A>        &lt;td&gt;Default or User-defined&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195737"></A>        &lt;td&gt;Allocation&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195738"></A>        &lt;td&gt;Return data from storage (dataset).&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195739"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195740"></A>    &lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195741"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195742"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195743"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195744"></A>  &lt;p&gt;There are two cases to consider depending on whether the space in the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195745"></A>  file has been allocated before the read or not. When space has not yet </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195746"></A>  been allocated and if a fill value is defined, the memory buffer will </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195747"></A>  be filled with the fill values and returned. In other words, no data </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195748"></A>  has been read from the disk. If space has been allocated, the values </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195749"></A>  are returned from the stored data. The unwritten elements will be </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195750"></A>  filled according to the fill value.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195751"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195752"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195753"></A>&lt;h4&gt;5.5.2.  Deleting a Dataset from a File and Reclaiming Space&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195754"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195755"></A>  &lt;p&gt;HDF5 does not at this time provide an easy mechanism to remove a dataset </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195756"></A>  from a file or to reclaim the storage space occupied by a deleted object. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195757"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195758"></A>  &lt;p&gt;Removing a dataset and reclaiming the space it used can be done with </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195759"></A>  the &lt;code&gt;H5Ldelete&lt;/code&gt; function and the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195760"></A>  &lt;a href=&quot;../RM/Tools.html#Tools-Repack&quot;&gt;h5repack&lt;/a&gt; utility program.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195761"></A>  With the &lt;code&gt;H5Ldelete&lt;/code&gt; function, links to a dataset can be </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195762"></A>  removed from the file structure. After all the links have been removed, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195763"></A>  the dataset becomes inaccessible to any application and is effectively </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195764"></A>  removed from the file. The way to recover the space occupied by an </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195765"></A>  unlinked dataset is to write all of the objects of the file into a </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195766"></A>  new file. Any unlinked object is inaccessible to the application and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195767"></A>  will not be included in the new file. Writing objects to a new file </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195768"></A>  can be done with a custom program or with the h5repack utility program.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195769"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195770"></A>  &lt;!-- 8.11.10, MEE: in the paragraph below, the link should be changed.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195771"></A>  Links are now done separately from groups, but there is no HDF5 Links </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195772"></A>  chapter yet. --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195773"></A>  &lt;p&gt;See the chapter &amp;ldquo;&lt;a href=&quot;09_Groups.html&quot;&gt;HDF5 Groups&lt;/a&gt;&amp;rdquo; for </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195774"></A>  further discussion of HDF5 file structures and the use of links. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195775"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195776"></A>&lt;h4&gt;5.5.3. Releasing Memory Resources&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195777"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195778"></A>  &lt;p&gt;The system resources required for HDF5 objects such as datasets, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195779"></A>  datatypes, and dataspaces should be released once access to the object is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195780"></A>  no longer needed. This is accomplished via the appropriate close function. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195781"></A>  This is not unique to datasets but a general requirement when working </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195782"></A>  with the HDF5 Library; failure to close objects will result in resource leaks. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195783"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195784"></A>  &lt;p&gt;In the case where a dataset is created or data has been transferred, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195785"></A>  there are several objects that must be closed. These objects </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195786"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195787"></A>&lt;span class=&quot;editingComment&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195788"></A>   [ [ [ </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195789"></A>   (T? above) </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195790"></A>   originally appeared here.  On the full editorial pass, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195791"></A>   see if there is any apparent reason for the question.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195792"></A>   ] ] ]</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195793"></A>  &lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195794"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195795"></A>  include datasets, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195796"></A>  datatypes, dataspaces, and property lists. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195797"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195798"></A>  &lt;p&gt;The application program must free any memory variables and buffers it </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195799"></A>  allocates. When accessing data from the file, the amount of memory required </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195800"></A>  can be determined by calculating the size of the memory datatype and the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195801"></A>  number of elements in the memory selection.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195802"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195803"></A>  &lt;p&gt;Variable-length data are organized in two or more areas of memory. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195804"></A>  See &amp;ldquo;&lt;a href=&quot;11_Datatypes.html&quot;&gt;HDF5 Datatypes&lt;/a&gt;&amp;rdquo; for </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195805"></A>  more information. When writing data, the application creates an array </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195806"></A>  of &lt;code&gt;vl_info_t&lt;/code&gt; which contains pointers to the elements. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195807"></A>  The elements might be, for example, strings. In the file, the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195808"></A>  variable-length data is stored in two parts: a heap with the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195809"></A>  variable-length values of the data elements and an array of </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195810"></A>  &lt;code&gt;vlinfo_t&lt;/code&gt; elements. When the data is read, the amount of </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195811"></A>  memory required for the heap can be determined with the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195812"></A>  &lt;code&gt;H5Dget_vlen_buf_size&lt;/code&gt; call.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195813"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195814"></A>  &lt;p&gt;The data transfer property may be used to set a custom memory manager </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195815"></A>  for allocating variable-length data for a &lt;code&gt;H5Dread&lt;/code&gt;. This is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195816"></A>  set with the &lt;code&gt;H5Pset_vlen_mem_manager&lt;/code&gt; call.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195817"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195818"></A>  &lt;p&gt;To free the memory for variable-length data, it is necessary to visit </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195819"></A>  each element, free the variable-length data, and reset the element. The </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195820"></A>  application must free the memory it has allocated. For memory allocated </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195821"></A>  by the HDF5 Library during a read, the &lt;code&gt;H5Dvlen_reclaim&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195822"></A>  function can be used to perform this operation.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195823"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195824"></A>&lt;h4&gt;5.5.4. External Storage Properties&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195825"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195826"></A>  &lt;p&gt;The external storage format allows data to be stored across a set of </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195827"></A>  non-HDF5 files. A set of segments (offsets and sizes) in one or more files </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195828"></A>  is defined as an external file list, or EFL, and the contiguous logical </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195829"></A>  addresses of the data storage are mapped onto these segments. Currently, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195830"></A>  only the &lt;code&gt;H5D_CONTIGUOUS&lt;/code&gt; storage format allows external storage. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195831"></A>  External storage is enabled by a dataset creation property. The table </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195832"></A>  below shows the API.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195833"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195834"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195835"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot; cellpadding=&quot;0&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195836"></A>    &lt;tr valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195837"></A>        &lt;td colspan=&quot;2&quot; align=&quot;left&quot; valign=&quot;bottom&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195838"></A>        &lt;b&gt;Table 16. External storage API&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195839"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195840"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195841"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195842"></A>        &lt;td&gt;&lt;b&gt;Function&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195843"></A>        &lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195844"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195845"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195846"></A>        &lt;td width=&quot;50%&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195847"></A>        &lt;code&gt;herr_t H5Pset_external (hid_t plist, const char *name, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195848"></A>        off_t offset, hsize_t size)&lt;/code&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195849"></A>        &lt;td width=&quot;50%&quot;&gt;This function adds a new segment to the end of </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195850"></A>        the external file list of the specified dataset creation property </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195851"></A>        list. The segment begins a byte offset of file name and continues </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195852"></A>        for size bytes. The space represented by this segment is adjacent </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195853"></A>        to the space already represented by the external file list. The </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195854"></A>        last segment in a file list may have the size </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195855"></A>        &lt;code&gt;H5F_UNLIMITED&lt;/code&gt;, in which case the external file may </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195856"></A>        be of unlimited size and no more files can be added to the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195857"></A>        external files list.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195858"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195859"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195860"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195861"></A>        &lt;td&gt;&lt;code&gt;int H5Pget_external_count (hid_t plist)&lt;/code&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195862"></A>        &lt;td&gt;Calling this function returns the number of segments in an </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195863"></A>        external file list. If the dataset creation property list has no </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195864"></A>        external data, then zero is returned.&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195865"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195866"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195867"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195868"></A>        &lt;td&gt;&lt;code&gt;herr_t H5Pget_external (hid_t plist, int idx, size_t </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195869"></A>        name_size,&lt;br /&gt;char *name, off_t *offset,&lt;br /&gt;hsize_t *size)&lt;/code&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195870"></A>        &lt;td&gt;This is the counterpart for the &lt;code&gt;H5Pset_external()&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195871"></A>        function. Given a dataset creation property list and a zero-based </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195872"></A>        index into that list, the file name, byte offset, and segment </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195873"></A>        size are returned through non-null arguments. At most name_size </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195874"></A>        characters are copied into the name argument which is not null </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195875"></A>        terminated if the file name is longer than the supplied name </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195876"></A>        buffer (this is similar to &lt;code&gt;strncpy()&lt;/code&gt;). &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195877"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195878"></A>    &lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;hr color=&quot;green&quot; size=&quot;3&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195879"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195880"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195881"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195882"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195883"></A>  &lt;p&gt;The figure below shows an example of how a contiguous, one-dimensional </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195884"></A>  dataset is partitioned into three parts and each of those parts is stored </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195885"></A>  in a segment of an external file. The top rectangle represents the logical </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195886"></A>  address space of the dataset while the bottom rectangle represents an </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195887"></A>  external file.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195888"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195889"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195890"></A>&lt;table width=&quot;500&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195891"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195892"></A>        &lt;td align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195893"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195894"></A>        &lt;img src=&quot;Images/Dsets_fig19.JPG&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195895"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195896"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195897"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195898"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195899"></A>        &lt;td align=&quot;left&quot; &gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195900"></A>        &lt;b&gt;Figure 11. External file storage&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195901"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195902"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195903"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195904"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195905"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195906"></A>  &lt;p&gt;The example below shows code that defines the external storage for the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195907"></A>  example. Note that the segments are defined in order of the logical </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195908"></A>  addresses they represent, not their order within the external file. It </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195909"></A>  would also have been possible to put the segments in separate files. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195910"></A>  Care should be taken when setting up segments in a single file since </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195911"></A>  the library does not automatically check for segments that overlap.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195912"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195913"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195914"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195915"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195916"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195917"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195918"></A>    &lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195919"></A>  Plist = H5Pcreate (H5P_DATASET_CREATE);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195920"></A>  H5Pset_external (plist, &quot;velocity.data&quot;, 3000, 1000);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195921"></A>  H5Pset_external (plist, &quot;velocity.data&quot;, 0, 2500);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195922"></A>  H5Pset_external (plist, &quot;velocity.data&quot;, 4500, 1500);&lt;/pre&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195923"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195924"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195925"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195926"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195927"></A>        &lt;b&gt;Example 8. External storage&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195928"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195929"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195930"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195931"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195932"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195933"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195934"></A>  &lt;p&gt;The figure below shows an example of how a contiguous, two-dimensional </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195935"></A>  dataset is partitioned into three parts and each of those parts is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195936"></A>  stored in a separate external file. The top rectangle represents the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195937"></A>  logical address space of the dataset while the bottom rectangles </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195938"></A>  represent external files.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195939"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195940"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195941"></A>&lt;table width=&quot;500&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195942"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195943"></A>        &lt;td align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195944"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195945"></A>        &lt;img src=&quot;Images/Dsets_fig20.jpg&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195946"></A>        &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195947"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195948"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195949"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195950"></A>        &lt;td align=&quot;left&quot; &gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195951"></A>        &lt;b&gt;Figure 12. Partitioning a 2-D dataset for external storage&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195952"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195953"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195954"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195955"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195956"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195957"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195958"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195959"></A>  &lt;p&gt;The example below shows code for the partitioning described above.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195960"></A>  In this example, the library maps the multi-dimensional array onto a linear </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195961"></A>  address space as defined by the HDF5 format specification, and then maps that </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195962"></A>  address space into the segments defined in the external file list. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195963"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195964"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195965"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195966"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195967"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195968"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195969"></A>    &lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195970"></A>  Plist = H5Pcreate (H5P_DATASET_CREATE);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195971"></A>  H5Pset_external (plist, &quot;scan1.data&quot;, 0, 24);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195972"></A>  H5Pset_external (plist, &quot;scan2.data&quot;, 0, 24);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195973"></A>  H5Pset_external (plist, &quot;scan3.data&quot;, 0, 16);&lt;/pre&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195974"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195975"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195976"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195977"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195978"></A>        &lt;b&gt;Example 9. Partitioning a 2-D dataset for external storage&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195979"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195980"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195981"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195982"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195983"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195984"></A>  &lt;p&gt;The segments of an external file can exist beyond the end of the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195985"></A>  (external) file. The library reads that part of a segment as zeros. When </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195986"></A>  writing to a segment that exists beyond the end of a file, the external </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195987"></A>  file is automatically extended. Using this feature, one can create a </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195988"></A>  segment (or set of segments) which is larger than the current size of </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195989"></A>  the dataset. This allows the dataset to be extended at a future time </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195990"></A>  (provided the dataspace also allows the extension).&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195991"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195992"></A>  &lt;p&gt;All referenced external data files must exist before performing raw </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195993"></A>  data I/O on the dataset. This is normally not a problem since those files </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195994"></A>  are being managed directly by the application or indirectly through some </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195995"></A>  other library. However, if the file is transferred from its original </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195996"></A>  context, care must be taken to assure that all the external files are </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195997"></A>  accessible in the new location.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195998"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1195999"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196000"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196001"></A>&lt;a name=&quot;UseFilters&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196002"></A>&lt;h3 class=pagebefore&gt;5.6. Using HDF5 Filters&lt;/h3&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196003"></A>&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196004"></A>&lt;p&gt;This section describes in detail how to use the n-bit and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196005"></A>scale-offset filters. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196006"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196007"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196008"></A>&lt;a name=&quot;N-Bit&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196009"></A>&lt;h3&gt;5.6.1. Using the N-bit Filter&lt;/h3&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196010"></A>&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196011"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196012"></A>&lt;p&gt;N-bit data has &lt;i&gt;n&lt;/i&gt; significant bits,  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196013"></A>  where &lt;i&gt;n&lt;/i&gt; may not correspond to a precise number of bytes.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196014"></A>  On the other hand, computing systems and applications universally, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196015"></A>  or nearly so, run most efficiently when manipulating data as </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196016"></A>  whole bytes or multiple bytes.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196017"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196018"></A>&lt;p&gt;Consider the case of 12-bit integer data.  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196019"></A>  In memory, that data will be handled in at least 2 bytes, or 16 bits, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196020"></A>  and on some platforms in 4 or even 8 bytes.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196021"></A>  The size of such a dataset can be significantly reduced when written </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196022"></A>  to disk if the unused bits are stripped out.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196023"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196024"></A>&lt;p&gt;The &lt;i&gt;n-bit filter&lt;/i&gt; is provided for this purpose,  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196025"></A>  &lt;i&gt;packing&lt;/i&gt; n-bit data on output by stripping off all unused bits </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196026"></A>  and &lt;i&gt;unpacking&lt;/i&gt; on input, restoring the extra bits required</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196027"></A>  by the computational processor.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196028"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196029"></A>&lt;h4&gt;&lt;em&gt;N-bit Datatype&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196030"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196031"></A>&lt;p&gt;An &lt;i&gt;n-bit datatype&lt;/i&gt; is a datatype of &lt;i&gt;n&lt;/i&gt; significant bits.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196032"></A>  Unless it is packed, an &lt;i&gt;n&lt;/i&gt;-bit datatype is presented as an </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196033"></A>  &lt;i&gt;n&lt;/i&gt;-bit bitfield within a larger-sized value.  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196034"></A>  For example, a 12-bit datatype might be presented as a 12-bit field </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196035"></A>  in a 16-bit, or 2-byte, value.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196036"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196037"></A>&lt;p&gt;Currently, the datatype classes of n-bit datatype or n-bit field of a </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196038"></A>  compound datatype or an array datatype are limited to integer or </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196039"></A>  floating-point.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196040"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196041"></A>&lt;p&gt;The HDF5 user can create an n-bit datatype through a series of</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196042"></A>  of function calls.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196043"></A>  For example, the following calls create a 16-bit datatype </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196044"></A>  that is stored in a 32-bit value with a 4-bit offset:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196045"></A>&lt;dir&gt;&lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196046"></A>hid_t nbit_datatype = H5Tcopy(H5T_STD_I32LE);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196047"></A>H5Tset_precision(nbit_datatype, 16);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196048"></A>H5Tset_offset(nbit_datatype, 4);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196049"></A>&lt;/pre&gt;&lt;/dir&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196050"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196051"></A>&lt;p&gt;In memory, one value of the above example n-bit datatype would be stored on </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196052"></A>  a little-endian machine as follows:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196053"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196054"></A>&lt;dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196055"></A>      &lt;dt&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196056"></A>        &lt;table border=&quot;1&quot; width=&quot;80%&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196057"></A>          &lt;tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196058"></A>            &lt;td width=&quot;25%&quot; align=&quot;center&quot;&gt;byte 3&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196059"></A>            &lt;td width=&quot;25%&quot; align=&quot;center&quot;&gt;byte 2&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196060"></A>            &lt;td width=&quot;25%&quot; align=&quot;center&quot;&gt;byte 1&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196061"></A>            &lt;td width=&quot;25%&quot; align=&quot;center&quot;&gt;byte 0&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196062"></A>          &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196063"></A>          &lt;tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196064"></A>            &lt;td width=&quot;25%&quot; align=&quot;center&quot;&gt;&lt;code&gt;????????&lt;/code&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196065"></A>            &lt;td width=&quot;25%&quot; align=&quot;center&quot;&gt;&lt;code&gt;????SPPP&lt;/code&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196066"></A>            &lt;td width=&quot;25%&quot; align=&quot;center&quot;&gt;&lt;code&gt;PPPPPPPP&lt;/code&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196067"></A>            &lt;td width=&quot;25%&quot; align=&quot;center&quot;&gt;&lt;code&gt;PPPP????&lt;/code&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196068"></A>          &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196069"></A>        &lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196070"></A>        &lt;table width=&quot;80%&quot; border=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196071"></A>          &lt;tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196072"></A>            &lt;td colspan=&quot;4&quot;&gt;&lt;font size=&quot;-1&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196073"></A>              Key: </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196074"></A>                  &lt;code&gt;S&lt;/code&gt; - sign bit, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196075"></A>                  &lt;code&gt;P&lt;/code&gt; - significant bit, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196076"></A>                  &lt;code&gt;?&lt;/code&gt; - padding bit </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196077"></A>              &lt;br&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196078"></A>              Sign bit is included in signed integer datatype precision.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196079"></A>	    &lt;/font&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196080"></A>          &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196081"></A>        &lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196082"></A>        &lt;br&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196083"></A>        </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196084"></A>      &lt;/dt&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196085"></A>&lt;/dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196086"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196087"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196088"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196089"></A>&lt;h4&gt;&lt;em&gt;N-bit Filter&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196090"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196091"></A>&lt;p&gt;When data of an n-bit datatype is stored on disk using the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196092"></A>  n-bit filter, the filter &lt;i&gt;packs&lt;/i&gt; the data by stripping off the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196093"></A>  padding bits; only the significant bits are retained and stored.  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196094"></A>  The values on disk will appear as follows:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196095"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196096"></A>&lt;dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196097"></A>      &lt;dt&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196098"></A>        &lt;table border=&quot;1&quot; width=&quot;80%&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196099"></A>          &lt;tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196100"></A>            &lt;td width=&quot;45%&quot; align=&quot;center&quot;&gt;1st value&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196101"></A>            &lt;td width=&quot;45%&quot; align=&quot;center&quot;&gt;2nd value&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196102"></A>            &lt;td width=&quot;10%&quot; align=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196103"></A>          &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196104"></A>          &lt;tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196105"></A>            &lt;td width=&quot;45%&quot; align=&quot;center&quot;&gt;&lt;code&gt;SPPPPPPP&amp;nbsp;PPPPPPPP&lt;/code&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196106"></A>            &lt;td width=&quot;45%&quot; align=&quot;center&quot;&gt;&lt;code&gt;SPPPPPPP&amp;nbsp;PPPPPPPP&lt;/code&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196107"></A>            &lt;td width=&quot;10%&quot; align=&quot;center&quot;&gt;...&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196108"></A>          &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196109"></A>        &lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196110"></A>        &lt;table width=&quot;80%&quot; border=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196111"></A>          &lt;tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196112"></A>            &lt;td colspan=&quot;4&quot;&gt;&lt;font size=&quot;-1&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196113"></A>              Key: </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196114"></A>                  &lt;code&gt;S&lt;/code&gt; - sign bit, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196115"></A>                  &lt;code&gt;P&lt;/code&gt; - significant bit, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196116"></A>                  &lt;code&gt;?&lt;/code&gt; - padding bit </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196117"></A>              &lt;br&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196118"></A>              Sign bit is included in signed integer datatype precision.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196119"></A>	    &lt;/font&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196120"></A>          &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196121"></A>        &lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196122"></A>      &lt;/dt&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196123"></A>&lt;/dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196124"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196125"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196126"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196127"></A>&lt;p&gt;The n-bit filter can be used effectively for compressing data of an n-bit</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196128"></A>  datatype, including arrays and the n-bit fields of compound datatypes. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196129"></A>  The filter supports complex situations where a compound datatype </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196130"></A>  contains member(s) of a compound datatype or an array datatype has</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196131"></A>  a compound datatype as the base type.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196132"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196133"></A>&lt;p&gt;At present, the n-bit filter supports all datatypes. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196134"></A>  For datatypes of class time, string,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196135"></A>  opaque, reference, &lt;small&gt;ENUM&lt;/small&gt;, and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196136"></A>  variable-length, the n-bit filter acts as a no-op which is short for no </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196137"></A>  operation. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196138"></A>  For convenience, the rest of this section refers to such datatypes </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196139"></A>  as &lt;i&gt;no-op datatypes&lt;/i&gt;.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196140"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196141"></A>&lt;p&gt;As is the case with all HDF5 filters, an application using </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196142"></A>  the n-bit filter must store data with chunked storage.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196143"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196144"></A>&lt;h4&gt;&lt;em&gt;How Does the N-bit Filter Work?&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196145"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196146"></A>&lt;p&gt;The n-bit filter always compresses and decompresses according to</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196147"></A>  dataset properties supplied by the HDF5 Library in the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196148"></A>  datatype, dataspace, or dataset creation property list.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196149"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196150"></A>&lt;p&gt;The dataset datatype refers to how data is stored in an HDF5 file while </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196151"></A>  the memory datatype refers to how data is stored in memory.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196152"></A>  The HDF5 Library will do datatype conversion when writing data </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196153"></A>  in memory to the dataset or reading data from the dataset to memory if </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196154"></A>  the memory datatype differs from the dataset datatype. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196155"></A>  Datatype conversion is performed by HDF5 Library before n-bit compression </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196156"></A>  and after n-bit decompression.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196157"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196158"></A>&lt;p&gt;The following sub-sections examine the common cases:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196159"></A>  &lt;ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196160"></A>    &lt;li&gt;N-bit integer conversions&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196161"></A>    &lt;li&gt;N-bit floating-point conversions&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196162"></A>  &lt;/ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196163"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196164"></A>&lt;h5&gt;&lt;em&gt;N-bit Integer Conversions&lt;/em&gt;&lt;/h5&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196165"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196166"></A>&lt;p&gt;Integer data with a dataset of integer datatype of less than </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196167"></A>  full precision and a memory datatype of &lt;code&gt;H5T_NATIVE_INT&lt;/code&gt;,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196168"></A>  provides the simplest application of the n-bit filter.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196169"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196170"></A>&lt;p&gt;The precision of &lt;code&gt;H5T_NATIVE_INT&lt;/code&gt; is 8 muliplied by </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196171"></A>  &lt;code&gt;sizeof(int)&lt;/code&gt;. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196172"></A>  This value, the size of an &lt;code&gt;int&lt;/code&gt; in bytes, differs from </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196173"></A>  platform to platform; we assume a value of &lt;code&gt;4&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196174"></A>  for the following illustration.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196175"></A>  We further assume the memory byte order to be little-endian.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196176"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196177"></A>  &lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196178"></A>&lt;p&gt;In memory, therefore, the precision of &lt;code&gt;H5T_NATIVE_INT&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196179"></A>  is 32 and the offset is 0. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196180"></A>  One value of &lt;code&gt;H5T_NATIVE_INT&lt;/code&gt; is laid out in memory </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196181"></A>  as follows:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196182"></A> &nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196183"></A>&lt;table border=&quot;0&quot; width=&quot;80%&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196184"></A>  &lt;tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196185"></A>    &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196186"></A>&lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196187"></A>| byte 3 | byte 2 | byte 1 | byte 0 |</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196188"></A>                                </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196189"></A>|SPPPPPPP|PPPPPPPP|PPPPPPPP|PPPPPPPP|</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196190"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196191"></A>&lt;/pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196192"></A>    &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196193"></A>  &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196194"></A>  &lt;tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196195"></A>    &lt;td colspan=&quot;4&quot;&gt;&lt;font size=&quot;-1&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196196"></A>      Key: </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196197"></A>        &lt;code&gt;S&lt;/code&gt; - sign bit, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196198"></A>        &lt;code&gt;P&lt;/code&gt; - significant bit, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196199"></A>        &lt;code&gt;?&lt;/code&gt; - padding bit </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196200"></A>      &lt;br&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196201"></A>      Sign bit is included in signed integer datatype precision.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196202"></A>      &lt;/font&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196203"></A>  &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196204"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196205"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196206"></A>&lt;p&gt;Suppose the dataset datatype has a precision of 16 and an offset of 4. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196207"></A>  After HDF5 converts values from the memory datatype to the dataset datatype, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196208"></A>  it passes something like the following to the n-bit filter for </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196209"></A>  compression:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196210"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196211"></A>&lt;table border=&quot;0&quot; width=&quot;80%&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196212"></A>  &lt;tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196213"></A>    &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196214"></A>&lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196215"></A>| byte 3 |  byte 2 | byte 1 |  byte 0 |</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196216"></A>               |                 |</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196217"></A>|????????|????S|PPP|PPPPPPPP|PPPP|????|</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196218"></A>               |_________________|</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196219"></A>                 truncated bits</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196220"></A>&lt;/pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196221"></A>    &lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196222"></A>  &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196223"></A>  &lt;tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196224"></A>    &lt;td colspan=&quot;4&quot;&gt;&lt;font size=&quot;-1&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196225"></A>      Key: </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196226"></A>        &lt;code&gt;S&lt;/code&gt; - sign bit, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196227"></A>        &lt;code&gt;P&lt;/code&gt; - significant bit, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196228"></A>        &lt;code&gt;?&lt;/code&gt; - padding bit </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196229"></A>      &lt;br&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196230"></A>      Sign bit is included in signed integer datatype precision.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196231"></A>      &lt;/font&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196232"></A>  &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196233"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196234"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196235"></A>&lt;p&gt;Notice that only the specified 16 bits (15 significant bits and the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196236"></A>  sign bit) are retained in the conversion.  All other significant bits </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196237"></A>  of the memory datatype are discarded because the dataset datatype </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196238"></A>  calls for only 16 bits of precision. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196239"></A>  After n-bit compression, none of these discarded bits, known as </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196240"></A>  &lt;i&gt;padding bits&lt;/i&gt; will be stored on disk.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196241"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196242"></A>&lt;h5&gt;&lt;em&gt;N-bit Floating-point Conversions&lt;/em&gt;&lt;/h5&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196243"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196244"></A>&lt;p&gt;Things get more complicated in the case of a floating-point dataset </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196245"></A>  datatype class.  This sub-section provides an example that </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196246"></A>  illustrates the conversion from a memory datatype of </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196247"></A>  &lt;code&gt;H5T_NATIVE_FLOAT&lt;/code&gt; to a dataset datatype of class </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196248"></A>  floating-point.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196249"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196250"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196251"></A>&lt;p&gt;As before, let the &lt;code&gt;H5T_NATIVE_FLOAT&lt;/code&gt; be 4 bytes long, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196252"></A>  and let the memory byte order be little-endian. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196253"></A>  Per the IEEE standard, one value of &lt;code&gt;H5T_NATIVE_FLOAT&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196254"></A>  is laid out in memory as follows:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196255"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196256"></A>&lt;table border=&quot;0&quot; width=&quot;80%&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196257"></A>  &lt;tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196258"></A>    &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196259"></A>&lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196260"></A>| byte 3 | byte 2 | byte 1 | byte 0 |</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196261"></A>                         </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196262"></A>|SEEEEEEE|EMMMMMMM|MMMMMMMM|MMMMMMMM|</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196263"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196264"></A>&lt;/pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196265"></A>  &lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196266"></A>  &lt;tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196267"></A>    &lt;td colspan=&quot;4&quot;&gt;&lt;font size=&quot;-1&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196268"></A>      Key: </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196269"></A>        &lt;code&gt;S&lt;/code&gt; - sign bit, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196270"></A>        &lt;code&gt;E&lt;/code&gt; - exponent bit, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196271"></A>        &lt;code&gt;M&lt;/code&gt; - mantissa bit, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196272"></A>        &lt;code&gt;?&lt;/code&gt; - padding bit </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196273"></A>      &lt;br&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196274"></A>      Sign bit is included in floating-point datatype precision.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196275"></A>      &lt;/font&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196276"></A>  &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196277"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196278"></A> &nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196279"></A>  &lt;br&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196280"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196281"></A>&lt;p&gt;Suppose the dataset datatype has a precision of 20, offset of 7, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196282"></A>  mantissa size of 13, mantissa position of 7, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196283"></A>  exponent size of 6, exponent position of 20, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196284"></A>  and sign position of 26. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196285"></A>  (See &amp;ldquo;Definition of Datatypes,&amp;rdquo; section 4.3 of the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196286"></A>  &amp;ldquo;&lt;a href=&quot;UG_frame11Datatypes.html&quot;&gt;Datatypes&lt;/a&gt;&amp;rdquo; chapter in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196287"></A>  the &lt;a href=&quot;index.html&quot;&gt;&lt;cite&gt;HDF5 User&amp;rsquo;s Guide&lt;/cite&gt;&lt;/a&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196288"></A>  for a discussion of creating and modifying datatypes.)&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196289"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196290"></A>&lt;p&gt;After HDF5 converts values from the memory datatype to the dataset datatype, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196291"></A>  it passes something like the following to the n-bit filter for </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196292"></A>  compression:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196293"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196294"></A>&lt;table border=&quot;0&quot; width=&quot;80%&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196295"></A>  &lt;tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196296"></A>    &lt;td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196297"></A>&lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196298"></A>| byte 3 | byte 2  | byte 1 | byte 0  |</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196299"></A>              |               |</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196300"></A>|?????SEE|EEEE|MMMM|MMMMMMMM|M|???????|</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196301"></A>              |_______________|</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196302"></A>              truncated mantissa</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196303"></A>&lt;/pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196304"></A>  &lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196305"></A>  &lt;tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196306"></A>    &lt;td colspan=&quot;4&quot;&gt;&lt;font size=&quot;-1&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196307"></A>      Key: </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196308"></A>        &lt;code&gt;S&lt;/code&gt; - sign bit, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196309"></A>        &lt;code&gt;E&lt;/code&gt; - exponent bit, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196310"></A>        &lt;code&gt;M&lt;/code&gt; - mantissa bit, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196311"></A>        &lt;code&gt;?&lt;/code&gt; - padding bit </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196312"></A>      &lt;br&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196313"></A>      Sign bit is included in floating-point datatype precision.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196314"></A>      &lt;/font&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196315"></A>  &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196316"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196317"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196318"></A>&lt;p&gt;The sign bit and truncated mantissa bits are not changed during </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196319"></A>  datatype conversion by the HDF5 Library. On the other hand,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196320"></A>  the conversion of the 8-bit exponent to a 6-bit exponent</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196321"></A>  is a little tricky:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196322"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196323"></A>&lt;dir&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196324"></A>  &lt;p&gt;The bias for the new exponent in the n-bit datatype is: &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196325"></A>      &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;2&lt;sup&gt;(n-1)&lt;/sup&gt;-1&lt;/code&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196326"></A>      &lt;br&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196327"></A>  &lt;p&gt;The following formula is used for this exponent conversion:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196328"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196329"></A>      </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196330"></A>      &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196331"></A>      &lt;code&gt;exp8 - (2&lt;sup&gt;(8-1)&lt;/sup&gt;-1)&lt;/code&gt; = </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196332"></A>      &lt;code&gt;exp6 - (2&lt;sup&gt;(6-1)&lt;/sup&gt;-1)&lt;/code&gt; = </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196333"></A>      &lt;i&gt;actual exponent value&lt;/i&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196334"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196335"></A>      &lt;br /&gt;&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196336"></A>      &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196337"></A>      where &lt;code&gt;exp8&lt;/code&gt; is the stored decimal value </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196338"></A>      as represented by the 8-bit exponent,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196339"></A>      &lt;br&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196340"></A>      &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196341"></A>      and &lt;code&gt;exp6&lt;/code&gt; is the stored decimal value </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196342"></A>      as represented by the 6-bit exponent</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196343"></A>&lt;/dir&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196344"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196345"></A>&lt;p&gt;In this example, caution must be taken to ensure that, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196346"></A>  after conversion, the actual exponent value is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196347"></A>  within the range that can be represented by a 6-bit exponent. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196348"></A>  For example, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196349"></A>  an 8-bit exponent can represent values  from -127 to 128 while </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196350"></A>  a 6-bit exponent can represent values only from -31 to 32.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196351"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196352"></A>&lt;a name=&quot;Design&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196353"></A>&lt;h4&gt;&lt;em&gt;N-bit Filter Behavior&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196354"></A>&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196355"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196356"></A>  &lt;p&gt;The n-bit filter was designed to treat the incoming data byte by byte at </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196357"></A>  the lowest level. The purpose was to make the n-bit filter as generic as </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196358"></A>  possible so that no pointer cast related to the datatype is needed.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196359"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196360"></A>  &lt;p&gt;Bitwise operations are employed for packing and unpacking at the byte </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196361"></A>  level.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196362"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196363"></A>  &lt;p&gt;Recursive function calls are used to treat compound and array datatypes.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196364"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196365"></A>&lt;h5&gt;&lt;em&gt;N-bit Compression&lt;/em&gt;&lt;/h5&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196366"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196367"></A>  &lt;p&gt;The main idea of n-bit compression is to use a loop to compress each  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196368"></A>  data element in a chunk. Depending on the datatype of each element, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196369"></A>  the n-bit filter will call one of four functions.  Each of these functions</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196370"></A>  performs one of the following tasks:  &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196371"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196372"></A>    &lt;ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196373"></A>      &lt;li&gt;Compress a data element of a no-op datatype&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196374"></A>      &lt;li&gt;Compress a data element of an atomic datatype&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196375"></A>      &lt;li&gt;Compress a data element of a compound datatype&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196376"></A>      &lt;li&gt;Compress a data element of an array datatype&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196377"></A>    &lt;/ul&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196378"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196379"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196380"></A>&lt;p&gt;&lt;b&gt;No-op datatypes:&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196381"></A>  The n-bit filter does not actually compress no-op datatypes.  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196382"></A>  Rather, it copies the data buffer of the no-op datatype from the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196383"></A>  noncompressed buffer to the proper location in the compressed buffer; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196384"></A>  the compressed buffer has no holes. The term &amp;ldquo;compress&amp;rdquo; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196385"></A>  is used here simply to distinguish this function  from the function </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196386"></A>  that performs the reverse operation during decompression.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196387"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196388"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196389"></A>&lt;p&gt;&lt;b&gt;Atomic datatypes:&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196390"></A>  The n-bit filter will find the bytes where significant bits are </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196391"></A>  located and try to compress these bytes, one byte at a time, using a loop. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196392"></A>  At this level, the filter needs the following information:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196393"></A>  &lt;ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196394"></A>    &lt;li&gt;The byte offset of the beginning of the current data element with </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196395"></A>        respect to the beginning of the input data buffer&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196396"></A>    &lt;li&gt;Datatype size, precision, offset, and byte order  &lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196397"></A>  &lt;/ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196398"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196399"></A>&lt;p&gt;The n-bit filter compresses from the most significant byte containing </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196400"></A>  significant bits to the least significant byte.  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196401"></A>  For big-endian data, therefore, the loop index progresses from smaller</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196402"></A>  to larger while for little-endian, the loop index progresses from larger</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196403"></A>  to smaller.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196404"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196405"></A>&lt;p&gt;In the extreme case of when the n-bit datatype has full precision,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196406"></A>  this function copies the content of the entire noncompressed datatype </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196407"></A>  to the compressed output buffer.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196408"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196409"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196410"></A>&lt;p&gt;&lt;b&gt;Compound datatypes:&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196411"></A>  The n-bit filter will compress each data member of the compound datatype. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196412"></A>  If the member datatype is of an integer or floating-point datatype, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196413"></A>  the n-bit filter will call the function described above&lt;!-- in section 2.1.2--&gt;. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196414"></A>  If the member datatype is of a no-op datatype, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196415"></A>  the filter will call the function described above&lt;!-- in section 2.1.1--&gt;. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196416"></A>  If the member datatype is of a compound datatype, the filter will make a </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196417"></A>  recursive call to itself. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196418"></A>&lt;!--</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196419"></A>  (i.e., to the function described in this section, 2.1.3). </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196420"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196421"></A>  If the member datatype is of an array datatype, the filter will call the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196422"></A>  function described below&lt;!-- in section 2.1.4.--&gt;&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196423"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196424"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196425"></A>&lt;p&gt;&lt;b&gt;Array datatypes:&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196426"></A>  The n-bit filter will use a loop to compress each array element in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196427"></A>  the array. If the base datatype of array element is of an integer or </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196428"></A>  floating-point datatype, the n-bit filter will call the function described </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196429"></A>  above&lt;!-- in section 2.1.2.--&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196430"></A>  If the base datatype is of a no-op datatype, the filter will call the</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196431"></A>  function described above&lt;!-- in section 2.1.1.--&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196432"></A>  If the base datatype is of a compound datatype, the filter will call the</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196433"></A>  function described above&lt;!-- in section 2.1.3--&gt;. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196434"></A>  If the member datatype is of an array datatype, the filter will make a </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196435"></A>  recursive call of itself.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196436"></A>&lt;!--</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196437"></A>  (i.e., to the function described in this section, 2.1.4).</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196438"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196439"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196440"></A>&lt;h5&gt;&lt;em&gt;N-bit Decompression&lt;/em&gt;&lt;/h5&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196441"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196442"></A>&lt;p&gt;The n-bit decompression algorithm is very similar to n-bit compression. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196443"></A>  The only difference is that at the byte level, compression packs out all </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196444"></A>  padding bits and stores only significant bits into a continous buffer </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196445"></A>  (unsigned char) while decompression unpacks significant bits and inserts </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196446"></A>  padding bits (zeros) at the proper positions to recover the data bytes </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196447"></A>  as they existed before compression.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196448"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196449"></A>&lt;h5&gt;&lt;em&gt;Storing N-bit Parameters to Array&lt;/em&gt; &lt;code&gt;cd_value[]&lt;/code&gt;&lt;/h5&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196450"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196451"></A>&lt;p&gt;All of the information, or parameters, required by the n-bit filter </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196452"></A>  are gathered and stored in the array &lt;code&gt;cd_values[]&lt;/code&gt; by the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196453"></A>  private function &lt;code&gt;H5Z_set_local_nbit&lt;/code&gt; and are passed </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196454"></A>  to another private function, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196455"></A>  &lt;code&gt;H5Z_filter_nbit&lt;/code&gt;, by the HDF5 Library. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196456"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196457"></A>&lt;p&gt;These parameters are as follows:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196458"></A>  &lt;ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196459"></A>    &lt;li&gt;Parameters related to the datatype&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196460"></A>    &lt;li&gt;The number of elements within the chunk&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196461"></A>    &lt;li&gt;A flag indicating whether compression is needed&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196462"></A>  &lt;/ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196463"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196464"></A>&lt;p&gt;The first and second parameters can be obtained using the HDF5 dataspace</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196465"></A>  and datatype interface calls. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196466"></A>&lt;!--</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196467"></A>  The third parameter is set during the storing process as described </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196468"></A>  in section 3.2.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196469"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196470"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196471"></A>  &lt;p&gt;A compound datatype can have members of array or compound datatype. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196472"></A>  An array datatype&amp;rsquo;s base datatype can be a complex compound datatype. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196473"></A>  Recursive calls are required to set parameters for these complex situations.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196474"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196475"></A>  &lt;p&gt;Before setting the parameters, the number of parameters should be </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196476"></A>  calculated to dynamically allocate the array &lt;code&gt;cd_values[]&lt;/code&gt;,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196477"></A>  which will be passed to the HDF5 Library. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196478"></A>  This also requires recursive calls.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196479"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196480"></A>&lt;p&gt;For an atomic datatype (integer or floating-point), parameters that will </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196481"></A>  be stored include the datatype&amp;rsquo;s size, endianness, precision, and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196482"></A>  offset. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196483"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196484"></A>&lt;p&gt;For a no-op datatype, only the size is required.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196485"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196486"></A>&lt;p&gt;For a compound datatype, parameters that will be stored include the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196487"></A>  datatype&amp;rsquo;s total size and number of members. For each member, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196488"></A>  its member offset needs to be stored. Other parameters for members </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196489"></A>  will depends on the respective datatype class.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196490"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196491"></A>&lt;p&gt;For an array datatype, the total size parameter should be stored. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196492"></A>  Other parameters for the array&amp;rsquo;s base type depend on the base </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196493"></A>  type&amp;rsquo;s datatype class. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196494"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196495"></A>&lt;p&gt;Further, to correctly retrieve the parameter for use of n-bit </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196496"></A>  compression or decompression later, parameters for distinguishing  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196497"></A>  between datatype classes should be stored.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196498"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196499"></A>&lt;a name=&quot;implementation&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196500"></A>&lt;h4&gt;&lt;em&gt;Implementation&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196501"></A>&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196502"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196503"></A>&lt;p&gt;Three filter callback functions were written for the n-bit filter:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196504"></A>  &lt;ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196505"></A>    &lt;li&gt;&lt;code&gt;H5Z_can_apply_nbit&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196506"></A>    &lt;li&gt;&lt;code&gt;H5Z_set_local_nbit&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196507"></A>    &lt;li&gt;&lt;code&gt;H5Z_filter_nbit&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196508"></A>  &lt;/ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196509"></A>  &lt;p&gt;These functions are called internally by the HDF5 Library. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196510"></A>  A number of utility functions were written for the function </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196511"></A>  &lt;code&gt;H5Z_set_local_nbit&lt;/code&gt;. Compression and decompression functions </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196512"></A>  were written and are called by function &lt;code&gt;H5Z_filter_nbit&lt;/code&gt;. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196513"></A>  All these functions are included in the file &lt;code&gt;H5Znbit.c&lt;/code&gt;.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196514"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196515"></A>&lt;p&gt;The public function &lt;code&gt;H5Pset_nbit&lt;/code&gt; is called by </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196516"></A>  the application to set up the use of the n-bit filter. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196517"></A>  This function is included in the file &lt;code&gt;H5Pdcpl.c&lt;/code&gt;. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196518"></A>  The application does not need to supply any parameters.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196519"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196520"></A>&lt;h5&gt;&lt;em&gt;How N-bit Parameters are Stored&lt;/em&gt;&lt;/h5&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196521"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196522"></A>&lt;p&gt;A scheme of storing parameters required by the n-bit filter in the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196523"></A>  array &lt;code&gt;cd_values[]&lt;/code&gt; was developed utilizing recursive </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196524"></A>  function calls.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196525"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196526"></A>&lt;p&gt;Four private utility functions were written for storing the parameters </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196527"></A>  associated with atomic (integer or floating-point), no-op, array, and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196528"></A>  compound datatypes:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196529"></A>  &lt;ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196530"></A>  &lt;li&gt;&lt;code&gt;H5Z_set_parms_atomic&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196531"></A>  &lt;li&gt;&lt;code&gt;H5Z_set_parms_array&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196532"></A>  &lt;li&gt;&lt;code&gt;H5Z_set_parms_nooptype&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196533"></A>  &lt;li&gt;&lt;code&gt;H5Z_set_parms_compound&lt;/code&gt; &lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196534"></A>  &lt;/ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196535"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196536"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196537"></A>&lt;p&gt;The scheme is briefly described below.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196538"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196539"></A>&lt;dir&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196540"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196541"></A>  First, assign a numeric code for datatype class atomic (integer or float), </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196542"></A>  no-op, array, and compound datatype. The code is stored before other </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196543"></A>  datatype related parameters are stored.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196544"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196545"></A>&lt;dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196546"></A>  &lt;dd&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196547"></A>  &lt;dt&gt;The first three parameters of &lt;code&gt;cd_values[]&lt;/code&gt; are reserved for:</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196548"></A>    &lt;ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196549"></A>      &lt;li&gt;The number of valid entries in the array &lt;code&gt;cd_values[]&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196550"></A>      &lt;li&gt;A flag indicating whether compression is needed&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196551"></A>      &lt;li&gt;The number of elements in the chunk&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196552"></A>    &lt;/ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196553"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196554"></A>    </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196555"></A>  &lt;dt&gt;Throughout the balance of this explanation, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196556"></A>    &lt;code&gt;i&lt;/code&gt; represents the index of &lt;code&gt;cd_values[]&lt;/code&gt;.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196557"></A>    &lt;br&gt;&amp;nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196558"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196559"></A>  &lt;dt&gt;In the function &lt;code&gt;H5Z_set_local_nbit&lt;/code&gt;:</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196560"></A>  &lt;dd&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196561"></A>      &lt;ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196562"></A>        &lt;li&gt;&lt;code&gt;i&lt;/code&gt; = 2&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196563"></A>        &lt;li&gt;Get the number of elements in the chunk and store in</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196564"></A>          &lt;code&gt;cd_value[i]&lt;/code&gt;; increment &lt;code&gt;i&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196565"></A>        &lt;li&gt;Get the class of the datatype:</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196566"></A>          &lt;br&gt;&amp;nbsp;&amp;nbsp;For an integer or floating-point datatype, call </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196567"></A>          &lt;code&gt;H5Z_set_parms_atomic&lt;/code&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196568"></A>          &lt;br&gt;&amp;nbsp;&amp;nbsp;For an array datatype, call </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196569"></A>            &lt;code&gt;H5Z_set_parms_array&lt;/code&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196570"></A>          &lt;br&gt;&amp;nbsp;&amp;nbsp;For a compound datatype, call </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196571"></A>            &lt;code&gt;H5Z_set_parms_compound&lt;/code&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196572"></A>          &lt;br&gt;&amp;nbsp;&amp;nbsp;For none of the above, call </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196573"></A>            &lt;code&gt;H5Z_set_parms_noopdatatype&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196574"></A>        &lt;li&gt;Store &lt;code&gt;i&lt;/code&gt; in &lt;code&gt;cd_value[0]&lt;/code&gt; and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196575"></A>          flag in &lt;code&gt;cd_values[1]&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196576"></A>      &lt;/ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196577"></A>  &lt;/dd&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196578"></A>&lt;/dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196579"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196580"></A>&lt;dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196581"></A>  &lt;dt&gt;In the function &lt;code&gt;H5Z_set_parms_atomic&lt;/code&gt;:&lt;/dt&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196582"></A>    &lt;dd&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196583"></A>      &lt;ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196584"></A>        &lt;li&gt;Store the assigned numeric code for the atomic datatype in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196585"></A>          &lt;code&gt;cd_value[i]&lt;/code&gt;; increment &lt;code&gt;i&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196586"></A>        &lt;li&gt;Get the size of the atomic datatype and store in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196587"></A>          &lt;code&gt;cd_value[i]&lt;/code&gt;; increment &lt;code&gt;i&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196588"></A>        &lt;li&gt;Get the order of the atomic datatype and store in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196589"></A>          &lt;code&gt;cd_value[i]&lt;/code&gt;; increment &lt;code&gt;i&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196590"></A>        &lt;li&gt;Get the precision of the atomic datatype and store in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196591"></A>          &lt;code&gt;cd_value[i]&lt;/code&gt;; increment &lt;code&gt;i&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196592"></A>        &lt;li&gt;Get the offset of the atomic datatype and store in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196593"></A>          &lt;code&gt;cd_value[i]&lt;/code&gt;; increment &lt;code&gt;i&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196594"></A>        &lt;li&gt;Determine the need to do compression at this point&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196595"></A>      &lt;/ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196596"></A>  &lt;/dd&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196597"></A>&lt;/dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196598"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196599"></A>&lt;dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196600"></A>  &lt;dt&gt;In the function &lt;code&gt;H5Z_set_parms_nooptype&lt;/code&gt;:</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196601"></A>  &lt;dd&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196602"></A>      &lt;ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196603"></A>        &lt;li&gt;Store the assigned numeric code for the no-op datatype in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196604"></A>          &lt;code&gt;cd_value[i]&lt;/code&gt;; increment &lt;code&gt;i&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196605"></A>        &lt;li&gt;Get the size of the no-op datatype and store in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196606"></A>          &lt;code&gt;cd_value[i]&lt;/code&gt;; increment &lt;code&gt;i&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196607"></A>      &lt;/ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196608"></A>  &lt;/dd&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196609"></A>&lt;/dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196610"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196611"></A>&lt;dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196612"></A>  &lt;dt&gt;In the function &lt;code&gt;H5Z_set_parms_array&lt;/code&gt;:</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196613"></A>  &lt;dd&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196614"></A>      &lt;ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196615"></A>        &lt;li&gt;Store the assigned numeric code for the array datatype in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196616"></A>          &lt;code&gt;cd_value[i]&lt;/code&gt;; increment &lt;code&gt;i&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196617"></A>        &lt;li&gt;Get the size of the array datatype and store in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196618"></A>          &lt;code&gt;cd_value[i]&lt;/code&gt;; increment &lt;code&gt;i&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196619"></A>        &lt;li&gt;Get the class of the array'&amp;rsquo;s base datatype.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196620"></A>          &lt;br&gt;&amp;nbsp;&amp;nbsp;For an integer or floating-point datatype, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196621"></A>            call &lt;code&gt;H5Z_set_parms_atomic&lt;/code&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196622"></A>          &lt;br&gt;&amp;nbsp;&amp;nbsp;For an array datatype, call </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196623"></A>            &lt;code&gt;H5Z_set_parms_array&lt;/code&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196624"></A>          &lt;br&gt;&amp;nbsp;&amp;nbsp;For a compound datatype, call </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196625"></A>            &lt;code&gt;H5Z_set_parms_compound&lt;/code&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196626"></A>          &lt;br&gt;&amp;nbsp;&amp;nbsp;If none of the above, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196627"></A>            call &lt;code&gt;H5Z_set_parms_noopdatatype&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196628"></A>      &lt;/ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196629"></A>  &lt;/dd&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196630"></A>&lt;/dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196631"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196632"></A>&lt;dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196633"></A>  &lt;dt&gt;In the function &lt;code&gt;H5Z_set_parms_compound&lt;/code&gt;:</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196634"></A>  &lt;dd&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196635"></A>      &lt;ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196636"></A>        &lt;li&gt;Store the assigned numeric code for the compound datatype in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196637"></A>          &lt;code&gt;cd_value[i]&lt;/code&gt;; increment &lt;code&gt;i&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196638"></A>        &lt;li&gt;Get the size of the compound datatype and store in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196639"></A>          &lt;code&gt;cd_value[i]&lt;/code&gt;; increment &lt;code&gt;i&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196640"></A>        &lt;li&gt;Get the number of members and store in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196641"></A>          &lt;code&gt;cd_values[i]&lt;/code&gt;; increment &lt;code&gt;i&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196642"></A>        &lt;li&gt;For each member</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196643"></A>          &lt;br&gt;&amp;nbsp;&amp;nbsp;Get the member offset and store in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196644"></A>            &lt;code&gt;cd_values[i]&lt;/code&gt;; increment &lt;code&gt;i&lt;/code&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196645"></A>          &lt;br&gt;&amp;nbsp;&amp;nbsp;Get the class of the member datatype</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196646"></A>          &lt;br&gt;&amp;nbsp;&amp;nbsp;For an integer or floating-point datatype, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196647"></A>            call &lt;code&gt;H5Z_set_parms_atomic&lt;/code&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196648"></A>          &lt;br&gt;&amp;nbsp;&amp;nbsp;For an array datatype, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196649"></A>            call &lt;code&gt;H5Z_set_parms_array&lt;/code&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196650"></A>          &lt;br&gt;&amp;nbsp;&amp;nbsp;For a compound datatype, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196651"></A>            call &lt;code&gt;H5Z_set_parms_compound&lt;/code&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196652"></A>          &lt;br&gt;&amp;nbsp;&amp;nbsp;If none of the above, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196653"></A>            call &lt;code&gt;H5Z_set_parms_noopdatatype&lt;/code&gt;&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196654"></A>      &lt;/ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196655"></A>  &lt;/dd&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196656"></A>&lt;/dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196657"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196658"></A>&lt;/dir&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196659"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196660"></A>&lt;h5&gt;&lt;em&gt;N-bit Compression and Decompression Functions&lt;/em&gt;&lt;/h5&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196661"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196662"></A>&lt;p&gt;The n-bit compression and decompression functions above are called </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196663"></A>  by the private HDF5 function &lt;code&gt;H5Z_filter_nbit&lt;/code&gt;. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196664"></A>  The compress and decompress functions retrieve the n-bit parameters</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196665"></A>  from &lt;code&gt;cd_values[]&lt;/code&gt; as it was passed by</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196666"></A>  &lt;code&gt;H5Z_filter_nbit&lt;/code&gt;. Parameters are retrieved in exactly the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196667"></A>  same order in which they are stored and lower-level compression and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196668"></A>  decompression functions for different datatype classes are called. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196669"></A>&lt;!--</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196670"></A>  These functions are implementated according to the descriptions </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196671"></A>  in sections 2.1 and 2.2.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196672"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196673"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196674"></A>&lt;p&gt;N-bit compression is not implemented in place. Due to the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196675"></A>  difficulty of calculating actual output buffer size after compression, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196676"></A>  the same space as that of the input buffer is allocated for the output </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196677"></A>  buffer as passed to the compression function. However, the size of the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196678"></A>  output buffer passed by reference to the compression function will </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196679"></A>  be changed (smaller) after the compression is complete.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196680"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196681"></A>&lt;a name=&quot;examples&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196682"></A>&lt;h4&gt;&lt;em&gt;Usage Examples&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196683"></A>&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196684"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196685"></A>&lt;p&gt;The following code example illustrates the use of the n-bit filter </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196686"></A>  for writing and reading n-bit integer data.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196687"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196688"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196689"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196690"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196691"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196692"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196693"></A>&lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196694"></A>#include &quot;hdf5.h&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196695"></A>#include &quot;stdlib.h&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196696"></A>#include &quot;math.h&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196697"></A>#define H5FILE_NAME  &quot;nbit_test_int.h5&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196698"></A>#define DATASET_NAME &quot;nbit_int&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196699"></A>#define NX 200</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196700"></A>#define NY 300</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196701"></A>#define CH_NX 10</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196702"></A>#define CH_NY 15</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196703"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196704"></A>int main(void)</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196705"></A>{</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196706"></A>   hid_t   file, dataspace, dataset, datatype, mem_datatype, dset_create_props;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196707"></A>   hsize_t dims[2], chunk_size[2];</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196708"></A>   int     orig_data[NX][NY];</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196709"></A>   int     new_data[NX][NY];</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196710"></A>   int     i, j;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196711"></A>   size_t  precision, offset;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196712"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196713"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196714"></A>   /* Define dataset datatype (integer), and set precision, offset */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196715"></A>   datatype = H5Tcopy(H5T_NATIVE_INT);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196716"></A>   precision = 17; /* precision includes sign bit */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196717"></A>   if(H5Tset_precision(datatype,precision)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196718"></A>      printf(&quot;Error: fail to set precision\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196719"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196720"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196721"></A>   offset = 4;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196722"></A>   if(H5Tset_offset(datatype,offset)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196723"></A>      printf(&quot;Error: fail to set offset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196724"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196725"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196726"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196727"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196728"></A>   /* Copy to memory datatype */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196729"></A>   mem_datatype = H5Tcopy(datatype);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196730"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196731"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196732"></A>   /* Set order of dataset datatype */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196733"></A>   if(H5Tset_order(datatype, H5T_ORDER_BE)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196734"></A>      printf(&quot;Error: fail to set endianness\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196735"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196736"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196737"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196738"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196739"></A>  /* Initiliaze data buffer with random data within correct range</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196740"></A>   * corresponding to the memory datatype's precision and offset.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196741"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196742"></A>   for (i=0; i &amp;lt; NX; i++)</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196743"></A>       for (j=0; j &amp;lt; NY; j++)</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196744"></A>           orig_data[i][j] = rand() % (int)pow(2, precision-1) &amp;lt;&amp;lt;offset;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196745"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196746"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196747"></A>   /* Describe the size of the array. */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196748"></A>   dims[0] = NX;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196749"></A>   dims[1] = NY;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196750"></A>   if((dataspace = H5Screate_simple (2, dims, NULL))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196751"></A>      printf(&quot;Error: fail to create dataspace\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196752"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196753"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196754"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196755"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196756"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196757"></A>   * Create a new file using read/write access, default file</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196758"></A>   * creation properties, and default file access properties.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196759"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196760"></A>   if((file = H5Fcreate (H5FILE_NAME, H5F_ACC_TRUNC,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196761"></A>                         H5P_DEFAULT, H5P_DEFAULT))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196762"></A>      printf(&quot;Error: fail to create file\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196763"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196764"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196765"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196766"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196767"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196768"></A>   * Set the dataset creation property list to specify that</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196769"></A>   * the raw data is to be partitioned into 10 x 15 element</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196770"></A>   * chunks and that each chunk is to be compressed.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196771"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196772"></A>   chunk_size[0] = CH_NX;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196773"></A>   chunk_size[1] = CH_NY;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196774"></A>   if((dset_create_props = H5Pcreate (H5P_DATASET_CREATE))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196775"></A>      printf(&quot;Error: fail to create dataset property\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196776"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196777"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196778"></A>   if(H5Pset_chunk (dset_create_props, 2, chunk_size)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196779"></A>      printf(&quot;Error: fail to set chunk\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196780"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196781"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196782"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196783"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196784"></A>&lt;/pre&gt;&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196785"></A>&lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196786"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196787"></A>   * Set parameters for n-bit compression; check the description of</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196788"></A>   * the H5Pset_nbit function in the HDF5 Reference Manual for more</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196789"></A>   * information.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196790"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196791"></A>   if(H5Pset_nbit (dset_create_props)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196792"></A>      printf(&quot;Error: fail to set nbit filter\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196793"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196794"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196795"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196796"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196797"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196798"></A>   * Create a new dataset within the file.  The datatype</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196799"></A>   * and dataspace describe the data on disk, which may</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196800"></A>   * be different from the format used in the application's</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196801"></A>   * memory.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196802"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196803"></A>   if((dataset = H5Dcreate(file, DATASET_NAME, datatype,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196804"></A>                          dataspace, H5P_DEFAULT, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196805"></A>                          dset_create_props, H5P_DEFAULT))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196806"></A>      printf(&quot;Error: fail to create dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196807"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196808"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196809"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196810"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196811"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196812"></A>   * Write the array to the file. The datatype and dataspace</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196813"></A>   * describe the format of the data in the 'orig_data' buffer.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196814"></A>   * The raw data is translated to the format required on disk,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196815"></A>   * as defined above. We use default raw data transfer properties.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196816"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196817"></A>   if(H5Dwrite (dataset, mem_datatype, H5S_ALL, H5S_ALL,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196818"></A>                H5P_DEFAULT, orig_data)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196819"></A>      printf(&quot;Error: fail to write to dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196820"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196821"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196822"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196823"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196824"></A>   H5Dclose (dataset);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196825"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196826"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196827"></A>   if((dataset = H5Dopen(file, DATASET_NAME, H5P_DEFAULT))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196828"></A>      printf(&quot;Error: fail to open dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196829"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196830"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196831"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196832"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196833"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196834"></A>   * Read the array. This is similar to writing data,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196835"></A>   * except the data flows in the opposite direction.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196836"></A>   * Note: Decompression is automatic.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196837"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196838"></A>   if(H5Dread (dataset, mem_datatype, H5S_ALL, H5S_ALL,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196839"></A>               H5P_DEFAULT, new_data)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196840"></A>      printf(&quot;Error: fail to read from dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196841"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196842"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196843"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196844"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196845"></A>&lt;/pre&gt;&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196846"></A>&lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196847"></A>   H5Tclose (datatype);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196848"></A>   H5Tclose (mem_datatype);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196849"></A>   H5Dclose (dataset);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196850"></A>   H5Sclose (dataspace);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196851"></A>   H5Pclose (dset_create_props);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196852"></A>   H5Fclose (file);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196853"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196854"></A>   return 0;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196855"></A>}&lt;/pre&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196856"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196857"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196858"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196859"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196860"></A>        &lt;b&gt;Example 10. N-bit compression for integer data&lt;/b&gt;&lt;br /&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196861"></A>         Illustrates the use of the n-bit filter for writing and reading </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196862"></A>         n-bit integer data.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196863"></A>         &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196864"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196865"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196866"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196867"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196868"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196869"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196870"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196871"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196872"></A>&lt;p&gt;The following code example illustrates the use of the n-bit filter </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196873"></A>  for writing and reading n-bit floating-point data.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196874"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196875"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196876"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196877"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196878"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196879"></A>&lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196880"></A>#include &quot;hdf5.h&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196881"></A>#define H5FILE_NAME  &quot;nbit_test_float.h5&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196882"></A>#define DATASET_NAME &quot;nbit_float&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196883"></A>#define NX 2</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196884"></A>#define NY 5</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196885"></A>#define CH_NX 2</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196886"></A>#define CH_NY 5</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196887"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196888"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196889"></A>int main(void)</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196890"></A>{</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196891"></A>   hid_t   file, dataspace, dataset, datatype, dset_create_props;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196892"></A>   hsize_t dims[2], chunk_size[2];</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196893"></A>  /* orig_data[] are initialized to be within the range that can be</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196894"></A>   * represented by dataset datatype (no precision loss during</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196895"></A>   * datatype conversion)</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196896"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196897"></A>   float   orig_data[NX][NY] = {{188384.00, 19.103516, -1.0831790e9,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196898"></A>   -84.242188, 5.2045898}, {-49140.000, 2350.2500, -3.2110596e-1,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196899"></A>   6.4998865e-5, -0.0000000}};</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196900"></A>   float   new_data[NX][NY];</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196901"></A>   size_t  precision, offset;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196902"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196903"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196904"></A>  /* Define single-precision floating-point type for dataset</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196905"></A>   *-------------------------------------------------------------------</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196906"></A>   * size=4 byte, precision=20 bits, offset=7 bits,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196907"></A>   * mantissa size=13 bits, mantissa position=7,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196908"></A>   * exponent size=6 bits, exponent position=20,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196909"></A>   * exponent bias=31.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196910"></A>   * It can be illustrated in little-endian order as:</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196911"></A>   * (S - sign bit, E - exponent bit, M - mantissa bit,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196912"></A>   *  ? - padding bit)</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196913"></A>   *</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196914"></A>   *           3        2        1        0</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196915"></A>   *       ?????SEE EEEEMMMM MMMMMMMM M???????</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196916"></A>   *</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196917"></A>   * To create a new floating-point type, the following</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196918"></A>   * properties must be set in the order of</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196919"></A>   *     set fields -&gt; set offset -&gt; set precision -&gt; set size.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196920"></A>   * All these properties must be set before the type can function.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196921"></A>   * Other properties can be set anytime. Derived type size cannot</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196922"></A>   * be expanded bigger than original size but can be decreased.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196923"></A>   * There should be no holes among the significant bits. Exponent</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196924"></A>   * bias usually is set 2^(n-1)-1, where n is the exponent size.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196925"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196926"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196927"></A>*-------------------------------------------------------------------*/</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196928"></A>   datatype = H5Tcopy(H5T_IEEE_F32BE);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196929"></A>   if(H5Tset_fields(datatype, 26, 20, 6, 7, 13)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196930"></A>      printf(&quot;Error: fail to set fields\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196931"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196932"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196933"></A>   offset = 7;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196934"></A>   if(H5Tset_offset(datatype,offset)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196935"></A>      printf(&quot;Error: fail to set offset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196936"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196937"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196938"></A>   precision = 20;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196939"></A>   if(H5Tset_precision(datatype,precision)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196940"></A>      printf(&quot;Error: fail to set precision\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196941"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196942"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196943"></A>   if(H5Tset_size(datatype, 4)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196944"></A>      printf(&quot;Error: fail to set size\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196945"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196946"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196947"></A>   if(H5Tset_ebias(datatype, 31)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196948"></A>      printf(&quot;Error: fail to set exponent bias\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196949"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196950"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196951"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196952"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196953"></A>   /* Describe the size of the array. */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196954"></A>   dims[0] = NX;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196955"></A>   dims[1] = NY;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196956"></A>   if((dataspace = H5Screate_simple (2, dims, NULL))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196957"></A>      printf(&quot;Error: fail to create dataspace\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196958"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196959"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196960"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196961"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196962"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196963"></A>   * Create a new file using read/write access, default file</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196964"></A>   * creation properties, and default file access properties.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196965"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196966"></A>   if((file = H5Fcreate (H5FILE_NAME, H5F_ACC_TRUNC,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196967"></A>                         H5P_DEFAULT, H5P_DEFAULT))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196968"></A>      printf(&quot;Error: fail to create file\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196969"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196970"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196971"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196972"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196973"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196974"></A>   * Set the dataset creation property list to specify that</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196975"></A>   * the raw data is to be partitioned into 2 x 5 element</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196976"></A>   * chunks and that each chunk is to be compressed.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196977"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196978"></A>   chunk_size[0] = CH_NX;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196979"></A>   chunk_size[1] = CH_NY;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196980"></A>   if((dset_create_props = H5Pcreate (H5P_DATASET_CREATE))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196981"></A>      printf(&quot;Error: fail to create dataset property\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196982"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196983"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196984"></A>   if(H5Pset_chunk (dset_create_props, 2, chunk_size)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196985"></A>      printf(&quot;Error: fail to set chunk\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196986"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196987"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196988"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196989"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196990"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196991"></A>   * Set parameters for n-bit compression; check the description</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196992"></A>   * of the H5Pset_nbit function in the HDF5 Reference Manual</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196993"></A>   * for more information.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196994"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196995"></A>   if(H5Pset_nbit (dset_create_props)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196996"></A>      printf(&quot;Error: fail to set nbit filter\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196997"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196998"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1196999"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197000"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197001"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197002"></A>   * Create a new dataset within the file.  The datatype</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197003"></A>   * and dataspace describe the data on disk, which may</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197004"></A>   * be different from the format used in the application's</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197005"></A>   * memory.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197006"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197007"></A>   if((dataset = H5Dcreate(file, DATASET_NAME, datatype,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197008"></A>                          dataspace, H5P_DEFAULT, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197009"></A>                          dset_creat_plists, H5P_DEFAULT))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197010"></A>      printf(&quot;Error: fail to create dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197011"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197012"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197013"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197014"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197015"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197016"></A>   * Write the array to the file. The datatype and dataspace</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197017"></A>   * describe the format of the data in the 'orig_data' buffer.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197018"></A>   * The raw data is translated to the format required on disk,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197019"></A>   * as defined above. We use default raw data transfer properties.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197020"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197021"></A>   if(H5Dwrite (dataset, H5T_NATIVE_FLOAT, H5S_ALL, H5S_ALL,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197022"></A>                H5P_DEFAULT, orig_data)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197023"></A>      printf(&quot;Error: fail to write to dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197024"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197025"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197026"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197027"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197028"></A>   H5Dclose (dataset);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197029"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197030"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197031"></A>   if((dataset = H5Dopen(file, DATASET_NAME, H5P_DEFAULT))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197032"></A>      printf(&quot;Error: fail to open dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197033"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197034"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197035"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197036"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197037"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197038"></A>   * Read the array. This is similar to writing data,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197039"></A>   * except the data flows in the opposite direction.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197040"></A>   * Note: Decompression is automatic.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197041"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197042"></A>   if(H5Dread (dataset, H5T_NATIVE_FLOAT, H5S_ALL, H5S_ALL,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197043"></A>               H5P_DEFAULT, new_data)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197044"></A>      printf(&quot;Error: fail to read from dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197045"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197046"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197047"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197048"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197049"></A>   H5Tclose (datatype);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197050"></A>   H5Dclose (dataset);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197051"></A>   H5Sclose (dataspace);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197052"></A>   H5Pclose (dset_create_props);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197053"></A>   H5Fclose (file);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197054"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197055"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197056"></A>   return 0;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197057"></A>}&lt;/pre&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197058"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197059"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197060"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197061"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197062"></A>        &lt;b&gt;Example 11. N-bit compression for floating-point data&lt;/b&gt;&lt;br /&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197063"></A>        Illustrates the use of the n-bit filter for writing and reading </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197064"></A>        n-bit floating-point data.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197065"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197066"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197067"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197068"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197069"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197070"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197071"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197072"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197073"></A>&lt;a name=&quot;limitations&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197074"></A>&lt;h4&gt;&lt;em&gt;Limitations&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197075"></A>&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197076"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197077"></A>&lt;p&gt;Because the array &lt;code&gt;cd_values[]&lt;/code&gt; has to fit into an object </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197078"></A>  header message of 64K, the n-bit filter has an upper limit on the number </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197079"></A>  of n-bit parameters that can be stored in it. To be conservative, a maximum </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197080"></A>  of 4K is allowed for the number of parameters.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197081"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197082"></A>&lt;p&gt;The n-bit filter currently only compresses n-bit datatypes or fields derived </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197083"></A>  from integer or floating-point datatypes. The n-bit filter assumes padding </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197084"></A>  bits of zero. This may not be true since the HDF5 user can set padding bit </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197085"></A>  to be zero, one, or leave the background alone. However, it is expected </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197086"></A>  the n-bit filter will be modified to adjust to such situations.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197087"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197088"></A>&lt;p&gt;The n-bit filter does not have a way to handle the situation where the  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197089"></A>  fill value of a dataset is defined and the fill value is not of an n-bit </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197090"></A>  datatype although the dataset datatype is.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197091"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197092"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197093"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197094"></A>&lt;a name=&quot;ScaleOffset&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197095"></A>&lt;h3&gt;5.6.2. Using the Scale-offset Filter&lt;/h3&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197096"></A>&lt;/a&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197097"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197098"></A>&lt;p&gt;Generally speaking, scale-offset compression performs a scale and/or </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197099"></A>  offset operation on each data value and truncates the resulting value </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197100"></A>  to a minimum number of bits (minimum-bits) before storing it. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197101"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197102"></A>&lt;p&gt;The current scale-offset filter supports integer and floating-point </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197103"></A>  datatypes only. For the floating-point datatype, float and double are </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197104"></A>  supported, but long double is not supported.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197105"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197106"></A>&lt;p&gt;Integer data compression uses a straight-forward algorithm. Floating-point </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197107"></A>  data compression adopts the GRiB data packing mechanism which offers </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197108"></A>  two alternate methods: a fixed minimum-bits method, and a variable </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197109"></A>  minimum-bits method. Currently, only the variable minimum-bits method </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197110"></A>  is implemented. &lt;!-- 9.3.10, MEE: according to Kent, the fixed minimum-bits </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197111"></A>  method has not yet been implemented, and they do not have any plans to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197112"></A>  implement it. --&gt;&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197113"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197114"></A>  &lt;p&gt;Like other I/O filters supported by the HDF5 Library, applications </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197115"></A>  using the scale-offset filter must store data with chunked storage.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197116"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197117"></A>  &lt;p&gt;&lt;b&gt;&lt;i&gt;Integer type:&lt;/i&gt;&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197118"></A>  The minimum-bits of integer data can be determined by the filter. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197119"></A>  For example, if the maximum value of data to be compressed is 7065 </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197120"></A>  and the minimum value is 2970. Then the &amp;ldquo;span&amp;rdquo; of dataset </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197121"></A>  values is equal to (max-min+1), which is 4676. If no fill value is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197122"></A>  defined for the dataset, the minimum-bits is: </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197123"></A>  &lt;code&gt;ceiling(log2(span)) = 12&lt;/code&gt;. With fill value set, the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197124"></A>  minimum-bits is: &lt;code&gt;ceiling(log2(span+1)) = 13&lt;/code&gt;.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197125"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197126"></A>  &lt;p&gt;HDF5 users can also set the minimum-bits. However, if the user gives </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197127"></A>  a minimum-bits that is less than that calculated by the filter, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197128"></A>  the compression will be lossy.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197129"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197130"></A>  &lt;p&gt;&lt;b&gt;&lt;i&gt;Floating-point type:&lt;/i&gt;&lt;/b&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197131"></A>  The basic idea of the scale-offset filter for the floating-point type is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197132"></A>  to transform the data by some kind of scaling to integer data, and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197133"></A>  then to follow the procedure of the scale-offset filter for the integer </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197134"></A>  type to do the data compression. Due to the data transformation from </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197135"></A>  floating-point to integer, the scale-offset filter is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197136"></A>  lossy in nature. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197137"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197138"></A>  &lt;p&gt;Two methods of scaling the floating-point data are used: the so-called </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197139"></A>  D-scaling and E-scaling. D-scaling is more straightforward and easy to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197140"></A>  understand. For HDF5 1.8 release, only the D-scaling method has been </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197141"></A>  implemented. &lt;!-- 9.3.10, MEE: According to Kent, E-scaling has not yet </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197142"></A>  been implemented, and they have no plans to implement it in the future. --&gt;&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197143"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197144"></A>&lt;h4&gt;&lt;em&gt;Design&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197145"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197146"></A>  &lt;p&gt;Before the filter does any real work, it needs to gather some information </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197147"></A>  from the HDF5 Library through API calls. The parameters the filter needs </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197148"></A>  are: &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197149"></A>  &lt;ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197150"></A>    &lt;li&gt;The minimum-bits of the data value&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197151"></A>    &lt;li&gt;The number of data elements in the chunk&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197152"></A>    &lt;li&gt;The datatype class, size, sign (only for integer type), byte order, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197153"></A>    and fill value </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197154"></A>    if defined&lt;/li&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197155"></A>  &lt;/ul&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197156"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197157"></A>  &lt;p&gt;Size and sign are needed to determine what kind of pointer </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197158"></A>  cast to use when retrieving values from the data buffer.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197159"></A>  &lt;p&gt;The pipeline of the filter can be divided into four parts: </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197160"></A>  (1)pre-compression; (2)compression; (3)decompression; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197161"></A>  (4)post-decompression.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197162"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197163"></A>  &lt;p&gt;Depending on whether a fill value is defined or not, the filter will </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197164"></A>  handle pre-compression and post-decompression differently. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197165"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197166"></A>  &lt;p&gt;The scale-offset filter only needs the memory byte order, size of </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197167"></A>  datatype, and minimum-bits for compression and decompression.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197168"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197169"></A>  &lt;p&gt;Since decompression has no access to the original data, the minimum-bits </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197170"></A>  and the minimum value need to be stored with the compressed data for </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197171"></A>  decompression and post-decompression.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197172"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197173"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197174"></A>&lt;h5&gt;&lt;em&gt;Integer Type&lt;/em&gt;&lt;/h5&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197175"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197176"></A>  &lt;p&gt;&lt;i&gt;Pre-compression: &lt;/i&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197177"></A>  During pre-compression minimum-bits is calculated if it is not </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197178"></A>  set by the user. For more information on how minimum-bits are calculated, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197179"></A>  see section 6.1. &amp;ldquo;The N-bit Filter.&amp;rdquo; &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197180"></A> &nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197181"></A>  &lt;p&gt;If the fill value is defined, finding the maximum and minimum values </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197182"></A>  should ignore the data element whose value is equal to the fill value. &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197183"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197184"></A>  &lt;p&gt;If no fill value is defined, the value of each data element is subtracted </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197185"></A>  by the minimum value during this stage.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197186"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197187"></A>  &lt;p&gt;If the fill value is defined, the fill value is assigned to the maximum </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197188"></A>  value. In this way minimum-bits can represent a data element whose value </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197189"></A>  is equal to the fill value and subtracts the minimum value from a data </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197190"></A>  element whose value is not equal to the fill value.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197191"></A>&lt;!-- 8.19.10, MEE: the paragraph belowis is Frank's revision of my editing --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197192"></A>&lt;!-- 9.3.10, MEE: Kent reviewed the paragraph below and said it was clear. --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197193"></A>  &lt;p&gt;The fill value (if defined), the number of elements in a chunk, the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197194"></A>  class of the datatype, the size of the datatype, the memory order of the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197195"></A>  datatype, and other similar elements will be stored in the HDF5 object </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197196"></A>  header for the post-decompression usage.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197197"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197198"></A>  &lt;p&gt;After pre-compression, all values are non-negative and are within the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197199"></A>  range that can be stored by minimum-bits.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197200"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197201"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197202"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197203"></A>  &lt;p&gt;&lt;i&gt;Compression: &lt;/i&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197204"></A>  All modified data values after pre-compression are packed together </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197205"></A>  into the compressed data buffer. The number of bits for each data value </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197206"></A>  decreases from the number of bits of integer (32 for most platforms) to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197207"></A>  minimum-bits. The value of minimum-bits and the minimum value are added to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197208"></A>  the data buffer and the whole buffer is sent back to the library. In this </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197209"></A>  way, the number of bits for each modified value is no more than </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197210"></A>  the size of minimum-bits.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197211"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197212"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197213"></A>  &lt;p&gt;&lt;i&gt;Decompression: &lt;/i&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197214"></A>  In this stage, the number of bits for each data value is resumed from </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197215"></A>  minimum-bits to the number of bits of integer.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197216"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197217"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197218"></A>  &lt;p&gt;&lt;i&gt;Post-decompression: &lt;/i&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197219"></A>  For the post-decompression stage, the filter does the opposite </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197220"></A>  of what it does during pre-compression except that it does not calculate </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197221"></A>  the minimum-bits or the minimum value. These values were saved during </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197222"></A>  compression and can be retrieved through the resumed data buffer. If </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197223"></A>  no fill value is defined, the filter adds the minimum value back to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197224"></A>  each data element.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197225"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197226"></A>  &lt;p&gt;If the fill value is defined, the filter assigns the fill value to the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197227"></A>  data element whose value is equal to the maximum value that minimum-bits can </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197228"></A>  represent and adds the minimum value back to each data element whose value </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197229"></A>  is not equal to the maximum value that minimum-bits can represent.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197230"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197231"></A>&lt;a name=&quot;SO_FloatingPoint&quot;&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197232"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197233"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197234"></A>&lt;h5&gt;&lt;em&gt;Floating-point Type&lt;/em&gt;&lt;/h5&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197235"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197236"></A>  &lt;p&gt;The filter will do data transformation from floating-point type to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197237"></A>  integer type and then handle the data by using the procedure for handling </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197238"></A>  the integer data inside the filter.  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197239"></A>  Insignificant bits of floating-point data will be cut off </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197240"></A>  during data transformation, so this filter is a lossy compression method.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197241"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197242"></A>  &lt;p&gt;There are two scaling methods: D-scaling and E-scaling. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197243"></A>  The HDF5 1.8 release only supports D-scaling. D-scaling is short for </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197244"></A>  decimal scaling. E-scaling should be similar conceptually. In order </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197245"></A>  to transform data from floating-point to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197246"></A>  integer, a scale factor is introduced. The minimum value will be calculated. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197247"></A>  Each data element value will subtract the minimum value. The modified data </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197248"></A>  will be multiplied by 10 (Decimal) to the power of &lt;code&gt;scale_factor&lt;/code&gt;, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197249"></A>  and only the integer part will be kept and manipulated through the routines </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197250"></A>  for the integer type of the filter during pre-compression and compression. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197251"></A>  Integer data will be divided by 10 to the power of </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197252"></A>  &lt;code&gt;scale_factor&lt;/code&gt; to transform back to floating-point data </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197253"></A>  during decompression and post-decompression.  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197254"></A>  Each data element value will then add the minimum value, and the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197255"></A>  floating-point data are resumed. However, the resumed data will lose some </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197256"></A>  insignificant bits compared with the original value.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197257"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197258"></A>  &lt;p&gt;For example, the following floating-point data are manipulated by the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197259"></A>  filter, and the D-scaling factor is 2.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197260"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197261"></A>  &lt;code&gt;{104.561, 99.459, 100.545, 105.644}&lt;/code&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197262"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197263"></A>  &lt;p&gt;The minimum value is 99.459, each data element subtracts 99.459, the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197264"></A>  modified data is &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197265"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197266"></A>  &lt;code&gt;{5.102, 0, 1.086, 6.185}&lt;/code&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197267"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197268"></A>  &lt;p&gt;Since the D-scaling factor is 2, all floating-point data will be </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197269"></A>  multiplied by 10^2 with this result: &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197270"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197271"></A>  &lt;code&gt;{510.2, 0, 108.6, 618.5}&lt;/code&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197272"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197273"></A>  &lt;p&gt;The digit after decimal point will be rounded off, and then the set looks </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197274"></A>  like: &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197275"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197276"></A>  &lt;code&gt;{510 , 0, 109, 619}&lt;/code&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197277"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197278"></A>  &lt;p&gt;After decompression, each value will be divided by 10^2 and will be added </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197279"></A>  to the offset 99.459.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197280"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197281"></A>&lt;p&gt;The floating-point data becomes &lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197282"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197283"></A>  &lt;code&gt;{104.559, 99.459, 100.549, 105.649}&lt;/code&gt;.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197284"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197285"></A>&lt;p&gt;The relative error for each value should be no more than </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197286"></A>  5* (10^(D-scaling factor +1)). D-scaling sometimes is also referred </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197287"></A>  as a variable minimum-bits method since for different datasets the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197288"></A>  minimum-bits to represent the same decimal precision will vary. The </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197289"></A>  data value is modified to 2 to power of &lt;code&gt;scale_factor&lt;/code&gt; for </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197290"></A>  E-scaling. E-scaling is also called fixed-bits method since for different </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197291"></A>  datasets the minimum-bits will always be fixed to the scale factor of </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197292"></A>  E-scaling. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197293"></A>  Currently HDF5 ONLY supports D-scaling (variable minimum-bits) method.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197294"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197295"></A>&lt;h4&gt;&lt;em&gt;Implementation&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197296"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197297"></A>&lt;p&gt;The scale-offset filter implementation was written and included in the file </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197298"></A>  &lt;code&gt;H5Zscaleoffset.c&lt;/code&gt;. Function &lt;code&gt;H5Pset_scaleoffset&lt;/code&gt; was </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197299"></A>  written and included in the file &amp;ldquo;&lt;code&gt;H5Pdcpl.c&lt;/code&gt;&amp;rdquo;. The </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197300"></A>  HDF5 user can supply minimum-bits by calling function </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197301"></A>  &lt;code&gt;H5Pset_scaleoffset&lt;/code&gt;.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197302"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197303"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197304"></A>&lt;p&gt;The scale-offset filter was implemented based on the design outlined in </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197305"></A>  this section. However, the following factors need to be considered:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197306"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197307"></A>&lt;dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197308"></A>  &lt;dd&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197309"></A>    &lt;ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197310"></A>      &lt;li&gt;The filter needs the appropriate cast pointer whenever it needs </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197311"></A>        to retrieve data values.&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197312"></A>      &lt;li&gt;The HDF5 Library passes to the filter the to-be-compressed data </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197313"></A>        in the format of the dataset datatype, and the filter passes back the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197314"></A>        decompressed data in the same format. If a fill value is defined, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197315"></A>        it is also in dataset datatype format. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197316"></A>        For example, if the byte order of the dataset datatype is different </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197317"></A>        from that of the memory datatype of the platform, compression or </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197318"></A>        decompression performs an endianness conversion of data buffer. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197319"></A>        Moreover, it should be aware that memory byte order can be different </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197320"></A>        during compression and decompression.&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197321"></A>      &lt;li&gt;The difference of endianness and datatype between file and memory </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197322"></A>        should be considered when saving and retrieval of minimum-bits, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197323"></A>        minimum value, and fill value.&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197324"></A>      &lt;li&gt;If the user sets the minimum-bits to full precision of the datatype, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197325"></A>        no operation is needed at the filter side. If the full precision is </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197326"></A>        a result of calculation by the filter, then the minimum-bits needs </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197327"></A>        to be saved for decompression but no compression or decompression </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197328"></A>        is needed (only a copy of the input buffer is needed).&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197329"></A>      &lt;li&gt;If by calculation of the filter, the minimum-bits is equal to zero, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197330"></A>        special handling is needed. Since it means all values are the same, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197331"></A>        no compression or decompression is needed. But the minimum-bits </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197332"></A>        and minimum value still need to be saved during compression.&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197333"></A>      &lt;li&gt;For floating-point data, the minimum value of the dataset should </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197334"></A>        be calculated at first. Each data element value will then subtract </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197335"></A>        the minimum value to obtain the &amp;ldquo;offset&amp;rdquo; data. </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197336"></A>        The offset data will then follow the steps outlined above in the</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197337"></A>        discussion of &lt;a href=&quot;#SO_FloatingPoint&quot;&gt;floating-point types&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197338"></A>        to do data transformation to integer and rounding.&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197339"></A>    &lt;/ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197340"></A>  &lt;/dd&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197341"></A>&lt;/dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197342"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197343"></A>&lt;h4&gt;&lt;em&gt;Usage Examples&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197344"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197345"></A>&lt;p&gt;The following code example illustrates the use of the scale-offset filter </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197346"></A>  for writing and reading integer data.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197347"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197348"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197349"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197350"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197351"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197352"></A>&lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197353"></A>#include &quot;hdf5.h&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197354"></A>#include &quot;stdlib.h&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197355"></A>#define H5FILE_NAME  &quot;scaleoffset_test_int.h5&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197356"></A>#define DATASET_NAME &quot;scaleoffset_int&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197357"></A>#define NX 200</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197358"></A>#define NY 300</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197359"></A>#define CH_NX 10</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197360"></A>#define CH_NY 15</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197361"></A>&lt;/pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197362"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197363"></A>&lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197364"></A>int main(void)</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197365"></A>{</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197366"></A>   hid_t   file, dataspace, dataset, datatype, dset_create_props;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197367"></A>   hsize_t dims[2], chunk_size[2];</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197368"></A>   int     orig_data[NX][NY];</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197369"></A>   int     new_data[NX][NY];   </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197370"></A>   int     i, j, fill_val;   </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197371"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197372"></A>   /* Define dataset datatype */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197373"></A>   datatype = H5Tcopy(H5T_NATIVE_INT);   </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197374"></A>   </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197375"></A>   /* Initiliaze data buffer */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197376"></A>   for (i=0; i &amp;lt; NX; i++) </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197377"></A>       for (j=0; j &amp;lt; NY; j++)</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197378"></A>           orig_data[i][j] = rand() % 10000;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197379"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197380"></A>   /* Describe the size of the array. */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197381"></A>   dims[0] = NX;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197382"></A>   dims[1] = NY;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197383"></A>   if((dataspace = H5Screate_simple (2, dims, NULL))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197384"></A>      printf(&quot;Error: fail to create dataspace\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197385"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197386"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197387"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197388"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197389"></A>   * Create a new file using read/write access, default file</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197390"></A>   * creation properties, and default file access properties.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197391"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197392"></A>   if((file = H5Fcreate (H5FILE_NAME, H5F_ACC_TRUNC, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197393"></A>                         H5P_DEFAULT, H5P_DEFAULT))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197394"></A>      printf(&quot;Error: fail to create file\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197395"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197396"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197397"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197398"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197399"></A>   * Set the dataset creation property list to specify that</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197400"></A>   * the raw data is to be partitioned into 10 x 15 element</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197401"></A>   * chunks and that each chunk is to be compressed.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197402"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197403"></A>   chunk_size[0] = CH_NX;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197404"></A>   chunk_size[1] = CH_NY;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197405"></A>   if((dset_create_props = H5Pcreate (H5P_DATASET_CREATE))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197406"></A>      printf(&quot;Error: fail to create dataset property\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197407"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197408"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197409"></A>   if(H5Pset_chunk (dset_create_props, 2, chunk_size)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197410"></A>      printf(&quot;Error: fail to set chunk\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197411"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197412"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197413"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197414"></A>   /* Set the fill value of dataset */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197415"></A>   fill_val = 10000;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197416"></A>   if (H5Pset_fill_value(dset_create_props, H5T_NATIVE_INT, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197417"></A>       &amp;amp;fill_val)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197418"></A>      printf(&quot;Error: can not set fill value for dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197419"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197420"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197421"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197422"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197423"></A>   * Set parameters for scale-offset compression. Check the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197424"></A>   * description of the H5Pset_scaleoffset function in the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197425"></A>   * HDF5 Reference Manual for more information [3].</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197426"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197427"></A>   if(H5Pset_scaleoffset (dset_create_props, H5Z_SO_INT, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197428"></A>                          H5Z_SO_INT_MINIMUMBITS_DEFAULT)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197429"></A>      printf(&quot;Error: fail to set scaleoffset filter\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197430"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197431"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197432"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197433"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197434"></A>   * Create a new dataset within the file. The datatype</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197435"></A>   * and dataspace describe the data on disk, which may</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197436"></A>   * or may not be different from the format used in the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197437"></A>   * application's memory.  The link creation and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197438"></A>   * dataset access property list parameters are passed </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197439"></A>   * with default values.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197440"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197441"></A>   if((dataset = H5Dcreate (file, DATASET_NAME, datatype,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197442"></A>                           dataspace, H5P_DEFAULT,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197443"></A>                           dset_create_props, H5P_DEFAULT))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197444"></A>      printf(&quot;Error: fail to create dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197445"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197446"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197447"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197448"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197449"></A>   * Write the array to the file. The datatype and dataspace</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197450"></A>   * describe the format of the data in the 'orig_data' buffer.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197451"></A>   * We use default raw data transfer properties.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197452"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197453"></A>   if(H5Dwrite (dataset, H5T_NATIVE_INT, H5S_ALL, H5S_ALL,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197454"></A>                H5P_DEFAULT, orig_data)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197455"></A>      printf(&quot;Error: fail to write to dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197456"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197457"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197458"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197459"></A>   H5Dclose (dataset);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197460"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197461"></A>   if((dataset = H5Dopen(file, DATASET_NAME, H5P_DEFAULT))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197462"></A>      printf(&quot;Error: fail to open dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197463"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197464"></A>   }   </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197465"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197466"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197467"></A>   * Read the array. This is similar to writing data,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197468"></A>   * except the data flows in the opposite direction.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197469"></A>   * Note: Decompression is automatic.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197470"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197471"></A>   if(H5Dread (dataset, H5T_NATIVE_INT, H5S_ALL, H5S_ALL,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197472"></A>               H5P_DEFAULT, new_data)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197473"></A>      printf(&quot;Error: fail to read from dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197474"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197475"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197476"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197477"></A>   H5Tclose (datatype);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197478"></A>   H5Dclose (dataset);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197479"></A>   H5Sclose (dataspace);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197480"></A>   H5Pclose (dset_create_props);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197481"></A>   H5Fclose (file);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197482"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197483"></A>   return 0;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197484"></A>}&lt;/pre&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197485"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197486"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197487"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197488"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197489"></A>        &lt;b&gt;Example 12. Scale-offset compression integer data&lt;/b&gt;&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197490"></A>        Illustrates the use of the scale-offset filter for writing </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197491"></A>        and reading integer data.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197492"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197493"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197494"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197495"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197496"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197497"></A>&lt;!-- NEW PAGE --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197498"></A>&lt;p&gt;The following code example illustrates the use of the scale-offset filter </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197499"></A>  (set for variable minimum-bits method) for writing and reading </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197500"></A>  floating-point data.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197501"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197502"></A>&lt;table width=&quot;600&quot; cellspacing=&quot;0&quot; align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197503"></A>    &lt;tr valign=&quot;top&quot;&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197504"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197505"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197506"></A>&lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197507"></A>#include &quot;hdf5.h&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197508"></A>#include &quot;stdlib.h&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197509"></A>#define H5FILE_NAME  &quot;scaleoffset_test_float_Dscale.h5&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197510"></A>#define DATASET_NAME &quot;scaleoffset_float_Dscale&quot;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197511"></A>#define NX 200</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197512"></A>#define NY 300</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197513"></A>#define CH_NX 10</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197514"></A>#define CH_NY 15</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197515"></A>&lt;/pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197516"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197517"></A>&lt;pre&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197518"></A>int main(void)</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197519"></A>{</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197520"></A>   hid_t   file, dataspace, dataset, datatype, dset_create_props;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197521"></A>   hsize_t dims[2], chunk_size[2];</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197522"></A>   float   orig_data[NX][NY];</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197523"></A>   float   new_data[NX][NY];</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197524"></A>   float   fill_val;   </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197525"></A>   int     i, j;   </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197526"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197527"></A>   /* Define dataset datatype */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197528"></A>   datatype = H5Tcopy(H5T_NATIVE_FLOAT);   </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197529"></A>   </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197530"></A>   /* Initiliaze data buffer */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197531"></A>   for (i=0; i &amp;lt; NX; i++) </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197532"></A>       for (j=0; j &amp;lt; NY; j++)</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197533"></A>           orig_data[i][j] = (rand() % 10000) / 1000.0;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197534"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197535"></A>   /* Describe the size of the array. */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197536"></A>   dims[0] = NX;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197537"></A>   dims[1] = NY;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197538"></A>   if((dataspace = H5Screate_simple (2, dims, NULL))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197539"></A>      printf(&quot;Error: fail to create dataspace\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197540"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197541"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197542"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197543"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197544"></A>   * Create a new file using read/write access, default file</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197545"></A>   * creation properties, and default file access properties.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197546"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197547"></A>   if((file = H5Fcreate (H5FILE_NAME, H5F_ACC_TRUNC, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197548"></A>                         H5P_DEFAULT, H5P_DEFAULT))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197549"></A>      printf(&quot;Error: fail to create file\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197550"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197551"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197552"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197553"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197554"></A>   * Set the dataset creation property list to specify that</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197555"></A>   * the raw data is to be partitioned into 10 x 15 element</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197556"></A>   * chunks and that each chunk is to be compressed.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197557"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197558"></A>   chunk_size[0] = CH_NX;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197559"></A>   chunk_size[1] = CH_NY;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197560"></A>   if((dset_create_props = H5Pcreate (H5P_DATASET_CREATE))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197561"></A>      printf(&quot;Error: fail to create dataset property\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197562"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197563"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197564"></A>   if(H5Pset_chunk (dset_create_props, 2, chunk_size)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197565"></A>      printf(&quot;Error: fail to set chunk\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197566"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197567"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197568"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197569"></A>   /* Set the fill value of dataset */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197570"></A>   fill_val = 10000.0;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197571"></A>   if (H5Pset_fill_value(dset_create_props, H5T_NATIVE_FLOAT, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197572"></A>       &amp;amp;fill_val)&lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197573"></A>      printf(&quot;Error: can not set fill value for dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197574"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197575"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197576"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197577"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197578"></A>   * Set parameters for scale-offset compression; use variable</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197579"></A>   * minimum-bits method, set decimal scale factor to 3. Check the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197580"></A>   * description of the H5Pset_scaleoffset function in the HDF5 </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197581"></A>   * Reference Manual for more information [3].</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197582"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197583"></A>   if(H5Pset_scaleoffset (dset_create_props, H5Z_SO_FLOAT_DSCALE, 3)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197584"></A>      printf(&quot;Error: fail to set scaleoffset filter\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197585"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197586"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197587"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197588"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197589"></A>   * Create a new dataset within the file. The datatype</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197590"></A>   * and dataspace describe the data on disk, which may</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197591"></A>   * or may not be different from the format used in the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197592"></A>   * application's memory.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197593"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197594"></A>   if((dataset = H5Dcreate (file, DATASET_NAME, datatype,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197595"></A>                            dataspace, H5P_DEFAULT, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197596"></A>                            dset_create_props, H5P_DEFAULT))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197597"></A>      printf(&quot;Error: fail to create dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197598"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197599"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197600"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197601"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197602"></A>   * Write the array to the file. The datatype and dataspace</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197603"></A>   * describe the format of the data in the 'orig_data' buffer.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197604"></A>   * We use default raw data transfer properties.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197605"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197606"></A>   if(H5Dwrite (dataset, H5T_NATIVE_FLOAT, H5S_ALL, H5S_ALL,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197607"></A>                H5P_DEFAULT, orig_data)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197608"></A>      printf(&quot;Error: fail to write to dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197609"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197610"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197611"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197612"></A>   H5Dclose (dataset);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197613"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197614"></A>   if((dataset = H5Dopen(file, DATASET_NAME, H5P_DEFAULT))&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197615"></A>      printf(&quot;Error: fail to open dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197616"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197617"></A>   }   </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197618"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197619"></A>  /*</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197620"></A>   * Read the array. This is similar to writing data,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197621"></A>   * except the data flows in the opposite direction.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197622"></A>   * Note: Decompression is automatic.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197623"></A>   */</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197624"></A>   if(H5Dread (dataset, H5T_NATIVE_FLOAT, H5S_ALL, H5S_ALL,</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197625"></A>               H5P_DEFAULT, new_data)&amp;lt;0) {</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197626"></A>      printf(&quot;Error: fail to read from dataset\n&quot;);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197627"></A>      return -1;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197628"></A>   }</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197629"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197630"></A>   H5Tclose (datatype);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197631"></A>   H5Dclose (dataset);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197632"></A>   H5Sclose (dataspace);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197633"></A>   H5Pclose (dset_create_props);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197634"></A>   H5Fclose (file);</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197635"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197636"></A>   return 0;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197637"></A>}&lt;/pre&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197638"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197639"></A>    &lt;tr&gt;&lt;td&gt;&lt;hr color=&quot;green&quot; size=&quot;1&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197640"></A>    &lt;tr valign=&quot;top&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197641"></A>        &lt;td align=&quot;left&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197642"></A>        &lt;b&gt;Example 13. Scale-offset compression floating-point data&lt;/b&gt;&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197643"></A>        Illustrates the use of the scale-offset filter for writing </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197644"></A>        and reading floating-point data.</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197645"></A>        &lt;hr color=&quot;green&quot; size=&quot;3&quot;/&gt;&lt;/td&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197646"></A>        &lt;/tr&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197647"></A>&lt;/table&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197648"></A>&lt;br /&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197649"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197650"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197651"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197652"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197653"></A>&lt;h4&gt;&lt;em&gt;Limitations&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197654"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197655"></A>  &lt;p&gt;For floating-point data handling, there are some algorithmic </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197656"></A>  limitations to the GRiB data packing mechanism:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197657"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197658"></A>&lt;dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197659"></A>  &lt;dd&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197660"></A>    &lt;ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197661"></A>      &lt;li&gt;Both the E-scaling and D-scaling methods are lossy compression&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197662"></A>      &lt;li&gt;For the D-scaling method, since data values have been rounded to </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197663"></A>        integer values (positive) before truncating to the minimum-bits, </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197664"></A>        their range is limited by the maximum value that can be represented </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197665"></A>        by the corresponding unsigned integer type (the same size as that of </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197666"></A>        the floating-point type)&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197667"></A>    &lt;/ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197668"></A>  &lt;/dd&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197669"></A>&lt;/dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197670"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197671"></A>&lt;h4&gt;&lt;em&gt;Suggestions&lt;/em&gt;&lt;/h4&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197672"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197673"></A>&lt;p&gt;The following are some suggestions for using the filter for </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197674"></A>floating-point data:&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197675"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197676"></A>&lt;dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197677"></A>  &lt;dd&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197678"></A>    &lt;ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197679"></A>      &lt;li&gt;It is better to convert the units of data so that the units are </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197680"></A>        within certain common range (for example, 1200m to 1.2km)&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197681"></A>      &lt;li&gt;If data values to be compressed are very near to zero, it </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197682"></A>        is strongly recommended that the user sets the fill value away </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197683"></A>        from zero (for example, a large positive number); if the user </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197684"></A>        does </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197685"></A>        nothing, the HDF5 Library will set the fill value to zero, and </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197686"></A>        this may cause undesirable compression results&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197687"></A>      &lt;li&gt;Users are not encouraged to use a very large decimal scale </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197688"></A>        factor (e.g. 100) for the D-scaling method; this can cause the </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197689"></A>        filter not to ignore the fill value when finding maximum and minimum </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197690"></A>        values, and they will get a much larger minimum-bits (poor </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197691"></A>        compression)&lt;/li&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197692"></A>    &lt;/ol&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197693"></A>  &lt;/dd&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197694"></A>&lt;/dl&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197695"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197696"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197697"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197698"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197699"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197700"></A>&lt;a name=&quot;Szip&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197701"></A>&lt;h3&gt;5.6.3. Using the Szip Filter&lt;/h3&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197702"></A>&lt;/a&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197703"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197704"></A>  &lt;p&gt;See The HDF Group website for </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197705"></A>  &lt;a href=&quot;http://www.hdfgroup.org/doc_resource/SZIP/&quot; target=&quot;Ext1&quot;&gt;further </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197706"></A>  information&lt;/a&gt; regarding the Szip filter.&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197707"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197708"></A>&lt;p&gt;&amp;nbsp;&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197709"></A>&lt;p&gt;&amp;nbsp;&lt;/p&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197710"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197711"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197712"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197713"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197714"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197715"></A>&lt;!-- HEADER RIGHT &quot; &quot; --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197716"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197717"></A>&lt;/body&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197718"></A>&lt;/html&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197719"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1197720"></A>  </P>
<P CLASS="FM-Body">
<A NAME="50475017_pgfId-1181485"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192636"></A>&lt;!doctype HTML public &quot;-//W3C//DTD HTML 4.0 Frameset//EN&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192637"></A>&lt;html&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192638"></A>&lt;head&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192639"></A>&lt;title&gt;Chapter 6: HDF5 Datatypes&lt;/title&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192640"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192641"></A>&lt;!--(Meta)==========================================================--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192642"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192643"></A>&lt;!--(Links)=========================================================--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192644"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192645"></A>&lt;!--( Begin styles definition )=====================================--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192646"></A>&lt;link href=&quot;ed_styles/NewUGelect.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192647"></A>&lt;!--( End styles definition )=======================================--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192648"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192649"></A>&lt;/head&gt; </P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192650"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192651"></A>&lt;body&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192652"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192653"></A>&lt;!-- #BeginLibraryItem &quot;/ed_libs/Copyright.lbi&quot; --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192654"></A>&lt;!--</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192655"></A>  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192656"></A>  * Copyright by The HDF Group.                                               *</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192657"></A>  * Copyright by the Board of Trustees of the University of Illinois.         *</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192658"></A>  * All rights reserved.                                                      *</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192659"></A>  *                                                                           *</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192660"></A>  * This file is part of HDF5.  The full HDF5 copyright notice, including     *</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192661"></A>  * terms governing use, modification, and redistribution, is contained in    *</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192662"></A>  * the files COPYING and Copyright.html.  COPYING can be found at the root   *</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192663"></A>  * of the source code distribution tree; Copyright.html can be found at the  *</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192664"></A>  * root level of an installed copy of the electronic HDF5 document set and   *</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192665"></A>  * is linked from the top-level documents page.  It can also be found at     *</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192666"></A>  * http://www.hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have      *</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192667"></A>  * access to either file, you may request a copy from help@hdfgroup.org.     *</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192668"></A>  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192669"></A> --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192670"></A>&lt;!-- #EndLibraryItem --&gt;&lt;!-- HEADER LEFT &quot;HDF5 User's Guide&quot; --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192671"></A>&lt;!-- HEADER RIGHT &quot;HDF5 Datatypes&quot; --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192672"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192673"></A>&lt;!--( TOC )=========================================================--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192674"></A>&lt;!--&lt;SCRIPT language=&quot;JavaScript&quot;&gt;--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192675"></A>&lt;!--</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192676"></A>document.writeln ('\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192677"></A>&lt;table x-use-null-cells\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192678"></A>                align=right\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192679"></A>		width=&quot;240&quot;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192680"></A>		cellspacing=&quot;0&quot;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192681"></A>		class=&quot;tocTable&quot;&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192682"></A>  &lt;tr valign=&quot;top&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192683"></A>    &lt;td class=&quot;tocTableHeaderCell&quot; colspan=&quot;2&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192684"></A>        &lt;span class=&quot;TableHead&quot;&gt;Chapter Contents&lt;/span&gt;&lt;/td&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192685"></A>  &lt;/tr&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192686"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192687"></A>&lt;!-- Table Version 3 --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192688"></A>&lt;!--</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192689"></A>\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192690"></A>  &lt;tr valign=&quot;top&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192691"></A>    &lt;td class=&quot;tocTableContentCell2&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192692"></A>      &lt;a href=&quot;#Intro&quot;&gt;1.&lt;/a&gt;&lt;/td&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192693"></A>    &lt;td class=&quot;tocTableContentCell3&quot;&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192694"></A>	  &lt;a href=&quot;#Intro&quot;&gt;Introduction&lt;/a&gt;&lt;/td&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192695"></A>  &lt;/tr&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192696"></A>  &lt;tr valign=&quot;top&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192697"></A>    &lt;td class=&quot;tocTableContentCell2&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192698"></A>      &lt;a href=&quot;#DtypesUsed&quot;&gt;2.&lt;/a&gt;&lt;/td&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192699"></A>    &lt;td class=&quot;tocTableContentCell3&quot;&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192700"></A>	  &lt;a href=&quot;#DtypesUsed&quot;&gt;How Datatypes Are Used&lt;/a&gt;&lt;/td&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192701"></A>  &lt;/tr&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192702"></A>  &lt;tr valign=&quot;top&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192703"></A>    &lt;td class=&quot;tocTableContentCell2&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192704"></A>      &lt;a href=&quot;#FileFunctSums&quot;&gt;3.&lt;/a&gt;&lt;/td&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192705"></A>    &lt;td class=&quot;tocTableContentCell3&quot;&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192706"></A>	  &lt;a href=&quot;#FileFunctSums&quot;&gt;Datatype (H5T) Function Summaries&lt;/a&gt;&lt;/td&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192707"></A>  &lt;/tr&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192708"></A>  &lt;tr valign=&quot;top&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192709"></A>    &lt;td class=&quot;tocTableContentCell2&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192710"></A>      &lt;a href=&quot;#Pmodel&quot;&gt;4.&lt;/a&gt;&lt;/td&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192711"></A>    &lt;td class=&quot;tocTableContentCell3&quot;&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192712"></A>	  &lt;a href=&quot;#Pmodel&quot;&gt;The Programming Model&lt;/a&gt;&lt;/td&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192713"></A>  &lt;/tr&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192714"></A>  &lt;tr valign=&quot;top&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192715"></A>    &lt;td class=&quot;tocTableContentCell2&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192716"></A>      &lt;a href=&quot;#NonNumDtypes&quot;&gt;5.&lt;/a&gt;&lt;/td&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192717"></A>    &lt;td class=&quot;tocTableContentCell3&quot;&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192718"></A>	  &lt;a href=&quot;#NonNumDtypes&quot;&gt;Other Non-numeric Datatypes&lt;/a&gt;&lt;/td&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192719"></A>  &lt;/tr&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192720"></A>  &lt;tr valign=&quot;top&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192721"></A>    &lt;td class=&quot;tocTableContentCell2&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192722"></A>      &lt;a href=&quot;#Fvalues&quot;&gt;6.&lt;/a&gt;&lt;/td&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192723"></A>    &lt;td class=&quot;tocTableContentCell3&quot;&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192724"></A>	  &lt;a href=&quot;#Fvalues&quot;&gt;Fill Values&lt;/a&gt;&lt;/td&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192725"></A>  &lt;/tr&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192726"></A>  &lt;tr valign=&quot;top&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192727"></A>    &lt;td class=&quot;tocTableContentCell2&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192728"></A>      &lt;a href=&quot;#CCDtypes&quot;&gt;7.&lt;/a&gt;&lt;/td&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192729"></A>    &lt;td class=&quot;tocTableContentCell3&quot;&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192730"></A>	  &lt;a href=&quot;#CCDtypes&quot;&gt;Complex Combinations of Datatypes&lt;/a&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192731"></A>	  &lt;/td&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192732"></A>  &lt;/tr&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192733"></A>  &lt;tr valign=&quot;top&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192734"></A>    &lt;td class=&quot;tocTableContentCell2&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192735"></A>      &lt;a href=&quot;#LCDtypeObj&quot;&gt;8.&lt;/a&gt;&lt;/td&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192736"></A>    &lt;td class=&quot;tocTableContentCell3&quot;&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192737"></A>	  &lt;a href=&quot;#LCDtypeObj&quot;&gt;Life Cycle of the Datatype Object&lt;/a&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192738"></A>	  &lt;/td&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192739"></A>  &lt;/tr&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192740"></A>\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192741"></A>  &lt;tr valign=&quot;top&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192742"></A>    &lt;td class=&quot;tocTableContentCell&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192743"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192744"></A>&lt;!-- editingComment -- &quot;tocTableContentCell&quot; and &quot;tocTableContentCell4&quot; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192745"></A>\--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192746"></A>&lt;!-- are the table-closing cell class.\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192747"></A>    &lt;td class=&quot;tocTableContentCell2&quot;&gt; \</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192748"></A>\--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192749"></A>&lt;!--</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192750"></A>      &lt;a href=&quot;#Dtransfer&quot;&gt;9.&lt;/a&gt;&lt;/td&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192751"></A>    &lt;td class=&quot;tocTableContentCell4&quot;&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192752"></A>	  &lt;a href=&quot;#Dtransfer&quot;&gt;Data Transfer: Datatype Conversion and Selection&lt;/a&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192753"></A>  &lt;/td&gt;&lt;/tr&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192754"></A>&lt;/table&gt;\</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192755"></A>')</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192756"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192757"></A>&lt;!-- &lt;/SCRIPT&gt; --&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192758"></A>&lt;!--(End TOC)=======================================================--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192759"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192760"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192761"></A>  &lt;span class=&quot;editingComment&quot;&gt;[ [ [</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192762"></A>  ] ] ]&lt;/span&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192763"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192764"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192765"></A>&lt;!-- editingComment</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192766"></A>--&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192767"></A>&nbsp;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192768"></A>&lt;div align=&quot;center&quot;&gt;</P>
<P CLASS="FM-Body">
<A NAME="50475016_pgfId-1192769"></A>&lt;a name=&quot;top&quot;&gt;</P>
<p><a href="HDF5_Users_Guide.htm">Main Page</a> | <a href="HDF5_Users_Guide-5.htm">Previous Page</a> | <a href="HDF5_Users_Guide-7.htm">Next Page</a></p></BODY>
</HTML>
