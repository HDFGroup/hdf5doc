
<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://www.hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have      *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->



<!--__ ***********************************************************  -->
<!--__ Do not alter the next line; it is used by the PDF generator. -->
<!--__ ***********************************************************  -->
<!-- NEW PAGE -->


<!--__ *** HEADER RIGHT ******************************************  -->
<!-- HEADER RIGHT "H5allocate_memroy" -->

<hr />
<dl>

<dt><div align="right"><font color="999999" size="-1"><i>
    Last modified: 1 May 2015
    </i></font></div></dt>
    <br />

<dt><strong>Name:</strong> <a name="Library-AllocateMemory">H5allocate_memory</a></dt><br />
<dt><strong>Signature:</strong>
    <dd><code><em>void *</em> H5allocate_memory(
        <em>size_t</em> size,
        <em>hbool_t</em> clear
        )</code>
    </dd></dt>
    <br />

<dt><strong>Purpose:</strong>
    <dd>Allocates memory that will later be freed internally 
        by the HDF5 Library.
    </dd></dt>
    <br />

<dt><strong>Description:</strong>
    <dd><code>H5allocate_memory</code> allocates a memory buffer of
        <code>size</code> bytes that will later be freed internally 
        by the HDF5 Library.

        <p />
        The boolean <code>clear</code> parameter specifies whether 
        the buffer should be initialized.
        If <code>clear</code> is <code>TRUE</code>,
        all bits in the buffer are to be set to <code>0</code> (zero);
        if <code>clear</code> is <code>FALSE</code>,
        the buffer will not be initialized.

        <p />
        This function is intended to have the semantics of 
        <code>malloc()</code> and <code>calloc()</code>.
        However, unlike <code>malloc()</code> and <code>calloc()</code>
        which allow for a &ldquo;special&rdquo; pointer to be returned 
        instead of <code>NULL</code>, this function always returns 
        <code>NULL</code> on failure or when <code>size</code> 
        is set to <code>0</code> (zero).

        <p />
        <i>
        At this time, the only intended use for this function is to 
        allocate memory that will be returned to the library 
        as a data buffer from a third-party filter.
        </i>
    </dd></dt>
    <br />

<dt><strong>Notes:</strong>
    <dd>To avoid heap corruption, allocated memory should be freed 
        using the same library that initially allocated it.  
        In most cases, the HDF5 API uses resources that are 
        allocated and freed either entirely by the user or 
        entirely by the library, so this is not a problem.  
        In rare cases, however, HDF5 API calls will free memory that 
        the user allocated.  
        This function allows the user to safely allocate this memory.

        <p />
        It is particularly important to use this function to allocate memory 
        in Microsoft Windows envrionments.  In Windows, 
        the C standard library is implemented in dynamic link libraries (DLLs) 
        known as the C run-time (CRT).  Each version of Visual Studio comes 
        with multiple versions of the CRT DLLs (debug, release, et cetera) 
        and allocating and freeing memory across DLL boundaries can cause 
        resource leaks and subtle bugs due to heap corruption.

        <p />
        Even when using this function, it is best where possible to ensure 
        that all components of a C application are built with the 
        same version of Visual Studio and configuration (Debug or Release), 
        and thus linked against the same CRT.

        <p />
        Use this function only to allocate memory inside third-party 
        HDF5 filters.  It will generally not be safe to use this function 
        to allocate memory for any other purpose.
    </dd></dt>
    <br />
    
<dt><strong>Parameters:</strong>
    <dd><table width="100%">
        <tr>
            <td valign="top"><code><em>size_t</em> 
                size</code></td>
            <td width="5%"><code>&nbsp;</code></td>
            <td valign="top">IN: Specifies the size in bytes of the buffer 
                to be allocated.</td>
        </tr><tr>
            <td valign="top"><code><em>hbool_t</em>&nbsp;clear</code></td>
            <td><code>&nbsp;</code></td>
            <td valign="top">IN: Specifies whether the new buffer 
                is to be initialized to <code>0</code> (zero).</td>
        </tr>
    </table></dd>
    </dt>
    <br />
    
<dt><strong>Returns:</strong>
    <dd>On success, returns pointer to newly allocated buffer or
        returns <code>NULL</code> if <code>size</code> is <code>0</code>
        (zero).
        <br />
        Returns <code>NULL</code> on failure.</dd>
    </dt>
    <br />

<dt><strong>Fortran Interface:</strong></dt>
    <dd>None</dd>
    </dt>
    <br />

<dt><strong>See Also:</strong></dt>
    <table width="100%" border="0">
    <tr><td width="50%"align="left" valign="top">
        <ul>
<!--
          <li><a href="#Library-AllocateMemory">H5allocate_memory</a></li>
-->
          <li><a href="#Library-FreeMemory">H5free_memory</a></li>
          <li><a href="#Library-ResizeMemory">H5resize_memory</a></li>
        </ul>
    </td></tr>
    </table>
    <br />

<dt><strong>History:</strong></dt>
    <dd>
    <table width="90%">
    <tr>
        <td valign="top" align="left" width="10%">
        <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
        <td valign="top" align="left">
        <strong>Change</strong></td>
    </tr><tr>
        <td valign="top">1.8.15</td>
        <td valign="top">
        C function introduced with this release.</td>
    </tr>
    </table>
    </dd>

</dl>
<br />
<br />
<br />



