

<!--
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * Copyright by The HDF Group.                                               *
  * Copyright by the Board of Trustees of the University of Illinois.         *
  * All rights reserved.                                                      *
  *                                                                           *
  * This file is part of HDF5.  The full HDF5 copyright notice, including     *
  * terms governing use, modification, and redistribution, is contained in    *
  * the files COPYING and Copyright.html.  COPYING can be found at the root   *
  * of the source code distribution tree; Copyright.html can be found at the  *
  * root level of an installed copy of the electronic HDF5 document set and   *
  * is linked from the top-level documents page.  It can also be found at     *
  * http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have          *
  * access to either file, you may request a copy from help@hdfgroup.org.     *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 -->


<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Lunpack_elink_val" -->
<hr>
<dl>

  <dt><div align=right><font color=999999 size=-1><i>
      Last modified: 11 January 2010
      </i></font></div>

  <dt><strong>Name:</strong> <a name="Link-UnpackELinkVal">H5Lunpack_elink_val</a>
  <dt><strong>Signature:</strong>
    <dd><em>herr_t </em><code>H5Lunpack_elink_val</code>(
            <em>char *</em><code>ext_linkval</code>,
            <em>size_t</em> <code>link_size</code>,
            <em>unsigned</em> *<code>flags</code>,
            <em>const char **</em><code>filename</code>,
            <em>const char **</em><code>obj_path</code>
        )
      <p></p>
  <dt><strong>Purpose:</strong>
    <dd>Decodes external link information.
      <p></p>
  <dt><strong>Description:</strong>
    <dd><code>H5Lunpack_elink_val</code> decodes the external link 
      information returned by <code>H5Lget_val</code> in 
      the <code>ext_linkval</code> buffer.
      <p>
      <code>ext_linkval</code> should be the buffer set by
      <a href="#Link-GetVal"><code>H5Lget_val</code></a>
      and will consist of two <small>NULL</small>-terminated strings, 
      the filename and object path, one after the other.
      <p>
      Given this buffer, <code>H5Lunpack_elink_val</code> creates
      pointers to the filename and object path within the buffer 
      and returns them in <code>filename</code> and <code>obj_path</code>,
      unless they are passed in as <small>NULL</small>.
      <p>
      <code>H5Lunpack_elink_val</code> requires that <code>ext_linkval</code> 
      contain a concatenated pair of null-terminated strings, so use of 
      this function on a string that is not an external link 
      <code>udata</code> buffer may result in a segmentation fault. 
      This failure can be avoided by adhering to the following procedure:
      <ol>
          <li>Call <code>H5Lget_info</code> to get the link type 
              and the size of the link value.
          <li>Verify that the link is an external link, i.e., that its
              link type is <code>H5L_TYPE_EXTERNAL</code>.
          <li>Call <code>H5Lget_val</code> to get the link value.
          <li>Call <code>H5Lunpack_elink_val</code> to unpack that value.
      </ol>
      <p>
  <dt><strong>Parameters:</strong>
    <dd><table>
      <tr>
      <tr>
        <td valign="top"><em>const&nbsp;char&nbsp;*</em><code>ext_linkval&nbsp;&nbsp;&nbsp;&nbsp;</code>
        </td>
        <td valign="top">IN: Buffer containing external link information
        </td></tr>
        </td></tr>
      <tr>
        <td valign="top"><em>size_t</em> <code>link_size</code>
        </td>
        <td valign="top">IN: Size, in bytes, of the <code>ext_linkval</code>
            buffer
        </td></tr>
      <tr>
        <td valign="top"><em>unsigned *</em><code>flags</code>
        </td>
        <td valign="top">OUT: External link flags, packed as a bitmap
	    <br>
	    <i>(Reserved as a bitmap for flags; 
	    no flags are currently defined, so the only valid value is 0.)</i>
        </td></tr>
      <tr>
        <td valign="top"><em>const char **</em><code>filename</code>
        </td>
        <td valign="top">OUT: Returned filename 
        </td></tr>
      <tr>
        <td valign="top"><em>const char **</em><code>obj_path</code>
        </td>
        <td valign="top">OUT: Returned object path, relative to 
            <code>filename</code>
        </td></tr>
    </table>
      <p></p>
  <dt><strong>Returns:</strong>
    <dd>Returns a non-negative value if successful;
        otherwise returns a negative value.
      <p></p>
  <dt><strong>Fortran90 Interface:</strong> <!--h5l***_f-->
    <dd>
      None.
<!--
    <pre>

    </pre>
-->

    <p></p>
<dt><strong>History:</strong>
    <dd><table width="90%">
        <tr>
          <td valign="top" align="left" width="10%">
            <strong>Release</strong>&nbsp;&nbsp;&nbsp;&nbsp;</td>
          <td valign="top" align="left">
            <strong>C</strong></td></tr>
        <tr>
          <td valign="top">1.8.0</td>
          <td valign="top">
            Function introduced in this release.</td></tr>
    </table>
</dl>


