The URL to the FAQ page where forward and backward compatibility 
have been discussed is here: 
http://www.hdfgroup.org/HDF5/faq/bkfwd-compat.html. 

Barbara also found information about the library version here: 
http://www.hdfgroup.org/HDF5/doc/TechNotes/Version.html. She thinks
some of the information is out of date.


Here is the HTML source for the bkfwd-compat.html page:

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<!-- If no var is set for $page_title on the top of each page than default title will be HDF Group -->

<title>
Backward/Forward Compatibility Issues with HDF5</title>
	<meta name="keywords" content="hdf, hdfeos, hdf5, hdf4, hdf tools, hdf libraries, hdf viewer, hdf format, hdf file, hdf java, nafxcw.lib, phdf5, open source, hierarchical data format, ncsa, database, python hdf, mike folk, hdfview, hdf5 parallel" />
	<meta name="description" content="The HDF Group is a not-for-profit corporation with the mission of sustaining the HDF technologies and supporting HDF user communities worldwide with production-quality software and services." />
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="expires" CONTENT="Wed, 26 Feb 2010 08:21:57 GMT">

	<meta name="verify-v1" content="/m03HNmaDgGAcDe0PFtEVnXGtCkoeOocjr/Jwey2gdI=" />
	<link href="/css/layout.css" rel="stylesheet" type="text/css" media="screen, projection" />
	<link href="/css/print.css" rel="stylesheet" type="text/css" media="print" />
	<link rel="stylesheet" type="text/css" href="/css/js_style.css" />
	<link rel="shortcut icon" href="/images/favicon.ico" type="image/x-icon" />
	
	<script src="/scriptaculous/lib/prototype.js" type="text/javascript"></script>
	<script src="/scriptaculous/src/effects.js" type="text/javascript"></script>
	<script type="text/javascript" src="/scriptaculous/validation.js"></script>

	<script type="text/javascript" src="/scriptaculous/animatedcollapse.js"></script>
	<script type="text/javascript" src="/scriptaculous/rollover.js"></script>	
	<script type="text/javascript" src="/scriptaculous/functions.js"></script>
	<script type="text/javascript" src="/scriptaculous/sorttable.js"></script>
	<script type="text/javascript" src="/jquery-1.2.2.pack.js"></script>
 	   <link rel="stylesheet" type="text/css" href="/featuredcontentglider.css" />
    <script type="text/javascript" src="/featuredcontentglider.js"></script>


</head>

	<body>
				<div id="mast_head">
					<a href="/"><img src="/images/hdf_logo.jpg" height="70" style="display:block; padding-left:10px;" align="left" alt="hdf images"></a>
					<img src="/images/logo_5.jpg" height="70" style="display:block;" align="right" alt="hdf images">
				</div> 
				
				<div id="nav_wrapper">
					<div>

					<span id="section-">
						<ul id="nav">
							   <li id="t-index"><a href="/">Home</a> </li>
							   <li id="t-why_hdf"><a href="/why_hdf/">Why HDF?</a></li> 
							   <li id="t-products"><a href="/products/">Products</a></li>
							   <li id="t-services"><a href="/services/">Services</a></li>
							   <li  id="t-about"><a href="/about/">About Us</a></li>

   							   <li id="t-news"><a href="/news/">News</a> </li>
							   <li  id="t-contact"><a href="/about/contact.html">Contact Us</a></li> 

                                  <form action="http://www.hdfgroup.org/search/"  name="form2" method="get">
                                  <div>
    	                                
    					 			<input type="hidden" name="cx" value="014058654162327528908:owuvr2kjxza" />
                                    <input type="hidden" name="cof" value="FORID:11" />
					  				<input type="hidden" name="ie" value="UTF-8" />
                                    <li style="padding-left:30px; margin-top:10.5px;"> 
                                        <input type="text" name="q" id="q" style="border:1px solid gray; padding:2px 0px; padding-left:5px; color:#004466;" type="text" onFocus="doClear(this);" value=" - - Search HDF - -">

                                    </li>
                                    <li>  
                                        <input type="image" src="/images/icon_search.png" name="sa" style="padding:0; padding-top:1px; margin:0; border:0; position:absolute; padding-left:5px;">
                                    </li>
                                  </div>
                                </form>
							<script type="text/javascript" src="http://www.google.com/coop/cse/brand?form=cse-search-box&lang=en"></script>

                                
						 </ul>

					</span>
					</div>
				</div>
				
				  <!--START: MAIN -->
				  <div id="wrapper"> 
					
					  <!--START: SIDE_BAR -->
					  <div id="side_bar">
					
						<form method="" action="" class="form" >
							<select onchange="window.open(this.options[this.selectedIndex].value,'_top')" name="" style="border:2px solid #c1c1c1;">

								<option value="" class="ql1">- - Quick Links - - 
								<option value="/HDF5/" class="ql">HDF5 
								<option value="/products/hdf4/" class="ql">HDF4
								<option value="/tools/" class="ql">Tools
								<option value="/projects/" class="ql">Projects
								<option value="/downloads/" class="ql">Downloads
								<option value="/documentation/" class="ql">Documentation
                                <option value="/pubs/" class="ql">Publications
           						<option value="/about/" class="ql">Contact Us

							</select>
						</form>
			
						<ul style=" border:1px solid #c1c1c1; margin-top:25px;"> 
                        
							<li style="background:url(/images/menubg.png); padding:0px; padding-left:7px; color:#27343C; font-weight:500; text-align:left;">
							LINKS</li><li><a  href="../../../../HDF5/whatishdf5.html">What is HDF5?</a></li><li><a  href="../../../../downloads/index.html">Downloads</a></li><li><a  href="/HDF5/doc/doc-info.html">Documentation</a></li><li><a  href="../../../products/hdf5_tools/">Software using HDF5</a></li><li><a  href="../../../../HDF5/users5.html">HDF5 Users</a></li><li><a  href="../../../../HDF5/hdf5-files.html">Sample HDF5 Files</a></li><li><a  href="../../../../HDF5/acknowledge5.html">Acknowledgments</a></li><li><a  href="/products/licenses.html">Licenses</a></li>						</ul> 

											  </div>

					   <!--END: SIDE_BAR -->
				
				  
					   <!--START: CONTENT -->
					   <div id="content">
                       
                       
                       
                       
					   <div class=bc><p style="color:orange; ";><a href="/" title="HOME">HOME</a> &gt; <a href="/HDF5/" title="HDF5">HDF5</a> &gt; <a href="/HDF5/faq/" title="FAQ">FAQ</a></p></div>

<p>
<p><b>This document</b> discusses backward and forward compatibility issues 
across releases of the HDF5 Library and versions of the HDF5 file format.
      <i>Backward compatibility</i> refers to one of the following
        questions:
                Can a newer (later) library read a file and/or objects within 
a file that were created or written by an older (earlier) library?
<p> Will an application written to work with a newer (later) 
          version of the HDF5 Library compile, link, and run as would be 
  expected with an older (earlier) version of the library?
<p>  <i>Forward compatibility</i> refers to one of the following
          questions:
                  Can an older (earlier) library read a file and/or objects within
          a file that were created or written by a newer (later) library?
          Will an application written to work with an older (earlier) 
          version of the HDF5 Library compile, link, and run as would be 
          expected with a newer (later) version of the library?
             
<p>The questions regarding whether a file or object is readable with 
various versions of HDF5 are discussed in 
&ldquo;<a href="#Format">File Format Changes</a>,&rdquo;

immediately below.
The questions regarding whether an application written to work with 
one version of HDF5 will work with another are discussed in 
&ldquo;<a href="#Interface">Interface Changes</a>.&rdquo;


<p>
This document does not cover new functionality; clearly the use of a
new feature will render an application incompatible with any version
of the HDF5 Library older than the release in which that feature was 
introduced.  Similarly, an older library is likely to be unable to read
objects created or written with the newer feature.  See the document 
&ldquo;<A HREF="/HDF5/doc/ADGuide/Changes.html">HDF5 
Software Changes from Release to Release</A>&rdquo 
(/HDF5/doc/ADGuide/Changes.html")
for a complete listing of new APIs and API changes since HDF5 Release 1.2.2.

<p><b><a name="LibraryVersions">Library version numbers</a></b> are used 
throughout this document, so a bit of explanation is in order.
The HDF5 release number is a set of three integer values and is usually
presented in one of the following formats: 
<br>HDF5-<i>x.y.z</i>, or simply 5-<i>x.y.z</i>

<br>HDF5 Version <i>x.y</i> Release <i>z</i>
<br>HDF5 Release <i>x.y.z</i>

<p>The 5 is part of the library name and will only
change if the entire file format and library are redesigned
similar in scope to the changes between HDF4 and HDF5.

<p>The <i>x</i> is the <em>major version number</em> and
changes when there is an extensive change to the file format or
library API.  Such a change will likely require files to be
translated and applications to be modified.  This number is not
expected to change frequently.


<p>The <i>y</i> is the <em>minor version number</em> and is
incremented by each public release that presents new features.
Even numbers are reserved for stable public versions of the
library while odd numbers are reserved for development
versions.  

<p>The <i>z</i> is the <em>release number</em>.  For public
versions of the library, the release number is incremented each
time a new set of bug fixes and/or performance enhnacements 
is made available to the public.

<p>Consider this example:
<br>
    HDF5 Release 1.2.3

<br>This would be release 3 of version 1.2 (major version 1, minor version 2) 
of the product HDF5.

<p>It is often convenient to drop the release number when referring
to a version of the library, such as saying HDF5 Version 1.2.
The release number can be any value in this case.

<p>
The above material regarding HDF5 version and release numbers is 
adapted from &ldquo;<a href="../doc/TechNotes/Version.html">HDF5 
Release Version Numbers</a>.&rdquo;


<p><b><a name="FormatVersions">File format version numbers</a></b> 
are not used to identify or describe the format of an entire HDF5 file.
Rather, objects and structures within an HDF5 file are individually versioned, 
as described in the <a href="../doc/H5.format.html"><cite>HDF5 File Format 
Specification</cite></a>.
The version of an HDF5 file, as a unit, is described by the release number
of the HDF5 Library that wrote the file and the copy of the 
<cite>HDF5 File Format Specification</cite> distributed with that release.


<p>An HDF5 Library of any given release is designed to read all existing 
HDF5 files from that or any prior release.  Although major versions sometimes
contain features that require additions and/or changes to the HDF5 file format,
the library will by default write out files that conform to a 
<i>maximum compatibility</i> principle.  That is, files are written with 
the earliest version of the file format that describes the information, 
rather than always using the latest version possible.  
This provides the best forward compatibility by allowing the maximum number 
of older versions of the library to read new files.

<p>If library features are used that require new file format features, 
or if the application requests that the library write out only the 
latest version of the file format, the files produced with a newer version 
of the HDF5 Library may not be readable by older versions of the HDF5 Library.


</p>



<a name="Format">
</a>

<br>


<H2>File Format Changes<br>

    Or: When might one HDF5 release be unable to read data created, 
    written or changed by another HDF5 release?</H2>

<p>
<a href="#180unable">HDF5 1.8 cannot read my old files but HDF5 1.6 can.</a>
</p>

<p>
<a href="#163unable">IDL 7.0 and other HDF5 1.6.3 applications cannot
read my files created with HDF5 1.8</a>
</p>

<p>
<a href="#UnknownHeader">I cannot open some objects in some files 
    created or changed with an HDF5 Library from Release 1.6.0 or later.</a> 

</p>
<p>
<a href="#BTree">I cannot open some files created or changed 
    with an HDF5 Library from Release 1.6.0 or later.</a> 
</p>
<p>
<a href="#GroupRevision">New group structure options were introduced 
    at Release 1.8.0.</a> 
</p>

<p>The first class of compatibility issues consists of situations where
an HDF5 Library from one release cannot read files or datasets created 
by an HDF5 Library of a different release.  
Such a condition can arise when the HDF5 file format has changed,
which usually occurs for one of the following reasons:
<p>
      To allow for recording a new class of data or metadata. The B-tree parameter issue at HDF5-1.6.0-post* is an example of such a change.
        To allow for a new sort of file structure. The group revision at Release 1.8.0 is an example of such a structural change.
 
<p>
<b><a name="180unable">HDF5 1.8 cannot read</a> my old HDF5 files but HDF5 1.6 can.

</b>
</p>

<p>
There was an issue that occurred with HDF5 files that were created
with older versions of HDF5 (prior to HDF5 1.6.5).  HDF5 1.8 could not 
read those files, although versions of HDF5 1.6 were able to read the files.
</p>
<p>
The problem was that the symbol table message in the object header
of the old files was zeroed out, while the cached symbol table information in the 
group entry (in the parent symbol table) was correct.  HDF5 1.6 looks at the cached 
entry first, while HDF5 1.8 ignores the cached entry (except for the root group). This 
is why HDF5 1.8 failed in this case.  Whatever bug caused this problem appears to
have been fixed.
</p>

<p>
<b>Work-around:</b>
Download a recent version of h5repack for HDF5 1.6 (for example, h5repack 
built for HDF5 1.6.10) and re-write the affected file to a new file, using 
h5repack.  If you compare the old and new files with h5diff, the files will 
be the same, although they may have different sizes.  However, HDF5 1.8
WILL be able to read the new file.
</p>
<p>

<p>
<strong><a name="163unable">IDL 7.0 and other HDF5 1.6.3 applications cannot
read my files created with HDF5 1.8</a></strong>

<p>This issue was due to HDF5 1.6.3 and earlier releases requiring certain
data to 
be cached, which was no longer being done in HDF5 1.8. The resolution in
HDF5 1.8 was to cache the data.  There were two problems that contributed to
this issue: one was fixed in HDF5 1.8.3 (bug 1423) and the other was fixed in
HDF5 1.8.6 (bug 1864).  All files created with HDF5 1.8.6 (and above) should
be readable by HDF5 1.6.3 (and earlier).  
</p>
<p>HDF5 1.8 files that were created prior to HDF5 1.8.6 can be made readable by
HDF5 1.6.3 by repacking the file with the h5repack tool that comes with HDF5
1.8.6 (or later) or HDF5 1.6.10.
</p>


</ 
<p><B><a name="UnknownHeader">Opening Objects</a> with Unknown Header Messages
    with a Pre-1.6.0 Library
    <br>Affected feature: Forward compatibility</B>

<p>An HDF5 Library Release 1.4.5 or earlier cannot read files created 
with release 1.6.0 or later.
This problem was fixed in a version posted as 1.4.5-post2.
Prior to that fix, HDF5 issued an error and failed to open objects
with unknown header messages (for example, metadata about an object added
in a later version of the library). The fix allows the library to ignore 
an unknown message and proceeded to open the object.


<P>
<B>Work-around:</B> 
   A version 1.4.5-post2 library or later will recognize that it cannot 
   read such header messages and will proceed to open the object.
   If a user or application is unable to switch to the newer libary, 
   there is no known work-around.


<p><B><a name="BTree">Change</a> in B-tree Control Parameter 
    (Release 1.6.0post*)
    <br>Affected feature: Chunked datasets</B>

<p>With HDF5-1.6.0-post*, the ability to set and query 
the size of a parameter used to control B-trees for indexing chunked datasets 
was added to the HDF5 Library.  Recording this parameter information required 
a change in the HDF5 file format. 
<P>
If you have never used and never will use this property, 
then versions of the HDF5 Library prior to release 1.6.0 can read files 
created with new versions of the 
library<sup><a href="#Footnote1">1</a></sup> 
and vice-versa.  Once this feature is invoked, however, 
versions of the library prior to HDF5-1.6.0-post* will not be able to 
read HDF5 files created with this property.
<P>

The affected functions are 
H5Pset_istore_k, which sets the size of the parameter, and 
H5Pget_istore_k, which queries that value.
<P>
<B>Work-around</B>:  
   Once this property is used, a file will be accessible only via the 
   new library.  Otherwise, there is no known work-around.
<p>
<a name=Footnote1>

1.</a> This statement assumes that said file, created with a new version 
of the library, does not include any other features that are not available
in the older library.



<p><B><a name="GroupRevision">Group Revisions</a> in Release 1.8.0
    <br>Affected feature: Group properties, such as compact groups, 
    creation ordering, andUNICODE encoding</B>
<p>The default behavior of the HDF5 Library in Release 1.8 is to 
create files with 
forward-compatible<sup><a href="#Footnote2">2</a></sup> 

group structures.  If you do not specify any group revision properties when 
creating files in 1.8, then Release 1.6.x and earlier libraries 
will be able to read the group structures.  
<P>
If the new group revision properties are used, the library will
create files employing a new group structure that will not be
readable by pre-1.8 libraries.
<P>
<B>Work-around</B> once this feature has been invoked: 
   No known work-around.
<p>
<a name=Footnote2>

2.</a> As you will recall from the overview, one of the issues of 
forward compatibility is &ldquo;Can an earlier library read a file 
and/or objects within a file that were created or written by a later 
library?&rdquo;




<a name="Interface">
</a>

<br>

<H2>Interface Changes<br>
    Or: When might an application written for one release of HDF5 fail to 
    link or work as expected with a different HDF5 release?</H2>




<p><a href="#CompatFlags">How can I build an new HDF5 Library so that
my old application will work without updating it?</a></p>
<p>
    <a href="#Checksum">Since Release 1.6.3, I have been unable to read files 
        that were created with the checksum filter and 
      written with an HDF5 Library from Release 1.6.2 or earlier.</a> 
</p>
<p><a href="#MiscountMsg">When I attempt to open certain data objects 
          in an older HDF5 file (from Release 1.6.4 or earlier) 
          with an HDF5 Library of Release 1.6.5 or later, 
the open fails with a 'corrupt object header' message.</a></p>
<p> 
    <a href="#180Deltas">What APIs and public data structures might have
            to be changed in my HDF5 application to port it from Version 1.6 
      to Release 1.8.0?</a>
        

        

</p>
<p>
<p>The second class of compatibility issues consists of situations where
an application written to work with one version of the HDF5 Library 
fails to compile, link, or behave as would be expected with a different 
version of the library.
Such conditions can arise in either of the following ways:

<ol>
    An HDF5 application written to work with an older version of the 
      HDF5 Library may call HDF5 functions that have been deprecated and 
      removed in more recent releases.
    An HDF5 application written to work with a newer version of the 
      HDF5 Library may call HDF5 functions that did not appear in an 
      earlier release.
    An HDF5 application written to work with one version of the 
      HDF5 Library may call HDF5 functions whose parameters or return 
      value differ in a different release of the library.
    An HDF5 application relies on HDF5 functionality whose behavior 
      has changed without a visible change in the API.  
      <i>(Every effort is made to keep this the rarest of cases; 
      it should happen only when the original behavior was in error.)</i>
    An HDF5 application may use public HDF5 data structures that 
      have changed.
</ol>
<p>


<p><b><a name="CompatFlags">Backward Compatibility</a> Compiler Flags</b>
<p>In many cases, issues 2 and 3  above can be addressed by 
compiling the newer library with a backward compatibility flag.
For example, the Release 1.6.x series includes the configure flag 
--enable -hdf5v1_4 for users who need to build 
those releases to be compatible with applications written for the 
Release 1.4.x series.
To discover the configure flags that are available for a release, 
execute the command
<br>

./configure --help
<br>
in the top-level directory (hdf5/) of the source code tree
for the newer of the two HDF5 Library versions in question.
Note that compatibility flags are maintained only for the releases
associated with the immediately following minor version number
(see <a href="#LibraryVersions">library version numbers</a> above).
For example, the --enable -hdf5v1_4 flag was available
only during the Release 1.6.x cycle; it will not be available in the
Release 1.8.x cycle.

<p>Note, however, that it is usually desirable to update applications
so that they work with the newest HDF5 release.
This backward-compatibility flag is provided primarily for situations
where such updates cannot happen immediately or 
where the user does not have access to the application source code 
and cannot control the timing of such an update.
<p>


<p><b>General Notes Regarding New Features and Capabilities</b>
<p>When new features or capabilities are added to HDF5, every
attempt is made to ensure that new versions of the HDF5
library continue to create files that prior versions of the
library will be able to read.  In many cases, older versions
will be able to read everything <i>except</i> data or metadata 
generated by the new feature.
<P>

If you will be using different versions of HDF5, be aware of
the new features and changes in each release.  For easy reference,
the RELEASE.txt files that come with each release can be viewed from the 
following location:
<PRE>
    <A HREF="http://www.hdfgroup.org/ftp/HDF5/prev-releases/ReleaseFiles/">http://www.hdfgroup.org/ftp/HDF5/prev-releases/ReleaseFiles/</A>
</PRE>
<p>
See the document &ldquo;HDF5 Software Changes from Release to Release&rdquo
for a complete listing of API changes since HDF5 Release 1.2.2:
<PRE>
    <A HREF="/HDF5/doc/ADGuide/Changes.html">/HDF5/doc/ADGuide/Changes.html</A>
</PRE>
<p>Notes regarding specific changes follow.

<p>
<p><b>Changes in the behavior of existing functionality</b>


<p>
<p><b><a name="Checksum">Change</a> in recorded checksum value on 
    little-endian systems at Release 1.6.3</b>
<p>
In the transition from the Release 1.6.2 to Release 1.6.3,
a correction was made in the calculation of checksum values 
on little-endian systems.
<p>
The Fletcher32 EDC checksum filter was added in 1.6.0.  
In the original implementation, there was a bug in the filter such that 
the checksum value was calculated incorrectly on little-endian systems.
The error was fixed in HDF5 Release 1.6.3.
As a result of this fix, an HDF5 Library of Release 1.6.2 or earlier
cannot read a dataset created or written with Release 1.6.3 or later 
<i>if the dataset was created with the checksum filter <b>and</b> 

the filter is enabled in the reading library.</i>  
<!--
Note that an HDF5 Library of Release 1.6.3 or later <i>can</i> read
a dataset created or written with Release 1.6.2 or earlier.
-->
<p>
<B>Work-around:</B> 
An HDF5 Library of Release 1.6.2 or earlier
will be able to read a dataset created or written with the checksum filter
by an HDF5 Library of Release 1.6.3 or later if the checksum filter is 
disabled for the read operation.
This can be accomplished via a call to H5Pset_edc_check
with the value H5Z_DISABLE_EDC in the second parameter.
This has the obvious drawback that the application will then be unable 
to verify the checksum, but the data does remain accessible.

<p><b><a name="MiscountMsg">Miscounted messages</a> in object headers 
    Release 1.6.5 and earlier</b>
<p>
This is a file corruption issue, but it is thought to be extremely rare.
<p>
There was a bug in Release 1.6.5 and earlier releases that, in specific 
situations, recorded an incorrect count of the number of messages 
in an object header.  This bug was discovered when strict checking of the 
header message count was added after Release 1.6.5.

<p>
Generally, the bug is triggered by the following the sequence of actions:

<ol>
    Create an object.
    Close the file.
    Re-open the file.
    Add 2 (or more) attributes to the object.
    Close the file.
    Re-open the file.
    Delete one of the attributes on the object.
    Add a smaller attribute to the object.
    Delete the smaller atttribute on the object.
    Add a larger attribute on the object.
</ol>
<p>
After this sequence, the number of header messages stored for the object
will be off by one; if the sequence is executed repeatedly, the number
may be off by more than one.
Other sequences that modify attributes on an object might also trigger 
this bug, though none are currently known. 

<p>
<B>Discovering whether your files are affected:</B> 
If you are opening an object and the bottom few messages of the 
HDF5 error stack resemble the following, the object has been affected 
by this bug:

<pre>    #007: ../../hdf5_v1.6/src/H5C.c line 3887 in H5C_load_entry(): unable to load entry
      major(08): Meta data cache layer
      minor(40): Unable to load metadata into cache
    #008: ../../hdf5_v1.6/src/H5Ocache.c line 332 in H5O_load(): corrupt object header - too few messages
      major(12): Object header layer
      minor(40): Unable to load metadata into cache
</pre>
The best string to search for in the HDF5 error stack output is
'corrupt object header' (without the quotes).

<P>
<B>Work-around:</B> 

If your files have been affected by this bug, or you are concerned that 
your files might have been, please contact the HDF Helpdesk at 
help [@] hdfgroup.org</a>.
A tool that detects the error in affected files and repairs the files,
h5fix_obj_nmsgs, is available at the following location:
<a href="http://www.hdfgroup.org/ftp/HDF5/special_tools/h5fix_obj_nmsgs/">http://www.hdfgroup.org/ftp/HDF5/special_tools/h5fix_obj_nmsgs/</a>



<p>
<p><b><a name="180Deltas">Interface Changes</a> in the Release 1.8.x Series</b>


<p>Many HDF5 APIs and public data structures changed with HDF5 1.8.</p>

<p>
See the &ldquo;<a href="/HDF5/doc/ADGuide/Changes.html">HDF5 
Software Changes from Release to Release</a>&rdquo; document
for a complete listing of the new functions and tools.
</p>

<!--


<p>
<p><b>New Features and Interface Changes in the Release 1.6.x Series</b>

<p>
<p><b>The following APIs changed</b> in this series:<br>

<p>
<p><b>The following APIs were deprecated or removed</b> in this series:
<br>
<u>Removed</u>

<br>function1
<br>function1
<br>function1

<br>
<u>Deprecated</u>

<br>(none)

<p>
<p>
Applications that use a removed function will have to be modified to work 
with this release series. 
If an application uses a deprecated function, it may still work if the
library is compiled with the H5_WANT_H5_V1_4_COMPAT 
compatibility flag; otherwise, the application must be modified.<br>

<p>
<p><b>The following features were introduced</b> in this series:<br>
<p>
See the
&ldquo;<a href="/HDF5/doc/ADGuide/Changes.html#160">Release 1.6.0 
versus Release 1.4.5 / New Functions and Tools</a>&rdquo subsection of 
&ldquo;<a href="/HDF5/doc/ADGuide/Changes.html">HDF5 
Software Changes from Release to Release</a>&rdquo;
for a complete listing of the new functions and tools.

<p>
Applications employing any of this new functionality will not link 
with any HDF5 Library prior to Release 1.6.0.


-->



<!--

<p>
<p><b>New Features and Interface Changes in the Release 1.4.x Series</b>

<p>
<p><b>The following APIs changed</b> in this series:<br>

<p>
<p><b>The following APIs were deprecated or removed</b> in this series:
<br>
<u>Removed</u>

<br>function1
<br>function1
<br>function1

<br>
<u>Deprecated</u>

<br>(none)

<p>
<p>
Applications that use a removed function will have to be modified to work 
with this release series. 
If an application uses a deprecated function, it may still work if the
library is compiled with the H5_WANT_H5_V1_2_COMPAT 
compatibility flag; otherwise, the application must be modified.<br>
  
<p>
<p><b>The following features were introduced</b> in this series:<br>
<p>
See the
&ldquo;<a href="/HDF5/doc/ADGuide/Changes.html#140">Release 1.4.0 
versus Release 1.2.2 / New Functions and Tools</a>&rdquo subsection of 
&ldquo;<a href="/HDF5/doc/ADGuide/Changes.html">HDF5 
Software Changes from Release to Release</a>&rdquo;
for a complete listing of the new functions and tools.

<p>
Applications employing any of this new functionality will not link 
with any HDF5 Library prior to Release 1.4.0.



<p>


-->





<p style="padding-top:20px; color:green; padding-right:20px;">
<i>
- - Last modified:January 13th 2011</i>
</p>
	   </div>
	   <!--END: CONTENT -->
</div>
<!--END: WRAPPER -->
<script src="/scriptaculous/gatag.js" type="text/javascript"></script>

<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>

<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-3782034-1");
pageTracker._trackPageview();
} catch(err) {}</script>

</body>
</html>


