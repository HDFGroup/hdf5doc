H5L RM changes

Most of these functions used to be in the H5G API.  My guess is that most of
this will be copy-and-paste and very straightforward changes.  Let me know
if there's anything that's not simple.
The H5G functions are still supported but deprecated.
The main addition is the link creation/access property lists.

H5Llink - new.  Similar to H5Lcreate_hard, but takes an existing ID and
          links it into the file.  This should be used to link new objects into
          the file when they are created with H5*create_expand.  See the
          RM/UG additions for more on this.
H5Lmove - same as H5Gmove
H5Lcopy - new function. Does the same as H5Lmove, except that it doesn't
          delete the original
H5Lcreate_hard -
H5Lcreate_soft - formerly the halves of H5Glink2.  Separation should be fairly
          straightforward.
H5Lunlink - same as H5Gunlink
H5Lget_linkval - same as H5Gget_linkval
H5Lget_linkinfo - formerly half of H5Gget_objinfo.  Gets information about
          a link using the H5L_linkinfo_t struct.

H5Lcreate_ud - create a user-defined link.  The H5L_link_t struct is better
          explained in the UG doc.  The udata is a buffer holding user-defined
          link data.

H5Lregister - similar to H5Zregister.  Register a user-defined link class, or
          override a currently registered class.
H5Lunregister - similar to H5Zunregister
H5Lis_registered - check if a class is registered

H5Lunpack_elink_val - Makes sense of the value that H5Lget_linkval retrieves
          from an external link.  ext_linkval should be the buffer set by
          H5Lget_linkval; filename and obj_path are set to pointers pointing
          to the beginning of the file name and path within the buffer.
H5Lcreate_external - create an exteranl link.  Like a soft link, but the target
          is the name of the file and a path within that file.


H5Pset_create_intermediate_group - not sure if this is new or not.  It can
          be set on link creation property lists.
H5Pget_create_intermediate_group
H5Pset_char_encoding - this should have an entry already.  It can now be set on
          both attribute creation and list creation lists.
H5Pget_char_encoding
H5Pset_nlinks - property on LAPL.  Sets the number of soft or external links
          that can be traversed before HDF5 assumes it has found a cycle and
          aborts the traversal.  See comments in H5Pset_nlinks code for what may
          be a clearer explanation. 
H5Pget_nlinks
H5Pset_elink_prefix - LAPL property discussed in UG.  Sets a prefix that is
          prepended to any file names in external links.
H5Pget_elink_prefix

H5*create_expand - All of these functions take fewer parameters and do not create
          links to the objects created; links need to be created manually using
          H5Llink.
